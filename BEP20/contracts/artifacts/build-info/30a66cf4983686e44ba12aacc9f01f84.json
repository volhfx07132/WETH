{
	"id": "30a66cf4983686e44ba12aacc9f01f84",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/demo1.sol": {
				"content": "pragma solidity >0.4.0 <0.9.0;\r\n\r\nimport \"./Memory.sol\";\r\n\r\ncontract CmnPkg {\r\n    uint256 constant public CROSS_CHAIN_KEY_PREFIX = 0x01006000;\r\n\r\n    uint64 public data2 = 3345;\r\n    uint8 public data3 = 30;\r\n    bytes public dataX = \"SIUDHSUIDB8923hdf8923hd8923efewf43f43f4\";\r\n    \r\n\r\n    function getGeratekey(uint64 _sequence, uint8 _channelID) public view returns(bytes memory){\r\n        return generateKey(_sequence,_channelID);\r\n    }\r\n\r\n    function getDecodekey(bytes memory payload) public view returns(bool, uint8, uint256, bytes memory){\r\n        return decodePayloadHeader(payload);\r\n    }\r\n\r\n\r\n    function generateKey(uint64 _sequence, uint8 _channelID) internal pure returns(bytes memory) {\r\n        uint256 fullCROSS_CHAIN_KEY_PREFIX = CROSS_CHAIN_KEY_PREFIX | _channelID;\r\n        bytes memory key = new bytes(14);\r\n        uint256 ptr;\r\n        assembly {\r\n        ptr := add(key, 14)\r\n        }\r\n        assembly {\r\n        mstore(ptr, _sequence)\r\n        }\r\n        ptr -= 8;\r\n        assembly {\r\n        mstore(ptr, fullCROSS_CHAIN_KEY_PREFIX)\r\n        }\r\n        ptr -= 6;\r\n        assembly {\r\n        mstore(ptr, 14)\r\n        }\r\n        return key;\r\n    }\r\n\r\n    function decodePayloadHeader(bytes memory payload) internal pure returns(bool, uint8, uint256, bytes memory) {\r\n    if (payload.length < 33) {\r\n      return (false, 0, 0, new bytes(0));\r\n    }\r\n\r\n    uint256 ptr;\r\n    assembly {\r\n      ptr := payload\r\n    }\r\n\r\n    uint8 packageType;\r\n    ptr+=1;\r\n    assembly {\r\n      packageType := mload(ptr)\r\n    }\r\n\r\n    uint256 relayFee;\r\n    ptr+=32;\r\n    assembly {\r\n      relayFee := mload(ptr)\r\n    }\r\n\r\n    ptr+=32;\r\n    bytes memory msgBytes = new bytes(payload.length-33);\r\n    (uint256 dst, ) = Memory.fromBytes(msgBytes);\r\n    Memory.copy(ptr, dst, payload.length-33);\r\n\r\n    return (true, packageType, relayFee, msgBytes);\r\n  }\r\n}"
			},
			"contracts/Memory.sol": {
				"content": "pragma solidity >0.4.0 <0.9.0;\r\n\r\n\r\nlibrary Memory {\r\n\r\n    // Size of a word, in bytes.\r\n    uint internal constant WORD_SIZE = 32;\r\n    // Size of the header of a 'bytes' array.\r\n    uint internal constant BYTES_HEADER_SIZE = 32;\r\n    // Address of the free memory pointer.\r\n    uint internal constant FREE_MEM_PTR = 0x40;\r\n\r\n    // Compares the 'len' bytes starting at address 'addr' in memory with the 'len'\r\n    // bytes starting at 'addr2'.\r\n    // Returns 'true' if the bytes are the same, otherwise 'false'.\r\n    function equals(uint addr, uint addr2, uint len) internal pure returns (bool equal) {\r\n        assembly {\r\n            equal := eq(keccak256(addr, len), keccak256(addr2, len))\r\n        }\r\n    }\r\n\r\n    // Compares the 'len' bytes starting at address 'addr' in memory with the bytes stored in\r\n    // 'bts'. It is allowed to set 'len' to a lower value then 'bts.length', in which case only\r\n    // the first 'len' bytes will be compared.\r\n    // Requires that 'bts.length >= len'\r\n    function equals(uint addr, uint len, bytes memory bts) internal pure returns (bool equal) {\r\n        require(bts.length >= len);\r\n        uint addr2;\r\n        assembly {\r\n            addr2 := add(bts, /*BYTES_HEADER_SIZE*/32)\r\n        }\r\n        return equals(addr, addr2, len);\r\n    }\r\n\r\n    function compareStrings(string memory a, string memory b) internal pure returns (bool) {\r\n        return (keccak256(abi.encodePacked((a))) == keccak256(abi.encodePacked((b))));\r\n    }\r\n\r\n    // Copy 'len' bytes from memory address 'src', to address 'dest'.\r\n    // This function does not check the or destination, it only copies\r\n    // the bytes.\r\n    function copy(uint src, uint dest, uint len) internal pure {\r\n        // Copy word-length chunks while possible\r\n        for (; len >= WORD_SIZE; len -= WORD_SIZE) {\r\n            assembly {\r\n                mstore(dest, mload(src))\r\n            }\r\n            dest += WORD_SIZE;\r\n            src += WORD_SIZE;\r\n        }\r\n\r\n        // Copy remaining bytes\r\n        uint mask = 256 ** (WORD_SIZE - len) - 1;\r\n        assembly {\r\n            let srcpart := and(mload(src), not(mask))\r\n            let destpart := and(mload(dest), mask)\r\n            mstore(dest, or(destpart, srcpart))\r\n        }\r\n    }\r\n\r\n    // Returns a memory pointer to the provided bytes array.\r\n    function ptr(bytes memory bts) internal pure returns (uint addr) {\r\n        assembly {\r\n            addr := bts\r\n        }\r\n    }\r\n\r\n    // Returns a memory pointer to the data portion of the provided bytes array.\r\n    function dataPtr(bytes memory bts) internal pure returns (uint addr) {\r\n        assembly {\r\n            addr := add(bts, /*BYTES_HEADER_SIZE*/32)\r\n        }\r\n    }\r\n\r\n    // This function does the same as 'dataPtr(bytes memory)', but will also return the\r\n    // length of the provided bytes array.\r\n    function fromBytes(bytes memory bts) internal pure returns (uint addr, uint len) {\r\n        len = bts.length;\r\n        assembly {\r\n            addr := add(bts, /*BYTES_HEADER_SIZE*/32)\r\n        }\r\n    }\r\n\r\n    // Creates a 'bytes memory' variable from the memory address 'addr', with the\r\n    // length 'len'. The function will allocate new memory for the bytes array, and\r\n    // the 'len bytes starting at 'addr' will be copied into that new memory.\r\n    function toBytes(uint addr, uint len) internal pure returns (bytes memory bts) {\r\n        bts = new bytes(len);\r\n        uint btsptr;\r\n        assembly {\r\n            btsptr := add(bts, /*BYTES_HEADER_SIZE*/32)\r\n        }\r\n        copy(addr, btsptr, len);\r\n    }\r\n\r\n    // Get the word stored at memory address 'addr' as a 'uint'.\r\n    function toUint(uint addr) internal pure returns (uint n) {\r\n        assembly {\r\n            n := mload(addr)\r\n        }\r\n    }\r\n\r\n    // Get the word stored at memory address 'addr' as a 'bytes32'.\r\n    function toBytes32(uint addr) internal pure returns (bytes32 bts) {\r\n        assembly {\r\n            bts := mload(addr)\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Memory.sol": {
				"Memory": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/Memory.sol\":36:3980  library Memory {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Memory.sol\":36:3980  library Memory {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158200f5614f4e8c222b0b1c3b0474cb8bb3b4c4ce98534578a7188478129376ee8d964736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158200f5614f4e8c222b0b1c3b0474cb8bb3b4c4ce98534578a7188478129376ee8d964736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xF JUMP EQ DELEGATECALL 0xE8 0xC2 0x22 0xB0 0xB1 0xC3 0xB0 SELFBALANCE 0x4C 0xB8 0xBB EXTCODESIZE 0x4C 0x4C 0xE9 DUP6 CALLVALUE JUMPI DUP11 PUSH18 0x88478129376EE8D964736F6C634300051000 ORIGIN ",
							"sourceMap": "36:3944:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158200f5614f4e8c222b0b1c3b0474cb8bb3b4c4ce98534578a7188478129376ee8d964736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xF JUMP EQ DELEGATECALL 0xE8 0xC2 0x22 0xB0 0xB1 0xC3 0xB0 SELFBALANCE 0x4C 0xB8 0xBB EXTCODESIZE 0x4C 0x4C 0xE9 DUP6 CALLVALUE JUMPI DUP11 PUSH18 0x88478129376EE8D964736F6C634300051000 ORIGIN ",
							"sourceMap": "36:3944:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"compareStrings(string memory,string memory)": "infinite",
								"copy(uint256,uint256,uint256)": "infinite",
								"dataPtr(bytes memory)": "infinite",
								"equals(uint256,uint256,bytes memory)": "infinite",
								"equals(uint256,uint256,uint256)": "infinite",
								"fromBytes(bytes memory)": "infinite",
								"ptr(bytes memory)": "infinite",
								"toBytes(uint256,uint256)": "infinite",
								"toBytes32(uint256)": "infinite",
								"toUint(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 36,
									"end": 3980,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 3980,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158200f5614f4e8c222b0b1c3b0474cb8bb3b4c4ce98534578a7188478129376ee8d964736f6c63430005100032",
									".code": [
										{
											"begin": 36,
											"end": 3980,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 36,
											"end": 3980,
											"name": "ADDRESS"
										},
										{
											"begin": 36,
											"end": 3980,
											"name": "EQ"
										},
										{
											"begin": 36,
											"end": 3980,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 36,
											"end": 3980,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 36,
											"end": 3980,
											"name": "MSTORE"
										},
										{
											"begin": 36,
											"end": 3980,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36,
											"end": 3980,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 3980,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Memory.sol\":\"Memory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Memory.sol\":{\"keccak256\":\"0xffb6fe9a78280b6fb7ff33ba10b074e5fec54e0503392e10eb3b8b9141c2b652\",\"urls\":[\"bzz-raw://913be1863d9e0f2534e1a2f2b7639688f1c38103dcd03a91d608977fd9dc6e89\",\"dweb:/ipfs/QmNRh2GXTYgjQj8CL5kf6MJbWdC85S5msULXiaqvUJX9Dg\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/demo1.sol": {
				"CmnPkg": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "CROSS_CHAIN_KEY_PREFIX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "data2",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "data3",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "dataX",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								}
							],
							"name": "getDecodekey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint64",
									"name": "_sequence",
									"type": "uint64"
								},
								{
									"internalType": "uint8",
									"name": "_channelID",
									"type": "uint8"
								}
							],
							"name": "getGeratekey",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/demo1.sol\":60:1867  contract CmnPkg {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/demo1.sol\":173:177  3345 */\n  0x0d11\n    /* \"contracts/demo1.sol\":151:177  uint64 public data2 = 3345 */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/demo1.sol\":205:207  30 */\n  0x1e\n    /* \"contracts/demo1.sol\":184:207  uint8 public data3 = 30 */\n  0x00\n  exp(0x0100, 0x08)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/demo1.sol\":214:276  bytes public dataX = \"SIUDHSUIDB8923hdf8923hd8923efewf43f43f4\" */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x27\n  dup2\n  mstore\n  0x20\n  add\n  data_86f040261acfff1e0dfbceb9d55f04ef7ff0430591b733bd922d9f06feeaf6a9\n  0x27\n  swap2\n  codecopy\n  0x01\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/demo1.sol\":60:1867  contract CmnPkg {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_3:\n    /* \"contracts/demo1.sol\":60:1867  contract CmnPkg {\r... */\n  pop\n  jump(tag_4)\ntag_2:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_6\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_5)\ntag_6:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_5\n  jumpi\n  swap2\n  dup3\n  add\ntag_7:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_8\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_7)\ntag_8:\ntag_5:\n  pop\n  swap1\n  pop\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n  swap1\n  jump\t// out\ntag_10:\n  tag_11\n  swap2\n  swap1\ntag_12:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_13\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_12)\ntag_13:\n  pop\n  swap1\n  jump\ntag_11:\n  swap1\n  jump\t// out\ntag_4:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_86f040261acfff1e0dfbceb9d55f04ef7ff0430591b733bd922d9f06feeaf6a9 534955444853554944423839323368646638393233686438393233656665776634336634336634\n\nsub_0: assembly {\n        /* \"contracts/demo1.sol\":60:1867  contract CmnPkg {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/demo1.sol\":60:1867  contract CmnPkg {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x19d66618\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x73da6c22\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x863fe4ab\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9539ded9\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xe3a7fd75\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfc26b0ab\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/demo1.sol\":214:276  bytes public dataX = \"SIUDHSUIDB8923hdf8923hd8923efewf43f43f4\" */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_11:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_11)\n    tag_13:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/demo1.sol\":214:276  bytes public dataX = \"SIUDHSUIDB8923hdf8923hd8923efewf43f43f4\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_14\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_14:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo1.sol\":291:441  function getGeratekey(uint64 _sequence, uint8 _channelID) public view returns(bytes memory){\r... */\n    tag_4:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_16:\n        /* \"contracts/demo1.sol\":291:441  function getGeratekey(uint64 _sequence, uint8 _channelID) public view returns(bytes memory){\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_17\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_18:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_18)\n    tag_20:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/demo1.sol\":291:441  function getGeratekey(uint64 _sequence, uint8 _channelID) public view returns(bytes memory){\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_21\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_21:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo1.sol\":83:142  uint256 constant public CROSS_CHAIN_KEY_PREFIX = 0x01006000 */\n    tag_5:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo1.sol\":449:602  function getDecodekey(bytes memory payload) public view returns(bool, uint8, uint256, bytes memory){\r... */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n        /* \"contracts/demo1.sol\":449:602  function getDecodekey(bytes memory payload) public view returns(bool, uint8, uint256, bytes memory){\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_26:\n        /* \"contracts/demo1.sol\":449:602  function getDecodekey(bytes memory payload) public view returns(bool, uint8, uint256, bytes memory){\r... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n        /* \"contracts/demo1.sol\":449:602  function getDecodekey(bytes memory payload) public view returns(bool, uint8, uint256, bytes memory){\r... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_28:\n        /* \"contracts/demo1.sol\":449:602  function getDecodekey(bytes memory payload) public view returns(bool, uint8, uint256, bytes memory){\r... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/demo1.sol\":449:602  function getDecodekey(bytes memory payload) public view returns(bool, uint8, uint256, bytes memory){\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_29\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup6\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_30:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_30)\n    tag_32:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/demo1.sol\":449:602  function getDecodekey(bytes memory payload) public view returns(bool, uint8, uint256, bytes memory){\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_33\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_33:\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo1.sol\":151:177  uint64 public data2 = 3345 */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo1.sol\":184:207  uint8 public data3 = 30 */\n    tag_8:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo1.sol\":214:276  bytes public dataX = \"SIUDHSUIDB8923hdf8923hd8923efewf43f43f4\" */\n    tag_10:\n      0x01\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_38\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_39\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_38)\n    tag_39:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_40:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_40\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_38:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/demo1.sol\":291:441  function getGeratekey(uint64 _sequence, uint8 _channelID) public view returns(bytes memory){\r... */\n    tag_17:\n        /* \"contracts/demo1.sol\":369:381  bytes memory */\n      0x60\n        /* \"contracts/demo1.sol\":400:433  generateKey(_sequence,_channelID) */\n      tag_42\n        /* \"contracts/demo1.sol\":412:421  _sequence */\n      dup4\n        /* \"contracts/demo1.sol\":422:432  _channelID */\n      dup4\n        /* \"contracts/demo1.sol\":400:411  generateKey */\n      tag_43\n        /* \"contracts/demo1.sol\":400:433  generateKey(_sequence,_channelID) */\n      jump\t// in\n    tag_42:\n        /* \"contracts/demo1.sol\":393:433  return generateKey(_sequence,_channelID) */\n      swap1\n      pop\n        /* \"contracts/demo1.sol\":291:441  function getGeratekey(uint64 _sequence, uint8 _channelID) public view returns(bytes memory){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/demo1.sol\":83:142  uint256 constant public CROSS_CHAIN_KEY_PREFIX = 0x01006000 */\n    tag_23:\n        /* \"contracts/demo1.sol\":132:142  0x01006000 */\n      0x01006000\n        /* \"contracts/demo1.sol\":83:142  uint256 constant public CROSS_CHAIN_KEY_PREFIX = 0x01006000 */\n      dup2\n      jump\t// out\n        /* \"contracts/demo1.sol\":449:602  function getDecodekey(bytes memory payload) public view returns(bool, uint8, uint256, bytes memory){\r... */\n    tag_29:\n        /* \"contracts/demo1.sol\":513:517  bool */\n      0x00\n        /* \"contracts/demo1.sol\":519:524  uint8 */\n      dup1\n        /* \"contracts/demo1.sol\":526:533  uint256 */\n      0x00\n        /* \"contracts/demo1.sol\":535:547  bytes memory */\n      0x60\n        /* \"contracts/demo1.sol\":566:594  decodePayloadHeader(payload) */\n      tag_45\n        /* \"contracts/demo1.sol\":586:593  payload */\n      dup6\n        /* \"contracts/demo1.sol\":566:585  decodePayloadHeader */\n      tag_46\n        /* \"contracts/demo1.sol\":566:594  decodePayloadHeader(payload) */\n      jump\t// in\n    tag_45:\n        /* \"contracts/demo1.sol\":559:594  return decodePayloadHeader(payload) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n        /* \"contracts/demo1.sol\":449:602  function getDecodekey(bytes memory payload) public view returns(bool, uint8, uint256, bytes memory){\r... */\n      swap2\n      swap4\n      pop\n      swap2\n      swap4\n      jump\t// out\n        /* \"contracts/demo1.sol\":151:177  uint64 public data2 = 3345 */\n    tag_35:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/demo1.sol\":184:207  uint8 public data3 = 30 */\n    tag_37:\n      0x00\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/demo1.sol\":612:1179  function generateKey(uint64 _sequence, uint8 _channelID) internal pure returns(bytes memory) {\r... */\n    tag_43:\n        /* \"contracts/demo1.sol\":691:703  bytes memory */\n      0x60\n        /* \"contracts/demo1.sol\":716:750  uint256 fullCROSS_CHAIN_KEY_PREFIX */\n      0x00\n        /* \"contracts/demo1.sol\":778:788  _channelID */\n      dup3\n        /* \"contracts/demo1.sol\":753:788  CROSS_CHAIN_KEY_PREFIX | _channelID */\n      0xff\n      and\n        /* \"contracts/demo1.sol\":132:142  0x01006000 */\n      0x01006000\n        /* \"contracts/demo1.sol\":753:788  CROSS_CHAIN_KEY_PREFIX | _channelID */\n      or\n        /* \"contracts/demo1.sol\":716:788  uint256 fullCROSS_CHAIN_KEY_PREFIX = CROSS_CHAIN_KEY_PREFIX | _channelID */\n      swap1\n      pop\n        /* \"contracts/demo1.sol\":799:815  bytes memory key */\n      0x60\n        /* \"contracts/demo1.sol\":828:830  14 */\n      0x0e\n        /* \"contracts/demo1.sol\":818:831  new bytes(14) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_48\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:30   */\n      0x01\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:31   */\n      mul\n        /* \"--CODEGEN--\":116:120   */\n      dup1\n        /* \"--CODEGEN--\":104:114   */\n      codesize\n        /* \"--CODEGEN--\":96:102   */\n      dup4\n        /* \"--CODEGEN--\":87:121   */\n      codecopy\n        /* \"--CODEGEN--\":147:151   */\n      dup1\n        /* \"--CODEGEN--\":139:145   */\n      dup3\n        /* \"--CODEGEN--\":135:152   */\n      add\n        /* \"--CODEGEN--\":125:152   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:156   */\n      pop\n        /* \"contracts/demo1.sol\":818:831  new bytes(14) */\n      swap1\n      pop\n    tag_48:\n      pop\n        /* \"contracts/demo1.sol\":799:831  bytes memory key = new bytes(14) */\n      swap1\n      pop\n        /* \"contracts/demo1.sol\":842:853  uint256 ptr */\n      0x00\n        /* \"contracts/demo1.sol\":900:902  14 */\n      0x0e\n        /* \"contracts/demo1.sol\":895:898  key */\n      dup3\n        /* \"contracts/demo1.sol\":891:903  add(key, 14) */\n      add\n        /* \"contracts/demo1.sol\":884:903  ptr := add(key, 14) */\n      swap1\n      pop\n        /* \"contracts/demo1.sol\":956:965  _sequence */\n      dup6\n        /* \"contracts/demo1.sol\":951:954  ptr */\n      dup2\n        /* \"contracts/demo1.sol\":944:966  mstore(ptr, _sequence) */\n      mstore\n        /* \"contracts/demo1.sol\":994:995  8 */\n      0x08\n        /* \"contracts/demo1.sol\":987:995  ptr -= 8 */\n      dup2\n      sub\n      swap1\n      pop\n        /* \"contracts/demo1.sol\":1038:1064  fullCROSS_CHAIN_KEY_PREFIX */\n      dup3\n        /* \"contracts/demo1.sol\":1033:1036  ptr */\n      dup2\n        /* \"contracts/demo1.sol\":1026:1065  mstore(ptr, fullCROSS_CHAIN_KEY_PREFIX) */\n      mstore\n        /* \"contracts/demo1.sol\":1093:1094  6 */\n      0x06\n        /* \"contracts/demo1.sol\":1086:1094  ptr -= 6 */\n      dup2\n      sub\n      swap1\n      pop\n        /* \"contracts/demo1.sol\":1137:1139  14 */\n      0x0e\n        /* \"contracts/demo1.sol\":1132:1135  ptr */\n      dup2\n        /* \"contracts/demo1.sol\":1125:1140  mstore(ptr, 14) */\n      mstore\n        /* \"contracts/demo1.sol\":1168:1171  key */\n      dup2\n        /* \"contracts/demo1.sol\":1161:1171  return key */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/demo1.sol\":612:1179  function generateKey(uint64 _sequence, uint8 _channelID) internal pure returns(bytes memory) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/demo1.sol\":1187:1864  function decodePayloadHeader(bytes memory payload) internal pure returns(bool, uint8, uint256, bytes memory) {\r... */\n    tag_46:\n        /* \"contracts/demo1.sol\":1260:1264  bool */\n      0x00\n        /* \"contracts/demo1.sol\":1266:1271  uint8 */\n      dup1\n        /* \"contracts/demo1.sol\":1273:1280  uint256 */\n      0x00\n        /* \"contracts/demo1.sol\":1282:1294  bytes memory */\n      0x60\n        /* \"contracts/demo1.sol\":1324:1326  33 */\n      0x21\n        /* \"contracts/demo1.sol\":1307:1314  payload */\n      dup6\n        /* \"contracts/demo1.sol\":1307:1321  payload.length */\n      mload\n        /* \"contracts/demo1.sol\":1307:1326  payload.length < 33 */\n      lt\n        /* \"contracts/demo1.sol\":1303:1379  if (payload.length < 33) {\r... */\n      iszero\n      tag_50\n      jumpi\n        /* \"contracts/demo1.sol\":1345:1350  false */\n      0x00\n        /* \"contracts/demo1.sol\":1352:1353  0 */\n      dup1\n        /* \"contracts/demo1.sol\":1355:1356  0 */\n      0x00\n        /* \"contracts/demo1.sol\":1368:1369  0 */\n      dup1\n        /* \"contracts/demo1.sol\":1358:1370  new bytes(0) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_51\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:30   */\n      0x01\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:31   */\n      mul\n        /* \"--CODEGEN--\":116:120   */\n      dup1\n        /* \"--CODEGEN--\":104:114   */\n      codesize\n        /* \"--CODEGEN--\":96:102   */\n      dup4\n        /* \"--CODEGEN--\":87:121   */\n      codecopy\n        /* \"--CODEGEN--\":147:151   */\n      dup1\n        /* \"--CODEGEN--\":139:145   */\n      dup3\n        /* \"--CODEGEN--\":135:152   */\n      add\n        /* \"--CODEGEN--\":125:152   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:156   */\n      pop\n        /* \"contracts/demo1.sol\":1358:1370  new bytes(0) */\n      swap1\n      pop\n    tag_51:\n      pop\n        /* \"contracts/demo1.sol\":1337:1371  return (false, 0, 0, new bytes(0)) */\n      dup3\n      swap3\n      pop\n      dup2\n      swap2\n      pop\n      dup1\n      swap1\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      jump(tag_49)\n        /* \"contracts/demo1.sol\":1303:1379  if (payload.length < 33) {\r... */\n    tag_50:\n        /* \"contracts/demo1.sol\":1387:1398  uint256 ptr */\n      0x00\n        /* \"contracts/demo1.sol\":1430:1437  payload */\n      dup6\n        /* \"contracts/demo1.sol\":1423:1437  ptr := payload */\n      swap1\n      pop\n        /* \"contracts/demo1.sol\":1452:1469  uint8 packageType */\n      0x00\n        /* \"contracts/demo1.sol\":1481:1482  1 */\n      0x01\n        /* \"contracts/demo1.sol\":1476:1482  ptr+=1 */\n      dup3\n      add\n      swap2\n      pop\n        /* \"contracts/demo1.sol\":1528:1531  ptr */\n      dup2\n        /* \"contracts/demo1.sol\":1522:1532  mload(ptr) */\n      mload\n        /* \"contracts/demo1.sol\":1507:1532  packageType := mload(ptr) */\n      swap1\n      pop\n        /* \"contracts/demo1.sol\":1547:1563  uint256 relayFee */\n      0x00\n        /* \"contracts/demo1.sol\":1575:1577  32 */\n      0x20\n        /* \"contracts/demo1.sol\":1570:1577  ptr+=32 */\n      dup4\n      add\n      swap3\n      pop\n        /* \"contracts/demo1.sol\":1620:1623  ptr */\n      dup3\n        /* \"contracts/demo1.sol\":1614:1624  mload(ptr) */\n      mload\n        /* \"contracts/demo1.sol\":1602:1624  relayFee := mload(ptr) */\n      swap1\n      pop\n        /* \"contracts/demo1.sol\":1644:1646  32 */\n      0x20\n        /* \"contracts/demo1.sol\":1639:1646  ptr+=32 */\n      dup4\n      add\n      swap3\n      pop\n        /* \"contracts/demo1.sol\":1653:1674  bytes memory msgBytes */\n      0x60\n        /* \"contracts/demo1.sol\":1702:1704  33 */\n      0x21\n        /* \"contracts/demo1.sol\":1687:1694  payload */\n      dup10\n        /* \"contracts/demo1.sol\":1687:1701  payload.length */\n      mload\n        /* \"contracts/demo1.sol\":1687:1704  payload.length-33 */\n      sub\n        /* \"contracts/demo1.sol\":1677:1705  new bytes(payload.length-33) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_52\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:30   */\n      0x01\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:31   */\n      mul\n        /* \"--CODEGEN--\":116:120   */\n      dup1\n        /* \"--CODEGEN--\":104:114   */\n      codesize\n        /* \"--CODEGEN--\":96:102   */\n      dup4\n        /* \"--CODEGEN--\":87:121   */\n      codecopy\n        /* \"--CODEGEN--\":147:151   */\n      dup1\n        /* \"--CODEGEN--\":139:145   */\n      dup3\n        /* \"--CODEGEN--\":135:152   */\n      add\n        /* \"--CODEGEN--\":125:152   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:156   */\n      pop\n        /* \"contracts/demo1.sol\":1677:1705  new bytes(payload.length-33) */\n      swap1\n      pop\n    tag_52:\n      pop\n        /* \"contracts/demo1.sol\":1653:1705  bytes memory msgBytes = new bytes(payload.length-33) */\n      swap1\n      pop\n        /* \"contracts/demo1.sol\":1713:1724  uint256 dst */\n      0x00\n        /* \"contracts/demo1.sol\":1730:1756  Memory.fromBytes(msgBytes) */\n      tag_53\n        /* \"contracts/demo1.sol\":1747:1755  msgBytes */\n      dup3\n        /* \"contracts/demo1.sol\":1730:1746  Memory.fromBytes */\n      tag_54\n        /* \"contracts/demo1.sol\":1730:1756  Memory.fromBytes(msgBytes) */\n      jump\t// in\n    tag_53:\n        /* \"contracts/demo1.sol\":1712:1756  (uint256 dst, ) = Memory.fromBytes(msgBytes) */\n      pop\n      swap1\n      pop\n        /* \"contracts/demo1.sol\":1763:1803  Memory.copy(ptr, dst, payload.length-33) */\n      tag_55\n        /* \"contracts/demo1.sol\":1775:1778  ptr */\n      dup6\n        /* \"contracts/demo1.sol\":1780:1783  dst */\n      dup3\n        /* \"contracts/demo1.sol\":1800:1802  33 */\n      0x21\n        /* \"contracts/demo1.sol\":1785:1792  payload */\n      dup14\n        /* \"contracts/demo1.sol\":1785:1799  payload.length */\n      mload\n        /* \"contracts/demo1.sol\":1785:1802  payload.length-33 */\n      sub\n        /* \"contracts/demo1.sol\":1763:1774  Memory.copy */\n      tag_56\n        /* \"contracts/demo1.sol\":1763:1803  Memory.copy(ptr, dst, payload.length-33) */\n      jump\t// in\n    tag_55:\n        /* \"contracts/demo1.sol\":1820:1824  true */\n      0x01\n        /* \"contracts/demo1.sol\":1826:1837  packageType */\n      dup5\n        /* \"contracts/demo1.sol\":1839:1847  relayFee */\n      dup5\n        /* \"contracts/demo1.sol\":1849:1857  msgBytes */\n      dup5\n        /* \"contracts/demo1.sol\":1812:1858  return (true, packageType, relayFee, msgBytes) */\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/demo1.sol\":1187:1864  function decodePayloadHeader(bytes memory payload) internal pure returns(bool, uint8, uint256, bytes memory) {\r... */\n    tag_49:\n      swap2\n      swap4\n      pop\n      swap2\n      swap4\n      jump\t// out\n        /* \"contracts/Memory.sol\":2843:3045  function fromBytes(bytes memory bts) internal pure returns (uint addr, uint len) {\r... */\n    tag_54:\n        /* \"contracts/Memory.sol\":2903:2912  uint addr */\n      0x00\n        /* \"contracts/Memory.sol\":2914:2922  uint len */\n      dup1\n        /* \"contracts/Memory.sol\":2941:2944  bts */\n      dup3\n        /* \"contracts/Memory.sol\":2941:2951  bts.length */\n      mload\n        /* \"contracts/Memory.sol\":2935:2951  len = bts.length */\n      swap1\n      pop\n        /* \"contracts/Memory.sol\":3024:3026  32 */\n      0x20\n        /* \"contracts/Memory.sol\":2998:3001  bts */\n      dup4\n        /* \"contracts/Memory.sol\":2994:3027  add(bts, /*BYTES_HEADER_SIZE*/32) */\n      add\n        /* \"contracts/Memory.sol\":2986:3027  addr := add(bts, /*BYTES_HEADER_SIZE*/32) */\n      swap2\n      pop\n        /* \"contracts/Memory.sol\":2971:3038  {\r... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/Memory.sol\":1650:2250  function copy(uint src, uint dest, uint len) internal pure {\r... */\n    tag_56:\n        /* \"contracts/Memory.sol\":1771:1970  for (; len >= WORD_SIZE; len -= WORD_SIZE) {\r... */\n    tag_59:\n        /* \"contracts/Memory.sol\":129:131  32 */\n      0x20\n        /* \"contracts/Memory.sol\":1778:1781  len */\n      dup2\n        /* \"contracts/Memory.sol\":1778:1794  len >= WORD_SIZE */\n      lt\n        /* \"contracts/Memory.sol\":1771:1970  for (; len >= WORD_SIZE; len -= WORD_SIZE) {\r... */\n      tag_60\n      jumpi\n        /* \"contracts/Memory.sol\":1876:1879  src */\n      dup3\n        /* \"contracts/Memory.sol\":1870:1880  mload(src) */\n      mload\n        /* \"contracts/Memory.sol\":1864:1868  dest */\n      dup3\n        /* \"contracts/Memory.sol\":1857:1881  mstore(dest, mload(src)) */\n      mstore\n        /* \"contracts/Memory.sol\":129:131  32 */\n      0x20\n        /* \"contracts/Memory.sol\":1910:1927  dest += WORD_SIZE */\n      dup3\n      add\n      swap2\n      pop\n        /* \"contracts/Memory.sol\":129:131  32 */\n      0x20\n        /* \"contracts/Memory.sol\":1942:1958  src += WORD_SIZE */\n      dup4\n      add\n      swap3\n      pop\n        /* \"contracts/Memory.sol\":129:131  32 */\n      0x20\n        /* \"contracts/Memory.sol\":1796:1812  len -= WORD_SIZE */\n      dup2\n      sub\n      swap1\n      pop\n        /* \"contracts/Memory.sol\":1771:1970  for (; len >= WORD_SIZE; len -= WORD_SIZE) {\r... */\n      jump(tag_59)\n    tag_60:\n        /* \"contracts/Memory.sol\":2015:2024  uint mask */\n      0x00\n        /* \"contracts/Memory.sol\":2054:2055  1 */\n      0x01\n        /* \"contracts/Memory.sol\":2047:2050  len */\n      dup3\n        /* \"contracts/Memory.sol\":129:131  32 */\n      0x20\n        /* \"contracts/Memory.sol\":2035:2050  WORD_SIZE - len */\n      sub\n        /* \"contracts/Memory.sol\":2027:2030  256 */\n      0x0100\n        /* \"contracts/Memory.sol\":2027:2051  256 ** (WORD_SIZE - len) */\n      exp\n        /* \"contracts/Memory.sol\":2027:2055  256 ** (WORD_SIZE - len) - 1 */\n      sub\n        /* \"contracts/Memory.sol\":2015:2055  uint mask = 256 ** (WORD_SIZE - len) - 1 */\n      swap1\n      pop\n        /* \"contracts/Memory.sol\":2125:2129  mask */\n      dup1\n        /* \"contracts/Memory.sol\":2121:2130  not(mask) */\n      not\n        /* \"contracts/Memory.sol\":2115:2118  src */\n      dup5\n        /* \"contracts/Memory.sol\":2109:2119  mload(src) */\n      mload\n        /* \"contracts/Memory.sol\":2105:2131  and(mload(src), not(mask)) */\n      and\n        /* \"contracts/Memory.sol\":2178:2182  mask */\n      dup2\n        /* \"contracts/Memory.sol\":2171:2175  dest */\n      dup5\n        /* \"contracts/Memory.sol\":2165:2176  mload(dest) */\n      mload\n        /* \"contracts/Memory.sol\":2161:2183  and(mload(dest), mask) */\n      and\n        /* \"contracts/Memory.sol\":2223:2230  srcpart */\n      dup2\n        /* \"contracts/Memory.sol\":2213:2221  destpart */\n      dup2\n        /* \"contracts/Memory.sol\":2210:2231  or(destpart, srcpart) */\n      or\n        /* \"contracts/Memory.sol\":2204:2208  dest */\n      dup6\n        /* \"contracts/Memory.sol\":2197:2232  mstore(dest, or(destpart, srcpart)) */\n      mstore\n        /* \"contracts/Memory.sol\":2075:2243  {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820c960fd404c177863fe767e9515eae4975b7f8c36441efb73a75fe2244e2304de64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052610d116000806101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550601e600060086101000a81548160ff021916908360ff1602179055506040518060600160405280602781526020016107ac602791396001908051906020019061007892919061008b565b5034801561008557600080fd5b50610130565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100cc57805160ff19168380011785556100fa565b828001600101855582156100fa579182015b828111156100f95782518255916020019190600101906100de565b5b509050610107919061010b565b5090565b61012d91905b80821115610129576000816000905550600101610111565b5090565b90565b61066d8061013f6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806319d666181461006757806373da6c22146100ea578063863fe4ab146101a85780639539ded9146101c6578063e3a7fd7514610319578063fc26b0ab1461034b575b600080fd5b61006f61036f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100af578082015181840152602081019050610094565b50505050905090810190601f1680156100dc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61012d6004803603604081101561010057600080fd5b81019080803567ffffffffffffffff169060200190929190803560ff16906020019092919050505061040d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561016d578082015181840152602081019050610152565b50505050905090810190601f16801561019a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101b0610421565b6040518082815260200191505060405180910390f35b61027f600480360360208110156101dc57600080fd5b81019080803590602001906401000000008111156101f957600080fd5b82018360208201111561020b57600080fd5b8035906020019184600183028401116401000000008311171561022d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610429565b60405180851515151581526020018460ff1660ff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156102db5780820151818401526020810190506102c0565b50505050905090810190601f1680156103085780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b610321610448565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b610353610461565b604051808260ff1660ff16815260200191505060405180910390f35b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104055780601f106103da57610100808354040283529160200191610405565b820191906000526020600020905b8154815290600101906020018083116103e857829003601f168201915b505050505081565b60606104198383610474565b905092915050565b630100600081565b60008060006060610439856104e7565b93509350935093509193509193565b6000809054906101000a900467ffffffffffffffff1681565b600060089054906101000a900460ff1681565b606060008260ff1663010060001790506060600e6040519080825280601f01601f1916602001820160405280156104ba5781602001600182028038833980820191505090505b5090506000600e82019050858152600881039050828152600681039050600e815281935050505092915050565b60008060006060602185511015610547576000806000806040519080825280601f01601f1916602001820160405280156105305781602001600182028038833980820191505090505b5082925081915080905093509350935093506105d6565b6000859050600060018201915081519050600060208301925082519050602083019250606060218951036040519080825280601f01601f1916602001820160405280156105a35781602001600182028038833980820191505090505b50905060006105b1826105dd565b5090506105c3858260218d51036105ef565b6001848484985098509850985050505050505b9193509193565b60008082519050602083019150915091565b5b6020811061061357825182526020820191506020830192506020810390506105f0565b60006001826020036101000a039050801984511681845116818117855250505050505056fea265627a7a72315820c960fd404c177863fe767e9515eae4975b7f8c36441efb73a75fe2244e2304de64736f6c63430005100032534955444853554944423839323368646638393233686438393233656665776634336634336634",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0xD11 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1E PUSH1 0x0 PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7AC PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x78 SWAP3 SWAP2 SWAP1 PUSH2 0x8B JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH2 0x85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0xCC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xFA JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xFA JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xF9 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xDE JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x10B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x12D SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x111 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x66D DUP1 PUSH2 0x13F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19D66618 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x73DA6C22 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x863FE4AB EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x9539DED9 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xE3A7FD75 EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xFC26B0AB EQ PUSH2 0x34B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x36F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x94 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xDC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x152 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x19A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP6 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2DB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x308 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x321 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x353 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x405 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3DA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x405 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x419 DUP4 DUP4 PUSH2 0x474 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x1006000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x439 DUP6 PUSH2 0x4E7 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH1 0xFF AND PUSH4 0x1006000 OR SWAP1 POP PUSH1 0x60 PUSH1 0xE PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4BA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0xE DUP3 ADD SWAP1 POP DUP6 DUP2 MSTORE PUSH1 0x8 DUP2 SUB SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x6 DUP2 SUB SWAP1 POP PUSH1 0xE DUP2 MSTORE DUP2 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x21 DUP6 MLOAD LT ISZERO PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x530 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP DUP3 SWAP3 POP DUP2 SWAP2 POP DUP1 SWAP1 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x0 DUP6 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 ADD SWAP2 POP DUP2 MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP4 ADD SWAP3 POP DUP3 MLOAD SWAP1 POP PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x60 PUSH1 0x21 DUP10 MLOAD SUB PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5A3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH2 0x5B1 DUP3 PUSH2 0x5DD JUMP JUMPDEST POP SWAP1 POP PUSH2 0x5C3 DUP6 DUP3 PUSH1 0x21 DUP14 MLOAD SUB PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x1 DUP5 DUP5 DUP5 SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP POP POP POP POP POP JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD SWAP1 POP PUSH1 0x20 DUP4 ADD SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x613 JUMPI DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP2 SUB SWAP1 POP PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB SWAP1 POP DUP1 NOT DUP5 MLOAD AND DUP2 DUP5 MLOAD AND DUP2 DUP2 OR DUP6 MSTORE POP POP POP POP POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xC9 PUSH1 0xFD BLOCKHASH 0x4C OR PUSH25 0x63FE767E9515EAE4975B7F8C36441EFB73A75FE2244E2304DE PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN MSTORE8 0x49 SSTORE DIFFICULTY 0x48 MSTORE8 SSTORE 0x49 DIFFICULTY TIMESTAMP CODESIZE CODECOPY ORIGIN CALLER PUSH9 0x646638393233686438 CODECOPY ORIGIN CALLER PUSH6 0x666577663433 PUSH7 0x34336634000000 ",
							"sourceMap": "60:1807:1:-;;;173:4;151:26;;;;;;;;;;;;;;;;;;;;205:2;184:23;;;;;;;;;;;;;;;;;;;;214:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;60:1807;8:9:-1;5:2;;;30:1;27;20:12;5:2;60:1807:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c806319d666181461006757806373da6c22146100ea578063863fe4ab146101a85780639539ded9146101c6578063e3a7fd7514610319578063fc26b0ab1461034b575b600080fd5b61006f61036f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100af578082015181840152602081019050610094565b50505050905090810190601f1680156100dc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61012d6004803603604081101561010057600080fd5b81019080803567ffffffffffffffff169060200190929190803560ff16906020019092919050505061040d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561016d578082015181840152602081019050610152565b50505050905090810190601f16801561019a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101b0610421565b6040518082815260200191505060405180910390f35b61027f600480360360208110156101dc57600080fd5b81019080803590602001906401000000008111156101f957600080fd5b82018360208201111561020b57600080fd5b8035906020019184600183028401116401000000008311171561022d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610429565b60405180851515151581526020018460ff1660ff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156102db5780820151818401526020810190506102c0565b50505050905090810190601f1680156103085780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b610321610448565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b610353610461565b604051808260ff1660ff16815260200191505060405180910390f35b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104055780601f106103da57610100808354040283529160200191610405565b820191906000526020600020905b8154815290600101906020018083116103e857829003601f168201915b505050505081565b60606104198383610474565b905092915050565b630100600081565b60008060006060610439856104e7565b93509350935093509193509193565b6000809054906101000a900467ffffffffffffffff1681565b600060089054906101000a900460ff1681565b606060008260ff1663010060001790506060600e6040519080825280601f01601f1916602001820160405280156104ba5781602001600182028038833980820191505090505b5090506000600e82019050858152600881039050828152600681039050600e815281935050505092915050565b60008060006060602185511015610547576000806000806040519080825280601f01601f1916602001820160405280156105305781602001600182028038833980820191505090505b5082925081915080905093509350935093506105d6565b6000859050600060018201915081519050600060208301925082519050602083019250606060218951036040519080825280601f01601f1916602001820160405280156105a35781602001600182028038833980820191505090505b50905060006105b1826105dd565b5090506105c3858260218d51036105ef565b6001848484985098509850985050505050505b9193509193565b60008082519050602083019150915091565b5b6020811061061357825182526020820191506020830192506020810390506105f0565b60006001826020036101000a039050801984511681845116818117855250505050505056fea265627a7a72315820c960fd404c177863fe767e9515eae4975b7f8c36441efb73a75fe2244e2304de64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19D66618 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x73DA6C22 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x863FE4AB EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x9539DED9 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xE3A7FD75 EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xFC26B0AB EQ PUSH2 0x34B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x36F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x94 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xDC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x152 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x19A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP6 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2DB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x308 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x321 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x353 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x405 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3DA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x405 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x419 DUP4 DUP4 PUSH2 0x474 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x1006000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x439 DUP6 PUSH2 0x4E7 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH1 0xFF AND PUSH4 0x1006000 OR SWAP1 POP PUSH1 0x60 PUSH1 0xE PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4BA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0xE DUP3 ADD SWAP1 POP DUP6 DUP2 MSTORE PUSH1 0x8 DUP2 SUB SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x6 DUP2 SUB SWAP1 POP PUSH1 0xE DUP2 MSTORE DUP2 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x21 DUP6 MLOAD LT ISZERO PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x530 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP DUP3 SWAP3 POP DUP2 SWAP2 POP DUP1 SWAP1 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x0 DUP6 SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 ADD SWAP2 POP DUP2 MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP4 ADD SWAP3 POP DUP3 MLOAD SWAP1 POP PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x60 PUSH1 0x21 DUP10 MLOAD SUB PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5A3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH2 0x5B1 DUP3 PUSH2 0x5DD JUMP JUMPDEST POP SWAP1 POP PUSH2 0x5C3 DUP6 DUP3 PUSH1 0x21 DUP14 MLOAD SUB PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x1 DUP5 DUP5 DUP5 SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP POP POP POP POP POP JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD SWAP1 POP PUSH1 0x20 DUP4 ADD SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x613 JUMPI DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP2 SUB SWAP1 POP PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB SWAP1 POP DUP1 NOT DUP5 MLOAD AND DUP2 DUP5 MLOAD AND DUP2 DUP2 OR DUP6 MSTORE POP POP POP POP POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xC9 PUSH1 0xFD BLOCKHASH 0x4C OR PUSH25 0x63FE767E9515EAE4975B7F8C36441EFB73A75FE2244E2304DE PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "60:1807:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;60:1807:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;214:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;214:62:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;291:150;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;291:150:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;291:150:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;83:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;449:153;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;449:153:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;449:153:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;449:153:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;449:153:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;449:153:1;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;449:153:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;151:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;184:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;214:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;291:150::-;369:12;400:33;412:9;422:10;400:11;:33::i;:::-;393:40;;291:150;;;;:::o;83:59::-;132:10;83:59;:::o;449:153::-;513:4;519:5;526:7;535:12;566:28;586:7;566:19;:28::i;:::-;559:35;;;;;;;;449:153;;;;;:::o;151:26::-;;;;;;;;;;;;;:::o;184:23::-;;;;;;;;;;;;;:::o;612:567::-;691:12;716:34;778:10;753:35;;132:10;753:35;716:72;;799:16;828:2;818:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;818:13:1;;;;799:32;;842:11;900:2;895:3;891:12;884:19;;956:9;951:3;944:22;994:1;987:8;;;;1038:26;1033:3;1026:39;1093:1;1086:8;;;;1137:2;1132:3;1125:15;1168:3;1161:10;;;;;612:567;;;;:::o;1187:677::-;1260:4;1266:5;1273:7;1282:12;1324:2;1307:7;:14;:19;1303:76;;;1345:5;1352:1;1355;1368;1358:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;1358:12:1;;;;1337:34;;;;;;;;;;;;;;;;;;;1303:76;1387:11;1430:7;1423:14;;1452:17;1481:1;1476:6;;;;1528:3;1522:10;1507:25;;1547:16;1575:2;1570:7;;;;1620:3;1614:10;1602:22;;1644:2;1639:7;;;;1653:21;1702:2;1687:7;:14;:17;1677:28;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;1677:28:1;;;;1653:52;;1713:11;1730:26;1747:8;1730:16;:26::i;:::-;1712:44;;;1763:40;1775:3;1780;1800:2;1785:7;:14;:17;1763:11;:40::i;:::-;1820:4;1826:11;1839:8;1849;1812:46;;;;;;;;;;;;;1187:677;;;;;;:::o;2843:202:0:-;2903:9;2914:8;2941:3;:10;2935:16;;3024:2;2998:3;2994:33;2986:41;;2971:67;;;:::o;1650:600::-;1771:199;129:2;1778:3;:16;1771:199;;1876:3;1870:10;1864:4;1857:24;129:2;1910:17;;;;129:2;1942:16;;;;129:2;1796:16;;;;1771:199;;;2015:9;2054:1;2047:3;129:2;2035:15;2027:3;:24;:28;2015:40;;2125:4;2121:9;2115:3;2109:10;2105:26;2178:4;2171;2165:11;2161:22;2223:7;2213:8;2210:21;2204:4;2197:35;2075:168;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "329000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CROSS_CHAIN_KEY_PREFIX()": "227",
								"data2()": "1119",
								"data3()": "1191",
								"dataX()": "infinite",
								"getDecodekey(bytes)": "infinite",
								"getGeratekey(uint64,uint8)": "infinite"
							},
							"internal": {
								"decodePayloadHeader(bytes memory)": "infinite",
								"generateKey(uint64,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "MSTORE"
								},
								{
									"begin": 173,
									"end": 177,
									"name": "PUSH",
									"value": "D11"
								},
								{
									"begin": 151,
									"end": 177,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 151,
									"end": 177,
									"name": "DUP1"
								},
								{
									"begin": 151,
									"end": 177,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 151,
									"end": 177,
									"name": "EXP"
								},
								{
									"begin": 151,
									"end": 177,
									"name": "DUP2"
								},
								{
									"begin": 151,
									"end": 177,
									"name": "SLOAD"
								},
								{
									"begin": 151,
									"end": 177,
									"name": "DUP2"
								},
								{
									"begin": 151,
									"end": 177,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 151,
									"end": 177,
									"name": "MUL"
								},
								{
									"begin": 151,
									"end": 177,
									"name": "NOT"
								},
								{
									"begin": 151,
									"end": 177,
									"name": "AND"
								},
								{
									"begin": 151,
									"end": 177,
									"name": "SWAP1"
								},
								{
									"begin": 151,
									"end": 177,
									"name": "DUP4"
								},
								{
									"begin": 151,
									"end": 177,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 151,
									"end": 177,
									"name": "AND"
								},
								{
									"begin": 151,
									"end": 177,
									"name": "MUL"
								},
								{
									"begin": 151,
									"end": 177,
									"name": "OR"
								},
								{
									"begin": 151,
									"end": 177,
									"name": "SWAP1"
								},
								{
									"begin": 151,
									"end": 177,
									"name": "SSTORE"
								},
								{
									"begin": 151,
									"end": 177,
									"name": "POP"
								},
								{
									"begin": 205,
									"end": 207,
									"name": "PUSH",
									"value": "1E"
								},
								{
									"begin": 184,
									"end": 207,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 184,
									"end": 207,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 184,
									"end": 207,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 184,
									"end": 207,
									"name": "EXP"
								},
								{
									"begin": 184,
									"end": 207,
									"name": "DUP2"
								},
								{
									"begin": 184,
									"end": 207,
									"name": "SLOAD"
								},
								{
									"begin": 184,
									"end": 207,
									"name": "DUP2"
								},
								{
									"begin": 184,
									"end": 207,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 184,
									"end": 207,
									"name": "MUL"
								},
								{
									"begin": 184,
									"end": 207,
									"name": "NOT"
								},
								{
									"begin": 184,
									"end": 207,
									"name": "AND"
								},
								{
									"begin": 184,
									"end": 207,
									"name": "SWAP1"
								},
								{
									"begin": 184,
									"end": 207,
									"name": "DUP4"
								},
								{
									"begin": 184,
									"end": 207,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 184,
									"end": 207,
									"name": "AND"
								},
								{
									"begin": 184,
									"end": 207,
									"name": "MUL"
								},
								{
									"begin": 184,
									"end": 207,
									"name": "OR"
								},
								{
									"begin": 184,
									"end": 207,
									"name": "SWAP1"
								},
								{
									"begin": 184,
									"end": 207,
									"name": "SSTORE"
								},
								{
									"begin": 184,
									"end": 207,
									"name": "POP"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "MLOAD"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "DUP1"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "ADD"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "MSTORE"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "DUP1"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "PUSH",
									"value": "27"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "DUP2"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "MSTORE"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "ADD"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "PUSH data",
									"value": "86F040261ACFFF1E0DFBCEB9D55F04EF7FF0430591B733BD922D9F06FEEAF6A9"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "PUSH",
									"value": "27"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "SWAP2"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "CODECOPY"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "SWAP1"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "DUP1"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "MLOAD"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "SWAP1"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "ADD"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "SWAP1"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "SWAP3"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "SWAP2"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "SWAP1"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "JUMPDEST"
								},
								{
									"begin": 214,
									"end": 276,
									"name": "POP"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "POP"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "JUMP"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "JUMPDEST"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "DUP3"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "DUP1"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "SLOAD"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "DUP2"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "AND"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "ISZERO"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "MUL"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "SUB"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "AND"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "SWAP1"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "DIV"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "SWAP1"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "MSTORE"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "KECCAK256"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "SWAP1"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "ADD"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "SWAP1"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "DIV"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "DUP2"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "ADD"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "SWAP3"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "DUP3"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "LT"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "JUMPI"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "DUP1"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "MLOAD"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "NOT"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "AND"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "DUP4"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "DUP1"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "ADD"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "OR"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "DUP6"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "SSTORE"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "JUMP"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "JUMPDEST"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "DUP3"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "DUP1"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "ADD"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "ADD"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "DUP6"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "SSTORE"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "DUP3"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "ISZERO"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "JUMPI"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "SWAP2"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "DUP3"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "ADD"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "JUMPDEST"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "DUP3"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "DUP2"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "GT"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "ISZERO"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "JUMPI"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "DUP3"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "MLOAD"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "DUP3"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "SSTORE"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "SWAP2"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "ADD"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "SWAP2"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "SWAP1"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "ADD"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "SWAP1"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "JUMP"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "JUMPDEST"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "JUMPDEST"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "POP"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "SWAP1"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "POP"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "SWAP2"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "SWAP1"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "JUMPDEST"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "POP"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "SWAP1"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "JUMPDEST"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "SWAP2"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "SWAP1"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "JUMPDEST"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "DUP1"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "DUP3"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "GT"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "ISZERO"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "JUMPI"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "DUP2"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "SWAP1"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "SSTORE"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "POP"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "ADD"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "JUMP"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "JUMPDEST"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "POP"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "SWAP1"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "JUMP"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "JUMPDEST"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "SWAP1"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "JUMPDEST"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "DUP1"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "CODECOPY"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 60,
									"end": 1867,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820c960fd404c177863fe767e9515eae4975b7f8c36441efb73a75fe2244e2304de64736f6c63430005100032",
									".code": [
										{
											"begin": 60,
											"end": 1867,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "MSTORE"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "POP"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "LT"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "SHR"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "PUSH",
											"value": "19D66618"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "PUSH",
											"value": "73DA6C22"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "PUSH",
											"value": "863FE4AB"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "PUSH",
											"value": "9539DED9"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "PUSH",
											"value": "E3A7FD75"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "PUSH",
											"value": "FC26B0AB"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "JUMPDEST"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 1867,
											"name": "REVERT"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "JUMPDEST"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "JUMPDEST"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "MLOAD"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "ADD"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP3"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP2"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP3"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "MSTORE"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP4"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP2"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP2"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "MLOAD"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP2"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "MSTORE"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "ADD"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP2"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "POP"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "MLOAD"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "ADD"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP4"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "POP"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "POP"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "POP"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "POP"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP2"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "ADD"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "AND"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "ISZERO"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "JUMPI"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP3"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "MLOAD"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP4"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "EXP"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "NOT"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "AND"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP2"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "MSTORE"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "ADD"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP2"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "POP"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "JUMPDEST"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "POP"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP3"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "POP"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "POP"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "POP"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "MLOAD"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP2"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "RETURN"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "JUMPDEST"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP2"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "ADD"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "AND"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "ADD"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SWAP3"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SWAP2"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "AND"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "ADD"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SWAP3"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SWAP2"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "POP"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "POP"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "POP"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "JUMPDEST"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "MLOAD"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "ADD"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP3"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP2"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SUB"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP3"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "MSTORE"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP4"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP2"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP2"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "MLOAD"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP2"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "MSTORE"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "ADD"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SWAP2"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "POP"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "MLOAD"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "ADD"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP4"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "POP"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "POP"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "POP"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "POP"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP2"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "ADD"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "AND"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "ISZERO"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "JUMPI"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP3"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SUB"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "MLOAD"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP4"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SUB"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "EXP"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SUB"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "NOT"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "AND"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP2"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "MSTORE"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "ADD"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SWAP2"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "POP"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "JUMPDEST"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "POP"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SWAP3"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "POP"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "POP"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "POP"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "MLOAD"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "DUP1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SWAP2"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SUB"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SWAP1"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "RETURN"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "JUMPDEST"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "JUMPDEST"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "MLOAD"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "DUP1"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "DUP3"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "DUP2"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "MSTORE"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "ADD"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "SWAP2"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "POP"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "POP"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "MLOAD"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "DUP1"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "SWAP2"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "SUB"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "SWAP1"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "RETURN"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "JUMPDEST"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP2"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "ADD"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "ADD"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP3"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "ADD"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP2"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "ADD"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP2"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DIV"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "MUL"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "ADD"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "MLOAD"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP2"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "ADD"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "MSTORE"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP4"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP3"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP2"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP2"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP2"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "MSTORE"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "ADD"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP4"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP2"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP3"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP2"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP3"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "JUMPDEST"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "MLOAD"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP6"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "ISZERO"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "ISZERO"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "ISZERO"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "ISZERO"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP2"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "MSTORE"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "ADD"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP5"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "AND"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "AND"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP2"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "MSTORE"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "ADD"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP4"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP2"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "MSTORE"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "ADD"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "ADD"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP3"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP2"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SUB"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP3"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "MSTORE"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP4"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP2"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP2"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "MLOAD"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP2"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "MSTORE"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "ADD"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP2"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "MLOAD"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "ADD"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP4"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP2"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "ADD"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "AND"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "ISZERO"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "JUMPI"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP3"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SUB"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "MLOAD"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP4"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SUB"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "EXP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SUB"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "NOT"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "AND"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP2"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "MSTORE"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "ADD"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP2"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "JUMPDEST"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP6"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "MLOAD"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "DUP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP2"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SUB"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP1"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "RETURN"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "JUMPDEST"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "JUMPDEST"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "MLOAD"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "DUP1"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "DUP3"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "AND"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "AND"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "DUP2"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "MSTORE"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "ADD"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "SWAP2"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "POP"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "POP"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "MLOAD"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "DUP1"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "SWAP2"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "SUB"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "SWAP1"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "RETURN"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "JUMPDEST"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "JUMPDEST"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "MLOAD"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "DUP1"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "DUP3"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "AND"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "AND"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "DUP2"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "MSTORE"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "ADD"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "SWAP2"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "POP"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "MLOAD"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "DUP1"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "SWAP2"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "SUB"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "SWAP1"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "RETURN"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "JUMPDEST"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SLOAD"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP2"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "AND"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "ISZERO"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "MUL"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "AND"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DIV"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "ADD"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP2"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DIV"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "MUL"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "ADD"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "MLOAD"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP2"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "ADD"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "MSTORE"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP3"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP2"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP2"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP2"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "MSTORE"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "ADD"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP3"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SLOAD"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP2"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "AND"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "ISZERO"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "MUL"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "AND"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DIV"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "ISZERO"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "JUMPI"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "LT"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "JUMPI"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP4"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SLOAD"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DIV"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "MUL"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP4"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "MSTORE"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP2"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "ADD"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP2"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "JUMP"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "JUMPDEST"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP3"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "ADD"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP2"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "MSTORE"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "KECCAK256"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "JUMPDEST"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP2"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SLOAD"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP2"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "MSTORE"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "ADD"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "ADD"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP4"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "GT"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "JUMPI"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP3"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP1"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "AND"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP3"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "ADD"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "SWAP2"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "JUMPDEST"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "POP"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "POP"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "POP"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "POP"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "POP"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "DUP2"
										},
										{
											"begin": 214,
											"end": 276,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "JUMPDEST"
										},
										{
											"begin": 369,
											"end": 381,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 400,
											"end": 433,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 412,
											"end": 421,
											"name": "DUP4"
										},
										{
											"begin": 422,
											"end": 432,
											"name": "DUP4"
										},
										{
											"begin": 400,
											"end": 411,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 400,
											"end": 433,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 400,
											"end": 433,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 400,
											"end": 433,
											"name": "JUMPDEST"
										},
										{
											"begin": 393,
											"end": 433,
											"name": "SWAP1"
										},
										{
											"begin": 393,
											"end": 433,
											"name": "POP"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SWAP3"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "SWAP2"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "POP"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "POP"
										},
										{
											"begin": 291,
											"end": 441,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "JUMPDEST"
										},
										{
											"begin": 132,
											"end": 142,
											"name": "PUSH",
											"value": "1006000"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "DUP2"
										},
										{
											"begin": 83,
											"end": 142,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "JUMPDEST"
										},
										{
											"begin": 513,
											"end": 517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 519,
											"end": 524,
											"name": "DUP1"
										},
										{
											"begin": 526,
											"end": 533,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 535,
											"end": 547,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 566,
											"end": 594,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 586,
											"end": 593,
											"name": "DUP6"
										},
										{
											"begin": 566,
											"end": 585,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 566,
											"end": 594,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 566,
											"end": 594,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 566,
											"end": 594,
											"name": "JUMPDEST"
										},
										{
											"begin": 559,
											"end": 594,
											"name": "SWAP4"
										},
										{
											"begin": 559,
											"end": 594,
											"name": "POP"
										},
										{
											"begin": 559,
											"end": 594,
											"name": "SWAP4"
										},
										{
											"begin": 559,
											"end": 594,
											"name": "POP"
										},
										{
											"begin": 559,
											"end": 594,
											"name": "SWAP4"
										},
										{
											"begin": 559,
											"end": 594,
											"name": "POP"
										},
										{
											"begin": 559,
											"end": 594,
											"name": "SWAP4"
										},
										{
											"begin": 559,
											"end": 594,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP2"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP4"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP2"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "SWAP4"
										},
										{
											"begin": 449,
											"end": 602,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "JUMPDEST"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "DUP1"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "SWAP1"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "SLOAD"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "SWAP1"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "EXP"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "SWAP1"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "DIV"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "AND"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "DUP2"
										},
										{
											"begin": 151,
											"end": 177,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "JUMPDEST"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "SWAP1"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "SLOAD"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "SWAP1"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "EXP"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "SWAP1"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "DIV"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "AND"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "DUP2"
										},
										{
											"begin": 184,
											"end": 207,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 612,
											"end": 1179,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 612,
											"end": 1179,
											"name": "JUMPDEST"
										},
										{
											"begin": 691,
											"end": 703,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 716,
											"end": 750,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 778,
											"end": 788,
											"name": "DUP3"
										},
										{
											"begin": 753,
											"end": 788,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 753,
											"end": 788,
											"name": "AND"
										},
										{
											"begin": 132,
											"end": 142,
											"name": "PUSH",
											"value": "1006000"
										},
										{
											"begin": 753,
											"end": 788,
											"name": "OR"
										},
										{
											"begin": 716,
											"end": 788,
											"name": "SWAP1"
										},
										{
											"begin": 716,
											"end": 788,
											"name": "POP"
										},
										{
											"begin": 799,
											"end": 815,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 828,
											"end": 830,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "MLOAD"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "SWAP1"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "DUP1"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "DUP3"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "MSTORE"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "DUP1"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "ADD"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "NOT"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "AND"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "ADD"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "DUP3"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "ADD"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "MSTORE"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "DUP1"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "ISZERO"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "JUMPI"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "DUP2"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "ADD"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 31,
											"name": "MUL"
										},
										{
											"begin": 116,
											"end": 120,
											"name": "DUP1"
										},
										{
											"begin": 104,
											"end": 114,
											"name": "CODESIZE"
										},
										{
											"begin": 96,
											"end": 102,
											"name": "DUP4"
										},
										{
											"begin": 87,
											"end": 121,
											"name": "CODECOPY"
										},
										{
											"begin": 147,
											"end": 151,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP3"
										},
										{
											"begin": 135,
											"end": 152,
											"name": "ADD"
										},
										{
											"begin": 125,
											"end": 152,
											"name": "SWAP2"
										},
										{
											"begin": 125,
											"end": 152,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 156,
											"name": "POP"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "SWAP1"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "POP"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "JUMPDEST"
										},
										{
											"begin": 818,
											"end": 831,
											"name": "POP"
										},
										{
											"begin": 799,
											"end": 831,
											"name": "SWAP1"
										},
										{
											"begin": 799,
											"end": 831,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 853,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 900,
											"end": 902,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 895,
											"end": 898,
											"name": "DUP3"
										},
										{
											"begin": 891,
											"end": 903,
											"name": "ADD"
										},
										{
											"begin": 884,
											"end": 903,
											"name": "SWAP1"
										},
										{
											"begin": 884,
											"end": 903,
											"name": "POP"
										},
										{
											"begin": 956,
											"end": 965,
											"name": "DUP6"
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP2"
										},
										{
											"begin": 944,
											"end": 966,
											"name": "MSTORE"
										},
										{
											"begin": 994,
											"end": 995,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 987,
											"end": 995,
											"name": "DUP2"
										},
										{
											"begin": 987,
											"end": 995,
											"name": "SUB"
										},
										{
											"begin": 987,
											"end": 995,
											"name": "SWAP1"
										},
										{
											"begin": 987,
											"end": 995,
											"name": "POP"
										},
										{
											"begin": 1038,
											"end": 1064,
											"name": "DUP3"
										},
										{
											"begin": 1033,
											"end": 1036,
											"name": "DUP2"
										},
										{
											"begin": 1026,
											"end": 1065,
											"name": "MSTORE"
										},
										{
											"begin": 1093,
											"end": 1094,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1086,
											"end": 1094,
											"name": "DUP2"
										},
										{
											"begin": 1086,
											"end": 1094,
											"name": "SUB"
										},
										{
											"begin": 1086,
											"end": 1094,
											"name": "SWAP1"
										},
										{
											"begin": 1086,
											"end": 1094,
											"name": "POP"
										},
										{
											"begin": 1137,
											"end": 1139,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 1132,
											"end": 1135,
											"name": "DUP2"
										},
										{
											"begin": 1125,
											"end": 1140,
											"name": "MSTORE"
										},
										{
											"begin": 1168,
											"end": 1171,
											"name": "DUP2"
										},
										{
											"begin": 1161,
											"end": 1171,
											"name": "SWAP4"
										},
										{
											"begin": 1161,
											"end": 1171,
											"name": "POP"
										},
										{
											"begin": 1161,
											"end": 1171,
											"name": "POP"
										},
										{
											"begin": 1161,
											"end": 1171,
											"name": "POP"
										},
										{
											"begin": 1161,
											"end": 1171,
											"name": "POP"
										},
										{
											"begin": 612,
											"end": 1179,
											"name": "SWAP3"
										},
										{
											"begin": 612,
											"end": 1179,
											"name": "SWAP2"
										},
										{
											"begin": 612,
											"end": 1179,
											"name": "POP"
										},
										{
											"begin": 612,
											"end": 1179,
											"name": "POP"
										},
										{
											"begin": 612,
											"end": 1179,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1187,
											"end": 1864,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 1187,
											"end": 1864,
											"name": "JUMPDEST"
										},
										{
											"begin": 1260,
											"end": 1264,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1271,
											"name": "DUP1"
										},
										{
											"begin": 1273,
											"end": 1280,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1282,
											"end": 1294,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1324,
											"end": 1326,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 1307,
											"end": 1314,
											"name": "DUP6"
										},
										{
											"begin": 1307,
											"end": 1321,
											"name": "MLOAD"
										},
										{
											"begin": 1307,
											"end": 1326,
											"name": "LT"
										},
										{
											"begin": 1303,
											"end": 1379,
											"name": "ISZERO"
										},
										{
											"begin": 1303,
											"end": 1379,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 1303,
											"end": 1379,
											"name": "JUMPI"
										},
										{
											"begin": 1345,
											"end": 1350,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1353,
											"name": "DUP1"
										},
										{
											"begin": 1355,
											"end": 1356,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "DUP1"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "MLOAD"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "SWAP1"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "DUP1"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "DUP3"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "MSTORE"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "DUP1"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "ADD"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "NOT"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "AND"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "ADD"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "DUP3"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "ADD"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "MSTORE"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "DUP1"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "ISZERO"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "JUMPI"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "DUP2"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "ADD"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 31,
											"name": "MUL"
										},
										{
											"begin": 116,
											"end": 120,
											"name": "DUP1"
										},
										{
											"begin": 104,
											"end": 114,
											"name": "CODESIZE"
										},
										{
											"begin": 96,
											"end": 102,
											"name": "DUP4"
										},
										{
											"begin": 87,
											"end": 121,
											"name": "CODECOPY"
										},
										{
											"begin": 147,
											"end": 151,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP3"
										},
										{
											"begin": 135,
											"end": 152,
											"name": "ADD"
										},
										{
											"begin": 125,
											"end": 152,
											"name": "SWAP2"
										},
										{
											"begin": 125,
											"end": 152,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 156,
											"name": "POP"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "SWAP1"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "POP"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "JUMPDEST"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "POP"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "DUP3"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "SWAP3"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "POP"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "DUP2"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "SWAP2"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "POP"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "DUP1"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "SWAP1"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "POP"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "SWAP4"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "POP"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "SWAP4"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "POP"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "SWAP4"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "POP"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "SWAP4"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "POP"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 1337,
											"end": 1371,
											"name": "JUMP"
										},
										{
											"begin": 1303,
											"end": 1379,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 1303,
											"end": 1379,
											"name": "JUMPDEST"
										},
										{
											"begin": 1387,
											"end": 1398,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1430,
											"end": 1437,
											"name": "DUP6"
										},
										{
											"begin": 1423,
											"end": 1437,
											"name": "SWAP1"
										},
										{
											"begin": 1423,
											"end": 1437,
											"name": "POP"
										},
										{
											"begin": 1452,
											"end": 1469,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1482,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1476,
											"end": 1482,
											"name": "DUP3"
										},
										{
											"begin": 1476,
											"end": 1482,
											"name": "ADD"
										},
										{
											"begin": 1476,
											"end": 1482,
											"name": "SWAP2"
										},
										{
											"begin": 1476,
											"end": 1482,
											"name": "POP"
										},
										{
											"begin": 1528,
											"end": 1531,
											"name": "DUP2"
										},
										{
											"begin": 1522,
											"end": 1532,
											"name": "MLOAD"
										},
										{
											"begin": 1507,
											"end": 1532,
											"name": "SWAP1"
										},
										{
											"begin": 1507,
											"end": 1532,
											"name": "POP"
										},
										{
											"begin": 1547,
											"end": 1563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1577,
											"name": "DUP4"
										},
										{
											"begin": 1570,
											"end": 1577,
											"name": "ADD"
										},
										{
											"begin": 1570,
											"end": 1577,
											"name": "SWAP3"
										},
										{
											"begin": 1570,
											"end": 1577,
											"name": "POP"
										},
										{
											"begin": 1620,
											"end": 1623,
											"name": "DUP3"
										},
										{
											"begin": 1614,
											"end": 1624,
											"name": "MLOAD"
										},
										{
											"begin": 1602,
											"end": 1624,
											"name": "SWAP1"
										},
										{
											"begin": 1602,
											"end": 1624,
											"name": "POP"
										},
										{
											"begin": 1644,
											"end": 1646,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1639,
											"end": 1646,
											"name": "DUP4"
										},
										{
											"begin": 1639,
											"end": 1646,
											"name": "ADD"
										},
										{
											"begin": 1639,
											"end": 1646,
											"name": "SWAP3"
										},
										{
											"begin": 1639,
											"end": 1646,
											"name": "POP"
										},
										{
											"begin": 1653,
											"end": 1674,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1702,
											"end": 1704,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "DUP10"
										},
										{
											"begin": 1687,
											"end": 1701,
											"name": "MLOAD"
										},
										{
											"begin": 1687,
											"end": 1704,
											"name": "SUB"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "MLOAD"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "SWAP1"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "DUP1"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "DUP3"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "MSTORE"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "DUP1"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "ADD"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "NOT"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "AND"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "ADD"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "DUP3"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "ADD"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "MSTORE"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "DUP1"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "ISZERO"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "JUMPI"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "DUP2"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "ADD"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 31,
											"name": "MUL"
										},
										{
											"begin": 116,
											"end": 120,
											"name": "DUP1"
										},
										{
											"begin": 104,
											"end": 114,
											"name": "CODESIZE"
										},
										{
											"begin": 96,
											"end": 102,
											"name": "DUP4"
										},
										{
											"begin": 87,
											"end": 121,
											"name": "CODECOPY"
										},
										{
											"begin": 147,
											"end": 151,
											"name": "DUP1"
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP3"
										},
										{
											"begin": 135,
											"end": 152,
											"name": "ADD"
										},
										{
											"begin": 125,
											"end": 152,
											"name": "SWAP2"
										},
										{
											"begin": 125,
											"end": 152,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 156,
											"name": "POP"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "SWAP1"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "POP"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "JUMPDEST"
										},
										{
											"begin": 1677,
											"end": 1705,
											"name": "POP"
										},
										{
											"begin": 1653,
											"end": 1705,
											"name": "SWAP1"
										},
										{
											"begin": 1653,
											"end": 1705,
											"name": "POP"
										},
										{
											"begin": 1713,
											"end": 1724,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1730,
											"end": 1756,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 1747,
											"end": 1755,
											"name": "DUP3"
										},
										{
											"begin": 1730,
											"end": 1746,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 1730,
											"end": 1756,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1730,
											"end": 1756,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 1730,
											"end": 1756,
											"name": "JUMPDEST"
										},
										{
											"begin": 1712,
											"end": 1756,
											"name": "POP"
										},
										{
											"begin": 1712,
											"end": 1756,
											"name": "SWAP1"
										},
										{
											"begin": 1712,
											"end": 1756,
											"name": "POP"
										},
										{
											"begin": 1763,
											"end": 1803,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 1775,
											"end": 1778,
											"name": "DUP6"
										},
										{
											"begin": 1780,
											"end": 1783,
											"name": "DUP3"
										},
										{
											"begin": 1800,
											"end": 1802,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 1785,
											"end": 1792,
											"name": "DUP14"
										},
										{
											"begin": 1785,
											"end": 1799,
											"name": "MLOAD"
										},
										{
											"begin": 1785,
											"end": 1802,
											"name": "SUB"
										},
										{
											"begin": 1763,
											"end": 1774,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 1763,
											"end": 1803,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1763,
											"end": 1803,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 1763,
											"end": 1803,
											"name": "JUMPDEST"
										},
										{
											"begin": 1820,
											"end": 1824,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "DUP5"
										},
										{
											"begin": 1839,
											"end": 1847,
											"name": "DUP5"
										},
										{
											"begin": 1849,
											"end": 1857,
											"name": "DUP5"
										},
										{
											"begin": 1812,
											"end": 1858,
											"name": "SWAP9"
										},
										{
											"begin": 1812,
											"end": 1858,
											"name": "POP"
										},
										{
											"begin": 1812,
											"end": 1858,
											"name": "SWAP9"
										},
										{
											"begin": 1812,
											"end": 1858,
											"name": "POP"
										},
										{
											"begin": 1812,
											"end": 1858,
											"name": "SWAP9"
										},
										{
											"begin": 1812,
											"end": 1858,
											"name": "POP"
										},
										{
											"begin": 1812,
											"end": 1858,
											"name": "SWAP9"
										},
										{
											"begin": 1812,
											"end": 1858,
											"name": "POP"
										},
										{
											"begin": 1812,
											"end": 1858,
											"name": "POP"
										},
										{
											"begin": 1812,
											"end": 1858,
											"name": "POP"
										},
										{
											"begin": 1812,
											"end": 1858,
											"name": "POP"
										},
										{
											"begin": 1812,
											"end": 1858,
											"name": "POP"
										},
										{
											"begin": 1812,
											"end": 1858,
											"name": "POP"
										},
										{
											"begin": 1187,
											"end": 1864,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 1187,
											"end": 1864,
											"name": "JUMPDEST"
										},
										{
											"begin": 1187,
											"end": 1864,
											"name": "SWAP2"
										},
										{
											"begin": 1187,
											"end": 1864,
											"name": "SWAP4"
										},
										{
											"begin": 1187,
											"end": 1864,
											"name": "POP"
										},
										{
											"begin": 1187,
											"end": 1864,
											"name": "SWAP2"
										},
										{
											"begin": 1187,
											"end": 1864,
											"name": "SWAP4"
										},
										{
											"begin": 1187,
											"end": 1864,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2843,
											"end": 3045,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2843,
											"end": 3045,
											"name": "JUMPDEST"
										},
										{
											"begin": 2903,
											"end": 2912,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2922,
											"name": "DUP1"
										},
										{
											"begin": 2941,
											"end": 2944,
											"name": "DUP3"
										},
										{
											"begin": 2941,
											"end": 2951,
											"name": "MLOAD"
										},
										{
											"begin": 2935,
											"end": 2951,
											"name": "SWAP1"
										},
										{
											"begin": 2935,
											"end": 2951,
											"name": "POP"
										},
										{
											"begin": 3024,
											"end": 3026,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2998,
											"end": 3001,
											"name": "DUP4"
										},
										{
											"begin": 2994,
											"end": 3027,
											"name": "ADD"
										},
										{
											"begin": 2986,
											"end": 3027,
											"name": "SWAP2"
										},
										{
											"begin": 2986,
											"end": 3027,
											"name": "POP"
										},
										{
											"begin": 2971,
											"end": 3038,
											"name": "SWAP2"
										},
										{
											"begin": 2971,
											"end": 3038,
											"name": "POP"
										},
										{
											"begin": 2971,
											"end": 3038,
											"name": "SWAP2"
										},
										{
											"begin": 2971,
											"end": 3038,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1650,
											"end": 2250,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 1650,
											"end": 2250,
											"name": "JUMPDEST"
										},
										{
											"begin": 1771,
											"end": 1970,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 1771,
											"end": 1970,
											"name": "JUMPDEST"
										},
										{
											"begin": 129,
											"end": 131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1778,
											"end": 1781,
											"name": "DUP2"
										},
										{
											"begin": 1778,
											"end": 1794,
											"name": "LT"
										},
										{
											"begin": 1771,
											"end": 1970,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 1771,
											"end": 1970,
											"name": "JUMPI"
										},
										{
											"begin": 1876,
											"end": 1879,
											"name": "DUP3"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "MLOAD"
										},
										{
											"begin": 1864,
											"end": 1868,
											"name": "DUP3"
										},
										{
											"begin": 1857,
											"end": 1881,
											"name": "MSTORE"
										},
										{
											"begin": 129,
											"end": 131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "DUP3"
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "SWAP2"
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "POP"
										},
										{
											"begin": 129,
											"end": 131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1942,
											"end": 1958,
											"name": "DUP4"
										},
										{
											"begin": 1942,
											"end": 1958,
											"name": "ADD"
										},
										{
											"begin": 1942,
											"end": 1958,
											"name": "SWAP3"
										},
										{
											"begin": 1942,
											"end": 1958,
											"name": "POP"
										},
										{
											"begin": 129,
											"end": 131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1796,
											"end": 1812,
											"name": "DUP2"
										},
										{
											"begin": 1796,
											"end": 1812,
											"name": "SUB"
										},
										{
											"begin": 1796,
											"end": 1812,
											"name": "SWAP1"
										},
										{
											"begin": 1796,
											"end": 1812,
											"name": "POP"
										},
										{
											"begin": 1771,
											"end": 1970,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 1771,
											"end": 1970,
											"name": "JUMP"
										},
										{
											"begin": 1771,
											"end": 1970,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 1771,
											"end": 1970,
											"name": "JUMPDEST"
										},
										{
											"begin": 2015,
											"end": 2024,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2054,
											"end": 2055,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2047,
											"end": 2050,
											"name": "DUP3"
										},
										{
											"begin": 129,
											"end": 131,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2035,
											"end": 2050,
											"name": "SUB"
										},
										{
											"begin": 2027,
											"end": 2030,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2027,
											"end": 2051,
											"name": "EXP"
										},
										{
											"begin": 2027,
											"end": 2055,
											"name": "SUB"
										},
										{
											"begin": 2015,
											"end": 2055,
											"name": "SWAP1"
										},
										{
											"begin": 2015,
											"end": 2055,
											"name": "POP"
										},
										{
											"begin": 2125,
											"end": 2129,
											"name": "DUP1"
										},
										{
											"begin": 2121,
											"end": 2130,
											"name": "NOT"
										},
										{
											"begin": 2115,
											"end": 2118,
											"name": "DUP5"
										},
										{
											"begin": 2109,
											"end": 2119,
											"name": "MLOAD"
										},
										{
											"begin": 2105,
											"end": 2131,
											"name": "AND"
										},
										{
											"begin": 2178,
											"end": 2182,
											"name": "DUP2"
										},
										{
											"begin": 2171,
											"end": 2175,
											"name": "DUP5"
										},
										{
											"begin": 2165,
											"end": 2176,
											"name": "MLOAD"
										},
										{
											"begin": 2161,
											"end": 2183,
											"name": "AND"
										},
										{
											"begin": 2223,
											"end": 2230,
											"name": "DUP2"
										},
										{
											"begin": 2213,
											"end": 2221,
											"name": "DUP2"
										},
										{
											"begin": 2210,
											"end": 2231,
											"name": "OR"
										},
										{
											"begin": 2204,
											"end": 2208,
											"name": "DUP6"
										},
										{
											"begin": 2197,
											"end": 2232,
											"name": "MSTORE"
										},
										{
											"begin": 2075,
											"end": 2243,
											"name": "POP"
										},
										{
											"begin": 2075,
											"end": 2243,
											"name": "POP"
										},
										{
											"begin": 2075,
											"end": 2243,
											"name": "POP"
										},
										{
											"begin": 2075,
											"end": 2243,
											"name": "POP"
										},
										{
											"begin": 2075,
											"end": 2243,
											"name": "POP"
										},
										{
											"begin": 2075,
											"end": 2243,
											"name": "POP"
										},
										{
											"begin": 2075,
											"end": 2243,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								},
								"86F040261ACFFF1E0DFBCEB9D55F04EF7FF0430591B733BD922D9F06FEEAF6A9": "534955444853554944423839323368646638393233686438393233656665776634336634336634"
							}
						},
						"methodIdentifiers": {
							"CROSS_CHAIN_KEY_PREFIX()": "863fe4ab",
							"data2()": "e3a7fd75",
							"data3()": "fc26b0ab",
							"dataX()": "19d66618",
							"getDecodekey(bytes)": "9539ded9",
							"getGeratekey(uint64,uint8)": "73da6c22"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"CROSS_CHAIN_KEY_PREFIX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"data2\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"data3\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"dataX\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"getDecodekey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_sequence\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"_channelID\",\"type\":\"uint8\"}],\"name\":\"getGeratekey\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/demo1.sol\":\"CmnPkg\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Memory.sol\":{\"keccak256\":\"0xffb6fe9a78280b6fb7ff33ba10b074e5fec54e0503392e10eb3b8b9141c2b652\",\"urls\":[\"bzz-raw://913be1863d9e0f2534e1a2f2b7639688f1c38103dcd03a91d608977fd9dc6e89\",\"dweb:/ipfs/QmNRh2GXTYgjQj8CL5kf6MJbWdC85S5msULXiaqvUJX9Dg\"]},\"contracts/demo1.sol\":{\"keccak256\":\"0x8c5cf48dc32805f63e6435b6718fb14c9e4d95fff19e2436fa175e1b1bb46b30\",\"urls\":[\"bzz-raw://2afc892aeb3e4526c4a254e0873e5cfa1332ba5b4216f317dc4c0ae94141cc7c\",\"dweb:/ipfs/QmZQvhboqRNMBxvRxtC3hK5i2mT21AszSmMZdxQ7zKKpwy\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "contracts/demo1.sol:13:5: Warning: Function state mutability can be restricted to pure\n    function getGeratekey(uint64 _sequence, uint8 _channelID) public view returns(bytes memory){\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 441,
					"file": "contracts/demo1.sol",
					"start": 291
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/demo1.sol:17:5: Warning: Function state mutability can be restricted to pure\n    function getDecodekey(bytes memory payload) public view returns(bool, uint8, uint256, bytes memory){\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 602,
					"file": "contracts/demo1.sol",
					"start": 449
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Memory.sol": {
				"ast": {
					"absolutePath": "contracts/Memory.sol",
					"exportedSymbols": {
						"Memory": [
							199
						]
					},
					"id": 200,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">",
								"0.4",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:30:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 199,
							"linearizedBaseContracts": [
								199
							],
							"name": "Memory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 4,
									"name": "WORD_SIZE",
									"nodeType": "VariableDeclaration",
									"scope": 199,
									"src": "94:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "94:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3332",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "129:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 7,
									"name": "BYTES_HEADER_SIZE",
									"nodeType": "VariableDeclaration",
									"scope": 199,
									"src": "185:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "185:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3332",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "228:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 10,
									"name": "FREE_MEM_PTR",
									"nodeType": "VariableDeclaration",
									"scope": 199,
									"src": "281:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "281:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783430",
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "319:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "0x40"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "605:109:0",
										"statements": [
											{
												"externalReferences": [
													{
														"equal": {
															"declaration": 19,
															"isOffset": false,
															"isSlot": false,
															"src": "640:5:0",
															"valueSize": 1
														}
													},
													{
														"addr": {
															"declaration": 12,
															"isOffset": false,
															"isSlot": false,
															"src": "662:4:0",
															"valueSize": 1
														}
													},
													{
														"len": {
															"declaration": 16,
															"isOffset": false,
															"isSlot": false,
															"src": "668:3:0",
															"valueSize": 1
														}
													},
													{
														"addr2": {
															"declaration": 14,
															"isOffset": false,
															"isSlot": false,
															"src": "684:5:0",
															"valueSize": 1
														}
													},
													{
														"len": {
															"declaration": 16,
															"isOffset": false,
															"isSlot": false,
															"src": "691:3:0",
															"valueSize": 1
														}
													}
												],
												"id": 21,
												"nodeType": "InlineAssembly",
												"operations": "{\n    equal := eq(keccak256(addr, len), keccak256(addr2, len))\n}",
												"src": "616:91:0"
											}
										]
									},
									"documentation": null,
									"id": 23,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "537:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "537:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"name": "addr2",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "548:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"name": "len",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "560:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "560:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "536:33:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "equal",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "593:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 18,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "592:12:0"
									},
									"scope": 199,
									"src": "521:193:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "1094:195:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 35,
																	"name": "bts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "1113:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1113:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 37,
																"name": "len",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "1127:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1113:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 34,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															393,
															394
														],
														"referencedDeclaration": 393,
														"src": "1105:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1105:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "1105:26:0"
											},
											{
												"assignments": [
													42
												],
												"declarations": [
													{
														"constant": false,
														"id": 42,
														"name": "addr2",
														"nodeType": "VariableDeclaration",
														"scope": 51,
														"src": "1142:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 41,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1142:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 43,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1142:10:0"
											},
											{
												"externalReferences": [
													{
														"addr2": {
															"declaration": 42,
															"isOffset": false,
															"isSlot": false,
															"src": "1187:5:0",
															"valueSize": 1
														}
													},
													{
														"bts": {
															"declaration": 29,
															"isOffset": false,
															"isSlot": false,
															"src": "1200:3:0",
															"valueSize": 1
														}
													}
												],
												"id": 44,
												"nodeType": "InlineAssembly",
												"operations": "{ addr2 := add(bts, 32) }",
												"src": "1163:77:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 46,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "1264:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 47,
															"name": "addr2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "1270:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 48,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1277:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 45,
														"name": "equals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															23,
															52
														],
														"referencedDeclaration": 23,
														"src": "1257:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (bool)"
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1257:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 33,
												"id": 50,
												"nodeType": "Return",
												"src": "1250:31:0"
											}
										]
									},
									"documentation": null,
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "1020:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1020:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"name": "len",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "1031:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1031:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"name": "bts",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "1041:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 28,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1041:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1019:39:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"name": "equal",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "1082:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 31,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1082:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1081:12:0"
									},
									"scope": 199,
									"src": "1004:285:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "1384:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 64,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 54,
																						"src": "1431:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"id": 65,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1430:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 62,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 377,
																				"src": "1413:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 63,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "1413:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 66,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1413:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 61,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "1403:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1403:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 71,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 56,
																						"src": "1467:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"id": 72,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1466:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 69,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 377,
																				"src": "1449:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 70,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "1449:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 73,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1449:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 68,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "1439:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1439:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "1403:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 76,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1402:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 60,
												"id": 77,
												"nodeType": "Return",
												"src": "1395:77:0"
											}
										]
									},
									"documentation": null,
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "compareStrings",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1321:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 53,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1321:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1338:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 55,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1338:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1320:34:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1378:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 58,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1378:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1377:6:0"
									},
									"scope": 199,
									"src": "1297:183:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "1709:541:0",
										"statements": [
											{
												"body": {
													"id": 104,
													"nodeType": "Block",
													"src": "1814:156:0",
													"statements": [
														{
															"externalReferences": [
																{
																	"dest": {
																		"declaration": 83,
																		"isOffset": false,
																		"isSlot": false,
																		"src": "1864:4:0",
																		"valueSize": 1
																	}
																},
																{
																	"src": {
																		"declaration": 81,
																		"isOffset": false,
																		"isSlot": false,
																		"src": "1876:3:0",
																		"valueSize": 1
																	}
																}
															],
															"id": 95,
															"nodeType": "InlineAssembly",
															"operations": "{ mstore(dest, mload(src)) }",
															"src": "1829:67:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 96,
																	"name": "dest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1910:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 97,
																	"name": "WORD_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4,
																	"src": "1918:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1910:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 99,
															"nodeType": "ExpressionStatement",
															"src": "1910:17:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 100,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "1942:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 101,
																	"name": "WORD_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4,
																	"src": "1949:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1942:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 103,
															"nodeType": "ExpressionStatement",
															"src": "1942:16:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 88,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "1778:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 89,
														"name": "WORD_SIZE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "1785:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1778:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 105,
												"initializationExpression": null,
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 93,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 91,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "1796:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"argumentTypes": null,
															"id": 92,
															"name": "WORD_SIZE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "1803:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1796:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 94,
													"nodeType": "ExpressionStatement",
													"src": "1796:16:0"
												},
												"nodeType": "ForStatement",
												"src": "1771:199:0"
											},
											{
												"assignments": [
													107
												],
												"declarations": [
													{
														"constant": false,
														"id": 107,
														"name": "mask",
														"nodeType": "VariableDeclaration",
														"scope": 118,
														"src": "2015:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 106,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2015:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 116,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "323536",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2027:3:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "256"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 109,
																		"name": "WORD_SIZE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4,
																		"src": "2035:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 110,
																		"name": "len",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 85,
																		"src": "2047:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2035:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 112,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2034:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2027:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2054:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2027:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2015:40:0"
											},
											{
												"externalReferences": [
													{
														"src": {
															"declaration": 81,
															"isOffset": false,
															"isSlot": false,
															"src": "2115:3:0",
															"valueSize": 1
														}
													},
													{
														"mask": {
															"declaration": 107,
															"isOffset": false,
															"isSlot": false,
															"src": "2125:4:0",
															"valueSize": 1
														}
													},
													{
														"dest": {
															"declaration": 83,
															"isOffset": false,
															"isSlot": false,
															"src": "2171:4:0",
															"valueSize": 1
														}
													},
													{
														"mask": {
															"declaration": 107,
															"isOffset": false,
															"isSlot": false,
															"src": "2178:4:0",
															"valueSize": 1
														}
													},
													{
														"dest": {
															"declaration": 83,
															"isOffset": false,
															"isSlot": false,
															"src": "2204:4:0",
															"valueSize": 1
														}
													}
												],
												"id": 117,
												"nodeType": "InlineAssembly",
												"operations": "{\n    let srcpart := and(mload(src), not(mask))\n    let destpart := and(mload(dest), mask)\n    mstore(dest, or(destpart, srcpart))\n}",
												"src": "2066:177:0"
											}
										]
									},
									"documentation": null,
									"id": 119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "copy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"name": "src",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1664:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1664:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"name": "dest",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1674:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1674:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"name": "len",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1685:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1685:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1663:31:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1709:0:0"
									},
									"scope": 199,
									"src": "1650:600:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "2385:64:0",
										"statements": [
											{
												"externalReferences": [
													{
														"addr": {
															"declaration": 124,
															"isOffset": false,
															"isSlot": false,
															"src": "2420:4:0",
															"valueSize": 1
														}
													},
													{
														"bts": {
															"declaration": 121,
															"isOffset": false,
															"isSlot": false,
															"src": "2428:3:0",
															"valueSize": 1
														}
													}
												],
												"id": 126,
												"nodeType": "InlineAssembly",
												"operations": "{ addr := bts }",
												"src": "2396:46:0"
											}
										]
									},
									"documentation": null,
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ptr",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"name": "bts",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "2333:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2333:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2332:18:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "2374:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2373:11:0"
									},
									"scope": 199,
									"src": "2320:129:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "2608:94:0",
										"statements": [
											{
												"externalReferences": [
													{
														"addr": {
															"declaration": 133,
															"isOffset": false,
															"isSlot": false,
															"src": "2643:4:0",
															"valueSize": 1
														}
													},
													{
														"bts": {
															"declaration": 130,
															"isOffset": false,
															"isSlot": false,
															"src": "2655:3:0",
															"valueSize": 1
														}
													}
												],
												"id": 135,
												"nodeType": "InlineAssembly",
												"operations": "{ addr := add(bts, 32) }",
												"src": "2619:76:0"
											}
										]
									},
									"documentation": null,
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "dataPtr",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"name": "bts",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "2556:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 129,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2556:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2555:18:0"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "2597:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2597:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2596:11:0"
									},
									"scope": 199,
									"src": "2539:163:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "2924:121:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 146,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "2935:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 147,
															"name": "bts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "2941:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2941:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2935:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "2935:16:0"
											},
											{
												"externalReferences": [
													{
														"addr": {
															"declaration": 142,
															"isOffset": false,
															"isSlot": false,
															"src": "2986:4:0",
															"valueSize": 1
														}
													},
													{
														"bts": {
															"declaration": 139,
															"isOffset": false,
															"isSlot": false,
															"src": "2998:3:0",
															"valueSize": 1
														}
													}
												],
												"id": 151,
												"nodeType": "InlineAssembly",
												"operations": "{ addr := add(bts, 32) }",
												"src": "2962:76:0"
											}
										]
									},
									"documentation": null,
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fromBytes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"name": "bts",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2862:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 138,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2862:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2861:18:0"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2903:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2903:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"name": "len",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2914:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2914:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2902:21:0"
									},
									"scope": 199,
									"src": "2843:202:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "3379:183:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 162,
														"name": "bts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "3390:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 165,
																"name": "len",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "3406:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "3396:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
																"typeString": "function (uint256) pure returns (bytes memory)"
															},
															"typeName": {
																"id": 163,
																"name": "bytes",
																"nodeType": "ElementaryTypeName",
																"src": "3400:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_storage_ptr",
																	"typeString": "bytes"
																}
															}
														},
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3396:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory",
															"typeString": "bytes memory"
														}
													},
													"src": "3390:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "3390:20:0"
											},
											{
												"assignments": [
													170
												],
												"declarations": [
													{
														"constant": false,
														"id": 170,
														"name": "btsptr",
														"nodeType": "VariableDeclaration",
														"scope": 179,
														"src": "3421:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 169,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 171,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "3421:11:0"
											},
											{
												"externalReferences": [
													{
														"btsptr": {
															"declaration": 170,
															"isOffset": false,
															"isSlot": false,
															"src": "3467:6:0",
															"valueSize": 1
														}
													},
													{
														"bts": {
															"declaration": 160,
															"isOffset": false,
															"isSlot": false,
															"src": "3481:3:0",
															"valueSize": 1
														}
													}
												],
												"id": 172,
												"nodeType": "InlineAssembly",
												"operations": "{ btsptr := add(bts, 32) }",
												"src": "3443:78:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 174,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "3536:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 175,
															"name": "btsptr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "3542:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 176,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "3550:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 173,
														"name": "copy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "3531:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256) pure"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3531:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "3531:23:0"
											}
										]
									},
									"documentation": null,
									"id": 180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toBytes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "3317:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3317:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"name": "len",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "3328:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3328:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3316:21:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"name": "bts",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "3361:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 159,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3361:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3360:18:0"
									},
									"scope": 199,
									"src": "3300:262:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "3694:69:0",
										"statements": [
											{
												"externalReferences": [
													{
														"n": {
															"declaration": 185,
															"isOffset": false,
															"isSlot": false,
															"src": "3729:1:0",
															"valueSize": 1
														}
													},
													{
														"addr": {
															"declaration": 182,
															"isOffset": false,
															"isSlot": false,
															"src": "3740:4:0",
															"valueSize": 1
														}
													}
												],
												"id": 187,
												"nodeType": "InlineAssembly",
												"operations": "{ n := mload(addr) }",
												"src": "3705:51:0"
											}
										]
									},
									"documentation": null,
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "3652:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3652:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3651:11:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"name": "n",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "3686:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3686:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3685:8:0"
									},
									"scope": 199,
									"src": "3636:127:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "3906:71:0",
										"statements": [
											{
												"externalReferences": [
													{
														"bts": {
															"declaration": 194,
															"isOffset": false,
															"isSlot": false,
															"src": "3941:3:0",
															"valueSize": 1
														}
													},
													{
														"addr": {
															"declaration": 191,
															"isOffset": false,
															"isSlot": false,
															"src": "3954:4:0",
															"valueSize": 1
														}
													}
												],
												"id": 196,
												"nodeType": "InlineAssembly",
												"operations": "{ bts := mload(addr) }",
												"src": "3917:53:0"
											}
										]
									},
									"documentation": null,
									"id": 198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toBytes32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3859:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3859:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3858:11:0"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"name": "bts",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3893:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3892:13:0"
									},
									"scope": 199,
									"src": "3840:137:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 200,
							"src": "36:3944:0"
						}
					],
					"src": "0:3980:0"
				},
				"id": 0
			},
			"contracts/demo1.sol": {
				"ast": {
					"absolutePath": "contracts/demo1.sol",
					"exportedSymbols": {
						"CmnPkg": [
							375
						]
					},
					"id": 376,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 201,
							"literals": [
								"solidity",
								">",
								"0.4",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:30:1"
						},
						{
							"absolutePath": "contracts/Memory.sol",
							"file": "./Memory.sol",
							"id": 202,
							"nodeType": "ImportDirective",
							"scope": 376,
							"sourceUnit": 200,
							"src": "34:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 375,
							"linearizedBaseContracts": [
								375
							],
							"name": "CmnPkg",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 205,
									"name": "CROSS_CHAIN_KEY_PREFIX",
									"nodeType": "VariableDeclaration",
									"scope": 375,
									"src": "83:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 203,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "83:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783031303036303030",
										"id": 204,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "132:10:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_16801792_by_1",
											"typeString": "int_const 16801792"
										},
										"value": "0x01006000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 208,
									"name": "data2",
									"nodeType": "VariableDeclaration",
									"scope": 375,
									"src": "151:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 206,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "151:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "33333435",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "173:4:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3345_by_1",
											"typeString": "int_const 3345"
										},
										"value": "3345"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 211,
									"name": "data3",
									"nodeType": "VariableDeclaration",
									"scope": 375,
									"src": "184:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 209,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "184:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3330",
										"id": 210,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "205:2:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_30_by_1",
											"typeString": "int_const 30"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 214,
									"name": "dataX",
									"nodeType": "VariableDeclaration",
									"scope": 375,
									"src": "214:62:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 212,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "214:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "534955444853554944423839323368646638393233686438393233656665776634336634336634",
										"id": 213,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "235:41:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_86f040261acfff1e0dfbceb9d55f04ef7ff0430591b733bd922d9f06feeaf6a9",
											"typeString": "literal_string \"SIUDHSUIDB8923hdf8923hd8923efewf43f43f4\""
										},
										"value": "SIUDHSUIDB8923hdf8923hd8923efewf43f43f4"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "382:59:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 224,
															"name": "_sequence",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "412:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"argumentTypes": null,
															"id": 225,
															"name": "_channelID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "422:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 223,
														"name": "generateKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "400:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint64_$_t_uint8_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint64,uint8) pure returns (bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "400:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 222,
												"id": 227,
												"nodeType": "Return",
												"src": "393:40:1"
											}
										]
									},
									"documentation": null,
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getGeratekey",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"name": "_sequence",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "313:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 215,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "313:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"name": "_channelID",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 217,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "331:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "312:36:1"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "369:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 220,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "369:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "368:14:1"
									},
									"scope": 375,
									"src": "291:150:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "548:54:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 243,
															"name": "payload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "586:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 242,
														"name": "decodePayloadHeader",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "566:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$_t_uint8_$_t_uint256_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) pure returns (bool,uint8,uint256,bytes memory)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "566:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint8_$_t_uint256_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,uint8,uint256,bytes memory)"
													}
												},
												"functionReturnParameters": 241,
												"id": 245,
												"nodeType": "Return",
												"src": "559:35:1"
											}
										]
									},
									"documentation": null,
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDecodekey",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"name": "payload",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "471:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "471:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "470:22:1"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "513:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 233,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "513:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "519:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 235,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "519:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "526:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "535:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "535:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "512:36:1"
									},
									"scope": 375,
									"src": "449:153:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "705:474:1",
										"statements": [
											{
												"assignments": [
													257
												],
												"declarations": [
													{
														"constant": false,
														"id": 257,
														"name": "fullCROSS_CHAIN_KEY_PREFIX",
														"nodeType": "VariableDeclaration",
														"scope": 286,
														"src": "716:34:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 256,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "716:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 258,
														"name": "CROSS_CHAIN_KEY_PREFIX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "753:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "|",
													"rightExpression": {
														"argumentTypes": null,
														"id": 259,
														"name": "_channelID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "778:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "753:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "716:72:1"
											},
											{
												"assignments": [
													263
												],
												"declarations": [
													{
														"constant": false,
														"id": 263,
														"name": "key",
														"nodeType": "VariableDeclaration",
														"scope": 286,
														"src": "799:16:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 262,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 268,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3134",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "828:2:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_14_by_1",
																"typeString": "int_const 14"
															},
															"value": "14"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_14_by_1",
																"typeString": "int_const 14"
															}
														],
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "818:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 264,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "822:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "818:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "799:32:1"
											},
											{
												"assignments": [
													270
												],
												"declarations": [
													{
														"constant": false,
														"id": 270,
														"name": "ptr",
														"nodeType": "VariableDeclaration",
														"scope": 286,
														"src": "842:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 269,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "842:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 271,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "842:11:1"
											},
											{
												"externalReferences": [
													{
														"ptr": {
															"declaration": 270,
															"isOffset": false,
															"isSlot": false,
															"src": "884:3:1",
															"valueSize": 1
														}
													},
													{
														"key": {
															"declaration": 263,
															"isOffset": false,
															"isSlot": false,
															"src": "895:3:1",
															"valueSize": 1
														}
													}
												],
												"id": 272,
												"nodeType": "InlineAssembly",
												"operations": "{ ptr := add(key, 14) }",
												"src": "864:50:1"
											},
											{
												"externalReferences": [
													{
														"ptr": {
															"declaration": 270,
															"isOffset": false,
															"isSlot": false,
															"src": "951:3:1",
															"valueSize": 1
														}
													},
													{
														"_sequence": {
															"declaration": 249,
															"isOffset": false,
															"isSlot": false,
															"src": "956:9:1",
															"valueSize": 1
														}
													}
												],
												"id": 273,
												"nodeType": "InlineAssembly",
												"operations": "{ mstore(ptr, _sequence) }",
												"src": "924:53:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 274,
														"name": "ptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "987:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "38",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "994:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "987:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "987:8:1"
											},
											{
												"externalReferences": [
													{
														"ptr": {
															"declaration": 270,
															"isOffset": false,
															"isSlot": false,
															"src": "1033:3:1",
															"valueSize": 1
														}
													},
													{
														"fullCROSS_CHAIN_KEY_PREFIX": {
															"declaration": 257,
															"isOffset": false,
															"isSlot": false,
															"src": "1038:26:1",
															"valueSize": 1
														}
													}
												],
												"id": 278,
												"nodeType": "InlineAssembly",
												"operations": "{\n    mstore(ptr, fullCROSS_CHAIN_KEY_PREFIX)\n}",
												"src": "1006:70:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 279,
														"name": "ptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "1086:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "36",
														"id": 280,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1093:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "1086:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "1086:8:1"
											},
											{
												"externalReferences": [
													{
														"ptr": {
															"declaration": 270,
															"isOffset": false,
															"isSlot": false,
															"src": "1132:3:1",
															"valueSize": 1
														}
													}
												],
												"id": 283,
												"nodeType": "InlineAssembly",
												"operations": "{ mstore(ptr, 14) }",
												"src": "1105:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 284,
													"name": "key",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 263,
													"src": "1168:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 255,
												"id": 285,
												"nodeType": "Return",
												"src": "1161:10:1"
											}
										]
									},
									"documentation": null,
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "generateKey",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"name": "_sequence",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "633:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 248,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "633:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"name": "_channelID",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 250,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "651:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "632:36:1"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "691:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "691:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "690:14:1"
									},
									"scope": 375,
									"src": "612:567:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "1296:568:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 300,
															"name": "payload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "1307:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1307:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3333",
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1324:2:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_33_by_1",
															"typeString": "int_const 33"
														},
														"value": "33"
													},
													"src": "1307:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 314,
												"nodeType": "IfStatement",
												"src": "1303:76:1",
												"trueBody": {
													"id": 313,
													"nodeType": "Block",
													"src": "1328:51:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"hexValue": "66616c7365",
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1345:5:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1352:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1355:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 309,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1368:1:1",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "NewExpression",
																			"src": "1358:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
																				"typeString": "function (uint256) pure returns (bytes memory)"
																			},
																			"typeName": {
																				"id": 307,
																				"name": "bytes",
																				"nodeType": "ElementaryTypeName",
																				"src": "1362:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_storage_ptr",
																					"typeString": "bytes"
																				}
																			}
																		},
																		"id": 310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1358:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"id": 311,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1344:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_bytes_memory_$",
																	"typeString": "tuple(bool,int_const 0,int_const 0,bytes memory)"
																}
															},
															"functionReturnParameters": 299,
															"id": 312,
															"nodeType": "Return",
															"src": "1337:34:1"
														}
													]
												}
											},
											{
												"assignments": [
													316
												],
												"declarations": [
													{
														"constant": false,
														"id": 316,
														"name": "ptr",
														"nodeType": "VariableDeclaration",
														"scope": 373,
														"src": "1387:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 315,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1387:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 317,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1387:11:1"
											},
											{
												"externalReferences": [
													{
														"ptr": {
															"declaration": 316,
															"isOffset": false,
															"isSlot": false,
															"src": "1423:3:1",
															"valueSize": 1
														}
													},
													{
														"payload": {
															"declaration": 289,
															"isOffset": false,
															"isSlot": false,
															"src": "1430:7:1",
															"valueSize": 1
														}
													}
												],
												"id": 318,
												"nodeType": "InlineAssembly",
												"operations": "{ ptr := payload }",
												"src": "1405:39:1"
											},
											{
												"assignments": [
													320
												],
												"declarations": [
													{
														"constant": false,
														"id": 320,
														"name": "packageType",
														"nodeType": "VariableDeclaration",
														"scope": 373,
														"src": "1452:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 319,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1452:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 321,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1452:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 322,
														"name": "ptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "1476:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1481:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1476:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "1476:6:1"
											},
											{
												"externalReferences": [
													{
														"packageType": {
															"declaration": 320,
															"isOffset": false,
															"isSlot": false,
															"src": "1507:11:1",
															"valueSize": 1
														}
													},
													{
														"ptr": {
															"declaration": 316,
															"isOffset": false,
															"isSlot": false,
															"src": "1528:3:1",
															"valueSize": 1
														}
													}
												],
												"id": 326,
												"nodeType": "InlineAssembly",
												"operations": "{ packageType := mload(ptr) }",
												"src": "1489:50:1"
											},
											{
												"assignments": [
													328
												],
												"declarations": [
													{
														"constant": false,
														"id": 328,
														"name": "relayFee",
														"nodeType": "VariableDeclaration",
														"scope": 373,
														"src": "1547:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 327,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1547:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1547:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 330,
														"name": "ptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "1570:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1575:2:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "1570:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "1570:7:1"
											},
											{
												"externalReferences": [
													{
														"relayFee": {
															"declaration": 328,
															"isOffset": false,
															"isSlot": false,
															"src": "1602:8:1",
															"valueSize": 1
														}
													},
													{
														"ptr": {
															"declaration": 316,
															"isOffset": false,
															"isSlot": false,
															"src": "1620:3:1",
															"valueSize": 1
														}
													}
												],
												"id": 334,
												"nodeType": "InlineAssembly",
												"operations": "{ relayFee := mload(ptr) }",
												"src": "1584:47:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 335,
														"name": "ptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "1639:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 336,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1644:2:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "1639:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "1639:7:1"
											},
											{
												"assignments": [
													340
												],
												"declarations": [
													{
														"constant": false,
														"id": 340,
														"name": "msgBytes",
														"nodeType": "VariableDeclaration",
														"scope": 373,
														"src": "1653:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 339,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 348,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 343,
																	"name": "payload",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "1687:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1687:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3333",
																"id": 345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1702:2:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33_by_1",
																	"typeString": "int_const 33"
																},
																"value": "33"
															},
															"src": "1687:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1677:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 341,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1681:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1677:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1653:52:1"
											},
											{
												"assignments": [
													350,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 350,
														"name": "dst",
														"nodeType": "VariableDeclaration",
														"scope": 373,
														"src": "1713:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 349,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1713:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 355,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 353,
															"name": "msgBytes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "1747:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 351,
															"name": "Memory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "1730:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Memory_$199_$",
																"typeString": "type(library Memory)"
															}
														},
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "fromBytes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 153,
														"src": "1730:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (bytes memory) pure returns (uint256,uint256)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1730:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1712:44:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 359,
															"name": "ptr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "1775:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 360,
															"name": "dst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "1780:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 361,
																	"name": "payload",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "1785:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1785:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3333",
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1800:2:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33_by_1",
																	"typeString": "int_const 33"
																},
																"value": "33"
															},
															"src": "1785:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 356,
															"name": "Memory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "1763:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Memory_$199_$",
																"typeString": "type(library Memory)"
															}
														},
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "copy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 119,
														"src": "1763:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256) pure"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1763:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "1763:40:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1820:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 368,
															"name": "packageType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "1826:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 369,
															"name": "relayFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "1839:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 370,
															"name": "msgBytes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "1849:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"id": 371,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1819:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint8_$_t_uint256_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,uint8,uint256,bytes memory)"
													}
												},
												"functionReturnParameters": 299,
												"id": 372,
												"nodeType": "Return",
												"src": "1812:46:1"
											}
										]
									},
									"documentation": null,
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodePayloadHeader",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"name": "payload",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "1216:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1216:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1215:22:1"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "1260:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1260:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "1266:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 293,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1266:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "1273:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1273:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "1282:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 297,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1282:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1259:36:1"
									},
									"scope": 375,
									"src": "1187:677:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 376,
							"src": "60:1807:1"
						}
					],
					"src": "0:1867:1"
				},
				"id": 1
			}
		}
	}
}