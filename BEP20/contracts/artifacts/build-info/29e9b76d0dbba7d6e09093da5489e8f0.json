{
	"id": "29e9b76d0dbba7d6e09093da5489e8f0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.4",
	"solcLongVersion": "0.6.4+commit.1dca32f3",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/demo2.sol": {
				"content": "    pragma solidity >0.4.0 <0.9.0;\r\n\r\ncontract demo2 {\r\n    bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\";\r\n    bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\";\r\n\r\n    function getData(bytes memory _preBytes, bytes memory _postBytes) public view returns(bytes memory) {\r\n        return mergeBytes(_preBytes, _postBytes);\r\n    }\r\n\r\n    function mergeBytes(\r\n        bytes memory _preBytes,\r\n        bytes memory _postBytes\r\n    )\r\n    internal\r\n    pure\r\n    returns (bytes memory)\r\n    {\r\n        bytes memory tempBytes;\r\n\r\n        assembly {\r\n        // Get a location of some free memory and store it in tempBytes as\r\n        // Solidity does for memory variables.\r\n            tempBytes := mload(0x40)\r\n\r\n        // Store the length of the first bytes array at the beginning of\r\n        // the memory for tempBytes.\r\n            let length := mload(_preBytes)\r\n            mstore(tempBytes, length)\r\n\r\n        // Maintain a memory counter for the current write location in the\r\n        // temp bytes array by adding the 32 bytes for the array length to\r\n        // the starting location.\r\n            let mc := add(tempBytes, 0x20)\r\n        // Stop copying when the memory counter reaches the length of the\r\n        // first bytes array.\r\n            let end := add(mc, length)\r\n\r\n            for {\r\n            // Initialize a copy counter to the start of the _preBytes data,\r\n            // 32 bytes into its memory.\r\n                let cc := add(_preBytes, 0x20)\r\n            } lt(mc, end) {\r\n            // Increase both counters by 32 bytes each iteration.\r\n                mc := add(mc, 0x20)\r\n                cc := add(cc, 0x20)\r\n            } {\r\n            // Write the _preBytes data into the tempBytes memory 32 bytes\r\n            // at a time.\r\n                mstore(mc, mload(cc))\r\n            }\r\n\r\n        // Add the length of _postBytes to the current length of tempBytes\r\n        // and store it as the new length in the first 32 bytes of the\r\n        // tempBytes memory.\r\n            length := mload(_postBytes)\r\n            mstore(tempBytes, add(length, mload(tempBytes)))\r\n\r\n        // Move the memory counter back from a multiple of 0x20 to the\r\n        // actual end of the _preBytes data.\r\n            mc := end\r\n        // Stop copying when the memory counter reaches the new combined\r\n        // length of the arrays.\r\n            end := add(mc, length)\r\n\r\n            for {\r\n                let cc := add(_postBytes, 0x20)\r\n            } lt(mc, end) {\r\n                mc := add(mc, 0x20)\r\n                cc := add(cc, 0x20)\r\n            } {\r\n                mstore(mc, mload(cc))\r\n            }\r\n\r\n        // Update the free-memory pointer by padding our last write location\r\n        // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\r\n        // next 32 byte block, then round down to the nearest multiple of\r\n        // 32. If the sum of the length of the two arrays is zero then add\r\n        // one before rounding down to leave a blank 32 bytes (the length block with 0).\r\n            mstore(0x40, and(\r\n            add(add(end, iszero(add(length, mload(_preBytes)))), 31),\r\n            not(31) // Round down to the nearest 32 bytes.\r\n            ))\r\n        }\r\n\r\n        return tempBytes;\r\n    }\r\n\r\n    function encodeLength(uint length, uint offset) internal pure returns (bytes memory) {\r\n        require(length < 256**8, \"input too long\");\r\n        bytes memory rs = new bytes(1);\r\n        if (length <= 55) {\r\n            rs[0] = byte(uint8(length + offset));\r\n            return rs;\r\n        }\r\n        bytes memory bl = toBinary(length);\r\n        rs[0] = byte(uint8(bl.length + offset + 55));\r\n        return mergeBytes(rs, bl);\r\n    }\r\n    \r\n    function toBinary(uint x) internal pure returns (bytes memory) {\r\n        bytes memory b = new bytes(32);\r\n        assembly {\r\n            mstore(add(b, 32), x)\r\n        }\r\n        uint i;\r\n        if (x & 0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000 == 0) {\r\n            i = 24;\r\n        } else if (x & 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 == 0) {\r\n            i = 16;\r\n        } else {\r\n            i = 0;\r\n        }\r\n        for (; i < 32; i++) {\r\n            if (b[i] != 0) {\r\n                break;\r\n            }\r\n        }\r\n        uint length = 32 - i;\r\n        bytes memory rs = new bytes(length);\r\n        assembly {\r\n            mstore(add(rs, length), x)\r\n            mstore(rs, length)\r\n        }\r\n        return rs;\r\n    }    \r\n} \r\n        "
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/demo2.sol": {
				"demo2": {
					"abi": [
						{
							"inputs": [],
							"name": "data1",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "data2",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_preBytes",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_postBytes",
									"type": "bytes"
								}
							],
							"name": "getData",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/demo2.sol\":38:4527  contract demo2 {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/demo2.sol\":60:129  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x2e\n  dup2\n  mstore\n  0x20\n  add\n  data_4887836e294a2761413359597244d307bbe3f94827f6160d9e1a399e00e2d1be\n  0x2e\n  swap2\n  codecopy\n  0x00\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/demo2.sol\":136:183  bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\" */\n  sstore(0x01, 0x4c45484f4e47564f776a6e66766a3377656838764b4a00000000000000000000)\n    /* \"contracts/demo2.sol\":38:4527  contract demo2 {\r... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_3:\n    /* \"contracts/demo2.sol\":38:4527  contract demo2 {\r... */\n  pop\n  jump(tag_4)\ntag_2:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_6\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_5)\ntag_6:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_5\n  jumpi\n  swap2\n  dup3\n  add\ntag_7:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_8\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_7)\ntag_8:\ntag_5:\n  pop\n  swap1\n  pop\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n  swap1\n  jump\t// out\ntag_10:\n  tag_11\n  swap2\n  swap1\ntag_12:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_13\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_12)\ntag_13:\n  pop\n  swap1\n  jump\ntag_11:\n  swap1\n  jump\t// out\ntag_4:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_4887836e294a2761413359597244d307bbe3f94827f6160d9e1a399e00e2d1be 4e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f\n\nsub_0: assembly {\n        /* \"contracts/demo2.sol\":38:4527  contract demo2 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"contracts/demo2.sol\":38:4527  contract demo2 {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9ffd85c4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xba654d05\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe3a7fd75\n      eq\n      tag_5\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/demo2.sol\":60:129  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_8:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_8)\n    tag_10:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/demo2.sol\":60:129  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_11\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_11:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":192:351  function getData(bytes memory _preBytes, bytes memory _postBytes) public view returns(bytes memory) {\r... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_13:\n        /* \"contracts/demo2.sol\":192:351  function getData(bytes memory _preBytes, bytes memory _postBytes) public view returns(bytes memory) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":27:38   */\n      0x0100000000\n        /* \"--CODEGEN--\":14:25   */\n      dup2\n        /* \"--CODEGEN--\":11:39   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":52:53   */\n      0x00\n        /* \"--CODEGEN--\":49:50   */\n      dup1\n        /* \"--CODEGEN--\":42:54   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_14:\n        /* \"contracts/demo2.sol\":192:351  function getData(bytes memory _preBytes, bytes memory _postBytes) public view returns(bytes memory) {\r... */\n      dup3\n      add\n        /* \"--CODEGEN--\":41:50   */\n      dup4\n        /* \"--CODEGEN--\":34:38   */\n      0x20\n        /* \"--CODEGEN--\":18:32   */\n      dup3\n        /* \"--CODEGEN--\":14:39   */\n      add\n        /* \"--CODEGEN--\":11:51   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":64:65   */\n      0x00\n        /* \"--CODEGEN--\":61:62   */\n      dup1\n        /* \"--CODEGEN--\":54:66   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_15:\n        /* \"contracts/demo2.sol\":192:351  function getData(bytes memory _preBytes, bytes memory _postBytes) public view returns(bytes memory) {\r... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_16:\n        /* \"contracts/demo2.sol\":192:351  function getData(bytes memory _preBytes, bytes memory _postBytes) public view returns(bytes memory) {\r... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/demo2.sol\":192:351  function getData(bytes memory _preBytes, bytes memory _postBytes) public view returns(bytes memory) {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":27:38   */\n      0x0100000000\n        /* \"--CODEGEN--\":14:25   */\n      dup2\n        /* \"--CODEGEN--\":11:39   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":52:53   */\n      0x00\n        /* \"--CODEGEN--\":49:50   */\n      dup1\n        /* \"--CODEGEN--\":42:54   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_17:\n        /* \"contracts/demo2.sol\":192:351  function getData(bytes memory _preBytes, bytes memory _postBytes) public view returns(bytes memory) {\r... */\n      dup3\n      add\n        /* \"--CODEGEN--\":41:50   */\n      dup4\n        /* \"--CODEGEN--\":34:38   */\n      0x20\n        /* \"--CODEGEN--\":18:32   */\n      dup3\n        /* \"--CODEGEN--\":14:39   */\n      add\n        /* \"--CODEGEN--\":11:51   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":64:65   */\n      0x00\n        /* \"--CODEGEN--\":61:62   */\n      dup1\n        /* \"--CODEGEN--\":54:66   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_18:\n        /* \"contracts/demo2.sol\":192:351  function getData(bytes memory _preBytes, bytes memory _postBytes) public view returns(bytes memory) {\r... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_19:\n        /* \"contracts/demo2.sol\":192:351  function getData(bytes memory _preBytes, bytes memory _postBytes) public view returns(bytes memory) {\r... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/demo2.sol\":192:351  function getData(bytes memory _preBytes, bytes memory _postBytes) public view returns(bytes memory) {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_20\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_21:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_21)\n    tag_23:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/demo2.sol\":192:351  function getData(bytes memory _preBytes, bytes memory _postBytes) public view returns(bytes memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_24\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_24:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":136:183  bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\" */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":60:129  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_7:\n      0x00\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_27\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_28\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_27)\n    tag_28:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_29:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_29\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_27:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/demo2.sol\":192:351  function getData(bytes memory _preBytes, bytes memory _postBytes) public view returns(bytes memory) {\r... */\n    tag_20:\n        /* \"contracts/demo2.sol\":278:290  bytes memory */\n      0x60\n        /* \"contracts/demo2.sol\":310:343  mergeBytes(_preBytes, _postBytes) */\n      tag_31\n        /* \"contracts/demo2.sol\":321:330  _preBytes */\n      dup4\n        /* \"contracts/demo2.sol\":332:342  _postBytes */\n      dup4\n        /* \"contracts/demo2.sol\":310:320  mergeBytes */\n      tag_32\n        /* \"contracts/demo2.sol\":310:343  mergeBytes(_preBytes, _postBytes) */\n      jump\t// in\n    tag_31:\n        /* \"contracts/demo2.sol\":303:343  return mergeBytes(_preBytes, _postBytes) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":192:351  function getData(bytes memory _preBytes, bytes memory _postBytes) public view returns(bytes memory) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/demo2.sol\":136:183  bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\" */\n    tag_26:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/demo2.sol\":359:3274  function mergeBytes(\r... */\n    tag_32:\n        /* \"contracts/demo2.sol\":491:503  bytes memory */\n      0x60\n        /* \"contracts/demo2.sol\":521:543  bytes memory tempBytes */\n      dup1\n        /* \"contracts/demo2.sol\":723:727  0x40 */\n      0x40\n        /* \"contracts/demo2.sol\":717:728  mload(0x40) */\n      mload\n        /* \"contracts/demo2.sol\":704:728  tempBytes := mload(0x40) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":876:885  _preBytes */\n      dup4\n        /* \"contracts/demo2.sol\":870:886  mload(_preBytes) */\n      mload\n        /* \"contracts/demo2.sol\":918:924  length */\n      dup1\n        /* \"contracts/demo2.sol\":907:916  tempBytes */\n      dup3\n        /* \"contracts/demo2.sol\":900:925  mstore(tempBytes, length) */\n      mstore\n        /* \"contracts/demo2.sol\":1153:1157  0x20 */\n      0x20\n        /* \"contracts/demo2.sol\":1142:1151  tempBytes */\n      dup3\n        /* \"contracts/demo2.sol\":1138:1158  add(tempBytes, 0x20) */\n      add\n        /* \"contracts/demo2.sol\":1297:1303  length */\n      dup2\n        /* \"contracts/demo2.sol\":1293:1295  mc */\n      dup2\n        /* \"contracts/demo2.sol\":1289:1304  add(mc, length) */\n      add\n        /* \"contracts/demo2.sol\":1488:1492  0x20 */\n      0x20\n        /* \"contracts/demo2.sol\":1477:1486  _preBytes */\n      dup8\n        /* \"contracts/demo2.sol\":1473:1493  add(_preBytes, 0x20) */\n      add\n        /* \"contracts/demo2.sol\":1320:1837  for {\r... */\n    tag_34:\n        /* \"contracts/demo2.sol\":1516:1519  end */\n      dup2\n        /* \"contracts/demo2.sol\":1512:1514  mc */\n      dup4\n        /* \"contracts/demo2.sol\":1509:1520  lt(mc, end) */\n      lt\n        /* \"contracts/demo2.sol\":1320:1837  for {\r... */\n      iszero\n      tag_36\n      jumpi\n        /* \"contracts/demo2.sol\":1818:1820  cc */\n      dup1\n        /* \"contracts/demo2.sol\":1812:1821  mload(cc) */\n      mload\n        /* \"contracts/demo2.sol\":1808:1810  mc */\n      dup4\n        /* \"contracts/demo2.sol\":1801:1822  mstore(mc, mload(cc)) */\n      mstore\n        /* \"contracts/demo2.sol\":1621:1625  0x20 */\n      0x20\n        /* \"contracts/demo2.sol\":1617:1619  mc */\n      dup4\n        /* \"contracts/demo2.sol\":1613:1626  add(mc, 0x20) */\n      add\n        /* \"contracts/demo2.sol\":1607:1626  mc := add(mc, 0x20) */\n      swap3\n      pop\n        /* \"contracts/demo2.sol\":1658:1662  0x20 */\n      0x20\n        /* \"contracts/demo2.sol\":1654:1656  cc */\n      dup2\n        /* \"contracts/demo2.sol\":1650:1663  add(cc, 0x20) */\n      add\n        /* \"contracts/demo2.sol\":1644:1663  cc := add(cc, 0x20) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":1320:1837  for {\r... */\n      jump(tag_34)\n    tag_36:\n        /* \"contracts/demo2.sol\":1324:1508  {\r... */\n      pop\n        /* \"contracts/demo2.sol\":2047:2057  _postBytes */\n      dup6\n        /* \"contracts/demo2.sol\":2041:2058  mload(_postBytes) */\n      mload\n        /* \"contracts/demo2.sol\":2031:2058  length := mload(_postBytes) */\n      swap3\n      pop\n        /* \"contracts/demo2.sol\":2108:2117  tempBytes */\n      dup4\n        /* \"contracts/demo2.sol\":2102:2118  mload(tempBytes) */\n      mload\n        /* \"contracts/demo2.sol\":2094:2100  length */\n      dup4\n        /* \"contracts/demo2.sol\":2090:2119  add(length, mload(tempBytes)) */\n      add\n        /* \"contracts/demo2.sol\":2079:2088  tempBytes */\n      dup5\n        /* \"contracts/demo2.sol\":2072:2120  mstore(tempBytes, add(length, mload(tempBytes))) */\n      mstore\n        /* \"contracts/demo2.sol\":2260:2263  end */\n      dup1\n        /* \"contracts/demo2.sol\":2254:2263  mc := end */\n      swap2\n      pop\n        /* \"contracts/demo2.sol\":2400:2406  length */\n      dup3\n        /* \"contracts/demo2.sol\":2396:2398  mc */\n      dup3\n        /* \"contracts/demo2.sol\":2392:2407  add(mc, length) */\n      add\n        /* \"contracts/demo2.sol\":2385:2407  end := add(mc, length) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":2472:2476  0x20 */\n      0x20\n        /* \"contracts/demo2.sol\":2460:2470  _postBytes */\n      dup7\n        /* \"contracts/demo2.sol\":2456:2477  add(_postBytes, 0x20) */\n      add\n        /* \"contracts/demo2.sol\":2423:2651  for {\r... */\n    tag_37:\n        /* \"contracts/demo2.sol\":2500:2503  end */\n      dup2\n        /* \"contracts/demo2.sol\":2496:2498  mc */\n      dup4\n        /* \"contracts/demo2.sol\":2493:2504  lt(mc, end) */\n      lt\n        /* \"contracts/demo2.sol\":2423:2651  for {\r... */\n      iszero\n      tag_39\n      jumpi\n        /* \"contracts/demo2.sol\":2632:2634  cc */\n      dup1\n        /* \"contracts/demo2.sol\":2626:2635  mload(cc) */\n      mload\n        /* \"contracts/demo2.sol\":2622:2624  mc */\n      dup4\n        /* \"contracts/demo2.sol\":2615:2636  mstore(mc, mload(cc)) */\n      mstore\n        /* \"contracts/demo2.sol\":2538:2542  0x20 */\n      0x20\n        /* \"contracts/demo2.sol\":2534:2536  mc */\n      dup4\n        /* \"contracts/demo2.sol\":2530:2543  add(mc, 0x20) */\n      add\n        /* \"contracts/demo2.sol\":2524:2543  mc := add(mc, 0x20) */\n      swap3\n      pop\n        /* \"contracts/demo2.sol\":2575:2579  0x20 */\n      0x20\n        /* \"contracts/demo2.sol\":2571:2573  cc */\n      dup2\n        /* \"contracts/demo2.sol\":2567:2580  add(cc, 0x20) */\n      add\n        /* \"contracts/demo2.sol\":2561:2580  cc := add(cc, 0x20) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":2423:2651  for {\r... */\n      jump(tag_37)\n    tag_39:\n        /* \"contracts/demo2.sol\":2427:2492  {\r... */\n      pop\n        /* \"contracts/demo2.sol\":3169:3171  31 */\n      0x1f\n        /* \"contracts/demo2.sol\":3165:3172  not(31) */\n      not\n        /* \"contracts/demo2.sol\":3147:3149  31 */\n      0x1f\n        /* \"contracts/demo2.sol\":3132:3141  _preBytes */\n      dup9\n        /* \"contracts/demo2.sol\":3126:3142  mload(_preBytes) */\n      mload\n        /* \"contracts/demo2.sol\":3118:3124  length */\n      dup6\n        /* \"contracts/demo2.sol\":3114:3143  add(length, mload(_preBytes)) */\n      add\n        /* \"contracts/demo2.sol\":3107:3144  iszero(add(length, mload(_preBytes))) */\n      iszero\n        /* \"contracts/demo2.sol\":3102:3105  end */\n      dup4\n        /* \"contracts/demo2.sol\":3098:3145  add(end, iszero(add(length, mload(_preBytes)))) */\n      add\n        /* \"contracts/demo2.sol\":3094:3150  add(add(end, iszero(add(length, mload(_preBytes)))), 31) */\n      add\n        /* \"contracts/demo2.sol\":3076:3226  and(\r... */\n      and\n        /* \"contracts/demo2.sol\":3070:3074  0x40 */\n      0x40\n        /* \"contracts/demo2.sol\":3063:3227  mstore(0x40, and(\r... */\n      mstore\n        /* \"contracts/demo2.sol\":565:3238  {\r... */\n      pop\n      pop\n      pop\n        /* \"contracts/demo2.sol\":3257:3266  tempBytes */\n      dup1\n        /* \"contracts/demo2.sol\":3250:3266  return tempBytes */\n      swap2\n      pop\n      pop\n        /* \"contracts/demo2.sol\":359:3274  function mergeBytes(\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cbbc98711e2584ccca89a7d20cda128749b2010db6c3adb9b621fd325519bdae64736f6c63430006040033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526040518060600160405280602e8152602001610547602e913960009080519060200190610032929190610069565b507f4c45484f4e47564f776a6e66766a3377656838764b4a0000000000000000000060015534801561006357600080fd5b5061010e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100aa57805160ff19168380011785556100d8565b828001600101855582156100d8579182015b828111156100d75782518255916020019190600101906100bc565b5b5090506100e591906100e9565b5090565b61010b91905b808211156101075760008160009055506001016100ef565b5090565b90565b61042a8061011d6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80639ffd85c414610046578063ba654d05146100c9578063e3a7fd7514610294575b600080fd5b61004e6102b2565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561008e578082015181840152602081019050610073565b50505050905090810190601f1680156100bb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610219600480360360408110156100df57600080fd5b81019080803590602001906401000000008111156100fc57600080fd5b82018360208201111561010e57600080fd5b8035906020019184600183028401116401000000008311171561013057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561019357600080fd5b8201836020820111156101a557600080fd5b803590602001918460018302840111640100000000831117156101c757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610350565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561025957808201518184015260208101905061023e565b50505050905090810190601f1680156102865780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61029c610364565b6040518082815260200191505060405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103485780601f1061031d57610100808354040283529160200191610348565b820191906000526020600020905b81548152906001019060200180831161032b57829003601f168201915b505050505081565b606061035c838361036a565b905092915050565b60015481565b6060806040519050835180825260208201818101602087015b818310156103a05780518352602083019250602081019050610383565b50855192508351830184528091508282019050602086015b818310156103d557805183526020830192506020810190506103b8565b50601f19601f885185011583010116604052505050809150509291505056fea2646970667358221220cbbc98711e2584ccca89a7d20cda128749b2010db6c3adb9b621fd325519bdae64736f6c634300060400334e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x547 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x32 SWAP3 SWAP2 SWAP1 PUSH2 0x69 JUMP JUMPDEST POP PUSH32 0x4C45484F4E47564F776A6E66766A3377656838764B4A00000000000000000000 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10E JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0xAA JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xD8 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xD8 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xD7 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xBC JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xE9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x10B SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x107 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xEF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x42A DUP1 PUSH2 0x11D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9FFD85C4 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBA654D05 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xE3A7FD75 EQ PUSH2 0x294 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x2B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x73 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xBB JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x259 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x23E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x286 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x348 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x348 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x32B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x35C DUP4 DUP4 PUSH2 0x36A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP1 POP DUP4 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 DUP2 ADD PUSH1 0x20 DUP8 ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x3A0 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x383 JUMP JUMPDEST POP DUP6 MLOAD SWAP3 POP DUP4 MLOAD DUP4 ADD DUP5 MSTORE DUP1 SWAP2 POP DUP3 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP7 ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x3D5 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3B8 JUMP JUMPDEST POP PUSH1 0x1F NOT PUSH1 0x1F DUP9 MLOAD DUP6 ADD ISZERO DUP4 ADD ADD AND PUSH1 0x40 MSTORE POP POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xBC SWAP9 PUSH18 0x1E2584CCCA89A7D20CDA128749B2010DB6C3 0xAD 0xB9 0xB6 0x21 REVERT ORIGIN SSTORE NOT 0xBD 0xAE PUSH5 0x736F6C6343 STOP MOD DIV STOP CALLER 0x4E COINBASE 0x4C GASLIMIT 0x48 0x48 0x4A MSTORE8 SELFBALANCE DIFFICULTY MSTORE8 DIFFICULTY SELFBALANCE 0x48 0x4A MSTORE8 DIFFICULTY 0x48 MSTORE8 SSTORE 0x48 DIFFICULTY 0x4A MSTORE8 0x48 DIFFICULTY 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 DIFFICULTY MSTORE8 0x4A DIFFICULTY 0x48 0x4A 0x4F 0x4E SELFBALANCE JUMP 0x4F ",
							"sourceMap": "38:4489:0:-:0;;;60:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;136:47;;;38:4489;5:9:-1;2:2;;;27:1;24;17:12;2:2;38:4489:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80639ffd85c414610046578063ba654d05146100c9578063e3a7fd7514610294575b600080fd5b61004e6102b2565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561008e578082015181840152602081019050610073565b50505050905090810190601f1680156100bb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610219600480360360408110156100df57600080fd5b81019080803590602001906401000000008111156100fc57600080fd5b82018360208201111561010e57600080fd5b8035906020019184600183028401116401000000008311171561013057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561019357600080fd5b8201836020820111156101a557600080fd5b803590602001918460018302840111640100000000831117156101c757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610350565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561025957808201518184015260208101905061023e565b50505050905090810190601f1680156102865780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61029c610364565b6040518082815260200191505060405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103485780601f1061031d57610100808354040283529160200191610348565b820191906000526020600020905b81548152906001019060200180831161032b57829003601f168201915b505050505081565b606061035c838361036a565b905092915050565b60015481565b6060806040519050835180825260208201818101602087015b818310156103a05780518352602083019250602081019050610383565b50855192508351830184528091508282019050602086015b818310156103d557805183526020830192506020810190506103b8565b50601f19601f885185011583010116604052505050809150509291505056fea2646970667358221220cbbc98711e2584ccca89a7d20cda128749b2010db6c3adb9b621fd325519bdae64736f6c63430006040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9FFD85C4 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBA654D05 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xE3A7FD75 EQ PUSH2 0x294 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x2B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x73 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xBB JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x259 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x23E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x286 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x348 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x348 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x32B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x35C DUP4 DUP4 PUSH2 0x36A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP1 POP DUP4 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 DUP2 ADD PUSH1 0x20 DUP8 ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x3A0 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x383 JUMP JUMPDEST POP DUP6 MLOAD SWAP3 POP DUP4 MLOAD DUP4 ADD DUP5 MSTORE DUP1 SWAP2 POP DUP3 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP7 ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x3D5 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3B8 JUMP JUMPDEST POP PUSH1 0x1F NOT PUSH1 0x1F DUP9 MLOAD DUP6 ADD ISZERO DUP4 ADD ADD AND PUSH1 0x40 MSTORE POP POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xBC SWAP9 PUSH18 0x1E2584CCCA89A7D20CDA128749B2010DB6C3 0xAD 0xB9 0xB6 0x21 REVERT ORIGIN SSTORE NOT 0xBD 0xAE PUSH5 0x736F6C6343 STOP MOD DIV STOP CALLER ",
							"sourceMap": "38:4489:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;38:4489:0;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;60:69:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;60:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;192:159;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;192:159:0;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;192:159:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;192:159:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;192:159:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;192:159:0;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;192:159:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;192:159:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;192:159:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;192:159:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;192:159:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;136:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;60:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;192:159::-;278:12;310:33;321:9;332:10;310;:33::i;:::-;303:40;;192:159;;;;:::o;136:47::-;;;;:::o;359:2915::-;491:12;521:22;723:4;717:11;704:24;;876:9;870:16;918:6;907:9;900:25;1153:4;1142:9;1138:20;1297:6;1293:2;1289:15;1488:4;1477:9;1473:20;1320:517;1516:3;1512:2;1509:11;1320:517;;;1818:2;1812:9;1808:2;1801:21;1621:4;1617:2;1613:13;1607:19;;1658:4;1654:2;1650:13;1644:19;;1320:517;;;1324:184;2047:10;2041:17;2031:27;;2108:9;2102:16;2094:6;2090:29;2079:9;2072:48;2260:3;2254:9;;2400:6;2396:2;2392:15;2385:22;;2472:4;2460:10;2456:21;2423:228;2500:3;2496:2;2493:11;2423:228;;;2632:2;2626:9;2622:2;2615:21;2538:4;2534:2;2530:13;2524:19;;2575:4;2571:2;2567:13;2561:19;;2423:228;;;2427:65;3169:2;3165:7;3147:2;3132:9;3126:16;3118:6;3114:29;3107:37;3102:3;3098:47;3094:56;3076:150;3070:4;3063:164;565:2673;;;3257:9;3250:16;;;359:2915;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "213200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"data1()": "infinite",
								"data2()": "1027",
								"getData(bytes,bytes)": "infinite"
							},
							"internal": {
								"encodeLength(uint256,uint256)": "infinite",
								"mergeBytes(bytes memory,bytes memory)": "infinite",
								"toBinary(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "PUSH",
									"source": 0,
									"value": "2E"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "PUSH data",
									"source": 0,
									"value": "4887836E294A2761413359597244D307BBE3F94827F6160D9E1A399E00E2D1BE"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "PUSH",
									"source": 0,
									"value": "2E"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 136,
									"end": 183,
									"name": "PUSH",
									"source": 0,
									"value": "4C45484F4E47564F776A6E66766A3377656838764B4A00000000000000000000"
								},
								{
									"begin": 136,
									"end": 183,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 136,
									"end": 183,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38,
									"end": 4527,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cbbc98711e2584ccca89a7d20cda128749b2010db6c3adb9b621fd325519bdae64736f6c63430006040033",
									".code": [
										{
											"begin": 38,
											"end": 4527,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "PUSH",
											"source": 0,
											"value": "9FFD85C4"
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "PUSH",
											"source": 0,
											"value": "BA654D05"
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "PUSH",
											"source": 0,
											"value": "E3A7FD75"
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38,
											"end": 4527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 60,
											"end": 129,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "8"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "10"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "8"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "10"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "13"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "13"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 14,
											"end": 25,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 11,
											"end": 39,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "14"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 42,
											"end": 54,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "14"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41,
											"end": 50,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 34,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 18,
											"end": 32,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 39,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 64,
											"end": 65,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 62,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 54,
											"end": 66,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "16"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "16"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 14,
											"end": 25,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 11,
											"end": 39,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 42,
											"end": 54,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41,
											"end": 50,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 34,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 18,
											"end": 32,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 39,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "18"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 64,
											"end": 65,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 62,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 54,
											"end": 66,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "18"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "23"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "23"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 136,
											"end": 183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 136,
											"end": 183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 136,
											"end": 183,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 136,
											"end": 183,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 136,
											"end": 183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 136,
											"end": 183,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 136,
											"end": 183,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 136,
											"end": 183,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 290,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 310,
											"end": 343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 321,
											"end": 330,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 332,
											"end": 342,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 310,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 310,
											"end": 343,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 310,
											"end": 343,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 310,
											"end": 343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 303,
											"end": 343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 303,
											"end": 343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 351,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 136,
											"end": 183,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 136,
											"end": 183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 136,
											"end": 183,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 3274,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 359,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 491,
											"end": 503,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 521,
											"end": 543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 723,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 717,
											"end": 728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 704,
											"end": 728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 876,
											"end": 885,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 870,
											"end": 886,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 918,
											"end": 924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 916,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 900,
											"end": 925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1153,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1142,
											"end": 1151,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1138,
											"end": 1158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1320,
											"end": 1837,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1320,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1520,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1320,
											"end": 1837,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1320,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1320,
											"end": 1837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1812,
											"end": 1821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1810,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1822,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1617,
											"end": 1619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1613,
											"end": 1626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1607,
											"end": 1626,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1607,
											"end": 1626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1658,
											"end": 1662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1656,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 1663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1644,
											"end": 1663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1644,
											"end": 1663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1320,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1320,
											"end": 1837,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1320,
											"end": 1837,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1320,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2058,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2117,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2118,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2094,
											"end": 2100,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2088,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2400,
											"end": 2406,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2396,
											"end": 2398,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2476,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2470,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2456,
											"end": 2477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2651,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2423,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2498,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2493,
											"end": 2504,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2423,
											"end": 2651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2624,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2615,
											"end": 2636,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2538,
											"end": 2542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2534,
											"end": 2536,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2543,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2524,
											"end": 2543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2571,
											"end": 2573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2567,
											"end": 2580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2423,
											"end": 2651,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2651,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2423,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2427,
											"end": 2492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3169,
											"end": 3171,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3165,
											"end": 3172,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3149,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3132,
											"end": 3141,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3126,
											"end": 3142,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3124,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3114,
											"end": 3143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3144,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3105,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3098,
											"end": 3145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3226,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3074,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3063,
											"end": 3227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 565,
											"end": 3238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 565,
											"end": 3238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 565,
											"end": 3238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3257,
											"end": 3266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 3266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 3266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 3266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 359,
											"end": 3274,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 359,
											"end": 3274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 359,
											"end": 3274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 359,
											"end": 3274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 359,
											"end": 3274,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								},
								"4887836E294A2761413359597244D307BBE3F94827F6160D9E1A399E00E2D1BE": "4e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f"
							}
						},
						"methodIdentifiers": {
							"data1()": "9ffd85c4",
							"data2()": "e3a7fd75",
							"getData(bytes,bytes)": "ba654d05"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"data1\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data2\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_preBytes\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_postBytes\",\"type\":\"bytes\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/demo2.sol\":\"demo2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/demo2.sol\":{\"keccak256\":\"0x83b264e41f87f70a02f011197b43c1c2259aa6c490d513bdbe226b526ccec828\",\"urls\":[\"bzz-raw://99da619f065c209d5743aaa6a0cd071173d2a76568d9440f847ee421435074a9\",\"dweb:/ipfs/QmcHoCGMhtYDU1QwgGSkAp9DTFJbB2BqJbfAShvEy8Khbj\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "contracts/demo2.sol:7:5: Warning: Function state mutability can be restricted to pure\n    function getData(bytes memory _preBytes, bytes memory _postBytes) public view returns(bytes memory) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 351,
					"file": "contracts/demo2.sol",
					"start": 192
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/demo2.sol": {
				"ast": {
					"absolutePath": "contracts/demo2.sol",
					"exportedSymbols": {
						"demo2": [
							192
						]
					},
					"id": 193,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">",
								"0.4",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4:30:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 192,
							"linearizedBaseContracts": [
								192
							],
							"name": "demo2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9ffd85c4",
									"id": 4,
									"name": "data1",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 192,
									"src": "60:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 2,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "60:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "81:48:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_4887836e294a2761413359597244d307bbe3f94827f6160d9e1a399e00e2d1be",
											"typeString": "literal_string \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\""
										},
										"value": "NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e3a7fd75",
									"id": 7,
									"name": "data2",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 192,
									"src": "136:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 5,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "136:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4c45484f4e47564f776a6e66766a3377656838764b4a",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "159:24:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_456403c9720da4fa7d7375867b84ba5ad32318599c72d3314f61b294b0c7ff33",
											"typeString": "literal_string \"LEHONGVOwjnfvj3weh8vKJ\""
										},
										"value": "LEHONGVOwjnfvj3weh8vKJ"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "292:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 17,
															"name": "_preBytes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "321:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 18,
															"name": "_postBytes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "332:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 16,
														"name": "mergeBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "310:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,bytes memory) pure returns (bytes memory)"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "310:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 15,
												"id": 20,
												"nodeType": "Return",
												"src": "303:40:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "ba654d05",
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "_preBytes",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 22,
												"src": "209:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 8,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "209:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"name": "_postBytes",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 22,
												"src": "233:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 10,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "233:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "208:49:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 22,
												"src": "278:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "278:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "277:14:0"
									},
									"scope": 192,
									"src": "192:159:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "510:2764:0",
										"statements": [
											{
												"assignments": [
													32
												],
												"declarations": [
													{
														"constant": false,
														"id": 32,
														"name": "tempBytes",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 37,
														"src": "521:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 31,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "521:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 33,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "521:22:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "565:2673:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "704:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "723:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "717:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:11:0"
															},
															"variableNames": [
																{
																	"name": "tempBytes",
																	"nodeType": "YulIdentifier",
																	"src": "704:9:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "856:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "_preBytes",
																		"nodeType": "YulIdentifier",
																		"src": "876:9:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "870:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "870:16:0"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "860:6:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tempBytes",
																		"nodeType": "YulIdentifier",
																		"src": "907:9:0"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "918:6:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "900:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "900:25:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "900:25:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1128:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "tempBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1142:9:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1153:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1138:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:20:0"
															},
															"variables": [
																{
																	"name": "mc",
																	"nodeType": "YulTypedName",
																	"src": "1132:2:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1278:26:0",
															"value": {
																"arguments": [
																	{
																		"name": "mc",
																		"nodeType": "YulIdentifier",
																		"src": "1293:2:0"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1297:6:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1289:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1289:15:0"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "1282:3:0",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1679:158:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "mc",
																					"nodeType": "YulIdentifier",
																					"src": "1808:2:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "cc",
																							"nodeType": "YulIdentifier",
																							"src": "1818:2:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1812:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1812:9:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1801:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1801:21:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1801:21:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "mc",
																		"nodeType": "YulIdentifier",
																		"src": "1512:2:0"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1516:3:0"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1509:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1509:11:0"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1521:157:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1607:19:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "mc",
																					"nodeType": "YulIdentifier",
																					"src": "1617:2:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1621:4:0",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1613:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1613:13:0"
																		},
																		"variableNames": [
																			{
																				"name": "mc",
																				"nodeType": "YulIdentifier",
																				"src": "1607:2:0"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1644:19:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "cc",
																					"nodeType": "YulIdentifier",
																					"src": "1654:2:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1658:4:0",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1650:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1650:13:0"
																		},
																		"variableNames": [
																			{
																				"name": "cc",
																				"nodeType": "YulIdentifier",
																				"src": "1644:2:0"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1324:184:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1463:30:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "_preBytes",
																					"nodeType": "YulIdentifier",
																					"src": "1477:9:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1488:4:0",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1473:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1473:20:0"
																		},
																		"variables": [
																			{
																				"name": "cc",
																				"nodeType": "YulTypedName",
																				"src": "1467:2:0",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1320:517:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2031:27:0",
															"value": {
																"arguments": [
																	{
																		"name": "_postBytes",
																		"nodeType": "YulIdentifier",
																		"src": "2047:10:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2041:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2041:17:0"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2031:6:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tempBytes",
																		"nodeType": "YulIdentifier",
																		"src": "2079:9:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2094:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tempBytes",
																						"nodeType": "YulIdentifier",
																						"src": "2108:9:0"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "2102:5:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2102:16:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2090:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2090:29:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2072:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2072:48:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2072:48:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2254:9:0",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "2260:3:0"
															},
															"variableNames": [
																{
																	"name": "mc",
																	"nodeType": "YulIdentifier",
																	"src": "2254:2:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2385:22:0",
															"value": {
																"arguments": [
																	{
																		"name": "mc",
																		"nodeType": "YulIdentifier",
																		"src": "2396:2:0"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2400:6:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2392:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2392:15:0"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2385:3:0"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2596:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "mc",
																					"nodeType": "YulIdentifier",
																					"src": "2622:2:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "cc",
																							"nodeType": "YulIdentifier",
																							"src": "2632:2:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2626:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2626:9:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2615:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2615:21:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2615:21:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "mc",
																		"nodeType": "YulIdentifier",
																		"src": "2496:2:0"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2500:3:0"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2493:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2493:11:0"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2505:90:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2524:19:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "mc",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2538:4:0",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2530:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2530:13:0"
																		},
																		"variableNames": [
																			{
																				"name": "mc",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:0"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2561:19:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "cc",
																					"nodeType": "YulIdentifier",
																					"src": "2571:2:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2575:4:0",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2567:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2567:13:0"
																		},
																		"variableNames": [
																			{
																				"name": "cc",
																				"nodeType": "YulIdentifier",
																				"src": "2561:2:0"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2427:65:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2446:31:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "_postBytes",
																					"nodeType": "YulIdentifier",
																					"src": "2460:10:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2472:4:0",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2456:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2456:21:0"
																		},
																		"variables": [
																			{
																				"name": "cc",
																				"nodeType": "YulTypedName",
																				"src": "2450:2:0",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2423:228:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3070:4:0",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "end",
																								"nodeType": "YulIdentifier",
																								"src": "3102:3:0"
																							},
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "length",
																												"nodeType": "YulIdentifier",
																												"src": "3118:6:0"
																											},
																											{
																												"arguments": [
																													{
																														"name": "_preBytes",
																														"nodeType": "YulIdentifier",
																														"src": "3132:9:0"
																													}
																												],
																												"functionName": {
																													"name": "mload",
																													"nodeType": "YulIdentifier",
																													"src": "3126:5:0"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3126:16:0"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3114:3:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3114:29:0"
																									}
																								],
																								"functionName": {
																									"name": "iszero",
																									"nodeType": "YulIdentifier",
																									"src": "3107:6:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3107:37:0"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3098:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3098:47:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3147:2:0",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3094:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3094:56:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3169:2:0",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3165:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3165:7:0"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3076:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3076:150:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3063:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3063:164:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3063:164:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 26,
														"isOffset": false,
														"isSlot": false,
														"src": "2047:10:0",
														"valueSize": 1
													},
													{
														"declaration": 26,
														"isOffset": false,
														"isSlot": false,
														"src": "2460:10:0",
														"valueSize": 1
													},
													{
														"declaration": 24,
														"isOffset": false,
														"isSlot": false,
														"src": "1477:9:0",
														"valueSize": 1
													},
													{
														"declaration": 24,
														"isOffset": false,
														"isSlot": false,
														"src": "3132:9:0",
														"valueSize": 1
													},
													{
														"declaration": 24,
														"isOffset": false,
														"isSlot": false,
														"src": "876:9:0",
														"valueSize": 1
													},
													{
														"declaration": 32,
														"isOffset": false,
														"isSlot": false,
														"src": "1142:9:0",
														"valueSize": 1
													},
													{
														"declaration": 32,
														"isOffset": false,
														"isSlot": false,
														"src": "2079:9:0",
														"valueSize": 1
													},
													{
														"declaration": 32,
														"isOffset": false,
														"isSlot": false,
														"src": "2108:9:0",
														"valueSize": 1
													},
													{
														"declaration": 32,
														"isOffset": false,
														"isSlot": false,
														"src": "704:9:0",
														"valueSize": 1
													},
													{
														"declaration": 32,
														"isOffset": false,
														"isSlot": false,
														"src": "907:9:0",
														"valueSize": 1
													}
												],
												"id": 34,
												"nodeType": "InlineAssembly",
												"src": "556:2682:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 35,
													"name": "tempBytes",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 32,
													"src": "3257:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 30,
												"id": 36,
												"nodeType": "Return",
												"src": "3250:16:0"
											}
										]
									},
									"documentation": null,
									"id": 38,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mergeBytes",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "_preBytes",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 38,
												"src": "389:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 23,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "389:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"name": "_postBytes",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 38,
												"src": "422:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 25,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "422:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "378:74:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 38,
												"src": "491:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 28,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "491:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "490:14:0"
									},
									"scope": 192,
									"src": "359:2915:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "3367:353:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 48,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "3386:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "323536",
																	"id": 49,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3395:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_256_by_1",
																		"typeString": "int_const 256"
																	},
																	"value": "256"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "38",
																	"id": 50,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3400:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "3395:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																}
															},
															"src": "3386:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "696e70757420746f6f206c6f6e67",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3403:16:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a873a7082baf03a0e4b19c621e1c72f66968b3369db2e0887e4b7655ebd5893",
																"typeString": "literal_string \"input too long\""
															},
															"value": "input too long"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a873a7082baf03a0e4b19c621e1c72f66968b3369db2e0887e4b7655ebd5893",
																"typeString": "literal_string \"input too long\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3378:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3378:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "3378:42:0"
											},
											{
												"assignments": [
													57
												],
												"declarations": [
													{
														"constant": false,
														"id": 57,
														"name": "rs",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 112,
														"src": "3431:15:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 56,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3431:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 62,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "31",
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3459:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3449:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 58,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3453:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3449:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3431:30:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 63,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "3476:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3535",
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3486:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_55_by_1",
															"typeString": "int_const 55"
														},
														"value": "55"
													},
													"src": "3476:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 83,
												"nodeType": "IfStatement",
												"src": "3472:105:0",
												"trueBody": {
													"id": 82,
													"nodeType": "Block",
													"src": "3490:87:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 66,
																		"name": "rs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 57,
																		"src": "3505:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 68,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3508:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3505:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 75,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 73,
																						"name": "length",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 40,
																						"src": "3524:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 74,
																						"name": "offset",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 42,
																						"src": "3533:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3524:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 72,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3518:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 71,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "3518:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 76,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3518:22:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 70,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3513:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 69,
																			"name": "byte",
																			"nodeType": "ElementaryTypeName",
																			"src": "3513:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 77,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3513:28:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "3505:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 79,
															"nodeType": "ExpressionStatement",
															"src": "3505:36:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 80,
																"name": "rs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 57,
																"src": "3563:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 46,
															"id": 81,
															"nodeType": "Return",
															"src": "3556:9:0"
														}
													]
												}
											},
											{
												"assignments": [
													85
												],
												"declarations": [
													{
														"constant": false,
														"id": 85,
														"name": "bl",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 112,
														"src": "3587:15:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 84,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3587:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 89,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 87,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "3614:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 86,
														"name": "toBinary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "3605:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3605:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3587:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 90,
															"name": "rs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "3632:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 92,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3635:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3632:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 97,
																					"name": "bl",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 85,
																					"src": "3651:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 98,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3651:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 99,
																				"name": "offset",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 42,
																				"src": "3663:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3651:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "3535",
																			"id": 101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3672:2:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_55_by_1",
																				"typeString": "int_const 55"
																			},
																			"value": "55"
																		},
																		"src": "3651:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 96,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3645:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 95,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "3645:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3645:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3640:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes1_$",
																"typeString": "type(bytes1)"
															},
															"typeName": {
																"id": 93,
																"name": "byte",
																"nodeType": "ElementaryTypeName",
																"src": "3640:4:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3640:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"src": "3632:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "3632:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 108,
															"name": "rs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "3705:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 109,
															"name": "bl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "3709:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 107,
														"name": "mergeBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "3694:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,bytes memory) pure returns (bytes memory)"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3694:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 46,
												"id": 111,
												"nodeType": "Return",
												"src": "3687:25:0"
											}
										]
									},
									"documentation": null,
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encodeLength",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"name": "length",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "3304:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3304:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"name": "offset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "3317:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3317:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3303:26:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "3353:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 44,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3353:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3352:14:0"
									},
									"scope": 192,
									"src": "3282:438:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "3795:725:0",
										"statements": [
											{
												"assignments": [
													121
												],
												"declarations": [
													{
														"constant": false,
														"id": 121,
														"name": "b",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 190,
														"src": "3806:14:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 120,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3806:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 126,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3332",
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3833:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3823:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 122,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3827:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3823:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3806:30:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3856:47:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "b",
																				"nodeType": "YulIdentifier",
																				"src": "3882:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3885:2:0",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3878:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3878:10:0"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3890:1:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3871:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:21:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3871:21:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 121,
														"isOffset": false,
														"isSlot": false,
														"src": "3882:1:0",
														"valueSize": 1
													},
													{
														"declaration": 115,
														"isOffset": false,
														"isSlot": false,
														"src": "3890:1:0",
														"valueSize": 1
													}
												],
												"id": 127,
												"nodeType": "InlineAssembly",
												"src": "3847:56:0"
											},
											{
												"assignments": [
													129
												],
												"declarations": [
													{
														"constant": false,
														"id": 129,
														"name": "i",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 190,
														"src": "3913:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 128,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3913:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 130,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "3913:6:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 131,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "3934:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "307866666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666630303030303030303030303030303030",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3938:66:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039439137263839420088320_by_1",
																"typeString": "int_const 1157...(70 digits omitted)...8320"
															},
															"value": "0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000"
														},
														"src": "3934:70:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 134,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4008:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3934:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 141,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "4054:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "307866666666666666666666666666666666666666666666666666666666666666663030303030303030303030303030303030303030303030303030303030303030",
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4058:66:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_115792089237316195423570985008687907852929702298719625575994209400481361428480_by_1",
																	"typeString": "int_const 1157...(70 digits omitted)...8480"
																},
																"value": "0xffffffffffffffffffffffffffffffff00000000000000000000000000000000"
															},
															"src": "4054:70:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4128:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4054:75:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 155,
														"nodeType": "Block",
														"src": "4170:32:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 151,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 129,
																		"src": "4185:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4189:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4185:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 154,
																"nodeType": "ExpressionStatement",
																"src": "4185:5:0"
															}
														]
													},
													"id": 156,
													"nodeType": "IfStatement",
													"src": "4050:152:0",
													"trueBody": {
														"id": 150,
														"nodeType": "Block",
														"src": "4131:33:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 146,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 129,
																		"src": "4146:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "3136",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4150:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	"src": "4146:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 149,
																"nodeType": "ExpressionStatement",
																"src": "4146:6:0"
															}
														]
													}
												},
												"id": 157,
												"nodeType": "IfStatement",
												"src": "3930:272:0",
												"trueBody": {
													"id": 140,
													"nodeType": "Block",
													"src": "4011:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 136,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "4026:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3234",
																	"id": 137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4030:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_24_by_1",
																		"typeString": "int_const 24"
																	},
																	"value": "24"
																},
																"src": "4026:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 139,
															"nodeType": "ExpressionStatement",
															"src": "4026:6:0"
														}
													]
												}
											},
											{
												"body": {
													"id": 172,
													"nodeType": "Block",
													"src": "4232:81:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 164,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 121,
																		"src": "4251:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 166,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 165,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 129,
																		"src": "4253:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4251:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4259:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4251:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 171,
															"nodeType": "IfStatement",
															"src": "4247:55:0",
															"trueBody": {
																"id": 170,
																"nodeType": "Block",
																"src": "4262:40:0",
																"statements": [
																	{
																		"id": 169,
																		"nodeType": "Break",
																		"src": "4281:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 158,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4219:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4223:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "4219:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 173,
												"initializationExpression": null,
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4227:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 161,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "4227:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 163,
													"nodeType": "ExpressionStatement",
													"src": "4227:3:0"
												},
												"nodeType": "ForStatement",
												"src": "4212:101:0"
											},
											{
												"assignments": [
													175
												],
												"declarations": [
													{
														"constant": false,
														"id": 175,
														"name": "length",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 190,
														"src": "4323:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 174,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4323:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 179,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4337:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 177,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4342:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4323:20:0"
											},
											{
												"assignments": [
													181
												],
												"declarations": [
													{
														"constant": false,
														"id": 181,
														"name": "rs",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 190,
														"src": "4354:15:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 180,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4354:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 186,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 184,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "4382:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4372:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 182,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4376:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4372:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4354:35:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4409:84:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rs",
																				"nodeType": "YulIdentifier",
																				"src": "4435:2:0"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4439:6:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4431:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4431:15:0"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4448:1:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4424:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4424:26:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4424:26:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "rs",
																		"nodeType": "YulIdentifier",
																		"src": "4471:2:0"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4475:6:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4464:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4464:18:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4464:18:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 175,
														"isOffset": false,
														"isSlot": false,
														"src": "4439:6:0",
														"valueSize": 1
													},
													{
														"declaration": 175,
														"isOffset": false,
														"isSlot": false,
														"src": "4475:6:0",
														"valueSize": 1
													},
													{
														"declaration": 181,
														"isOffset": false,
														"isSlot": false,
														"src": "4435:2:0",
														"valueSize": 1
													},
													{
														"declaration": 181,
														"isOffset": false,
														"isSlot": false,
														"src": "4471:2:0",
														"valueSize": 1
													},
													{
														"declaration": 115,
														"isOffset": false,
														"isSlot": false,
														"src": "4448:1:0",
														"valueSize": 1
													}
												],
												"id": 187,
												"nodeType": "InlineAssembly",
												"src": "4400:93:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 188,
													"name": "rs",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 181,
													"src": "4510:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 119,
												"id": 189,
												"nodeType": "Return",
												"src": "4503:9:0"
											}
										]
									},
									"documentation": null,
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toBinary",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 191,
												"src": "3750:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3750:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3749:8:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 191,
												"src": "3781:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 117,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3781:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3780:14:0"
									},
									"scope": 192,
									"src": "3732:788:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 193,
							"src": "38:4489:0"
						}
					],
					"src": "4:4534:0"
				},
				"id": 0
			}
		}
	}
}