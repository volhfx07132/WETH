{
	"id": "2919f0c0632a6f275a9b9821312e8d10",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.4",
	"solcLongVersion": "0.6.4+commit.1dca32f3",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/demo2.sol": {
				"content": "    pragma solidity >0.4.0 <0.9.0;\r\n    pragma experimental ABIEncoderV2;\r\n\r\n    contract demo2 {\r\n        bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\";\r\n        bytes public data3 = \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\";\r\n        bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\";\r\n        uint8 constant STRING_OFFSET = 0x80;\r\n        uint8 constant LIST_OFFSET = 0xc0;\r\n        uint8 constant STRING_SHORT_START = 0x80;\r\n        uint8 constant STRING_LONG_START  = 0xb8;\r\n        uint8 constant LIST_SHORT_START   = 0xc0;\r\n        uint8 constant LIST_LONG_START    = 0xf8;\r\n        uint8 constant WORD_SIZE = 32;\r\n        \r\n        struct RLPItem {\r\n            uint len;\r\n            uint memPtr;\r\n        }\r\n\r\n        struct Iterator {\r\n            RLPItem item;   // Item that's being iterated over.\r\n            uint nextPtr;   // Position of the next item in the list.\r\n        }\r\n\r\n        RLPItem public rlpItem;\r\n        Iterator public iterator;\r\n\r\n        constructor() public {\r\n            rlpItem.len = 4;\r\n            rlpItem.memPtr = 3;\r\n            iterator.item = rlpItem;\r\n            iterator.nextPtr = 10;\r\n        }\r\n\r\n        function next(Iterator memory self) internal pure returns (RLPItem memory) {\r\n            require(hasNext(self));\r\n\r\n            uint ptr = self.nextPtr;\r\n            uint itemLength = _itemLength(ptr);\r\n            self.nextPtr = ptr + itemLength;\r\n\r\n            return RLPItem(itemLength, ptr);\r\n        }\r\n        \r\n\r\n        function getData() public view returns(bool) {\r\n            return hasNext(iterator);\r\n        }\r\n\r\n        function hasNext(Iterator memory self) internal pure returns (bool) {\r\n            RLPItem memory item = self.item;\r\n            return self.nextPtr < item.memPtr + item.len;\r\n        }\r\n        \r\n        function toRlpBytes(RLPItem memory item) internal pure returns (bytes memory) {\r\n            bytes memory result = new bytes(item.len);\r\n            if (result.length == 0) return result;\r\n\r\n            uint ptr;\r\n            assembly {\r\n                ptr := add(0x20, result)\r\n            }\r\n\r\n            copy(item.memPtr, ptr, item.len);\r\n            return result;\r\n        }\r\n\r\n        function toBoolean(RLPItem memory item) internal pure returns (bool) {\r\n            require(item.len == 1);\r\n            uint result;\r\n            uint memPtr = item.memPtr;\r\n            assembly {\r\n                result := byte(0, mload(memPtr))\r\n            }\r\n\r\n            return result == 0 ? false : true;\r\n        }\r\n\r\n        function toAddress(RLPItem memory item) internal pure returns (address) {\r\n            // 1 byte for the length prefix\r\n            require(item.len == 21);\r\n\r\n            return address(toUint(item));\r\n        }\r\n\r\n        function toUint(RLPItem memory item) internal pure returns (uint) {\r\n            require(item.len > 0 && item.len <= 33);\r\n\r\n            uint offset = _payloadOffset(item.memPtr);\r\n            require(item.len >= offset, \"length is less than offset\");\r\n            uint len = item.len - offset;\r\n\r\n            uint result;\r\n            uint memPtr = item.memPtr + offset;\r\n            assembly {\r\n                result := mload(memPtr)\r\n            // shfit to the correct location if neccesary\r\n                if lt(len, 32) {\r\n                    result := div(result, exp(256, sub(32, len)))\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n         \r\n        function toUintStrict(RLPItem memory item) internal pure returns (uint) {\r\n            // one byte prefix\r\n            require(item.len == 33);\r\n\r\n            uint result;\r\n            uint memPtr = item.memPtr + 1;\r\n            assembly {\r\n                result := mload(memPtr)\r\n            }\r\n\r\n            return result;\r\n        }\r\n        \r\n\r\n        function toBytes(RLPItem memory item) internal pure returns (bytes memory) {\r\n            require(item.len > 0);\r\n\r\n            uint offset = _payloadOffset(item.memPtr);\r\n            uint len = item.len - offset; // data length\r\n            bytes memory result = new bytes(len);\r\n\r\n            uint destPtr;\r\n            assembly {\r\n                destPtr := add(0x20, result)\r\n            }\r\n\r\n            copy(item.memPtr + offset, destPtr, len);\r\n            return result;\r\n        }\r\n\r\n        \r\n        function numItems(RLPItem memory item) private pure returns (uint) {\r\n            if (item.len == 0) return 0;\r\n            uint count = 0;\r\n            uint currPtr = item.memPtr + _payloadOffset(item.memPtr);\r\n            uint endPtr = item.memPtr + item.len;\r\n            while (currPtr < endPtr) {\r\n                currPtr = currPtr + _itemLength(currPtr); // skip over an item\r\n                count++;\r\n            }\r\n            return count;\r\n        }\r\n\r\n        function _itemLength(uint memPtr) private pure returns (uint) {\r\n            uint itemLen;\r\n            uint byte0;\r\n            assembly {\r\n                byte0 := byte(0, mload(memPtr))\r\n            }\r\n\r\n            if (byte0 < STRING_SHORT_START)\r\n                itemLen = 1;\r\n\r\n            else if (byte0 < STRING_LONG_START)\r\n                itemLen = byte0 - STRING_SHORT_START + 1;\r\n\r\n            else if (byte0 < LIST_SHORT_START) {\r\n                uint dataLen;\r\n                assembly {\r\n                    let byteLen := sub(byte0, 0xb7) // # of bytes the actual length is\r\n                    memPtr := add(memPtr, 1) // skip over the first byte\r\n\r\n                    /* 32 byte word size */\r\n                    dataLen := div(mload(memPtr), exp(256, sub(32, byteLen))) // right shifting to get the len\r\n                    itemLen := add(dataLen, add(byteLen, 1))\r\n                }\r\n                require(itemLen >= dataLen, \"addition overflow\");\r\n            }\r\n\r\n            else if (byte0 < LIST_LONG_START) {\r\n                itemLen = byte0 - LIST_SHORT_START + 1;\r\n            }\r\n\r\n            else {\r\n                uint dataLen;\r\n                assembly {\r\n                    let byteLen := sub(byte0, 0xf7)\r\n                    memPtr := add(memPtr, 1)\r\n\r\n                    dataLen := div(mload(memPtr), exp(256, sub(32, byteLen))) // right shifting to the correct length\r\n                    itemLen := add(dataLen, add(byteLen, 1))\r\n                }\r\n                require(itemLen >= dataLen, \"addition overflow\");\r\n            }\r\n\r\n            return itemLen;\r\n        }\r\n\r\n         // @return number of bytes until the data\r\n        function _payloadOffset(uint memPtr) private pure returns (uint) {\r\n            uint byte0;\r\n            assembly {\r\n                byte0 := byte(0, mload(memPtr))\r\n            }\r\n\r\n            if (byte0 < STRING_SHORT_START)\r\n                return 0;\r\n            else if (byte0 < STRING_LONG_START || (byte0 >= LIST_SHORT_START && byte0 < LIST_LONG_START))\r\n                return 1;\r\n            else if (byte0 < LIST_SHORT_START)  // being explicit\r\n                return byte0 - (STRING_LONG_START - 1) + 1;\r\n            else\r\n                return byte0 - (LIST_LONG_START - 1) + 1;\r\n        } \r\n\r\n        function copy(uint src, uint dest, uint len) private pure {\r\n            if (len == 0) return;\r\n\r\n            // copy as many word sizes as possible\r\n            for (; len >= WORD_SIZE; len -= WORD_SIZE) {\r\n                assembly {\r\n                    mstore(dest, mload(src))\r\n                }\r\n\r\n                src += WORD_SIZE;\r\n                dest += WORD_SIZE;\r\n            }\r\n\r\n            // left over bytes. Mask is used to remove unwanted bytes from the word\r\n            uint mask = 256 ** (WORD_SIZE - len) - 1;\r\n            assembly {\r\n                let srcpart := and(mload(src), not(mask)) // zero out src\r\n                let destpart := and(mload(dest), mask) // retrieve the bytes\r\n                mstore(dest, or(destpart, srcpart))\r\n            }\r\n        }\r\n    } \r\n            "
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/demo2.sol": {
				"demo2": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "data1",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "data2",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "data3",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getData",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "iterator",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "len",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "memPtr",
											"type": "uint256"
										}
									],
									"internalType": "struct demo2.RLPItem",
									"name": "item",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "nextPtr",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rlpItem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "len",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "memPtr",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/demo2.sol\":81:7892  contract demo2 {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/demo2.sol\":107:176  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x2e\n  dup2\n  mstore\n  0x20\n  add\n  data_4887836e294a2761413359597244d307bbe3f94827f6160d9e1a399e00e2d1be\n  0x2e\n  swap2\n  codecopy\n  0x00\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/demo2.sol\":187:252  bytes public data3 = \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\" */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x2a\n  dup2\n  mstore\n  0x20\n  add\n  data_c359735a342ece061e65ab7390d246d1e53ba5f24eea70d6201f1d4a7b2f3475\n  0x2a\n  swap2\n  codecopy\n  0x01\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_3\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_3:\n  pop\n    /* \"contracts/demo2.sol\":263:310  bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\" */\n  sstore(0x02, 0x4c45484f4e47564f776a6e66766a3377656838764b4a00000000000000000000)\n    /* \"contracts/demo2.sol\":999:1169  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_4:\n    /* \"contracts/demo2.sol\":999:1169  constructor() public {\r... */\n  pop\n    /* \"contracts/demo2.sol\":1049:1050  4 */\n  0x04\n    /* \"contracts/demo2.sol\":1035:1042  rlpItem */\n  0x03\n    /* \"contracts/demo2.sol\":1035:1046  rlpItem.len */\n  0x00\n  add\n    /* \"contracts/demo2.sol\":1035:1050  rlpItem.len = 4 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/demo2.sol\":1082:1083  3 */\n  0x03\n    /* \"contracts/demo2.sol\":1065:1072  rlpItem */\n  dup1\n    /* \"contracts/demo2.sol\":1065:1079  rlpItem.memPtr */\n  0x01\n  add\n    /* \"contracts/demo2.sol\":1065:1083  rlpItem.memPtr = 3 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/demo2.sol\":1114:1121  rlpItem */\n  0x03\n    /* \"contracts/demo2.sol\":1098:1106  iterator */\n  0x05\n    /* \"contracts/demo2.sol\":1098:1111  iterator.item */\n  0x00\n  add\n    /* \"contracts/demo2.sol\":1098:1121  iterator.item = rlpItem */\n  0x00\n  dup3\n  add\n  sload\n  dup2\n  0x00\n  add\n  sstore\n  0x01\n  dup3\n  add\n  sload\n  dup2\n  0x01\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"contracts/demo2.sol\":1155:1157  10 */\n  0x0a\n    /* \"contracts/demo2.sol\":1136:1144  iterator */\n  0x05\n    /* \"contracts/demo2.sol\":1136:1152  iterator.nextPtr */\n  0x02\n  add\n    /* \"contracts/demo2.sol\":1136:1157  iterator.nextPtr = 10 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/demo2.sol\":81:7892  contract demo2 {\r... */\n  jump(tag_7)\ntag_2:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_9\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_8)\ntag_9:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_8\n  jumpi\n  swap2\n  dup3\n  add\ntag_10:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_10)\ntag_11:\ntag_8:\n  pop\n  swap1\n  pop\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n  swap1\n  jump\t// out\ntag_13:\n  tag_14\n  swap2\n  swap1\ntag_15:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_16\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_15)\ntag_16:\n  pop\n  swap1\n  jump\ntag_14:\n  swap1\n  jump\t// out\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_4887836e294a2761413359597244d307bbe3f94827f6160d9e1a399e00e2d1be 4e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f\ndata_c359735a342ece061e65ab7390d246d1e53ba5f24eea70d6201f1d4a7b2f3475 7364664e417364667364664c4548484a5347445348444a53484a53484a534844534a44484a4f4e47564f\n\nsub_0: assembly {\n        /* \"contracts/demo2.sol\":81:7892  contract demo2 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"contracts/demo2.sol\":81:7892  contract demo2 {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3bc5de30\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9ffd85c4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa699fb03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xe3a7fd75\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfc26b0ab\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfddcc148\n      eq\n      tag_8\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/demo2.sol\":1510:1606  function getData() public view returns(bool) {\r... */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      jump(tag_12)\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":107:176  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      jump(tag_16)\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":929:951  RLPItem public rlpItem */\n    tag_5:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap3\n      swap2\n      swap1\n      jump(tag_20)\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":263:310  bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\" */\n    tag_6:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      jump(tag_24)\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":187:252  bytes public data3 = \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_7:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      jump(tag_16)\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":962:986  Iterator public iterator */\n    tag_8:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap3\n      swap2\n      swap1\n      jump(tag_31)\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":1510:1606  function getData() public view returns(bool) {\r... */\n    tag_10:\n        /* \"contracts/demo2.sol\":1549:1553  bool */\n      0x00\n        /* \"contracts/demo2.sol\":1577:1594  hasNext(iterator) */\n      tag_33\n        /* \"contracts/demo2.sol\":1585:1593  iterator */\n      0x05\n        /* \"contracts/demo2.sol\":1577:1594  hasNext(iterator) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/demo2.sol\":1577:1584  hasNext */\n      tag_34\n        /* \"contracts/demo2.sol\":1577:1594  hasNext(iterator) */\n      jump\t// in\n    tag_33:\n        /* \"contracts/demo2.sol\":1570:1594  return hasNext(iterator) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":1510:1606  function getData() public view returns(bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/demo2.sol\":107:176  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_14:\n      0x00\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_35\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_36\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_35)\n    tag_36:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_37:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_37\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_35:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/demo2.sol\":929:951  RLPItem public rlpItem */\n    tag_18:\n      0x03\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/demo2.sol\":263:310  bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\" */\n    tag_22:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/demo2.sol\":187:252  bytes public data3 = \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_26:\n      0x01\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_38\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_39\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_38)\n    tag_39:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_40:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_40\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_38:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/demo2.sol\":962:986  Iterator public iterator */\n    tag_29:\n      0x05\n      dup1\n      0x00\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/demo2.sol\":1618:1803  function hasNext(Iterator memory self) internal pure returns (bool) {\r... */\n    tag_34:\n        /* \"contracts/demo2.sol\":1680:1684  bool */\n      0x00\n        /* \"contracts/demo2.sol\":1701:1720  RLPItem memory item */\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"contracts/demo2.sol\":1723:1727  self */\n      dup3\n        /* \"contracts/demo2.sol\":1723:1732  self.item */\n      0x00\n      add\n      mload\n        /* \"contracts/demo2.sol\":1701:1732  RLPItem memory item = self.item */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":1783:1787  item */\n      dup1\n        /* \"contracts/demo2.sol\":1783:1791  item.len */\n      0x00\n      add\n      mload\n        /* \"contracts/demo2.sol\":1769:1773  item */\n      dup2\n        /* \"contracts/demo2.sol\":1769:1780  item.memPtr */\n      0x20\n      add\n      mload\n        /* \"contracts/demo2.sol\":1769:1791  item.memPtr + item.len */\n      add\n        /* \"contracts/demo2.sol\":1754:1758  self */\n      dup4\n        /* \"contracts/demo2.sol\":1754:1766  self.nextPtr */\n      0x20\n      add\n      mload\n        /* \"contracts/demo2.sol\":1754:1791  self.nextPtr < item.memPtr + item.len */\n      lt\n        /* \"contracts/demo2.sol\":1747:1791  return self.nextPtr < item.memPtr + item.len */\n      swap2\n      pop\n      pop\n        /* \"contracts/demo2.sol\":1618:1803  function hasNext(Iterator memory self) internal pure returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/demo2.sol\":81:7892  contract demo2 {\r... */\n    tag_43:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"--CODEGEN--\":5:109   */\n    tag_45:\n        /* \"--CODEGEN--\":82:103   */\n      tag_47\n        /* \"--CODEGEN--\":97:102   */\n      dup2\n        /* \"--CODEGEN--\":82:103   */\n      jump(tag_48)\n    tag_47:\n        /* \"--CODEGEN--\":77:80   */\n      dup3\n        /* \"--CODEGEN--\":70:104   */\n      mstore\n        /* \"--CODEGEN--\":64:109   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":116:229   */\n    tag_49:\n        /* \"--CODEGEN--\":199:223   */\n      tag_51\n        /* \"--CODEGEN--\":217:222   */\n      dup2\n        /* \"--CODEGEN--\":199:223   */\n      jump(tag_52)\n    tag_51:\n        /* \"--CODEGEN--\":194:197   */\n      dup3\n        /* \"--CODEGEN--\":187:224   */\n      mstore\n        /* \"--CODEGEN--\":181:229   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":236:571   */\n    tag_53:\n      0x00\n        /* \"--CODEGEN--\":342:376   */\n      tag_55\n        /* \"--CODEGEN--\":370:375   */\n      dup3\n        /* \"--CODEGEN--\":342:376   */\n      jump(tag_56)\n    tag_55:\n        /* \"--CODEGEN--\":388:458   */\n      tag_57\n        /* \"--CODEGEN--\":451:457   */\n      dup2\n        /* \"--CODEGEN--\":446:449   */\n      dup6\n        /* \"--CODEGEN--\":388:458   */\n      jump(tag_58)\n    tag_57:\n        /* \"--CODEGEN--\":381:458   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":463:515   */\n      tag_59\n        /* \"--CODEGEN--\":508:514   */\n      dup2\n        /* \"--CODEGEN--\":503:506   */\n      dup6\n        /* \"--CODEGEN--\":496:500   */\n      0x20\n        /* \"--CODEGEN--\":489:494   */\n      dup7\n        /* \"--CODEGEN--\":485:501   */\n      add\n        /* \"--CODEGEN--\":463:515   */\n      jump(tag_60)\n    tag_59:\n        /* \"--CODEGEN--\":536:565   */\n      tag_61\n        /* \"--CODEGEN--\":558:564   */\n      dup2\n        /* \"--CODEGEN--\":536:565   */\n      jump(tag_62)\n    tag_61:\n        /* \"--CODEGEN--\":531:534   */\n      dup5\n        /* \"--CODEGEN--\":527:566   */\n      add\n        /* \"--CODEGEN--\":520:566   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":322:571   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":629:1098   */\n    tag_63:\n        /* \"--CODEGEN--\":764:768   */\n      0x40\n        /* \"--CODEGEN--\":759:762   */\n      dup3\n        /* \"--CODEGEN--\":755:769   */\n      add\n        /* \"--CODEGEN--\":846:850   */\n      0x00\n        /* \"--CODEGEN--\":839:844   */\n      dup3\n        /* \"--CODEGEN--\":835:851   */\n      add\n        /* \"--CODEGEN--\":829:852   */\n      mload\n        /* \"--CODEGEN--\":858:921   */\n      tag_65\n        /* \"--CODEGEN--\":915:919   */\n      0x00\n        /* \"--CODEGEN--\":910:913   */\n      dup6\n        /* \"--CODEGEN--\":906:920   */\n      add\n        /* \"--CODEGEN--\":892:904   */\n      dup3\n        /* \"--CODEGEN--\":858:921   */\n      jump(tag_66)\n    tag_65:\n        /* \"--CODEGEN--\":784:927   */\n      pop\n        /* \"--CODEGEN--\":1002:1006   */\n      0x20\n        /* \"--CODEGEN--\":995:1000   */\n      dup3\n        /* \"--CODEGEN--\":991:1007   */\n      add\n        /* \"--CODEGEN--\":985:1008   */\n      mload\n        /* \"--CODEGEN--\":1014:1077   */\n      tag_67\n        /* \"--CODEGEN--\":1071:1075   */\n      0x20\n        /* \"--CODEGEN--\":1066:1069   */\n      dup6\n        /* \"--CODEGEN--\":1062:1076   */\n      add\n        /* \"--CODEGEN--\":1048:1060   */\n      dup3\n        /* \"--CODEGEN--\":1014:1077   */\n      jump(tag_66)\n    tag_67:\n        /* \"--CODEGEN--\":937:1083   */\n      pop\n        /* \"--CODEGEN--\":737:1098   */\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1105:1208   */\n    tag_66:\n        /* \"--CODEGEN--\":1178:1202   */\n      tag_69\n        /* \"--CODEGEN--\":1196:1201   */\n      dup2\n        /* \"--CODEGEN--\":1178:1202   */\n      jump(tag_70)\n    tag_69:\n        /* \"--CODEGEN--\":1173:1176   */\n      dup3\n        /* \"--CODEGEN--\":1166:1203   */\n      mstore\n        /* \"--CODEGEN--\":1160:1208   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1215:1328   */\n    tag_71:\n        /* \"--CODEGEN--\":1298:1322   */\n      tag_73\n        /* \"--CODEGEN--\":1316:1321   */\n      dup2\n        /* \"--CODEGEN--\":1298:1322   */\n      jump(tag_70)\n    tag_73:\n        /* \"--CODEGEN--\":1293:1296   */\n      dup3\n        /* \"--CODEGEN--\":1286:1323   */\n      mstore\n        /* \"--CODEGEN--\":1280:1328   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1335:1536   */\n    tag_12:\n      0x00\n        /* \"--CODEGEN--\":1447:1449   */\n      0x20\n        /* \"--CODEGEN--\":1436:1445   */\n      dup3\n        /* \"--CODEGEN--\":1432:1450   */\n      add\n        /* \"--CODEGEN--\":1424:1450   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1461:1526   */\n      tag_75\n        /* \"--CODEGEN--\":1523:1524   */\n      0x00\n        /* \"--CODEGEN--\":1512:1521   */\n      dup4\n        /* \"--CODEGEN--\":1508:1525   */\n      add\n        /* \"--CODEGEN--\":1499:1505   */\n      dup5\n        /* \"--CODEGEN--\":1461:1526   */\n      jump(tag_45)\n    tag_75:\n        /* \"--CODEGEN--\":1418:1536   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1543:1756   */\n    tag_24:\n      0x00\n        /* \"--CODEGEN--\":1661:1663   */\n      0x20\n        /* \"--CODEGEN--\":1650:1659   */\n      dup3\n        /* \"--CODEGEN--\":1646:1664   */\n      add\n        /* \"--CODEGEN--\":1638:1664   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1675:1746   */\n      tag_77\n        /* \"--CODEGEN--\":1743:1744   */\n      0x00\n        /* \"--CODEGEN--\":1732:1741   */\n      dup4\n        /* \"--CODEGEN--\":1728:1745   */\n      add\n        /* \"--CODEGEN--\":1719:1725   */\n      dup5\n        /* \"--CODEGEN--\":1675:1746   */\n      jump(tag_49)\n    tag_77:\n        /* \"--CODEGEN--\":1632:1756   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1763:2052   */\n    tag_16:\n      0x00\n        /* \"--CODEGEN--\":1895:1897   */\n      0x20\n        /* \"--CODEGEN--\":1884:1893   */\n      dup3\n        /* \"--CODEGEN--\":1880:1898   */\n      add\n        /* \"--CODEGEN--\":1872:1898   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1945:1954   */\n      dup2\n        /* \"--CODEGEN--\":1939:1943   */\n      dup2\n        /* \"--CODEGEN--\":1935:1955   */\n      sub\n        /* \"--CODEGEN--\":1931:1932   */\n      0x00\n        /* \"--CODEGEN--\":1920:1929   */\n      dup4\n        /* \"--CODEGEN--\":1916:1933   */\n      add\n        /* \"--CODEGEN--\":1909:1956   */\n      mstore\n        /* \"--CODEGEN--\":1970:2042   */\n      tag_79\n        /* \"--CODEGEN--\":2037:2041   */\n      dup2\n        /* \"--CODEGEN--\":2028:2034   */\n      dup5\n        /* \"--CODEGEN--\":1970:2042   */\n      jump(tag_53)\n    tag_79:\n        /* \"--CODEGEN--\":1962:2042   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1866:2052   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":2059:2467   */\n    tag_31:\n      0x00\n        /* \"--CODEGEN--\":2247:2249   */\n      0x60\n        /* \"--CODEGEN--\":2236:2245   */\n      dup3\n        /* \"--CODEGEN--\":2232:2250   */\n      add\n        /* \"--CODEGEN--\":2224:2250   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":2261:2374   */\n      tag_81\n        /* \"--CODEGEN--\":2371:2372   */\n      0x00\n        /* \"--CODEGEN--\":2360:2369   */\n      dup4\n        /* \"--CODEGEN--\":2356:2373   */\n      add\n        /* \"--CODEGEN--\":2347:2353   */\n      dup6\n        /* \"--CODEGEN--\":2261:2374   */\n      jump(tag_63)\n    tag_81:\n        /* \"--CODEGEN--\":2385:2457   */\n      tag_82\n        /* \"--CODEGEN--\":2453:2455   */\n      0x40\n        /* \"--CODEGEN--\":2442:2451   */\n      dup4\n        /* \"--CODEGEN--\":2438:2456   */\n      add\n        /* \"--CODEGEN--\":2429:2435   */\n      dup5\n        /* \"--CODEGEN--\":2385:2457   */\n      jump(tag_71)\n    tag_82:\n        /* \"--CODEGEN--\":2218:2467   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":2474:2798   */\n    tag_20:\n      0x00\n        /* \"--CODEGEN--\":2620:2622   */\n      0x40\n        /* \"--CODEGEN--\":2609:2618   */\n      dup3\n        /* \"--CODEGEN--\":2605:2623   */\n      add\n        /* \"--CODEGEN--\":2597:2623   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":2634:2705   */\n      tag_84\n        /* \"--CODEGEN--\":2702:2703   */\n      0x00\n        /* \"--CODEGEN--\":2691:2700   */\n      dup4\n        /* \"--CODEGEN--\":2687:2704   */\n      add\n        /* \"--CODEGEN--\":2678:2684   */\n      dup6\n        /* \"--CODEGEN--\":2634:2705   */\n      jump(tag_71)\n    tag_84:\n        /* \"--CODEGEN--\":2716:2788   */\n      tag_85\n        /* \"--CODEGEN--\":2784:2786   */\n      0x20\n        /* \"--CODEGEN--\":2773:2782   */\n      dup4\n        /* \"--CODEGEN--\":2769:2787   */\n      add\n        /* \"--CODEGEN--\":2760:2766   */\n      dup5\n        /* \"--CODEGEN--\":2716:2788   */\n      jump(tag_71)\n    tag_85:\n        /* \"--CODEGEN--\":2591:2798   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":2805:2922   */\n    tag_56:\n      0x00\n        /* \"--CODEGEN--\":2894:2899   */\n      dup2\n        /* \"--CODEGEN--\":2888:2900   */\n      mload\n        /* \"--CODEGEN--\":2878:2900   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":2859:2922   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":2930:3092   */\n    tag_58:\n      0x00\n        /* \"--CODEGEN--\":3044:3050   */\n      dup3\n        /* \"--CODEGEN--\":3039:3042   */\n      dup3\n        /* \"--CODEGEN--\":3032:3051   */\n      mstore\n        /* \"--CODEGEN--\":3081:3085   */\n      0x20\n        /* \"--CODEGEN--\":3076:3079   */\n      dup3\n        /* \"--CODEGEN--\":3072:3086   */\n      add\n        /* \"--CODEGEN--\":3057:3086   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":3025:3092   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":3100:3185   */\n    tag_48:\n      0x00\n        /* \"--CODEGEN--\":3173:3178   */\n      dup2\n        /* \"--CODEGEN--\":3166:3179   */\n      iszero\n        /* \"--CODEGEN--\":3159:3180   */\n      iszero\n        /* \"--CODEGEN--\":3148:3180   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":3142:3185   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":3192:3264   */\n    tag_52:\n      0x00\n        /* \"--CODEGEN--\":3254:3259   */\n      dup2\n        /* \"--CODEGEN--\":3243:3259   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":3237:3264   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":3271:3343   */\n    tag_70:\n      0x00\n        /* \"--CODEGEN--\":3333:3338   */\n      dup2\n        /* \"--CODEGEN--\":3322:3338   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":3316:3343   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":3351:3619   */\n    tag_60:\n        /* \"--CODEGEN--\":3416:3417   */\n      0x00\n        /* \"--CODEGEN--\":3423:3524   */\n    tag_92:\n        /* \"--CODEGEN--\":3437:3443   */\n      dup4\n        /* \"--CODEGEN--\":3434:3435   */\n      dup2\n        /* \"--CODEGEN--\":3431:3444   */\n      lt\n        /* \"--CODEGEN--\":3423:3524   */\n      iszero\n      tag_94\n      jumpi\n        /* \"--CODEGEN--\":3513:3514   */\n      dup1\n        /* \"--CODEGEN--\":3508:3511   */\n      dup3\n        /* \"--CODEGEN--\":3504:3515   */\n      add\n        /* \"--CODEGEN--\":3498:3516   */\n      mload\n        /* \"--CODEGEN--\":3494:3495   */\n      dup2\n        /* \"--CODEGEN--\":3489:3492   */\n      dup5\n        /* \"--CODEGEN--\":3485:3496   */\n      add\n        /* \"--CODEGEN--\":3478:3517   */\n      mstore\n        /* \"--CODEGEN--\":3459:3461   */\n      0x20\n        /* \"--CODEGEN--\":3456:3457   */\n      dup2\n        /* \"--CODEGEN--\":3452:3462   */\n      add\n        /* \"--CODEGEN--\":3447:3462   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":3423:3524   */\n      jump(tag_92)\n    tag_94:\n        /* \"--CODEGEN--\":3539:3545   */\n      dup4\n        /* \"--CODEGEN--\":3536:3537   */\n      dup2\n        /* \"--CODEGEN--\":3533:3546   */\n      gt\n        /* \"--CODEGEN--\":3530:3532   */\n      iszero\n      tag_95\n      jumpi\n        /* \"--CODEGEN--\":3604:3605   */\n      0x00\n        /* \"--CODEGEN--\":3595:3601   */\n      dup5\n        /* \"--CODEGEN--\":3590:3593   */\n      dup5\n        /* \"--CODEGEN--\":3586:3602   */\n      add\n        /* \"--CODEGEN--\":3579:3606   */\n      mstore\n        /* \"--CODEGEN--\":3530:3532   */\n    tag_95:\n        /* \"--CODEGEN--\":3400:3619   */\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":3627:3724   */\n    tag_62:\n      0x00\n        /* \"--CODEGEN--\":3715:3717   */\n      0x1f\n        /* \"--CODEGEN--\":3711:3718   */\n      not\n        /* \"--CODEGEN--\":3706:3708   */\n      0x1f\n        /* \"--CODEGEN--\":3699:3704   */\n      dup4\n        /* \"--CODEGEN--\":3695:3709   */\n      add\n        /* \"--CODEGEN--\":3691:3719   */\n      and\n        /* \"--CODEGEN--\":3681:3719   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":3675:3724   */\n      swap2\n      swap1\n      pop\n      jump\n\n    auxdata: 0xa26469706673582212202a32b1d427e838c5f2b445594fe1094b021126a3a8d9dab481d24560a6b6fe1064736f6c63430006040033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526040518060600160405280602e81526020016106c1602e9139600090805190602001906100329291906100d6565b506040518060600160405280602a81526020016106ef602a9139600190805190602001906100619291906100d6565b507f4c45484f4e47564f776a6e66766a3377656838764b4a0000000000000000000060025534801561009257600080fd5b50600460036000018190555060038060010181905550600360056000016000820154816000015560018201548160010155905050600a60056002018190555061017b565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061011757805160ff1916838001178555610145565b82800160010185558215610145579182015b82811115610144578251825591602001919060010190610129565b5b5090506101529190610156565b5090565b61017891905b8082111561017457600081600090555060010161015c565b5090565b90565b6105378061018a6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633bc5de30146100675780639ffd85c414610085578063a699fb03146100a3578063e3a7fd75146100c2578063fc26b0ab146100e0578063fddcc148146100fe575b600080fd5b61006f61011d565b60405161007c91906103d7565b60405180910390f35b61008d61016b565b60405161009a919061040d565b60405180910390f35b6100ab610209565b6040516100b9929190610458565b60405180910390f35b6100ca61021b565b6040516100d791906103f2565b60405180910390f35b6100e8610221565b6040516100f5919061040d565b60405180910390f35b6101066102bf565b60405161011492919061042f565b60405180910390f35b60006101666005604051806040016040529081600082016040518060400160405290816000820154815260200160018201548152505081526020016002820154815250506102ef565b905090565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102015780601f106101d657610100808354040283529160200191610201565b820191906000526020600020905b8154815290600101906020018083116101e457829003601f168201915b505050505081565b60038060000154908060010154905082565b60025481565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102b75780601f1061028c576101008083540402835291602001916102b7565b820191906000526020600020905b81548152906001019060200180831161029a57829003601f168201915b505050505081565b60058060000160405180604001604052908160008201548152602001600182015481525050908060020154905082565b60006102f9610319565b826000015190508060000151816020015101836020015110915050919050565b604051806040016040528060008152602001600081525090565b61033c8161049d565b82525050565b61034b816104a9565b82525050565b600061035c82610481565b610366818561048c565b93506103768185602086016104bd565b61037f816104f0565b840191505092915050565b6040820160008201516103a060008501826103b9565b5060208201516103b360208501826103b9565b50505050565b6103c2816104b3565b82525050565b6103d1816104b3565b82525050565b60006020820190506103ec6000830184610333565b92915050565b60006020820190506104076000830184610342565b92915050565b600060208201905081810360008301526104278184610351565b905092915050565b6000606082019050610444600083018561038a565b61045160408301846103c8565b9392505050565b600060408201905061046d60008301856103c8565b61047a60208301846103c8565b9392505050565b600081519050919050565b600082825260208201905092915050565b60008115159050919050565b6000819050919050565b6000819050919050565b60005b838110156104db5780820151818401526020810190506104c0565b838111156104ea576000848401525b50505050565b6000601f19601f830116905091905056fea26469706673582212202a32b1d427e838c5f2b445594fe1094b021126a3a8d9dab481d24560a6b6fe1064736f6c634300060400334e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f7364664e417364667364664c4548484a5347445348444a53484a53484a534844534a44484a4f4e47564f",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6C1 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x32 SWAP3 SWAP2 SWAP1 PUSH2 0xD6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6EF PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x61 SWAP3 SWAP2 SWAP1 PUSH2 0xD6 JUMP JUMPDEST POP PUSH32 0x4C45484F4E47564F776A6E66766A3377656838764B4A00000000000000000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 PUSH1 0x3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x3 DUP1 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x5 PUSH1 0x0 ADD PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0xA PUSH1 0x5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x17B JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x117 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x145 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x145 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x144 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x129 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x156 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x178 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x174 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x15C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x537 DUP1 PUSH2 0x18A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3BC5DE30 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x9FFD85C4 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0xA699FB03 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0xE3A7FD75 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xFC26B0AB EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0xFDDCC148 EQ PUSH2 0xFE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x11D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x16B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAB PUSH2 0x209 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB9 SWAP3 SWAP2 SWAP1 PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCA PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD7 SWAP2 SWAP1 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE8 PUSH2 0x221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP3 SWAP2 SWAP1 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x166 PUSH1 0x5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x2EF JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x201 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x201 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x2B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x28C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x29A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x5 DUP1 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F9 PUSH2 0x319 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD MLOAD SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD ADD DUP4 PUSH1 0x20 ADD MLOAD LT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x33C DUP2 PUSH2 0x49D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x34B DUP2 PUSH2 0x4A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35C DUP3 PUSH2 0x481 JUMP JUMPDEST PUSH2 0x366 DUP2 DUP6 PUSH2 0x48C JUMP JUMPDEST SWAP4 POP PUSH2 0x376 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x37F DUP2 PUSH2 0x4F0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3A0 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3B9 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3B3 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3B9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3C2 DUP2 PUSH2 0x4B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3D1 DUP2 PUSH2 0x4B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x333 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x407 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x342 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x427 DUP2 DUP5 PUSH2 0x351 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x444 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x38A JUMP JUMPDEST PUSH2 0x451 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3C8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x46D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3C8 JUMP JUMPDEST PUSH2 0x47A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4DB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4C0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4EA JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A ORIGIN 0xB1 0xD4 0x27 0xE8 CODESIZE 0xC5 CALLCODE 0xB4 GASLIMIT MSIZE 0x4F 0xE1 MULMOD 0x4B MUL GT 0x26 LOG3 0xA8 0xD9 0xDA 0xB4 DUP2 0xD2 GASLIMIT PUSH1 0xA6 0xB6 INVALID LT PUSH5 0x736F6C6343 STOP MOD DIV STOP CALLER 0x4E COINBASE 0x4C GASLIMIT 0x48 0x48 0x4A MSTORE8 SELFBALANCE DIFFICULTY MSTORE8 DIFFICULTY SELFBALANCE 0x48 0x4A MSTORE8 DIFFICULTY 0x48 MSTORE8 SSTORE 0x48 DIFFICULTY 0x4A MSTORE8 0x48 DIFFICULTY 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 DIFFICULTY MSTORE8 0x4A DIFFICULTY 0x48 0x4A 0x4F 0x4E SELFBALANCE JUMP 0x4F PUSH20 0x64664E417364667364664C4548484A5347445348 DIFFICULTY 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 DIFFICULTY MSTORE8 0x4A DIFFICULTY 0x48 0x4A 0x4F 0x4E SELFBALANCE JUMP 0x4F ",
							"sourceMap": "81:7811:0:-:0;;;107:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;187:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;263:47;;;999:170;5:9:-1;2:2;;;27:1;24;17:12;2:2;999:170:0;1049:1;1035:7;:11;;:15;;;;1082:1;1065:7;:14;;:18;;;;1114:7;1098:8;:13;;:23;;;;;;;;;;;;;;;;;;;1155:2;1136:8;:16;;:21;;;;81:7811;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c80633bc5de30146100675780639ffd85c414610085578063a699fb03146100a3578063e3a7fd75146100c2578063fc26b0ab146100e0578063fddcc148146100fe575b600080fd5b61006f61011d565b60405161007c91906103d7565b60405180910390f35b61008d61016b565b60405161009a919061040d565b60405180910390f35b6100ab610209565b6040516100b9929190610458565b60405180910390f35b6100ca61021b565b6040516100d791906103f2565b60405180910390f35b6100e8610221565b6040516100f5919061040d565b60405180910390f35b6101066102bf565b60405161011492919061042f565b60405180910390f35b60006101666005604051806040016040529081600082016040518060400160405290816000820154815260200160018201548152505081526020016002820154815250506102ef565b905090565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102015780601f106101d657610100808354040283529160200191610201565b820191906000526020600020905b8154815290600101906020018083116101e457829003601f168201915b505050505081565b60038060000154908060010154905082565b60025481565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102b75780601f1061028c576101008083540402835291602001916102b7565b820191906000526020600020905b81548152906001019060200180831161029a57829003601f168201915b505050505081565b60058060000160405180604001604052908160008201548152602001600182015481525050908060020154905082565b60006102f9610319565b826000015190508060000151816020015101836020015110915050919050565b604051806040016040528060008152602001600081525090565b61033c8161049d565b82525050565b61034b816104a9565b82525050565b600061035c82610481565b610366818561048c565b93506103768185602086016104bd565b61037f816104f0565b840191505092915050565b6040820160008201516103a060008501826103b9565b5060208201516103b360208501826103b9565b50505050565b6103c2816104b3565b82525050565b6103d1816104b3565b82525050565b60006020820190506103ec6000830184610333565b92915050565b60006020820190506104076000830184610342565b92915050565b600060208201905081810360008301526104278184610351565b905092915050565b6000606082019050610444600083018561038a565b61045160408301846103c8565b9392505050565b600060408201905061046d60008301856103c8565b61047a60208301846103c8565b9392505050565b600081519050919050565b600082825260208201905092915050565b60008115159050919050565b6000819050919050565b6000819050919050565b60005b838110156104db5780820151818401526020810190506104c0565b838111156104ea576000848401525b50505050565b6000601f19601f830116905091905056fea26469706673582212202a32b1d427e838c5f2b445594fe1094b021126a3a8d9dab481d24560a6b6fe1064736f6c63430006040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3BC5DE30 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x9FFD85C4 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0xA699FB03 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0xE3A7FD75 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xFC26B0AB EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0xFDDCC148 EQ PUSH2 0xFE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x11D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x16B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAB PUSH2 0x209 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB9 SWAP3 SWAP2 SWAP1 PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCA PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD7 SWAP2 SWAP1 PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE8 PUSH2 0x221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x40D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP3 SWAP2 SWAP1 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x166 PUSH1 0x5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x2EF JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x201 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x201 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x2B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x28C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x29A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x5 DUP1 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F9 PUSH2 0x319 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD MLOAD SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD ADD DUP4 PUSH1 0x20 ADD MLOAD LT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x33C DUP2 PUSH2 0x49D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x34B DUP2 PUSH2 0x4A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35C DUP3 PUSH2 0x481 JUMP JUMPDEST PUSH2 0x366 DUP2 DUP6 PUSH2 0x48C JUMP JUMPDEST SWAP4 POP PUSH2 0x376 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x37F DUP2 PUSH2 0x4F0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3A0 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3B9 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3B3 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3B9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3C2 DUP2 PUSH2 0x4B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3D1 DUP2 PUSH2 0x4B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x333 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x407 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x342 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x427 DUP2 DUP5 PUSH2 0x351 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x444 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x38A JUMP JUMPDEST PUSH2 0x451 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3C8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x46D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3C8 JUMP JUMPDEST PUSH2 0x47A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4DB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4C0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4EA JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A ORIGIN 0xB1 0xD4 0x27 0xE8 CODESIZE 0xC5 CALLCODE 0xB4 GASLIMIT MSIZE 0x4F 0xE1 MULMOD 0x4B MUL GT 0x26 LOG3 0xA8 0xD9 0xDA 0xB4 DUP2 0xD2 GASLIMIT PUSH1 0xA6 0xB6 INVALID LT PUSH5 0x736F6C6343 STOP MOD DIV STOP CALLER ",
							"sourceMap": "81:7811:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;81:7811:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;1510:96:0;;;:::i;:::-;;;;;;;;;;;;;;;;107:69;;;:::i;:::-;;;;;;;;;;;;;;;;929:22;;;:::i;:::-;;;;;;;;;;;;;;;;;263:47;;;:::i;:::-;;;;;;;;;;;;;;;;187:65;;;:::i;:::-;;;;;;;;;;;;;;;;962:24;;;:::i;:::-;;;;;;;;;;;;;;;;;1510:96;1549:4;1577:17;1585:8;1577:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;:17::i;:::-;1570:24;;1510:96;:::o;107:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;929:22::-;;;;;;;;;;;;;;:::o;263:47::-;;;;:::o;187:65::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;962:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1618:185::-;1680:4;1701:19;;:::i;:::-;1723:4;:9;;;1701:31;;1783:4;:8;;;1769:4;:11;;;:22;1754:4;:12;;;:37;1747:44;;;1618:185;;;:::o;81:7811::-;;;;;;;;;;;;;;;;;;;:::o;5:104:-1:-;82:21;97:5;82:21;;;77:3;70:34;64:45;;;116:113;199:24;217:5;199:24;;;194:3;187:37;181:48;;;236:335;;342:34;370:5;342:34;;;388:70;451:6;446:3;388:70;;;381:77;;463:52;508:6;503:3;496:4;489:5;485:16;463:52;;;536:29;558:6;536:29;;;531:3;527:39;520:46;;322:249;;;;;;629:469;764:4;759:3;755:14;846:4;839:5;835:16;829:23;858:63;915:4;910:3;906:14;892:12;858:63;;;784:143;1002:4;995:5;991:16;985:23;1014:63;1071:4;1066:3;1062:14;1048:12;1014:63;;;937:146;737:361;;;;1105:103;1178:24;1196:5;1178:24;;;1173:3;1166:37;1160:48;;;1215:113;1298:24;1316:5;1298:24;;;1293:3;1286:37;1280:48;;;1335:201;;1447:2;1436:9;1432:18;1424:26;;1461:65;1523:1;1512:9;1508:17;1499:6;1461:65;;;1418:118;;;;;1543:213;;1661:2;1650:9;1646:18;1638:26;;1675:71;1743:1;1732:9;1728:17;1719:6;1675:71;;;1632:124;;;;;1763:289;;1895:2;1884:9;1880:18;1872:26;;1945:9;1939:4;1935:20;1931:1;1920:9;1916:17;1909:47;1970:72;2037:4;2028:6;1970:72;;;1962:80;;1866:186;;;;;2059:408;;2247:2;2236:9;2232:18;2224:26;;2261:113;2371:1;2360:9;2356:17;2347:6;2261:113;;;2385:72;2453:2;2442:9;2438:18;2429:6;2385:72;;;2218:249;;;;;;2474:324;;2620:2;2609:9;2605:18;2597:26;;2634:71;2702:1;2691:9;2687:17;2678:6;2634:71;;;2716:72;2784:2;2773:9;2769:18;2760:6;2716:72;;;2591:207;;;;;;2805:117;;2894:5;2888:12;2878:22;;2859:63;;;;2930:162;;3044:6;3039:3;3032:19;3081:4;3076:3;3072:14;3057:29;;3025:67;;;;;3100:85;;3173:5;3166:13;3159:21;3148:32;;3142:43;;;;3192:72;;3254:5;3243:16;;3237:27;;;;3271:72;;3333:5;3322:16;;3316:27;;;;3351:268;3416:1;3423:101;3437:6;3434:1;3431:13;3423:101;;;3513:1;3508:3;3504:11;3498:18;3494:1;3489:3;3485:11;3478:39;3459:2;3456:1;3452:10;3447:15;;3423:101;;;3539:6;3536:1;3533:13;3530:2;;;3604:1;3595:6;3590:3;3586:16;3579:27;3530:2;3400:219;;;;;3627:97;;3715:2;3711:7;3706:2;3699:5;3695:14;3691:28;3681:38;;3675:49;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "267000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"data1()": "infinite",
								"data2()": "1173",
								"data3()": "infinite",
								"getData()": "3051",
								"iterator()": "infinite",
								"rlpItem()": "infinite"
							},
							"internal": {
								"_itemLength(uint256)": "infinite",
								"_payloadOffset(uint256)": "infinite",
								"copy(uint256,uint256,uint256)": "infinite",
								"hasNext(struct demo2.Iterator memory)": "infinite",
								"next(struct demo2.Iterator memory)": "infinite",
								"numItems(struct demo2.RLPItem memory)": "infinite",
								"toAddress(struct demo2.RLPItem memory)": "infinite",
								"toBoolean(struct demo2.RLPItem memory)": "infinite",
								"toBytes(struct demo2.RLPItem memory)": "infinite",
								"toRlpBytes(struct demo2.RLPItem memory)": "infinite",
								"toUint(struct demo2.RLPItem memory)": "infinite",
								"toUintStrict(struct demo2.RLPItem memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "2E"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH data",
									"source": 0,
									"value": "4887836E294A2761413359597244D307BBE3F94827F6160D9E1A399E00E2D1BE"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "2E"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "2A"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH data",
									"source": 0,
									"value": "C359735A342ECE061E65AB7390D246D1E53BA5F24EEA70D6201F1D4A7B2F3475"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "2A"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 263,
									"end": 310,
									"name": "PUSH",
									"source": 0,
									"value": "4C45484F4E47564F776A6E66766A3377656838764B4A00000000000000000000"
								},
								{
									"begin": 263,
									"end": 310,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 263,
									"end": 310,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 999,
									"end": 1169,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 999,
									"end": 1169,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1049,
									"end": 1050,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1035,
									"end": 1042,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1035,
									"end": 1046,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1035,
									"end": 1046,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1035,
									"end": 1050,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1035,
									"end": 1050,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1035,
									"end": 1050,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1035,
									"end": 1050,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1082,
									"end": 1083,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1065,
									"end": 1072,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1065,
									"end": 1079,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1065,
									"end": 1079,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1065,
									"end": 1083,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1065,
									"end": 1083,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1065,
									"end": 1083,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1065,
									"end": 1083,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1114,
									"end": 1121,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1098,
									"end": 1106,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1098,
									"end": 1111,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1111,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1155,
									"end": 1157,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 1136,
									"end": 1144,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1136,
									"end": 1152,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1136,
									"end": 1152,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1136,
									"end": 1157,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1136,
									"end": 1157,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1136,
									"end": 1157,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1136,
									"end": 1157,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 7892,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202a32b1d427e838c5f2b445594fe1094b021126a3a8d9dab481d24560a6b6fe1064736f6c63430006040033",
									".code": [
										{
											"begin": 81,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "3BC5DE30"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "9FFD85C4"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "A699FB03"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "E3A7FD75"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "FC26B0AB"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "FDDCC148"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1553,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1585,
											"end": 1593,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1577,
											"end": 1594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1510,
											"end": 1606,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1618,
											"end": 1803,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1618,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1701,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1701,
											"end": 1720,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 1720,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1701,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1723,
											"end": 1727,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1723,
											"end": 1732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1723,
											"end": 1732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1723,
											"end": 1732,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1783,
											"end": 1787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1783,
											"end": 1791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1783,
											"end": 1791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1783,
											"end": 1791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1780,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1769,
											"end": 1780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1780,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1758,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1766,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1754,
											"end": 1766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1791,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1803,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 7892,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5,
											"end": 109,
											"name": "tag",
											"source": -1,
											"value": "45"
										},
										{
											"begin": 5,
											"end": 109,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 82,
											"end": 103,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "47"
										},
										{
											"begin": 97,
											"end": 102,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 82,
											"end": 103,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "48"
										},
										{
											"begin": 82,
											"end": 103,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 82,
											"end": 103,
											"name": "tag",
											"source": -1,
											"value": "47"
										},
										{
											"begin": 82,
											"end": 103,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 77,
											"end": 80,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 70,
											"end": 104,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 64,
											"end": 109,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 64,
											"end": 109,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 64,
											"end": 109,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 116,
											"end": 229,
											"name": "tag",
											"source": -1,
											"value": "49"
										},
										{
											"begin": 116,
											"end": 229,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 199,
											"end": 223,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "51"
										},
										{
											"begin": 217,
											"end": 222,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 199,
											"end": 223,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "52"
										},
										{
											"begin": 199,
											"end": 223,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 199,
											"end": 223,
											"name": "tag",
											"source": -1,
											"value": "51"
										},
										{
											"begin": 199,
											"end": 223,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 194,
											"end": 197,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 187,
											"end": 224,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 181,
											"end": 229,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 181,
											"end": 229,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 181,
											"end": 229,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 236,
											"end": 571,
											"name": "tag",
											"source": -1,
											"value": "53"
										},
										{
											"begin": 236,
											"end": 571,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 236,
											"end": 571,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 342,
											"end": 376,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "55"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 342,
											"end": 376,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "56"
										},
										{
											"begin": 342,
											"end": 376,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 342,
											"end": 376,
											"name": "tag",
											"source": -1,
											"value": "55"
										},
										{
											"begin": 342,
											"end": 376,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 388,
											"end": 458,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "57"
										},
										{
											"begin": 451,
											"end": 457,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 446,
											"end": 449,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 388,
											"end": 458,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "58"
										},
										{
											"begin": 388,
											"end": 458,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 388,
											"end": 458,
											"name": "tag",
											"source": -1,
											"value": "57"
										},
										{
											"begin": 388,
											"end": 458,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 381,
											"end": 458,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 381,
											"end": 458,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 463,
											"end": 515,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "59"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 503,
											"end": 506,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 496,
											"end": 500,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 485,
											"end": 501,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 463,
											"end": 515,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 463,
											"end": 515,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 463,
											"end": 515,
											"name": "tag",
											"source": -1,
											"value": "59"
										},
										{
											"begin": 463,
											"end": 515,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 536,
											"end": 565,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "61"
										},
										{
											"begin": 558,
											"end": 564,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 536,
											"end": 565,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "62"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 536,
											"end": 565,
											"name": "tag",
											"source": -1,
											"value": "61"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 531,
											"end": 534,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 527,
											"end": 566,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 520,
											"end": 566,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 520,
											"end": 566,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 322,
											"end": 571,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 322,
											"end": 571,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 322,
											"end": 571,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 322,
											"end": 571,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 322,
											"end": 571,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 322,
											"end": 571,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 629,
											"end": 1098,
											"name": "tag",
											"source": -1,
											"value": "63"
										},
										{
											"begin": 629,
											"end": 1098,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 764,
											"end": 768,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 762,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 755,
											"end": 769,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 846,
											"end": 850,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 835,
											"end": 851,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 829,
											"end": 852,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 858,
											"end": 921,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "65"
										},
										{
											"begin": 915,
											"end": 919,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 910,
											"end": 913,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 906,
											"end": 920,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 892,
											"end": 904,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 858,
											"end": 921,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "66"
										},
										{
											"begin": 858,
											"end": 921,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 858,
											"end": 921,
											"name": "tag",
											"source": -1,
											"value": "65"
										},
										{
											"begin": 858,
											"end": 921,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 784,
											"end": 927,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1002,
											"end": 1006,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 995,
											"end": 1000,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 991,
											"end": 1007,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 985,
											"end": 1008,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 1014,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "67"
										},
										{
											"begin": 1071,
											"end": 1075,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1066,
											"end": 1069,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1062,
											"end": 1076,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1048,
											"end": 1060,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1014,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "66"
										},
										{
											"begin": 1014,
											"end": 1077,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1014,
											"end": 1077,
											"name": "tag",
											"source": -1,
											"value": "67"
										},
										{
											"begin": 1014,
											"end": 1077,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 937,
											"end": 1083,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 737,
											"end": 1098,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 737,
											"end": 1098,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 737,
											"end": 1098,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 737,
											"end": 1098,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1105,
											"end": 1208,
											"name": "tag",
											"source": -1,
											"value": "66"
										},
										{
											"begin": 1105,
											"end": 1208,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1178,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "69"
										},
										{
											"begin": 1196,
											"end": 1201,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1178,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "70"
										},
										{
											"begin": 1178,
											"end": 1202,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1178,
											"end": 1202,
											"name": "tag",
											"source": -1,
											"value": "69"
										},
										{
											"begin": 1178,
											"end": 1202,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1173,
											"end": 1176,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1166,
											"end": 1203,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1160,
											"end": 1208,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1160,
											"end": 1208,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1160,
											"end": 1208,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1215,
											"end": 1328,
											"name": "tag",
											"source": -1,
											"value": "71"
										},
										{
											"begin": 1215,
											"end": 1328,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1298,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "73"
										},
										{
											"begin": 1316,
											"end": 1321,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1298,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "70"
										},
										{
											"begin": 1298,
											"end": 1322,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1298,
											"end": 1322,
											"name": "tag",
											"source": -1,
											"value": "73"
										},
										{
											"begin": 1298,
											"end": 1322,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1293,
											"end": 1296,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1286,
											"end": 1323,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1280,
											"end": 1328,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1280,
											"end": 1328,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1280,
											"end": 1328,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1335,
											"end": 1536,
											"name": "tag",
											"source": -1,
											"value": "12"
										},
										{
											"begin": 1335,
											"end": 1536,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1335,
											"end": 1536,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1447,
											"end": 1449,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1436,
											"end": 1445,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1432,
											"end": 1450,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1424,
											"end": 1450,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1424,
											"end": 1450,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1461,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "75"
										},
										{
											"begin": 1523,
											"end": 1524,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1508,
											"end": 1525,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1505,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1461,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "45"
										},
										{
											"begin": 1461,
											"end": 1526,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1461,
											"end": 1526,
											"name": "tag",
											"source": -1,
											"value": "75"
										},
										{
											"begin": 1461,
											"end": 1526,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1418,
											"end": 1536,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1418,
											"end": 1536,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1418,
											"end": 1536,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1418,
											"end": 1536,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1418,
											"end": 1536,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1543,
											"end": 1756,
											"name": "tag",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 1543,
											"end": 1756,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1543,
											"end": 1756,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1663,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1650,
											"end": 1659,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1646,
											"end": 1664,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1638,
											"end": 1664,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1638,
											"end": 1664,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1675,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "77"
										},
										{
											"begin": 1743,
											"end": 1744,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1741,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1728,
											"end": 1745,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1719,
											"end": 1725,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1675,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "49"
										},
										{
											"begin": 1675,
											"end": 1746,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1675,
											"end": 1746,
											"name": "tag",
											"source": -1,
											"value": "77"
										},
										{
											"begin": 1675,
											"end": 1746,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1632,
											"end": 1756,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1632,
											"end": 1756,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1632,
											"end": 1756,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1632,
											"end": 1756,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1632,
											"end": 1756,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 2052,
											"name": "tag",
											"source": -1,
											"value": "16"
										},
										{
											"begin": 1763,
											"end": 2052,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 2052,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1897,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1884,
											"end": 1893,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1880,
											"end": 1898,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1898,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1898,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1945,
											"end": 1954,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1939,
											"end": 1943,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1935,
											"end": 1955,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1931,
											"end": 1932,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1929,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1916,
											"end": 1933,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1909,
											"end": 1956,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1970,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "79"
										},
										{
											"begin": 2037,
											"end": 2041,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2034,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1970,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "53"
										},
										{
											"begin": 1970,
											"end": 2042,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1970,
											"end": 2042,
											"name": "tag",
											"source": -1,
											"value": "79"
										},
										{
											"begin": 1970,
											"end": 2042,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1962,
											"end": 2042,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1962,
											"end": 2042,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1866,
											"end": 2052,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1866,
											"end": 2052,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1866,
											"end": 2052,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1866,
											"end": 2052,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1866,
											"end": 2052,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2059,
											"end": 2467,
											"name": "tag",
											"source": -1,
											"value": "31"
										},
										{
											"begin": 2059,
											"end": 2467,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2059,
											"end": 2467,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2247,
											"end": 2249,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 2236,
											"end": 2245,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2232,
											"end": 2250,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2224,
											"end": 2250,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2224,
											"end": 2250,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2261,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "81"
										},
										{
											"begin": 2371,
											"end": 2372,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2369,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2356,
											"end": 2373,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2347,
											"end": 2353,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 2261,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "63"
										},
										{
											"begin": 2261,
											"end": 2374,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2261,
											"end": 2374,
											"name": "tag",
											"source": -1,
											"value": "81"
										},
										{
											"begin": 2261,
											"end": 2374,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2385,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "82"
										},
										{
											"begin": 2453,
											"end": 2455,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2451,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2429,
											"end": 2435,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2385,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "71"
										},
										{
											"begin": 2385,
											"end": 2457,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2385,
											"end": 2457,
											"name": "tag",
											"source": -1,
											"value": "82"
										},
										{
											"begin": 2385,
											"end": 2457,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2218,
											"end": 2467,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 2218,
											"end": 2467,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 2218,
											"end": 2467,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2218,
											"end": 2467,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2218,
											"end": 2467,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2218,
											"end": 2467,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2474,
											"end": 2798,
											"name": "tag",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2474,
											"end": 2798,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2474,
											"end": 2798,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2622,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2605,
											"end": 2623,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2597,
											"end": 2623,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2597,
											"end": 2623,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2634,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "84"
										},
										{
											"begin": 2702,
											"end": 2703,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2691,
											"end": 2700,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2687,
											"end": 2704,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2678,
											"end": 2684,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 2634,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "71"
										},
										{
											"begin": 2634,
											"end": 2705,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2634,
											"end": 2705,
											"name": "tag",
											"source": -1,
											"value": "84"
										},
										{
											"begin": 2634,
											"end": 2705,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2716,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "85"
										},
										{
											"begin": 2784,
											"end": 2786,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2760,
											"end": 2766,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2716,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "71"
										},
										{
											"begin": 2716,
											"end": 2788,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2716,
											"end": 2788,
											"name": "tag",
											"source": -1,
											"value": "85"
										},
										{
											"begin": 2716,
											"end": 2788,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2591,
											"end": 2798,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 2591,
											"end": 2798,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 2591,
											"end": 2798,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2591,
											"end": 2798,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2591,
											"end": 2798,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2591,
											"end": 2798,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2805,
											"end": 2922,
											"name": "tag",
											"source": -1,
											"value": "56"
										},
										{
											"begin": 2805,
											"end": 2922,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2805,
											"end": 2922,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2899,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 2878,
											"end": 2900,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2878,
											"end": 2900,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2859,
											"end": 2922,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2859,
											"end": 2922,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2859,
											"end": 2922,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2859,
											"end": 2922,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2930,
											"end": 3092,
											"name": "tag",
											"source": -1,
											"value": "58"
										},
										{
											"begin": 2930,
											"end": 3092,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2930,
											"end": 3092,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3044,
											"end": 3050,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3039,
											"end": 3042,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3032,
											"end": 3051,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3081,
											"end": 3085,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3079,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3072,
											"end": 3086,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3057,
											"end": 3086,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3057,
											"end": 3086,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3025,
											"end": 3092,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 3025,
											"end": 3092,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3025,
											"end": 3092,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3025,
											"end": 3092,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3025,
											"end": 3092,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3100,
											"end": 3185,
											"name": "tag",
											"source": -1,
											"value": "48"
										},
										{
											"begin": 3100,
											"end": 3185,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3100,
											"end": 3185,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3178,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3166,
											"end": 3179,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3159,
											"end": 3180,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3148,
											"end": 3180,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3148,
											"end": 3180,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3142,
											"end": 3185,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3142,
											"end": 3185,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3142,
											"end": 3185,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3142,
											"end": 3185,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3192,
											"end": 3264,
											"name": "tag",
											"source": -1,
											"value": "52"
										},
										{
											"begin": 3192,
											"end": 3264,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3192,
											"end": 3264,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3254,
											"end": 3259,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3243,
											"end": 3259,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3243,
											"end": 3259,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3237,
											"end": 3264,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3237,
											"end": 3264,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3237,
											"end": 3264,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3237,
											"end": 3264,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3271,
											"end": 3343,
											"name": "tag",
											"source": -1,
											"value": "70"
										},
										{
											"begin": 3271,
											"end": 3343,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3271,
											"end": 3343,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3338,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3322,
											"end": 3338,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3322,
											"end": 3338,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3316,
											"end": 3343,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3316,
											"end": 3343,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3316,
											"end": 3343,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3316,
											"end": 3343,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3351,
											"end": 3619,
											"name": "tag",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 3351,
											"end": 3619,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3416,
											"end": 3417,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3423,
											"end": 3524,
											"name": "tag",
											"source": -1,
											"value": "92"
										},
										{
											"begin": 3423,
											"end": 3524,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3437,
											"end": 3443,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3434,
											"end": 3435,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3431,
											"end": 3444,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 3423,
											"end": 3524,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3423,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "94"
										},
										{
											"begin": 3423,
											"end": 3524,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 3513,
											"end": 3514,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 3508,
											"end": 3511,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3504,
											"end": 3515,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3498,
											"end": 3516,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 3494,
											"end": 3495,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3489,
											"end": 3492,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3485,
											"end": 3496,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3478,
											"end": 3517,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3459,
											"end": 3461,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3456,
											"end": 3457,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3452,
											"end": 3462,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3447,
											"end": 3462,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3447,
											"end": 3462,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3423,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "92"
										},
										{
											"begin": 3423,
											"end": 3524,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3423,
											"end": 3524,
											"name": "tag",
											"source": -1,
											"value": "94"
										},
										{
											"begin": 3423,
											"end": 3524,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3539,
											"end": 3545,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3536,
											"end": 3537,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3533,
											"end": 3546,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 3530,
											"end": 3532,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3530,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "95"
										},
										{
											"begin": 3530,
											"end": 3532,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 3604,
											"end": 3605,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3601,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3590,
											"end": 3593,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3586,
											"end": 3602,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3579,
											"end": 3606,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3530,
											"end": 3532,
											"name": "tag",
											"source": -1,
											"value": "95"
										},
										{
											"begin": 3530,
											"end": 3532,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3400,
											"end": 3619,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3400,
											"end": 3619,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3400,
											"end": 3619,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3400,
											"end": 3619,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3400,
											"end": 3619,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3627,
											"end": 3724,
											"name": "tag",
											"source": -1,
											"value": "62"
										},
										{
											"begin": 3627,
											"end": 3724,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3627,
											"end": 3724,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3715,
											"end": 3717,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 3711,
											"end": 3718,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3706,
											"end": 3708,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 3699,
											"end": 3704,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3695,
											"end": 3709,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3691,
											"end": 3719,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 3681,
											"end": 3719,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3681,
											"end": 3719,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3675,
											"end": 3724,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3675,
											"end": 3724,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3675,
											"end": 3724,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3675,
											"end": 3724,
											"name": "JUMP",
											"source": -1
										}
									]
								},
								"4887836E294A2761413359597244D307BBE3F94827F6160D9E1A399E00E2D1BE": "4e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f",
								"C359735A342ECE061E65AB7390D246D1E53BA5F24EEA70D6201F1D4A7B2F3475": "7364664e417364667364664c4548484a5347445348444a53484a53484a534844534a44484a4f4e47564f"
							}
						},
						"methodIdentifiers": {
							"data1()": "9ffd85c4",
							"data2()": "e3a7fd75",
							"data3()": "fc26b0ab",
							"getData()": "3bc5de30",
							"iterator()": "fddcc148",
							"rlpItem()": "a699fb03"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"data1\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data2\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data3\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"iterator\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"memPtr\",\"type\":\"uint256\"}],\"internalType\":\"struct demo2.RLPItem\",\"name\":\"item\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nextPtr\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rlpItem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"memPtr\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/demo2.sol\":\"demo2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/demo2.sol\":{\"keccak256\":\"0x4eaf7e8eefe20b41dceab5c9417dac1e6752ad752935d67a4629cb277a48b4e2\",\"urls\":[\"bzz-raw://6169ee46e48b81b8207112772ef4dbd7a51a81f949b03e843fb3e9f9c7889cf8\",\"dweb:/ipfs/QmfBw5ozReR3QnheteXrSeWDzodPwwPdNXkRNav32KoJqH\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/demo2.sol": {
				"ast": {
					"absolutePath": "contracts/demo2.sol",
					"exportedSymbols": {
						"demo2": [
							602
						]
					},
					"id": 603,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">",
								"0.4",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4:30:0"
						},
						{
							"id": 2,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "40:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 602,
							"linearizedBaseContracts": [
								602
							],
							"name": "demo2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9ffd85c4",
									"id": 5,
									"name": "data1",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 602,
									"src": "107:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 3,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "107:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "128:48:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_4887836e294a2761413359597244d307bbe3f94827f6160d9e1a399e00e2d1be",
											"typeString": "literal_string \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\""
										},
										"value": "NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc26b0ab",
									"id": 8,
									"name": "data3",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 602,
									"src": "187:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 6,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "187:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "7364664e417364667364664c4548484a5347445348444a53484a53484a534844534a44484a4f4e47564f",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:44:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c359735a342ece061e65ab7390d246d1e53ba5f24eea70d6201f1d4a7b2f3475",
											"typeString": "literal_string \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\""
										},
										"value": "sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e3a7fd75",
									"id": 11,
									"name": "data2",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 602,
									"src": "263:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 9,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "263:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4c45484f4e47564f776a6e66766a3377656838764b4a",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "286:24:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_456403c9720da4fa7d7375867b84ba5ad32318599c72d3314f61b294b0c7ff33",
											"typeString": "literal_string \"LEHONGVOwjnfvj3weh8vKJ\""
										},
										"value": "LEHONGVOwjnfvj3weh8vKJ"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 14,
									"name": "STRING_OFFSET",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 602,
									"src": "321:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 12,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "321:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783830",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "352:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "0x80"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 17,
									"name": "LIST_OFFSET",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 602,
									"src": "367:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 15,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "367:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786330",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "396:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "0xc0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 20,
									"name": "STRING_SHORT_START",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 602,
									"src": "411:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 18,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "411:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783830",
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "447:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "0x80"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 23,
									"name": "STRING_LONG_START",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 602,
									"src": "462:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 21,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "462:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786238",
										"id": 22,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "498:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_184_by_1",
											"typeString": "int_const 184"
										},
										"value": "0xb8"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 26,
									"name": "LIST_SHORT_START",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 602,
									"src": "513:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 24,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "513:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786330",
										"id": 25,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "549:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "0xc0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 29,
									"name": "LIST_LONG_START",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 602,
									"src": "564:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 27,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "564:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786638",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "600:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_248_by_1",
											"typeString": "int_const 248"
										},
										"value": "0xf8"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 32,
									"name": "WORD_SIZE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 602,
									"src": "615:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 30,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "615:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3332",
										"id": 31,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "642:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "demo2.RLPItem",
									"id": 37,
									"members": [
										{
											"constant": false,
											"id": 34,
											"name": "len",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 37,
											"src": "695:8:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 33,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "695:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 36,
											"name": "memPtr",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 37,
											"src": "718:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 35,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "718:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "RLPItem",
									"nodeType": "StructDefinition",
									"scope": 602,
									"src": "665:76:0",
									"visibility": "public"
								},
								{
									"canonicalName": "demo2.Iterator",
									"id": 42,
									"members": [
										{
											"constant": false,
											"id": 39,
											"name": "item",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 42,
											"src": "784:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
												"typeString": "struct demo2.RLPItem"
											},
											"typeName": {
												"contractScope": null,
												"id": 38,
												"name": "RLPItem",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 37,
												"src": "784:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
													"typeString": "struct demo2.RLPItem"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 41,
											"name": "nextPtr",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 42,
											"src": "849:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 40,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "849:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Iterator",
									"nodeType": "StructDefinition",
									"scope": 602,
									"src": "753:164:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a699fb03",
									"id": 44,
									"name": "rlpItem",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 602,
									"src": "929:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_RLPItem_$37_storage",
										"typeString": "struct demo2.RLPItem"
									},
									"typeName": {
										"contractScope": null,
										"id": 43,
										"name": "RLPItem",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 37,
										"src": "929:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
											"typeString": "struct demo2.RLPItem"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fddcc148",
									"id": 46,
									"name": "iterator",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 602,
									"src": "962:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Iterator_$42_storage",
										"typeString": "struct demo2.Iterator"
									},
									"typeName": {
										"contractScope": null,
										"id": 45,
										"name": "Iterator",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 42,
										"src": "962:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Iterator_$42_storage_ptr",
											"typeString": "struct demo2.Iterator"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "1020:149:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 49,
															"name": "rlpItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1035:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_storage",
																"typeString": "struct demo2.RLPItem storage ref"
															}
														},
														"id": 51,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "1035:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "34",
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1049:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "1035:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "1035:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 55,
															"name": "rlpItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1065:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_storage",
																"typeString": "struct demo2.RLPItem storage ref"
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "memPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "1065:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1082:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1065:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1065:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 61,
															"name": "iterator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "1098:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Iterator_$42_storage",
																"typeString": "struct demo2.Iterator storage ref"
															}
														},
														"id": 63,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "item",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 39,
														"src": "1098:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RLPItem_$37_storage",
															"typeString": "struct demo2.RLPItem storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 64,
														"name": "rlpItem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "1114:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RLPItem_$37_storage",
															"typeString": "struct demo2.RLPItem storage ref"
														}
													},
													"src": "1098:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage",
														"typeString": "struct demo2.RLPItem storage ref"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1098:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 67,
															"name": "iterator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "1136:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Iterator_$42_storage",
																"typeString": "struct demo2.Iterator storage ref"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "nextPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 41,
														"src": "1136:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3130",
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1155:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "1136:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "1136:21:0"
											}
										]
									},
									"documentation": null,
									"id": 74,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1010:2:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1020:0:0"
									},
									"scope": 602,
									"src": "999:170:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "1256:232:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 83,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 76,
																	"src": "1287:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Iterator_$42_memory_ptr",
																		"typeString": "struct demo2.Iterator memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Iterator_$42_memory_ptr",
																		"typeString": "struct demo2.Iterator memory"
																	}
																],
																"id": 82,
																"name": "hasNext",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 144,
																"src": "1279:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_struct$_Iterator_$42_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (struct demo2.Iterator memory) pure returns (bool)"
																}
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1279:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 81,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1271:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1271:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "1271:22:0"
											},
											{
												"assignments": [
													88
												],
												"declarations": [
													{
														"constant": false,
														"id": 88,
														"name": "ptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 111,
														"src": "1310:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 87,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1310:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 91,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 89,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "1321:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Iterator_$42_memory_ptr",
															"typeString": "struct demo2.Iterator memory"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "nextPtr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 41,
													"src": "1321:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1310:23:0"
											},
											{
												"assignments": [
													93
												],
												"declarations": [
													{
														"constant": false,
														"id": 93,
														"name": "itemLength",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 111,
														"src": "1348:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 92,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1348:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 97,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 95,
															"name": "ptr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "1378:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 94,
														"name": "_itemLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1366:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1366:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1348:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 98,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "1397:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Iterator_$42_memory_ptr",
																"typeString": "struct demo2.Iterator memory"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "nextPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 41,
														"src": "1397:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 101,
															"name": "ptr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "1412:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 102,
															"name": "itemLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "1418:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1412:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1397:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "1397:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 107,
															"name": "itemLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "1460:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 108,
															"name": "ptr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "1472:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 106,
														"name": "RLPItem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1452:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_RLPItem_$37_storage_ptr_$",
															"typeString": "type(struct demo2.RLPItem storage pointer)"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1452:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_memory",
														"typeString": "struct demo2.RLPItem memory"
													}
												},
												"functionReturnParameters": 80,
												"id": 110,
												"nodeType": "Return",
												"src": "1445:31:0"
											}
										]
									},
									"documentation": null,
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "next",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 112,
												"src": "1195:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Iterator_$42_memory_ptr",
													"typeString": "struct demo2.Iterator"
												},
												"typeName": {
													"contractScope": null,
													"id": 75,
													"name": "Iterator",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 42,
													"src": "1195:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Iterator_$42_storage_ptr",
														"typeString": "struct demo2.Iterator"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1194:22:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 112,
												"src": "1240:14:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 78,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "1240:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1239:16:0"
									},
									"scope": 602,
									"src": "1181:307:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "1555:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 118,
															"name": "iterator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "1585:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Iterator_$42_storage",
																"typeString": "struct demo2.Iterator storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Iterator_$42_storage",
																"typeString": "struct demo2.Iterator storage ref"
															}
														],
														"id": 117,
														"name": "hasNext",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "1577:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_Iterator_$42_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (struct demo2.Iterator memory) pure returns (bool)"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1577:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 116,
												"id": 120,
												"nodeType": "Return",
												"src": "1570:24:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "3bc5de30",
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1526:2:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 122,
												"src": "1549:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 114,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1549:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1548:6:0"
									},
									"scope": 602,
									"src": "1510:96:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "1686:117:0",
										"statements": [
											{
												"assignments": [
													130
												],
												"declarations": [
													{
														"constant": false,
														"id": 130,
														"name": "item",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 143,
														"src": "1701:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
															"typeString": "struct demo2.RLPItem"
														},
														"typeName": {
															"contractScope": null,
															"id": 129,
															"name": "RLPItem",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 37,
															"src": "1701:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
																"typeString": "struct demo2.RLPItem"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 133,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 131,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "1723:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Iterator_$42_memory_ptr",
															"typeString": "struct demo2.Iterator memory"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "item",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 39,
													"src": "1723:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_memory",
														"typeString": "struct demo2.RLPItem memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1701:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 134,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "1754:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Iterator_$42_memory_ptr",
																"typeString": "struct demo2.Iterator memory"
															}
														},
														"id": 135,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nextPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 41,
														"src": "1754:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 136,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "1769:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																	"typeString": "struct demo2.RLPItem memory"
																}
															},
															"id": 137,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "memPtr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "1769:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 138,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "1783:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																	"typeString": "struct demo2.RLPItem memory"
																}
															},
															"id": 139,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "len",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "1783:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1769:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1754:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 128,
												"id": 142,
												"nodeType": "Return",
												"src": "1747:44:0"
											}
										]
									},
									"documentation": null,
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasNext",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 144,
												"src": "1635:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Iterator_$42_memory_ptr",
													"typeString": "struct demo2.Iterator"
												},
												"typeName": {
													"contractScope": null,
													"id": 123,
													"name": "Iterator",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 42,
													"src": "1635:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Iterator_$42_storage_ptr",
														"typeString": "struct demo2.Iterator"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1634:22:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 144,
												"src": "1680:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1680:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1679:6:0"
									},
									"scope": 602,
									"src": "1618:185:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "1901:303:0",
										"statements": [
											{
												"assignments": [
													152
												],
												"declarations": [
													{
														"constant": false,
														"id": 152,
														"name": "result",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 180,
														"src": "1916:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 151,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1916:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 158,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 155,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "1948:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																	"typeString": "struct demo2.RLPItem memory"
																}
															},
															"id": 156,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "len",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "1948:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1938:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 153,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1942:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1938:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1916:41:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 159,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1976:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1976:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1993:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1976:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 165,
												"nodeType": "IfStatement",
												"src": "1972:37:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 163,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "2003:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"functionReturnParameters": 150,
													"id": 164,
													"nodeType": "Return",
													"src": "1996:13:0"
												}
											},
											{
												"assignments": [
													167
												],
												"declarations": [
													{
														"constant": false,
														"id": 167,
														"name": "ptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 180,
														"src": "2026:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 166,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2026:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 168,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2026:8:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2058:58:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2077:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2088:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "result",
																		"nodeType": "YulIdentifier",
																		"src": "2094:6:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2084:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2084:17:0"
															},
															"variableNames": [
																{
																	"name": "ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2077:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 167,
														"isOffset": false,
														"isSlot": false,
														"src": "2077:3:0",
														"valueSize": 1
													},
													{
														"declaration": 152,
														"isOffset": false,
														"isSlot": false,
														"src": "2094:6:0",
														"valueSize": 1
													}
												],
												"id": 169,
												"nodeType": "InlineAssembly",
												"src": "2049:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 171,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "2137:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																	"typeString": "struct demo2.RLPItem memory"
																}
															},
															"id": 172,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "memPtr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "2137:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 173,
															"name": "ptr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "2150:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 174,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "2155:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																	"typeString": "struct demo2.RLPItem memory"
																}
															},
															"id": 175,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "len",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "2155:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 170,
														"name": "copy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "2132:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2132:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "2132:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 152,
													"src": "2186:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 150,
												"id": 179,
												"nodeType": "Return",
												"src": "2179:13:0"
											}
										]
									},
									"documentation": null,
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toRlpBytes",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "1843:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 145,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "1843:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1842:21:0"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "1887:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 148,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1887:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1886:14:0"
									},
									"scope": 602,
									"src": "1823:381:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "2285:254:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 189,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "2308:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 190,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "2308:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2320:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2308:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2300:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "2300:22:0"
											},
											{
												"assignments": [
													196
												],
												"declarations": [
													{
														"constant": false,
														"id": 196,
														"name": "result",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 211,
														"src": "2337:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 195,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2337:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 197,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2337:11:0"
											},
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"name": "memPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 211,
														"src": "2363:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 198,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2363:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 200,
														"name": "item",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "2377:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
															"typeString": "struct demo2.RLPItem memory"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "memPtr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 36,
													"src": "2377:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2363:25:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2412:66:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2431:32:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2446:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2455:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2449:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2449:13:0"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nodeType": "YulIdentifier",
																	"src": "2441:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2441:22:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2431:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 199,
														"isOffset": false,
														"isSlot": false,
														"src": "2455:6:0",
														"valueSize": 1
													},
													{
														"declaration": 196,
														"isOffset": false,
														"isSlot": false,
														"src": "2431:6:0",
														"valueSize": 1
													}
												],
												"id": 203,
												"nodeType": "InlineAssembly",
												"src": "2403:75:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 204,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2501:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2511:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2501:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2523:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2501:26:0",
													"trueExpression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2515:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 187,
												"id": 210,
												"nodeType": "Return",
												"src": "2494:33:0"
											}
										]
									},
									"documentation": null,
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toBoolean",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 212,
												"src": "2235:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 182,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "2235:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2234:21:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 212,
												"src": "2279:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 185,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2279:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2278:6:0"
									},
									"scope": 602,
									"src": "2216:323:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "2623:140:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 220,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "2691:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "2691:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3231",
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2703:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_21_by_1",
																	"typeString": "int_const 21"
																},
																"value": "21"
															},
															"src": "2691:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 219,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2683:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2683:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "2683:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 229,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "2745:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																],
																"id": 228,
																"name": "toUint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "2738:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_struct$_RLPItem_$37_memory_ptr_$returns$_t_uint256_$",
																	"typeString": "function (struct demo2.RLPItem memory) pure returns (uint256)"
																}
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2738:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2730:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 226,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2730:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2730:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 218,
												"id": 232,
												"nodeType": "Return",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": null,
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 234,
												"src": "2570:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 213,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "2570:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2569:21:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 234,
												"src": "2614:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2613:9:0"
									},
									"scope": 602,
									"src": "2551:212:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "2841:603:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 242,
																		"name": "item",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 236,
																		"src": "2864:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																			"typeString": "struct demo2.RLPItem memory"
																		}
																	},
																	"id": 243,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "2864:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2875:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2864:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 246,
																		"name": "item",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 236,
																		"src": "2880:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																			"typeString": "struct demo2.RLPItem memory"
																		}
																	},
																	"id": 247,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "2880:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3333",
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2892:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_33_by_1",
																		"typeString": "int_const 33"
																	},
																	"value": "33"
																},
																"src": "2880:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2864:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2856:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2856:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "2856:39:0"
											},
											{
												"assignments": [
													254
												],
												"declarations": [
													{
														"constant": false,
														"id": 254,
														"name": "offset",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 288,
														"src": "2912:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 253,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2912:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 259,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 256,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "2941:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																	"typeString": "struct demo2.RLPItem memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "memPtr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "2941:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 255,
														"name": "_payloadOffset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "2926:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2912:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 261,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "2976:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 262,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "2976:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 263,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "2988:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2976:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6c656e677468206973206c657373207468616e206f6666736574",
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2996:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b0b42ce8b5dee5c853d03ff9713140c28ab451add284160f67ced4e683e6ae54",
																"typeString": "literal_string \"length is less than offset\""
															},
															"value": "length is less than offset"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b0b42ce8b5dee5c853d03ff9713140c28ab451add284160f67ced4e683e6ae54",
																"typeString": "literal_string \"length is less than offset\""
															}
														],
														"id": 260,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2968:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2968:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "2968:57:0"
											},
											{
												"assignments": [
													269
												],
												"declarations": [
													{
														"constant": false,
														"id": 269,
														"name": "len",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 288,
														"src": "3040:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 268,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3040:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 274,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 270,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "3051:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 271,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "3051:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 272,
														"name": "offset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "3062:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3051:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3040:28:0"
											},
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"name": "result",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 288,
														"src": "3085:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 275,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3085:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 277,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "3085:11:0"
											},
											{
												"assignments": [
													279
												],
												"declarations": [
													{
														"constant": false,
														"id": 279,
														"name": "memPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 288,
														"src": "3111:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 278,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3111:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 284,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 280,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "3125:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "memPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "3125:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 282,
														"name": "offset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "3139:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3125:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3111:34:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3169:236:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3188:23:0",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3204:6:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3198:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3198:13:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3188:6:0"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3303:87:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3326:45:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "result",
																					"nodeType": "YulIdentifier",
																					"src": "3340:6:0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3352:3:0",
																							"type": "",
																							"value": "256"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3361:2:0",
																									"type": "",
																									"value": "32"
																								},
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3365:3:0"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "3357:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3357:12:0"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "3348:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3348:22:0"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "3336:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3336:35:0"
																		},
																		"variableNames": [
																			{
																				"name": "result",
																				"nodeType": "YulIdentifier",
																				"src": "3326:6:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3294:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3299:2:0",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3291:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3291:11:0"
															},
															"nodeType": "YulIf",
															"src": "3288:2:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 269,
														"isOffset": false,
														"isSlot": false,
														"src": "3294:3:0",
														"valueSize": 1
													},
													{
														"declaration": 269,
														"isOffset": false,
														"isSlot": false,
														"src": "3365:3:0",
														"valueSize": 1
													},
													{
														"declaration": 279,
														"isOffset": false,
														"isSlot": false,
														"src": "3204:6:0",
														"valueSize": 1
													},
													{
														"declaration": 276,
														"isOffset": false,
														"isSlot": false,
														"src": "3188:6:0",
														"valueSize": 1
													},
													{
														"declaration": 276,
														"isOffset": false,
														"isSlot": false,
														"src": "3326:6:0",
														"valueSize": 1
													},
													{
														"declaration": 276,
														"isOffset": false,
														"isSlot": false,
														"src": "3340:6:0",
														"valueSize": 1
													}
												],
												"id": 285,
												"nodeType": "InlineAssembly",
												"src": "3160:245:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 286,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 276,
													"src": "3426:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 240,
												"id": 287,
												"nodeType": "Return",
												"src": "3419:13:0"
											}
										]
									},
									"documentation": null,
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 289,
												"src": "2791:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 235,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "2791:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2790:21:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 289,
												"src": "2835:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2835:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2834:6:0"
									},
									"scope": 602,
									"src": "2775:669:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "3537:264:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 297,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 291,
																	"src": "3592:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 298,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "3592:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3333",
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3604:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33_by_1",
																	"typeString": "int_const 33"
																},
																"value": "33"
															},
															"src": "3592:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 296,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3584:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3584:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "3584:23:0"
											},
											{
												"assignments": [
													304
												],
												"declarations": [
													{
														"constant": false,
														"id": 304,
														"name": "result",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 316,
														"src": "3624:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 303,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3624:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "3624:11:0"
											},
											{
												"assignments": [
													307
												],
												"declarations": [
													{
														"constant": false,
														"id": 307,
														"name": "memPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 316,
														"src": "3650:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 306,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3650:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 308,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "3664:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 309,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "memPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "3664:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 310,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3678:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3664:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3650:29:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3703:57:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3722:23:0",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3738:6:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3732:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3732:13:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3722:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 307,
														"isOffset": false,
														"isSlot": false,
														"src": "3738:6:0",
														"valueSize": 1
													},
													{
														"declaration": 304,
														"isOffset": false,
														"isSlot": false,
														"src": "3722:6:0",
														"valueSize": 1
													}
												],
												"id": 313,
												"nodeType": "InlineAssembly",
												"src": "3694:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 314,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 304,
													"src": "3783:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 295,
												"id": 315,
												"nodeType": "Return",
												"src": "3776:13:0"
											}
										]
									},
									"documentation": null,
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUintStrict",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 317,
												"src": "3487:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 290,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "3487:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3486:21:0"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 317,
												"src": "3531:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3531:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3530:6:0"
									},
									"scope": 602,
									"src": "3465:336:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "3898:414:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 325,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "3921:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 326,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "3921:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3932:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3921:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 324,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3913:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3913:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "3913:21:0"
											},
											{
												"assignments": [
													332
												],
												"declarations": [
													{
														"constant": false,
														"id": 332,
														"name": "offset",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 367,
														"src": "3951:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 331,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3951:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 337,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 334,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "3980:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																	"typeString": "struct demo2.RLPItem memory"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "memPtr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "3980:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "_payloadOffset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "3965:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3965:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3951:41:0"
											},
											{
												"assignments": [
													339
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"name": "len",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 367,
														"src": "4007:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 338,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4007:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 344,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 340,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "4018:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 341,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "4018:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 342,
														"name": "offset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "4029:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4018:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:28:0"
											},
											{
												"assignments": [
													346
												],
												"declarations": [
													{
														"constant": false,
														"id": 346,
														"name": "result",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 367,
														"src": "4065:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 345,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4065:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 351,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 349,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "4097:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4087:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 347,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4091:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4087:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4065:36:0"
											},
											{
												"assignments": [
													353
												],
												"declarations": [
													{
														"constant": false,
														"id": 353,
														"name": "destPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 367,
														"src": "4118:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 352,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4118:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 354,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4118:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4154:62:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4173:28:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4188:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "result",
																		"nodeType": "YulIdentifier",
																		"src": "4194:6:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4184:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4184:17:0"
															},
															"variableNames": [
																{
																	"name": "destPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4173:7:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 353,
														"isOffset": false,
														"isSlot": false,
														"src": "4173:7:0",
														"valueSize": 1
													},
													{
														"declaration": 346,
														"isOffset": false,
														"isSlot": false,
														"src": "4194:6:0",
														"valueSize": 1
													}
												],
												"id": 355,
												"nodeType": "InlineAssembly",
												"src": "4145:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 357,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "4237:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 358,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "memPtr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 36,
																"src": "4237:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"id": 359,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "4251:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4237:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 361,
															"name": "destPtr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "4259:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 362,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "4268:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 356,
														"name": "copy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "4232:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256) pure"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4232:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "4232:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 365,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 346,
													"src": "4294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 323,
												"id": 366,
												"nodeType": "Return",
												"src": "4287:13:0"
											}
										]
									},
									"documentation": null,
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toBytes",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 368,
												"src": "3840:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 318,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "3840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3839:21:0"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 368,
												"src": "3884:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 321,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3884:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3883:14:0"
									},
									"scope": 602,
									"src": "3823:489:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "4401:393:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 375,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "4420:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "4420:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4432:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4420:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 381,
												"nodeType": "IfStatement",
												"src": "4416:27:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4442:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 374,
													"id": 380,
													"nodeType": "Return",
													"src": "4435:8:0"
												}
											},
											{
												"assignments": [
													383
												],
												"declarations": [
													{
														"constant": false,
														"id": 383,
														"name": "count",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 422,
														"src": "4458:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 382,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4458:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4471:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4458:14:0"
											},
											{
												"assignments": [
													387
												],
												"declarations": [
													{
														"constant": false,
														"id": 387,
														"name": "currPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 422,
														"src": "4487:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 386,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4487:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 395,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 388,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "4502:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 389,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "memPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "4502:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 391,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "4531:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 392,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "memPtr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 36,
																"src": "4531:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 390,
															"name": "_payloadOffset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "4516:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) pure returns (uint256)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4516:27:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4502:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4487:56:0"
											},
											{
												"assignments": [
													397
												],
												"declarations": [
													{
														"constant": false,
														"id": 397,
														"name": "endPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 422,
														"src": "4558:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 396,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4558:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 403,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 398,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "4572:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "memPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "4572:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 400,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "4586:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 401,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "4586:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4572:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4558:36:0"
											},
											{
												"body": {
													"id": 418,
													"nodeType": "Block",
													"src": "4634:122:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 407,
																	"name": "currPtr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "4653:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 408,
																		"name": "currPtr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 387,
																		"src": "4663:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 410,
																				"name": "currPtr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 387,
																				"src": "4685:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 409,
																			"name": "_itemLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 501,
																			"src": "4673:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4673:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4663:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4653:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 414,
															"nodeType": "ExpressionStatement",
															"src": "4653:40:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "4733:7:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 415,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "4733:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 417,
															"nodeType": "ExpressionStatement",
															"src": "4733:7:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 404,
														"name": "currPtr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "4616:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 405,
														"name": "endPtr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "4626:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4616:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 419,
												"nodeType": "WhileStatement",
												"src": "4609:147:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 420,
													"name": "count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 383,
													"src": "4777:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 374,
												"id": 421,
												"nodeType": "Return",
												"src": "4770:12:0"
											}
										]
									},
									"documentation": null,
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "numItems",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 423,
												"src": "4352:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 369,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "4352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4351:21:0"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 423,
												"src": "4395:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4395:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4394:6:0"
									},
									"scope": 602,
									"src": "4334:460:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "4868:1552:0",
										"statements": [
											{
												"assignments": [
													431
												],
												"declarations": [
													{
														"constant": false,
														"id": 431,
														"name": "itemLen",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 500,
														"src": "4883:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 430,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4883:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 432,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4883:12:0"
											},
											{
												"assignments": [
													434
												],
												"declarations": [
													{
														"constant": false,
														"id": 434,
														"name": "byte0",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 500,
														"src": "4910:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 433,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4910:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 435,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4910:10:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4944:65:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4963:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4977:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4986:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4980:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4980:13:0"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nodeType": "YulIdentifier",
																	"src": "4972:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4972:22:0"
															},
															"variableNames": [
																{
																	"name": "byte0",
																	"nodeType": "YulIdentifier",
																	"src": "4963:5:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 434,
														"isOffset": false,
														"isSlot": false,
														"src": "4963:5:0",
														"valueSize": 1
													},
													{
														"declaration": 425,
														"isOffset": false,
														"isSlot": false,
														"src": "4986:6:0",
														"valueSize": 1
													}
												],
												"id": 436,
												"nodeType": "InlineAssembly",
												"src": "4935:74:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 437,
														"name": "byte0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "5029:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 438,
														"name": "STRING_SHORT_START",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "5037:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5029:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 444,
															"name": "byte0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "5111:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 445,
															"name": "STRING_LONG_START",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "5119:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "5111:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 455,
																"name": "byte0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 434,
																"src": "5221:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 456,
																"name": "LIST_SHORT_START",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5229:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "5221:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 470,
																	"name": "byte0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "5816:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 471,
																	"name": "LIST_LONG_START",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "5824:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "5816:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 493,
																"nodeType": "Block",
																"src": "5935:443:0",
																"statements": [
																	{
																		"assignments": [
																			483
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 483,
																				"name": "dataLen",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 493,
																				"src": "5954:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 482,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "5954:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 484,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5954:12:0"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "5994:302:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "6017:31:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "byte0",
																								"nodeType": "YulIdentifier",
																								"src": "6036:5:0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6043:4:0",
																								"type": "",
																								"value": "0xf7"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6032:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6032:16:0"
																					},
																					"variables": [
																						{
																							"name": "byteLen",
																							"nodeType": "YulTypedName",
																							"src": "6021:7:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"nodeType": "YulAssignment",
																					"src": "6070:24:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "memPtr",
																								"nodeType": "YulIdentifier",
																								"src": "6084:6:0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6092:1:0",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6080:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6080:14:0"
																					},
																					"variableNames": [
																						{
																							"name": "memPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6070:6:0"
																						}
																					]
																				},
																				{
																					"nodeType": "YulAssignment",
																					"src": "6118:57:0",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "memPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6139:6:0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6133:5:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6133:13:0"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6152:3:0",
																										"type": "",
																										"value": "256"
																									},
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "6161:2:0",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "byteLen",
																												"nodeType": "YulIdentifier",
																												"src": "6165:7:0"
																											}
																										],
																										"functionName": {
																											"name": "sub",
																											"nodeType": "YulIdentifier",
																											"src": "6157:3:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6157:16:0"
																									}
																								],
																								"functionName": {
																									"name": "exp",
																									"nodeType": "YulIdentifier",
																									"src": "6148:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6148:26:0"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "6129:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6129:46:0"
																					},
																					"variableNames": [
																						{
																							"name": "dataLen",
																							"nodeType": "YulIdentifier",
																							"src": "6118:7:0"
																						}
																					]
																				},
																				{
																					"nodeType": "YulAssignment",
																					"src": "6237:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "dataLen",
																								"nodeType": "YulIdentifier",
																								"src": "6252:7:0"
																							},
																							{
																								"arguments": [
																									{
																										"name": "byteLen",
																										"nodeType": "YulIdentifier",
																										"src": "6265:7:0"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6274:1:0",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6261:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6261:15:0"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6248:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6248:29:0"
																					},
																					"variableNames": [
																						{
																							"name": "itemLen",
																							"nodeType": "YulIdentifier",
																							"src": "6237:7:0"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 434,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6036:5:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 483,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6118:7:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 483,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6252:7:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 431,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6237:7:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 425,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6070:6:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 425,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6084:6:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 425,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6139:6:0",
																				"valueSize": 1
																			}
																		],
																		"id": 485,
																		"nodeType": "InlineAssembly",
																		"src": "5985:311:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 489,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 487,
																						"name": "itemLen",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 431,
																						"src": "6322:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 488,
																						"name": "dataLen",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 483,
																						"src": "6333:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "6322:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "6164646974696f6e206f766572666c6f77",
																					"id": 490,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6342:19:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
																						"typeString": "literal_string \"addition overflow\""
																					},
																					"value": "addition overflow"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
																						"typeString": "literal_string \"addition overflow\""
																					}
																				],
																				"id": 486,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-18,
																					-18
																				],
																				"referencedDeclaration": -18,
																				"src": "6314:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6314:48:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 492,
																		"nodeType": "ExpressionStatement",
																		"src": "6314:48:0"
																	}
																]
															},
															"id": 494,
															"nodeType": "IfStatement",
															"src": "5812:566:0",
															"trueBody": {
																"id": 481,
																"nodeType": "Block",
																"src": "5841:73:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 473,
																				"name": "itemLen",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 431,
																				"src": "5860:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 478,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 476,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 474,
																						"name": "byte0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 434,
																						"src": "5870:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 475,
																						"name": "LIST_SHORT_START",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 26,
																						"src": "5878:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "5870:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 477,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5897:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "5870:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5860:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 480,
																		"nodeType": "ExpressionStatement",
																		"src": "5860:38:0"
																	}
																]
															}
														},
														"id": 495,
														"nodeType": "IfStatement",
														"src": "5217:1161:0",
														"trueBody": {
															"id": 469,
															"nodeType": "Block",
															"src": "5247:544:0",
															"statements": [
																{
																	"assignments": [
																		459
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 459,
																			"name": "dataLen",
																			"nodeType": "VariableDeclaration",
																			"overrides": null,
																			"scope": 469,
																			"src": "5266:12:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 458,
																				"name": "uint",
																				"nodeType": "ElementaryTypeName",
																				"src": "5266:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"value": null,
																			"visibility": "internal"
																		}
																	],
																	"id": 460,
																	"initialValue": null,
																	"nodeType": "VariableDeclarationStatement",
																	"src": "5266:12:0"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "5306:403:0",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5329:31:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "byte0",
																							"nodeType": "YulIdentifier",
																							"src": "5348:5:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5355:4:0",
																							"type": "",
																							"value": "0xb7"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "5344:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5344:16:0"
																				},
																				"variables": [
																					{
																						"name": "byteLen",
																						"nodeType": "YulTypedName",
																						"src": "5333:7:0",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "5417:24:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "memPtr",
																							"nodeType": "YulIdentifier",
																							"src": "5431:6:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5439:1:0",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5427:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5427:14:0"
																				},
																				"variableNames": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "5417:6:0"
																					}
																				]
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "5538:57:0",
																				"value": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "5559:6:0"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "5553:5:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5553:13:0"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5572:3:0",
																									"type": "",
																									"value": "256"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "5581:2:0",
																											"type": "",
																											"value": "32"
																										},
																										{
																											"name": "byteLen",
																											"nodeType": "YulIdentifier",
																											"src": "5585:7:0"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nodeType": "YulIdentifier",
																										"src": "5577:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5577:16:0"
																								}
																							],
																							"functionName": {
																								"name": "exp",
																								"nodeType": "YulIdentifier",
																								"src": "5568:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5568:26:0"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "5549:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5549:46:0"
																				},
																				"variableNames": [
																					{
																						"name": "dataLen",
																						"nodeType": "YulIdentifier",
																						"src": "5538:7:0"
																					}
																				]
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "5650:40:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "dataLen",
																							"nodeType": "YulIdentifier",
																							"src": "5665:7:0"
																						},
																						{
																							"arguments": [
																								{
																									"name": "byteLen",
																									"nodeType": "YulIdentifier",
																									"src": "5678:7:0"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5687:1:0",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5674:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5674:15:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5661:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5661:29:0"
																				},
																				"variableNames": [
																					{
																						"name": "itemLen",
																						"nodeType": "YulIdentifier",
																						"src": "5650:7:0"
																					}
																				]
																			}
																		]
																	},
																	"evmVersion": "istanbul",
																	"externalReferences": [
																		{
																			"declaration": 434,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "5348:5:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 459,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "5538:7:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 459,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "5665:7:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 431,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "5650:7:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 425,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "5417:6:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 425,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "5431:6:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 425,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "5559:6:0",
																			"valueSize": 1
																		}
																	],
																	"id": 461,
																	"nodeType": "InlineAssembly",
																	"src": "5297:412:0"
																},
																{
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 463,
																					"name": "itemLen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 431,
																					"src": "5735:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 464,
																					"name": "dataLen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 459,
																					"src": "5746:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5735:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"hexValue": "6164646974696f6e206f766572666c6f77",
																				"id": 466,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5755:19:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
																					"typeString": "literal_string \"addition overflow\""
																				},
																				"value": "addition overflow"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
																					"typeString": "literal_string \"addition overflow\""
																				}
																			],
																			"id": 462,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				-18,
																				-18
																			],
																			"referencedDeclaration": -18,
																			"src": "5727:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (bool,string memory) pure"
																			}
																		},
																		"id": 467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5727:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 468,
																	"nodeType": "ExpressionStatement",
																	"src": "5727:48:0"
																}
															]
														}
													},
													"id": 496,
													"nodeType": "IfStatement",
													"src": "5107:1271:0",
													"trueBody": {
														"expression": {
															"argumentTypes": null,
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"id": 447,
																"name": "itemLen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "5155:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 448,
																		"name": "byte0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 434,
																		"src": "5165:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 449,
																		"name": "STRING_SHORT_START",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 20,
																		"src": "5173:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "5165:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5194:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5165:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5155:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 454,
														"nodeType": "ExpressionStatement",
														"src": "5155:40:0"
													}
												},
												"id": 497,
												"nodeType": "IfStatement",
												"src": "5025:1353:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 440,
															"name": "itemLen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "5074:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5084:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "5074:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 443,
													"nodeType": "ExpressionStatement",
													"src": "5074:11:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 498,
													"name": "itemLen",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 431,
													"src": "6401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 429,
												"id": 499,
												"nodeType": "Return",
												"src": "6394:14:0"
											}
										]
									},
									"documentation": null,
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_itemLength",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"name": "memPtr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 501,
												"src": "4827:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4827:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4826:13:0"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 501,
												"src": "4862:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4862:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4861:6:0"
									},
									"scope": 602,
									"src": "4806:1614:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "6549:538:0",
										"statements": [
											{
												"assignments": [
													509
												],
												"declarations": [
													{
														"constant": false,
														"id": 509,
														"name": "byte0",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 555,
														"src": "6564:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 508,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6564:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 510,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "6564:10:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6598:65:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6617:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6631:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6640:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6634:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6634:13:0"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nodeType": "YulIdentifier",
																	"src": "6626:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6626:22:0"
															},
															"variableNames": [
																{
																	"name": "byte0",
																	"nodeType": "YulIdentifier",
																	"src": "6617:5:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 509,
														"isOffset": false,
														"isSlot": false,
														"src": "6617:5:0",
														"valueSize": 1
													},
													{
														"declaration": 503,
														"isOffset": false,
														"isSlot": false,
														"src": "6640:6:0",
														"valueSize": 1
													}
												],
												"id": 511,
												"nodeType": "InlineAssembly",
												"src": "6589:74:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 512,
														"name": "byte0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "6683:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 513,
														"name": "STRING_SHORT_START",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "6691:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6683:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 517,
																"name": "byte0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 509,
																"src": "6760:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 518,
																"name": "STRING_LONG_START",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "6768:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "6760:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 520,
																			"name": "byte0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 509,
																			"src": "6790:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 521,
																			"name": "LIST_SHORT_START",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 26,
																			"src": "6799:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "6790:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 523,
																			"name": "byte0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 509,
																			"src": "6819:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 524,
																			"name": "LIST_LONG_START",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 29,
																			"src": "6827:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "6819:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6790:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 527,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6789:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6760:83:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 531,
																"name": "byte0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 509,
																"src": "6894:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 532,
																"name": "LIST_SHORT_START",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "6902:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "6894:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"expression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 543,
																		"name": "byte0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 509,
																		"src": "7042:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 546,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 544,
																					"name": "LIST_LONG_START",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 29,
																					"src": "7051:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 545,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7069:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "7051:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 547,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7050:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "7042:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7074:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7042:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 507,
															"id": 551,
															"nodeType": "Return",
															"src": "7035:40:0"
														},
														"id": 552,
														"nodeType": "IfStatement",
														"src": "6890:185:0",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 534,
																		"name": "byte0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 509,
																		"src": "6963:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 537,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 535,
																					"name": "STRING_LONG_START",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 23,
																					"src": "6972:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 536,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6992:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "6972:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 538,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6971:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "6963:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6997:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6963:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 507,
															"id": 542,
															"nodeType": "Return",
															"src": "6956:42:0"
														}
													},
													"id": 553,
													"nodeType": "IfStatement",
													"src": "6756:319:0",
													"trueBody": {
														"expression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6869:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"functionReturnParameters": 507,
														"id": 530,
														"nodeType": "Return",
														"src": "6862:8:0"
													}
												},
												"id": 554,
												"nodeType": "IfStatement",
												"src": "6679:396:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6735:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 507,
													"id": 516,
													"nodeType": "Return",
													"src": "6728:8:0"
												}
											}
										]
									},
									"documentation": null,
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_payloadOffset",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"name": "memPtr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 556,
												"src": "6508:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6508:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6507:13:0"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 556,
												"src": "6543:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6543:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6542:6:0"
									},
									"scope": 602,
									"src": "6484:603:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "7158:727:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 565,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "7177:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7184:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7177:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 569,
												"nodeType": "IfStatement",
												"src": "7173:21:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 564,
													"id": 568,
													"nodeType": "Return",
													"src": "7187:7:0"
												}
											},
											{
												"body": {
													"id": 586,
													"nodeType": "Block",
													"src": "7305:182:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "7333:66:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dest",
																					"nodeType": "YulIdentifier",
																					"src": "7363:4:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "7375:3:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7369:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7369:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7356:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7356:24:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7356:24:0"
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 560,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7363:4:0",
																	"valueSize": 1
																},
																{
																	"declaration": 558,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7375:3:0",
																	"valueSize": 1
																}
															],
															"id": 577,
															"nodeType": "InlineAssembly",
															"src": "7324:75:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 578,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "7419:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 579,
																	"name": "WORD_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "7426:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "7419:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 581,
															"nodeType": "ExpressionStatement",
															"src": "7419:16:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 582,
																	"name": "dest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "7454:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 583,
																	"name": "WORD_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "7462:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "7454:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 585,
															"nodeType": "ExpressionStatement",
															"src": "7454:17:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 570,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "7269:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 571,
														"name": "WORD_SIZE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "7276:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "7269:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 587,
												"initializationExpression": null,
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 573,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "7287:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"argumentTypes": null,
															"id": 574,
															"name": "WORD_SIZE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "7294:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "7287:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 576,
													"nodeType": "ExpressionStatement",
													"src": "7287:16:0"
												},
												"nodeType": "ForStatement",
												"src": "7262:225:0"
											},
											{
												"assignments": [
													589
												],
												"declarations": [
													{
														"constant": false,
														"id": 589,
														"name": "mask",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 600,
														"src": "7588:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 588,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7588:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 598,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "323536",
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7600:3:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "256"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 591,
																		"name": "WORD_SIZE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 32,
																		"src": "7608:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 592,
																		"name": "len",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 562,
																		"src": "7620:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7608:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 594,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7607:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7600:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7627:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "7600:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7588:40:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7652:222:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7671:41:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "7696:3:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7690:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7690:10:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "7706:4:0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7702:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7702:9:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7686:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7686:26:0"
															},
															"variables": [
																{
																	"name": "srcpart",
																	"nodeType": "YulTypedName",
																	"src": "7675:7:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7746:38:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dest",
																				"nodeType": "YulIdentifier",
																				"src": "7772:4:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7766:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7766:11:0"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "7779:4:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7762:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7762:22:0"
															},
															"variables": [
																{
																	"name": "destpart",
																	"nodeType": "YulTypedName",
																	"src": "7750:8:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dest",
																		"nodeType": "YulIdentifier",
																		"src": "7831:4:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "destpart",
																				"nodeType": "YulIdentifier",
																				"src": "7840:8:0"
																			},
																			{
																				"name": "srcpart",
																				"nodeType": "YulIdentifier",
																				"src": "7850:7:0"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "7837:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7837:21:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7824:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7824:35:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7824:35:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 560,
														"isOffset": false,
														"isSlot": false,
														"src": "7772:4:0",
														"valueSize": 1
													},
													{
														"declaration": 560,
														"isOffset": false,
														"isSlot": false,
														"src": "7831:4:0",
														"valueSize": 1
													},
													{
														"declaration": 589,
														"isOffset": false,
														"isSlot": false,
														"src": "7706:4:0",
														"valueSize": 1
													},
													{
														"declaration": 589,
														"isOffset": false,
														"isSlot": false,
														"src": "7779:4:0",
														"valueSize": 1
													},
													{
														"declaration": 558,
														"isOffset": false,
														"isSlot": false,
														"src": "7696:3:0",
														"valueSize": 1
													}
												],
												"id": 599,
												"nodeType": "InlineAssembly",
												"src": "7643:231:0"
											}
										]
									},
									"documentation": null,
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "copy",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"name": "src",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 601,
												"src": "7114:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7114:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"name": "dest",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 601,
												"src": "7124:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7124:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"name": "len",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 601,
												"src": "7135:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7135:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7113:31:0"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7158:0:0"
									},
									"scope": 602,
									"src": "7100:785:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 603,
							"src": "81:7811:0"
						}
					],
					"src": "4:7903:0"
				},
				"id": 0
			}
		}
	}
}