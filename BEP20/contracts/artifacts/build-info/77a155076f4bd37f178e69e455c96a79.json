{
	"id": "77a155076f4bd37f178e69e455c96a79",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.4",
	"solcLongVersion": "0.6.4+commit.1dca32f3",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/demo2.sol": {
				"content": "    pragma solidity >0.4.0 <0.9.0;\r\n    pragma experimental ABIEncoderV2;\r\n\r\n    contract demo2 {\r\n        bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\";\r\n        bytes public data3 = \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\";\r\n        bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\";\r\n        uint8 constant STRING_OFFSET = 0x80;\r\n        uint8 constant LIST_OFFSET = 0xc0;\r\n        uint8 constant STRING_SHORT_START = 0x80;\r\n        uint8 constant STRING_LONG_START  = 0xb8;\r\n        uint8 constant LIST_SHORT_START   = 0xc0;\r\n        uint8 constant LIST_LONG_START    = 0xf8;\r\n        uint8 constant WORD_SIZE = 32;\r\n        \r\n        struct RLPItem {\r\n            uint len;\r\n            uint memPtr;\r\n        }\r\n\r\n        struct Iterator {\r\n            RLPItem item;   // Item that's being iterated over.\r\n            uint nextPtr;   // Position of the next item in the list.\r\n        }\r\n\r\n        RLPItem public rlpItem;\r\n\r\n        constructor(uint _len, uint _menPtr) public {\r\n            rlpItem.len = _len;\r\n            rlpItem.memPtr = _menPtr;\r\n        }\r\n        \r\n\r\n        function getData() public view returns(uint) {\r\n            return toUintStrict(rlpItem);\r\n        }\r\n\r\n        function toUint(RLPItem memory item) internal pure returns (uint) {\r\n            require(item.len > 0 && item.len <= 33);\r\n\r\n            uint offset = _payloadOffset(item.memPtr);\r\n            require(item.len >= offset, \"length is less than offset\");\r\n            uint len = item.len - offset;\r\n\r\n            uint result;\r\n            uint memPtr = item.memPtr + offset;\r\n            assembly {\r\n                result := mload(memPtr)\r\n\r\n            // shfit to the correct location if neccesary\r\n                if lt(len, 32) {\r\n                    result := div(result, exp(256, sub(32, len)))\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n         \r\n        function toUintStrict(RLPItem memory item) internal pure returns (uint) {\r\n            // one byte prefix\r\n            require(item.len == 33);\r\n\r\n            uint result;\r\n            uint memPtr = item.memPtr + 1;\r\n            assembly {\r\n                result := mload(memPtr)\r\n            }\r\n\r\n            return result;\r\n        }\r\n        \r\n\r\n        function toBytes(RLPItem memory item) internal pure returns (bytes memory) {\r\n            require(item.len > 0);\r\n\r\n            uint offset = _payloadOffset(item.memPtr);\r\n            uint len = item.len - offset; // data length\r\n            bytes memory result = new bytes(len);\r\n\r\n            uint destPtr;\r\n            assembly {\r\n                destPtr := add(0x20, result)\r\n            }\r\n\r\n            copy(item.memPtr + offset, destPtr, len);\r\n            return result;\r\n        }\r\n\r\n        \r\n        function numItems(RLPItem memory item) private pure returns (uint) {\r\n            if (item.len == 0) return 0;\r\n            uint count = 0;\r\n            uint currPtr = item.memPtr + _payloadOffset(item.memPtr);\r\n            uint endPtr = item.memPtr + item.len;\r\n            while (currPtr < endPtr) {\r\n                currPtr = currPtr + _itemLength(currPtr); // skip over an item\r\n                count++;\r\n            }\r\n            return count;\r\n        }\r\n\r\n        function _itemLength(uint memPtr) private pure returns (uint) {\r\n            uint itemLen;\r\n            uint byte0;\r\n            assembly {\r\n                byte0 := byte(0, mload(memPtr))\r\n            }\r\n\r\n            if (byte0 < STRING_SHORT_START)\r\n                itemLen = 1;\r\n\r\n            else if (byte0 < STRING_LONG_START)\r\n                itemLen = byte0 - STRING_SHORT_START + 1;\r\n\r\n            else if (byte0 < LIST_SHORT_START) {\r\n                uint dataLen;\r\n                assembly {\r\n                    let byteLen := sub(byte0, 0xb7) // # of bytes the actual length is\r\n                    memPtr := add(memPtr, 1) // skip over the first byte\r\n\r\n                    /* 32 byte word size */\r\n                    dataLen := div(mload(memPtr), exp(256, sub(32, byteLen))) // right shifting to get the len\r\n                    itemLen := add(dataLen, add(byteLen, 1))\r\n                }\r\n                require(itemLen >= dataLen, \"addition overflow\");\r\n            }\r\n\r\n            else if (byte0 < LIST_LONG_START) {\r\n                itemLen = byte0 - LIST_SHORT_START + 1;\r\n            }\r\n\r\n            else {\r\n                uint dataLen;\r\n                assembly {\r\n                    let byteLen := sub(byte0, 0xf7)\r\n                    memPtr := add(memPtr, 1)\r\n\r\n                    dataLen := div(mload(memPtr), exp(256, sub(32, byteLen))) // right shifting to the correct length\r\n                    itemLen := add(dataLen, add(byteLen, 1))\r\n                }\r\n                require(itemLen >= dataLen, \"addition overflow\");\r\n            }\r\n\r\n            return itemLen;\r\n        }\r\n\r\n         // @return number of bytes until the data\r\n        function _payloadOffset(uint memPtr) private pure returns (uint) {\r\n            uint byte0;\r\n            assembly {\r\n                byte0 := byte(0, mload(memPtr))\r\n            }\r\n\r\n            if (byte0 < STRING_SHORT_START)\r\n                return 0;\r\n            else if (byte0 < STRING_LONG_START || (byte0 >= LIST_SHORT_START && byte0 < LIST_LONG_START))\r\n                return 1;\r\n            else if (byte0 < LIST_SHORT_START)  // being explicit\r\n                return byte0 - (STRING_LONG_START - 1) + 1;\r\n            else\r\n                return byte0 - (LIST_LONG_START - 1) + 1;\r\n        } \r\n\r\n        function copy(uint src, uint dest, uint len) private pure {\r\n            if (len == 0) return;\r\n\r\n            // copy as many word sizes as possible\r\n            for (; len >= WORD_SIZE; len -= WORD_SIZE) {\r\n                assembly {\r\n                    mstore(dest, mload(src))\r\n                }\r\n\r\n                src += WORD_SIZE;\r\n                dest += WORD_SIZE;\r\n            }\r\n\r\n            // left over bytes. Mask is used to remove unwanted bytes from the word\r\n            uint mask = 256 ** (WORD_SIZE - len) - 1;\r\n            assembly {\r\n                let srcpart := and(mload(src), not(mask)) // zero out src\r\n                let destpart := and(mload(dest), mask) // retrieve the bytes\r\n                mstore(dest, or(destpart, srcpart))\r\n            }\r\n        }\r\n    } \r\n            "
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/demo2.sol": {
				"demo2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_len",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_menPtr",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "data1",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "data2",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "data3",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rlpItem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "len",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "memPtr",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/demo2.sol\":81:6347  contract demo2 {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/demo2.sol\":107:176  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x2e\n  dup2\n  mstore\n  0x20\n  add\n  data_4887836e294a2761413359597244d307bbe3f94827f6160d9e1a399e00e2d1be\n  0x2e\n  swap2\n  codecopy\n  0x00\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/demo2.sol\":187:252  bytes public data3 = \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\" */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x2a\n  dup2\n  mstore\n  0x20\n  add\n  data_c359735a342ece061e65ab7390d246d1e53ba5f24eea70d6201f1d4a7b2f3475\n  0x2a\n  swap2\n  codecopy\n  0x01\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_3\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_3:\n  pop\n    /* \"contracts/demo2.sol\":263:310  bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\" */\n  sstore(0x02, 0x4c45484f4e47564f776a6e66766a3377656838764b4a00000000000000000000)\n    /* \"contracts/demo2.sol\":964:1092  constructor(uint _len, uint _menPtr) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_4:\n    /* \"contracts/demo2.sol\":964:1092  constructor(uint _len, uint _menPtr) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_5\n  swap2\n  swap1\n  jump(tag_6)\ntag_5:\n    /* \"contracts/demo2.sol\":1037:1041  _len */\n  dup2\n    /* \"contracts/demo2.sol\":1023:1030  rlpItem */\n  0x03\n    /* \"contracts/demo2.sol\":1023:1034  rlpItem.len */\n  0x00\n  add\n    /* \"contracts/demo2.sol\":1023:1041  rlpItem.len = _len */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/demo2.sol\":1073:1080  _menPtr */\n  dup1\n    /* \"contracts/demo2.sol\":1056:1063  rlpItem */\n  0x03\n    /* \"contracts/demo2.sol\":1056:1070  rlpItem.memPtr */\n  0x01\n  add\n    /* \"contracts/demo2.sol\":1056:1080  rlpItem.memPtr = _menPtr */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/demo2.sol\":964:1092  constructor(uint _len, uint _menPtr) public {\r... */\n  pop\n  pop\n    /* \"contracts/demo2.sol\":81:6347  contract demo2 {\r... */\n  jump(tag_9)\ntag_2:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_11\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_10)\ntag_11:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_10\n  jumpi\n  swap2\n  dup3\n  add\ntag_12:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_13\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_12)\ntag_13:\ntag_10:\n  pop\n  swap1\n  pop\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  pop\n  swap1\n  jump\t// out\ntag_15:\n  tag_16\n  swap2\n  swap1\ntag_17:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_18\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_17)\ntag_18:\n  pop\n  swap1\n  jump\ntag_16:\n  swap1\n  jump\t// out\n    /* \"--CODEGEN--\":5:139   */\ntag_20:\n  0x00\n    /* \"--CODEGEN--\":89:95   */\n  dup2\n    /* \"--CODEGEN--\":83:96   */\n  mload\n    /* \"--CODEGEN--\":74:96   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":101:134   */\n  tag_22\n    /* \"--CODEGEN--\":128:133   */\n  dup2\n    /* \"--CODEGEN--\":101:134   */\n  jump(tag_23)\ntag_22:\n    /* \"--CODEGEN--\":68:139   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\n    /* \"--CODEGEN--\":146:545   */\ntag_6:\n  0x00\n  dup1\n    /* \"--CODEGEN--\":278:280   */\n  0x40\n    /* \"--CODEGEN--\":266:275   */\n  dup4\n    /* \"--CODEGEN--\":257:264   */\n  dup6\n    /* \"--CODEGEN--\":253:276   */\n  sub\n    /* \"--CODEGEN--\":249:281   */\n  slt\n    /* \"--CODEGEN--\":246:248   */\n  iszero\n  tag_25\n  jumpi\n    /* \"--CODEGEN--\":294:295   */\n  0x00\n    /* \"--CODEGEN--\":291:292   */\n  dup1\n    /* \"--CODEGEN--\":284:296   */\n  revert\n    /* \"--CODEGEN--\":246:248   */\ntag_25:\n    /* \"--CODEGEN--\":329:330   */\n  0x00\n    /* \"--CODEGEN--\":346:410   */\n  tag_26\n    /* \"--CODEGEN--\":402:409   */\n  dup6\n    /* \"--CODEGEN--\":393:399   */\n  dup3\n    /* \"--CODEGEN--\":382:391   */\n  dup7\n    /* \"--CODEGEN--\":378:400   */\n  add\n    /* \"--CODEGEN--\":346:410   */\n  jump(tag_20)\ntag_26:\n    /* \"--CODEGEN--\":336:410   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":308:416   */\n  pop\n    /* \"--CODEGEN--\":447:449   */\n  0x20\n    /* \"--CODEGEN--\":465:529   */\n  tag_27\n    /* \"--CODEGEN--\":521:528   */\n  dup6\n    /* \"--CODEGEN--\":512:518   */\n  dup3\n    /* \"--CODEGEN--\":501:510   */\n  dup7\n    /* \"--CODEGEN--\":497:519   */\n  add\n    /* \"--CODEGEN--\":465:529   */\n  jump(tag_20)\ntag_27:\n    /* \"--CODEGEN--\":455:529   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":426:535   */\n  pop\n    /* \"--CODEGEN--\":240:545   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\n    /* \"--CODEGEN--\":552:624   */\ntag_28:\n  0x00\n    /* \"--CODEGEN--\":614:619   */\n  dup2\n    /* \"--CODEGEN--\":603:619   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":597:624   */\n  swap2\n  swap1\n  pop\n  jump\n    /* \"--CODEGEN--\":631:748   */\ntag_23:\n    /* \"--CODEGEN--\":700:724   */\n  tag_31\n    /* \"--CODEGEN--\":718:723   */\n  dup2\n    /* \"--CODEGEN--\":700:724   */\n  jump(tag_28)\ntag_31:\n    /* \"--CODEGEN--\":693:698   */\n  dup2\n    /* \"--CODEGEN--\":690:725   */\n  eq\n    /* \"--CODEGEN--\":680:682   */\n  tag_32\n  jumpi\n    /* \"--CODEGEN--\":739:740   */\n  0x00\n    /* \"--CODEGEN--\":736:737   */\n  dup1\n    /* \"--CODEGEN--\":729:741   */\n  revert\n    /* \"--CODEGEN--\":680:682   */\ntag_32:\n    /* \"--CODEGEN--\":674:748   */\n  pop\n  jump\n    /* \"contracts/demo2.sol\":81:6347  contract demo2 {\r... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_4887836e294a2761413359597244d307bbe3f94827f6160d9e1a399e00e2d1be 4e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f\ndata_c359735a342ece061e65ab7390d246d1e53ba5f24eea70d6201f1d4a7b2f3475 7364664e417364667364664c4548484a5347445348444a53484a53484a534844534a44484a4f4e47564f\n\nsub_0: assembly {\n        /* \"contracts/demo2.sol\":81:6347  contract demo2 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"contracts/demo2.sol\":81:6347  contract demo2 {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3bc5de30\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9ffd85c4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa699fb03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xe3a7fd75\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfc26b0ab\n      eq\n      tag_7\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/demo2.sol\":1114:1214  function getData() public view returns(uint) {\r... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      jump(tag_11)\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":107:176  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      jump(tag_15)\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":929:951  RLPItem public rlpItem */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap3\n      swap2\n      swap1\n      jump(tag_19)\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":263:310  bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\" */\n    tag_6:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      jump(tag_23)\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":187:252  bytes public data3 = \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_7:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      jump(tag_15)\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":1114:1214  function getData() public view returns(uint) {\r... */\n    tag_9:\n        /* \"contracts/demo2.sol\":1153:1157  uint */\n      0x00\n        /* \"contracts/demo2.sol\":1181:1202  toUintStrict(rlpItem) */\n      tag_28\n        /* \"contracts/demo2.sol\":1194:1201  rlpItem */\n      0x03\n        /* \"contracts/demo2.sol\":1181:1202  toUintStrict(rlpItem) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/demo2.sol\":1181:1193  toUintStrict */\n      tag_29\n        /* \"contracts/demo2.sol\":1181:1202  toUintStrict(rlpItem) */\n      jump\t// in\n    tag_28:\n        /* \"contracts/demo2.sol\":1174:1202  return toUintStrict(rlpItem) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":1114:1214  function getData() public view returns(uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/demo2.sol\":107:176  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_13:\n      0x00\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_30\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_31\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_30)\n    tag_31:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_32:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_32\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/demo2.sol\":929:951  RLPItem public rlpItem */\n    tag_17:\n      0x03\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/demo2.sol\":263:310  bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\" */\n    tag_21:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/demo2.sol\":187:252  bytes public data3 = \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_25:\n      0x01\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_33\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_34\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_33)\n    tag_34:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_35:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_35\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_33:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/demo2.sol\":1920:2256  function toUintStrict(RLPItem memory item) internal pure returns (uint) {\r... */\n    tag_29:\n        /* \"contracts/demo2.sol\":1986:1990  uint */\n      0x00\n        /* \"contracts/demo2.sol\":2059:2061  33 */\n      0x21\n        /* \"contracts/demo2.sol\":2047:2051  item */\n      dup3\n        /* \"contracts/demo2.sol\":2047:2055  item.len */\n      0x00\n      add\n      mload\n        /* \"contracts/demo2.sol\":2047:2061  item.len == 33 */\n      eq\n        /* \"contracts/demo2.sol\":2039:2062  require(item.len == 33) */\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/demo2.sol\":2039:2062  require(item.len == 33) */\n    tag_37:\n        /* \"contracts/demo2.sol\":2079:2090  uint result */\n      0x00\n        /* \"contracts/demo2.sol\":2105:2116  uint memPtr */\n      dup1\n        /* \"contracts/demo2.sol\":2133:2134  1 */\n      0x01\n        /* \"contracts/demo2.sol\":2119:2123  item */\n      dup5\n        /* \"contracts/demo2.sol\":2119:2130  item.memPtr */\n      0x20\n      add\n      mload\n        /* \"contracts/demo2.sol\":2119:2134  item.memPtr + 1 */\n      add\n        /* \"contracts/demo2.sol\":2105:2134  uint memPtr = item.memPtr + 1 */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":2193:2199  memPtr */\n      dup1\n        /* \"contracts/demo2.sol\":2187:2200  mload(memPtr) */\n      mload\n        /* \"contracts/demo2.sol\":2177:2200  result := mload(memPtr) */\n      swap2\n      pop\n        /* \"contracts/demo2.sol\":2238:2244  result */\n      dup2\n        /* \"contracts/demo2.sol\":2231:2244  return result */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/demo2.sol\":1920:2256  function toUintStrict(RLPItem memory item) internal pure returns (uint) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":5:118   */\n    tag_39:\n        /* \"--CODEGEN--\":88:112   */\n      tag_41\n        /* \"--CODEGEN--\":106:111   */\n      dup2\n        /* \"--CODEGEN--\":88:112   */\n      jump(tag_42)\n    tag_41:\n        /* \"--CODEGEN--\":83:86   */\n      dup3\n        /* \"--CODEGEN--\":76:113   */\n      mstore\n        /* \"--CODEGEN--\":70:118   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":125:460   */\n    tag_43:\n      0x00\n        /* \"--CODEGEN--\":231:265   */\n      tag_45\n        /* \"--CODEGEN--\":259:264   */\n      dup3\n        /* \"--CODEGEN--\":231:265   */\n      jump(tag_46)\n    tag_45:\n        /* \"--CODEGEN--\":277:347   */\n      tag_47\n        /* \"--CODEGEN--\":340:346   */\n      dup2\n        /* \"--CODEGEN--\":335:338   */\n      dup6\n        /* \"--CODEGEN--\":277:347   */\n      jump(tag_48)\n    tag_47:\n        /* \"--CODEGEN--\":270:347   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":352:404   */\n      tag_49\n        /* \"--CODEGEN--\":397:403   */\n      dup2\n        /* \"--CODEGEN--\":392:395   */\n      dup6\n        /* \"--CODEGEN--\":385:389   */\n      0x20\n        /* \"--CODEGEN--\":378:383   */\n      dup7\n        /* \"--CODEGEN--\":374:390   */\n      add\n        /* \"--CODEGEN--\":352:404   */\n      jump(tag_50)\n    tag_49:\n        /* \"--CODEGEN--\":425:454   */\n      tag_51\n        /* \"--CODEGEN--\":447:453   */\n      dup2\n        /* \"--CODEGEN--\":425:454   */\n      jump(tag_52)\n    tag_51:\n        /* \"--CODEGEN--\":420:423   */\n      dup5\n        /* \"--CODEGEN--\":416:455   */\n      add\n        /* \"--CODEGEN--\":409:455   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":211:460   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":467:580   */\n    tag_53:\n        /* \"--CODEGEN--\":550:574   */\n      tag_55\n        /* \"--CODEGEN--\":568:573   */\n      dup2\n        /* \"--CODEGEN--\":550:574   */\n      jump(tag_56)\n    tag_55:\n        /* \"--CODEGEN--\":545:548   */\n      dup3\n        /* \"--CODEGEN--\":538:575   */\n      mstore\n        /* \"--CODEGEN--\":532:580   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":587:800   */\n    tag_23:\n      0x00\n        /* \"--CODEGEN--\":705:707   */\n      0x20\n        /* \"--CODEGEN--\":694:703   */\n      dup3\n        /* \"--CODEGEN--\":690:708   */\n      add\n        /* \"--CODEGEN--\":682:708   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":719:790   */\n      tag_58\n        /* \"--CODEGEN--\":787:788   */\n      0x00\n        /* \"--CODEGEN--\":776:785   */\n      dup4\n        /* \"--CODEGEN--\":772:789   */\n      add\n        /* \"--CODEGEN--\":763:769   */\n      dup5\n        /* \"--CODEGEN--\":719:790   */\n      jump(tag_39)\n    tag_58:\n        /* \"--CODEGEN--\":676:800   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":807:1096   */\n    tag_15:\n      0x00\n        /* \"--CODEGEN--\":939:941   */\n      0x20\n        /* \"--CODEGEN--\":928:937   */\n      dup3\n        /* \"--CODEGEN--\":924:942   */\n      add\n        /* \"--CODEGEN--\":916:942   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":989:998   */\n      dup2\n        /* \"--CODEGEN--\":983:987   */\n      dup2\n        /* \"--CODEGEN--\":979:999   */\n      sub\n        /* \"--CODEGEN--\":975:976   */\n      0x00\n        /* \"--CODEGEN--\":964:973   */\n      dup4\n        /* \"--CODEGEN--\":960:977   */\n      add\n        /* \"--CODEGEN--\":953:1000   */\n      mstore\n        /* \"--CODEGEN--\":1014:1086   */\n      tag_60\n        /* \"--CODEGEN--\":1081:1085   */\n      dup2\n        /* \"--CODEGEN--\":1072:1078   */\n      dup5\n        /* \"--CODEGEN--\":1014:1086   */\n      jump(tag_43)\n    tag_60:\n        /* \"--CODEGEN--\":1006:1086   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":910:1096   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1103:1316   */\n    tag_11:\n      0x00\n        /* \"--CODEGEN--\":1221:1223   */\n      0x20\n        /* \"--CODEGEN--\":1210:1219   */\n      dup3\n        /* \"--CODEGEN--\":1206:1224   */\n      add\n        /* \"--CODEGEN--\":1198:1224   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1235:1306   */\n      tag_62\n        /* \"--CODEGEN--\":1303:1304   */\n      0x00\n        /* \"--CODEGEN--\":1292:1301   */\n      dup4\n        /* \"--CODEGEN--\":1288:1305   */\n      add\n        /* \"--CODEGEN--\":1279:1285   */\n      dup5\n        /* \"--CODEGEN--\":1235:1306   */\n      jump(tag_53)\n    tag_62:\n        /* \"--CODEGEN--\":1192:1316   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1323:1647   */\n    tag_19:\n      0x00\n        /* \"--CODEGEN--\":1469:1471   */\n      0x40\n        /* \"--CODEGEN--\":1458:1467   */\n      dup3\n        /* \"--CODEGEN--\":1454:1472   */\n      add\n        /* \"--CODEGEN--\":1446:1472   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1483:1554   */\n      tag_64\n        /* \"--CODEGEN--\":1551:1552   */\n      0x00\n        /* \"--CODEGEN--\":1540:1549   */\n      dup4\n        /* \"--CODEGEN--\":1536:1553   */\n      add\n        /* \"--CODEGEN--\":1527:1533   */\n      dup6\n        /* \"--CODEGEN--\":1483:1554   */\n      jump(tag_53)\n    tag_64:\n        /* \"--CODEGEN--\":1565:1637   */\n      tag_65\n        /* \"--CODEGEN--\":1633:1635   */\n      0x20\n        /* \"--CODEGEN--\":1622:1631   */\n      dup4\n        /* \"--CODEGEN--\":1618:1636   */\n      add\n        /* \"--CODEGEN--\":1609:1615   */\n      dup5\n        /* \"--CODEGEN--\":1565:1637   */\n      jump(tag_53)\n    tag_65:\n        /* \"--CODEGEN--\":1440:1647   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1654:1771   */\n    tag_46:\n      0x00\n        /* \"--CODEGEN--\":1743:1748   */\n      dup2\n        /* \"--CODEGEN--\":1737:1749   */\n      mload\n        /* \"--CODEGEN--\":1727:1749   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1708:1771   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":1779:1941   */\n    tag_48:\n      0x00\n        /* \"--CODEGEN--\":1893:1899   */\n      dup3\n        /* \"--CODEGEN--\":1888:1891   */\n      dup3\n        /* \"--CODEGEN--\":1881:1900   */\n      mstore\n        /* \"--CODEGEN--\":1930:1934   */\n      0x20\n        /* \"--CODEGEN--\":1925:1928   */\n      dup3\n        /* \"--CODEGEN--\":1921:1935   */\n      add\n        /* \"--CODEGEN--\":1906:1935   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1874:1941   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1949:2021   */\n    tag_42:\n      0x00\n        /* \"--CODEGEN--\":2011:2016   */\n      dup2\n        /* \"--CODEGEN--\":2000:2016   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1994:2021   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":2028:2100   */\n    tag_56:\n      0x00\n        /* \"--CODEGEN--\":2090:2095   */\n      dup2\n        /* \"--CODEGEN--\":2079:2095   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":2073:2100   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":2108:2376   */\n    tag_50:\n        /* \"--CODEGEN--\":2173:2174   */\n      0x00\n        /* \"--CODEGEN--\":2180:2281   */\n    tag_71:\n        /* \"--CODEGEN--\":2194:2200   */\n      dup4\n        /* \"--CODEGEN--\":2191:2192   */\n      dup2\n        /* \"--CODEGEN--\":2188:2201   */\n      lt\n        /* \"--CODEGEN--\":2180:2281   */\n      iszero\n      tag_73\n      jumpi\n        /* \"--CODEGEN--\":2270:2271   */\n      dup1\n        /* \"--CODEGEN--\":2265:2268   */\n      dup3\n        /* \"--CODEGEN--\":2261:2272   */\n      add\n        /* \"--CODEGEN--\":2255:2273   */\n      mload\n        /* \"--CODEGEN--\":2251:2252   */\n      dup2\n        /* \"--CODEGEN--\":2246:2249   */\n      dup5\n        /* \"--CODEGEN--\":2242:2253   */\n      add\n        /* \"--CODEGEN--\":2235:2274   */\n      mstore\n        /* \"--CODEGEN--\":2216:2218   */\n      0x20\n        /* \"--CODEGEN--\":2213:2214   */\n      dup2\n        /* \"--CODEGEN--\":2209:2219   */\n      add\n        /* \"--CODEGEN--\":2204:2219   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":2180:2281   */\n      jump(tag_71)\n    tag_73:\n        /* \"--CODEGEN--\":2296:2302   */\n      dup4\n        /* \"--CODEGEN--\":2293:2294   */\n      dup2\n        /* \"--CODEGEN--\":2290:2303   */\n      gt\n        /* \"--CODEGEN--\":2287:2289   */\n      iszero\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":2361:2362   */\n      0x00\n        /* \"--CODEGEN--\":2352:2358   */\n      dup5\n        /* \"--CODEGEN--\":2347:2350   */\n      dup5\n        /* \"--CODEGEN--\":2343:2359   */\n      add\n        /* \"--CODEGEN--\":2336:2363   */\n      mstore\n        /* \"--CODEGEN--\":2287:2289   */\n    tag_74:\n        /* \"--CODEGEN--\":2157:2376   */\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":2384:2481   */\n    tag_52:\n      0x00\n        /* \"--CODEGEN--\":2472:2474   */\n      0x1f\n        /* \"--CODEGEN--\":2468:2475   */\n      not\n        /* \"--CODEGEN--\":2463:2465   */\n      0x1f\n        /* \"--CODEGEN--\":2456:2461   */\n      dup4\n        /* \"--CODEGEN--\":2452:2466   */\n      add\n        /* \"--CODEGEN--\":2448:2476   */\n      and\n        /* \"--CODEGEN--\":2438:2476   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":2432:2481   */\n      swap2\n      swap1\n      pop\n      jump\n\n    auxdata: 0xa26469706673582212201056a72a18f9858391ac467daed9bf2e46266af0546342af1325f013ccc0442964736f6c63430006040033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526040518060600160405280602e815260200161061c602e9139600090805190602001906100329291906100cf565b506040518060600160405280602a815260200161064a602a9139600190805190602001906100619291906100cf565b507f4c45484f4e47564f776a6e66766a3377656838764b4a0000000000000000000060025534801561009257600080fd5b5060405161067438038061067483398181016040528101906100b49190610189565b816003600001819055508060036001018190555050506101e6565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061011057805160ff191683800117855561013e565b8280016001018555821561013e579182015b8281111561013d578251825591602001919060010190610122565b5b50905061014b919061014f565b5090565b61017191905b8082111561016d576000816000905550600101610155565b5090565b90565b600081519050610183816101cf565b92915050565b6000806040838503121561019c57600080fd5b60006101aa85828601610174565b92505060206101bb85828601610174565b9150509250929050565b6000819050919050565b6101d8816101c5565b81146101e357600080fd5b50565b610427806101f56000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633bc5de301461005c5780639ffd85c41461007a578063a699fb0314610098578063e3a7fd75146100b7578063fc26b0ab146100d5575b600080fd5b6100646100f3565b6040516100719190610339565b60405180910390f35b610082610123565b60405161008f9190610317565b60405180910390f35b6100a06101c1565b6040516100ae929190610354565b60405180910390f35b6100bf6101d3565b6040516100cc91906102fc565b60405180910390f35b6100dd6101d9565b6040516100ea9190610317565b60405180910390f35b600061011e600360405180604001604052908160008201548152602001600182015481525050610277565b905090565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101b95780601f1061018e576101008083540402835291602001916101b9565b820191906000526020600020905b81548152906001019060200180831161019c57829003601f168201915b505050505081565b60038060000154908060010154905082565b60025481565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561026f5780601f106102445761010080835404028352916020019161026f565b820191906000526020600020905b81548152906001019060200180831161025257829003601f168201915b505050505081565b6000602182600001511461028a57600080fd5b60008060018460200151019050805191508192505050919050565b6102ae81610399565b82525050565b60006102bf8261037d565b6102c98185610388565b93506102d98185602086016103ad565b6102e2816103e0565b840191505092915050565b6102f6816103a3565b82525050565b600060208201905061031160008301846102a5565b92915050565b6000602082019050818103600083015261033181846102b4565b905092915050565b600060208201905061034e60008301846102ed565b92915050565b600060408201905061036960008301856102ed565b61037660208301846102ed565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b6000819050919050565b60005b838110156103cb5780820151818401526020810190506103b0565b838111156103da576000848401525b50505050565b6000601f19601f830116905091905056fea26469706673582212201056a72a18f9858391ac467daed9bf2e46266af0546342af1325f013ccc0442964736f6c634300060400334e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f7364664e417364667364664c4548484a5347445348444a53484a53484a534844534a44484a4f4e47564f",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x61C PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x32 SWAP3 SWAP2 SWAP1 PUSH2 0xCF JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x64A PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x61 SWAP3 SWAP2 SWAP1 PUSH2 0xCF JUMP JUMPDEST POP PUSH32 0x4C45484F4E47564F776A6E66766A3377656838764B4A00000000000000000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x674 CODESIZE SUB DUP1 PUSH2 0x674 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x189 JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1E6 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x110 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x13E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x13E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x13D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x122 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x14F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x171 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x155 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x183 DUP2 PUSH2 0x1CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1AA DUP6 DUP3 DUP7 ADD PUSH2 0x174 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BB DUP6 DUP3 DUP7 ADD PUSH2 0x174 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D8 DUP2 PUSH2 0x1C5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x427 DUP1 PUSH2 0x1F5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3BC5DE30 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x9FFD85C4 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xA699FB03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0xE3A7FD75 EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0xFC26B0AB EQ PUSH2 0xD5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0x123 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAE SWAP3 SWAP2 SWAP1 PUSH2 0x354 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBF PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCC SWAP2 SWAP1 PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDD PUSH2 0x1D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP2 SWAP1 PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x11E PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x277 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x26F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x244 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x26F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x252 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x21 DUP3 PUSH1 0x0 ADD MLOAD EQ PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP5 PUSH1 0x20 ADD MLOAD ADD SWAP1 POP DUP1 MLOAD SWAP2 POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AE DUP2 PUSH2 0x399 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BF DUP3 PUSH2 0x37D JUMP JUMPDEST PUSH2 0x2C9 DUP2 DUP6 PUSH2 0x388 JUMP JUMPDEST SWAP4 POP PUSH2 0x2D9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3AD JUMP JUMPDEST PUSH2 0x2E2 DUP2 PUSH2 0x3E0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F6 DUP2 PUSH2 0x3A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x311 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x331 DUP2 DUP5 PUSH2 0x2B4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x369 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2ED JUMP JUMPDEST PUSH2 0x376 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2ED JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3CB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3B0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3DA JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT JUMP 0xA7 0x2A XOR 0xF9 DUP6 DUP4 SWAP2 0xAC CHAINID PUSH30 0xAED9BF2E46266AF0546342AF1325F013CCC0442964736F6C634300060400 CALLER 0x4E COINBASE 0x4C GASLIMIT 0x48 0x48 0x4A MSTORE8 SELFBALANCE DIFFICULTY MSTORE8 DIFFICULTY SELFBALANCE 0x48 0x4A MSTORE8 DIFFICULTY 0x48 MSTORE8 SSTORE 0x48 DIFFICULTY 0x4A MSTORE8 0x48 DIFFICULTY 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 DIFFICULTY MSTORE8 0x4A DIFFICULTY 0x48 0x4A 0x4F 0x4E SELFBALANCE JUMP 0x4F PUSH20 0x64664E417364667364664C4548484A5347445348 DIFFICULTY 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 DIFFICULTY MSTORE8 0x4A DIFFICULTY 0x48 0x4A 0x4F 0x4E SELFBALANCE JUMP 0x4F ",
							"sourceMap": "81:6266:0:-:0;;;107:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;187:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;263:47;;;964:128;5:9:-1;2:2;;;27:1;24;17:12;2:2;964:128:0;;;;;;;;;;;;;;;;;;;;;;;;1037:4;1023:7;:11;;:18;;;;1073:7;1056;:14;;:24;;;;964:128;;81:6266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;146:399;;;278:2;266:9;257:7;253:23;249:32;246:2;;;294:1;291;284:12;246:2;329:1;346:64;402:7;393:6;382:9;378:22;346:64;;;336:74;;308:108;447:2;465:64;521:7;512:6;501:9;497:22;465:64;;;455:74;;426:109;240:305;;;;;;552:72;;614:5;603:16;;597:27;;;;631:117;700:24;718:5;700:24;;;693:5;690:35;680:2;;739:1;736;729:12;680:2;674:74;;81:6266:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80633bc5de301461005c5780639ffd85c41461007a578063a699fb0314610098578063e3a7fd75146100b7578063fc26b0ab146100d5575b600080fd5b6100646100f3565b6040516100719190610339565b60405180910390f35b610082610123565b60405161008f9190610317565b60405180910390f35b6100a06101c1565b6040516100ae929190610354565b60405180910390f35b6100bf6101d3565b6040516100cc91906102fc565b60405180910390f35b6100dd6101d9565b6040516100ea9190610317565b60405180910390f35b600061011e600360405180604001604052908160008201548152602001600182015481525050610277565b905090565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101b95780601f1061018e576101008083540402835291602001916101b9565b820191906000526020600020905b81548152906001019060200180831161019c57829003601f168201915b505050505081565b60038060000154908060010154905082565b60025481565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561026f5780601f106102445761010080835404028352916020019161026f565b820191906000526020600020905b81548152906001019060200180831161025257829003601f168201915b505050505081565b6000602182600001511461028a57600080fd5b60008060018460200151019050805191508192505050919050565b6102ae81610399565b82525050565b60006102bf8261037d565b6102c98185610388565b93506102d98185602086016103ad565b6102e2816103e0565b840191505092915050565b6102f6816103a3565b82525050565b600060208201905061031160008301846102a5565b92915050565b6000602082019050818103600083015261033181846102b4565b905092915050565b600060208201905061034e60008301846102ed565b92915050565b600060408201905061036960008301856102ed565b61037660208301846102ed565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b6000819050919050565b60005b838110156103cb5780820151818401526020810190506103b0565b838111156103da576000848401525b50505050565b6000601f19601f830116905091905056fea26469706673582212201056a72a18f9858391ac467daed9bf2e46266af0546342af1325f013ccc0442964736f6c63430006040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3BC5DE30 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x9FFD85C4 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xA699FB03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0xE3A7FD75 EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0xFC26B0AB EQ PUSH2 0xD5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0x123 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAE SWAP3 SWAP2 SWAP1 PUSH2 0x354 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBF PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCC SWAP2 SWAP1 PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDD PUSH2 0x1D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP2 SWAP1 PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x11E PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x277 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x26F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x244 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x26F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x252 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x21 DUP3 PUSH1 0x0 ADD MLOAD EQ PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP5 PUSH1 0x20 ADD MLOAD ADD SWAP1 POP DUP1 MLOAD SWAP2 POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AE DUP2 PUSH2 0x399 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BF DUP3 PUSH2 0x37D JUMP JUMPDEST PUSH2 0x2C9 DUP2 DUP6 PUSH2 0x388 JUMP JUMPDEST SWAP4 POP PUSH2 0x2D9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3AD JUMP JUMPDEST PUSH2 0x2E2 DUP2 PUSH2 0x3E0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F6 DUP2 PUSH2 0x3A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x311 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x331 DUP2 DUP5 PUSH2 0x2B4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x369 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2ED JUMP JUMPDEST PUSH2 0x376 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2ED JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3CB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3B0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3DA JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT JUMP 0xA7 0x2A XOR 0xF9 DUP6 DUP4 SWAP2 0xAC CHAINID PUSH30 0xAED9BF2E46266AF0546342AF1325F013CCC0442964736F6C634300060400 CALLER ",
							"sourceMap": "81:6266:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;81:6266:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;1114:100:0;;;:::i;:::-;;;;;;;;;;;;;;;;107:69;;;:::i;:::-;;;;;;;;;;;;;;;;929:22;;;:::i;:::-;;;;;;;;;;;;;;;;;263:47;;;:::i;:::-;;;;;;;;;;;;;;;;187:65;;;:::i;:::-;;;;;;;;;;;;;;;;1114:100;1153:4;1181:21;1194:7;1181:21;;;;;;;;;;;;;;;;;;;;;;;;;:12;:21::i;:::-;1174:28;;1114:100;:::o;107:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;929:22::-;;;;;;;;;;;;;;:::o;263:47::-;;;;:::o;187:65::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1920:336::-;1986:4;2059:2;2047:4;:8;;;:14;2039:23;;12:1:-1;9;2:12;2039:23:0;2079:11;2105;2133:1;2119:4;:11;;;:15;2105:29;;2193:6;2187:13;2177:23;;2238:6;2231:13;;;;1920:336;;;:::o;5:113:-1:-;88:24;106:5;88:24;;;83:3;76:37;70:48;;;125:335;;231:34;259:5;231:34;;;277:70;340:6;335:3;277:70;;;270:77;;352:52;397:6;392:3;385:4;378:5;374:16;352:52;;;425:29;447:6;425:29;;;420:3;416:39;409:46;;211:249;;;;;;467:113;550:24;568:5;550:24;;;545:3;538:37;532:48;;;587:213;;705:2;694:9;690:18;682:26;;719:71;787:1;776:9;772:17;763:6;719:71;;;676:124;;;;;807:289;;939:2;928:9;924:18;916:26;;989:9;983:4;979:20;975:1;964:9;960:17;953:47;1014:72;1081:4;1072:6;1014:72;;;1006:80;;910:186;;;;;1103:213;;1221:2;1210:9;1206:18;1198:26;;1235:71;1303:1;1292:9;1288:17;1279:6;1235:71;;;1192:124;;;;;1323:324;;1469:2;1458:9;1454:18;1446:26;;1483:71;1551:1;1540:9;1536:17;1527:6;1483:71;;;1565:72;1633:2;1622:9;1618:18;1609:6;1565:72;;;1440:207;;;;;;1654:117;;1743:5;1737:12;1727:22;;1708:63;;;;1779:162;;1893:6;1888:3;1881:19;1930:4;1925:3;1921:14;1906:29;;1874:67;;;;;1949:72;;2011:5;2000:16;;1994:27;;;;2028:72;;2090:5;2079:16;;2073:27;;;;2108:268;2173:1;2180:101;2194:6;2191:1;2188:13;2180:101;;;2270:1;2265:3;2261:11;2255:18;2251:1;2246:3;2242:11;2235:39;2216:2;2213:1;2209:10;2204:15;;2180:101;;;2296:6;2293:1;2290:13;2287:2;;;2361:1;2352:6;2347:3;2343:16;2336:27;2287:2;2157:219;;;;;2384:97;;2472:2;2468:7;2463:2;2456:5;2452:14;2448:28;2438:38;;2432:49;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "212600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"data1()": "infinite",
								"data2()": "1173",
								"data3()": "infinite",
								"getData()": "infinite",
								"rlpItem()": "infinite"
							},
							"internal": {
								"_itemLength(uint256)": "infinite",
								"_payloadOffset(uint256)": "infinite",
								"copy(uint256,uint256,uint256)": "infinite",
								"numItems(struct demo2.RLPItem memory)": "infinite",
								"toBytes(struct demo2.RLPItem memory)": "infinite",
								"toUint(struct demo2.RLPItem memory)": "infinite",
								"toUintStrict(struct demo2.RLPItem memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "2E"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH data",
									"source": 0,
									"value": "4887836E294A2761413359597244D307BBE3F94827F6160D9E1A399E00E2D1BE"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "2E"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "2A"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH data",
									"source": 0,
									"value": "C359735A342ECE061E65AB7390D246D1E53BA5F24EEA70D6201F1D4A7B2F3475"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "2A"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 263,
									"end": 310,
									"name": "PUSH",
									"source": 0,
									"value": "4C45484F4E47564F776A6E66766A3377656838764B4A00000000000000000000"
								},
								{
									"begin": 263,
									"end": 310,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 263,
									"end": 310,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1037,
									"end": 1041,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1030,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1023,
									"end": 1034,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1023,
									"end": 1034,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1041,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1041,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1041,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1041,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1073,
									"end": 1080,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1056,
									"end": 1063,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1056,
									"end": 1070,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1056,
									"end": 1070,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1056,
									"end": 1080,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1056,
									"end": 1080,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1056,
									"end": 1080,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1056,
									"end": 1080,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 5,
									"end": 139,
									"name": "tag",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 5,
									"end": 139,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 5,
									"end": 139,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 89,
									"end": 95,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 83,
									"end": 96,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 74,
									"end": 96,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 74,
									"end": 96,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 101,
									"end": 134,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "22"
								},
								{
									"begin": 128,
									"end": 133,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 101,
									"end": 134,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "23"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 101,
									"end": 134,
									"name": "tag",
									"source": -1,
									"value": "22"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 68,
									"end": 139,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 68,
									"end": 139,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 68,
									"end": 139,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 68,
									"end": 139,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 68,
									"end": 139,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 545,
									"name": "tag",
									"source": -1,
									"value": "6"
								},
								{
									"begin": 146,
									"end": 545,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 146,
									"end": 545,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 545,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 278,
									"end": 280,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 266,
									"end": 275,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 257,
									"end": 264,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 253,
									"end": 276,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 249,
									"end": 281,
									"name": "SLT",
									"source": -1
								},
								{
									"begin": 246,
									"end": 248,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 246,
									"end": 248,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "25"
								},
								{
									"begin": 246,
									"end": 248,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 294,
									"end": 295,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 292,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 284,
									"end": 296,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 246,
									"end": 248,
									"name": "tag",
									"source": -1,
									"value": "25"
								},
								{
									"begin": 246,
									"end": 248,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 329,
									"end": 330,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 346,
									"end": 410,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "26"
								},
								{
									"begin": 402,
									"end": 409,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 393,
									"end": 399,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 382,
									"end": 391,
									"name": "DUP7",
									"source": -1
								},
								{
									"begin": 378,
									"end": 400,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 346,
									"end": 410,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 346,
									"end": 410,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 346,
									"end": 410,
									"name": "tag",
									"source": -1,
									"value": "26"
								},
								{
									"begin": 346,
									"end": 410,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 336,
									"end": 410,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 336,
									"end": 410,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 308,
									"end": 416,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 447,
									"end": 449,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 465,
									"end": 529,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "27"
								},
								{
									"begin": 521,
									"end": 528,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 512,
									"end": 518,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 501,
									"end": 510,
									"name": "DUP7",
									"source": -1
								},
								{
									"begin": 497,
									"end": 519,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 465,
									"end": 529,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 465,
									"end": 529,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 465,
									"end": 529,
									"name": "tag",
									"source": -1,
									"value": "27"
								},
								{
									"begin": 465,
									"end": 529,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 455,
									"end": 529,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 455,
									"end": 529,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 426,
									"end": 535,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 240,
									"end": 545,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 240,
									"end": 545,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 240,
									"end": 545,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 240,
									"end": 545,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 240,
									"end": 545,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 240,
									"end": 545,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 552,
									"end": 624,
									"name": "tag",
									"source": -1,
									"value": "28"
								},
								{
									"begin": 552,
									"end": 624,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 552,
									"end": 624,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 614,
									"end": 619,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 603,
									"end": 619,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 603,
									"end": 619,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 597,
									"end": 624,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 597,
									"end": 624,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 597,
									"end": 624,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 597,
									"end": 624,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 631,
									"end": 748,
									"name": "tag",
									"source": -1,
									"value": "23"
								},
								{
									"begin": 631,
									"end": 748,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 700,
									"end": 724,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "31"
								},
								{
									"begin": 718,
									"end": 723,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 700,
									"end": 724,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "28"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 700,
									"end": 724,
									"name": "tag",
									"source": -1,
									"value": "31"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 693,
									"end": 698,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 690,
									"end": 725,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 680,
									"end": 682,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "32"
								},
								{
									"begin": 680,
									"end": 682,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 739,
									"end": 740,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 737,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 729,
									"end": 741,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 680,
									"end": 682,
									"name": "tag",
									"source": -1,
									"value": "32"
								},
								{
									"begin": 680,
									"end": 682,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 674,
									"end": 748,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 674,
									"end": 748,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 6347,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201056a72a18f9858391ac467daed9bf2e46266af0546342af1325f013ccc0442964736f6c63430006040033",
									".code": [
										{
											"begin": 81,
											"end": 6347,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "PUSH",
											"source": 0,
											"value": "3BC5DE30"
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "PUSH",
											"source": 0,
											"value": "9FFD85C4"
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "PUSH",
											"source": 0,
											"value": "A699FB03"
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "PUSH",
											"source": 0,
											"value": "E3A7FD75"
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "PUSH",
											"source": 0,
											"value": "FC26B0AB"
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 81,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1153,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1920,
											"end": 2256,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1920,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1986,
											"end": 1990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2061,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2047,
											"end": 2051,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2061,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2039,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2039,
											"end": 2062,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2039,
											"end": 2062,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2039,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2133,
											"end": 2134,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2119,
											"end": 2123,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2119,
											"end": 2130,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2119,
											"end": 2130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2119,
											"end": 2130,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2238,
											"end": 2244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2231,
											"end": 2244,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2231,
											"end": 2244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2231,
											"end": 2244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2231,
											"end": 2244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1920,
											"end": 2256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1920,
											"end": 2256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1920,
											"end": 2256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1920,
											"end": 2256,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5,
											"end": 118,
											"name": "tag",
											"source": -1,
											"value": "39"
										},
										{
											"begin": 5,
											"end": 118,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 88,
											"end": 112,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "41"
										},
										{
											"begin": 106,
											"end": 111,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 88,
											"end": 112,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "42"
										},
										{
											"begin": 88,
											"end": 112,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 112,
											"name": "tag",
											"source": -1,
											"value": "41"
										},
										{
											"begin": 88,
											"end": 112,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 83,
											"end": 86,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 76,
											"end": 113,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 70,
											"end": 118,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 70,
											"end": 118,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 70,
											"end": 118,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 125,
											"end": 460,
											"name": "tag",
											"source": -1,
											"value": "43"
										},
										{
											"begin": 125,
											"end": 460,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 125,
											"end": 460,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 265,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "45"
										},
										{
											"begin": 259,
											"end": 264,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 231,
											"end": 265,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "46"
										},
										{
											"begin": 231,
											"end": 265,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 231,
											"end": 265,
											"name": "tag",
											"source": -1,
											"value": "45"
										},
										{
											"begin": 231,
											"end": 265,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 277,
											"end": 347,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "47"
										},
										{
											"begin": 340,
											"end": 346,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 335,
											"end": 338,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 277,
											"end": 347,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "48"
										},
										{
											"begin": 277,
											"end": 347,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 277,
											"end": 347,
											"name": "tag",
											"source": -1,
											"value": "47"
										},
										{
											"begin": 277,
											"end": 347,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 270,
											"end": 347,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 270,
											"end": 347,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 352,
											"end": 404,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "49"
										},
										{
											"begin": 397,
											"end": 403,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 392,
											"end": 395,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 385,
											"end": 389,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 378,
											"end": 383,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 374,
											"end": 390,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 352,
											"end": 404,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "50"
										},
										{
											"begin": 352,
											"end": 404,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 352,
											"end": 404,
											"name": "tag",
											"source": -1,
											"value": "49"
										},
										{
											"begin": 352,
											"end": 404,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 425,
											"end": 454,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "51"
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 425,
											"end": 454,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "52"
										},
										{
											"begin": 425,
											"end": 454,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 425,
											"end": 454,
											"name": "tag",
											"source": -1,
											"value": "51"
										},
										{
											"begin": 425,
											"end": 454,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 420,
											"end": 423,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 416,
											"end": 455,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 409,
											"end": 455,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 409,
											"end": 455,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 211,
											"end": 460,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 211,
											"end": 460,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 211,
											"end": 460,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 211,
											"end": 460,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 211,
											"end": 460,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 211,
											"end": 460,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 467,
											"end": 580,
											"name": "tag",
											"source": -1,
											"value": "53"
										},
										{
											"begin": 467,
											"end": 580,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 550,
											"end": 574,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "55"
										},
										{
											"begin": 568,
											"end": 573,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 550,
											"end": 574,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "56"
										},
										{
											"begin": 550,
											"end": 574,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 550,
											"end": 574,
											"name": "tag",
											"source": -1,
											"value": "55"
										},
										{
											"begin": 550,
											"end": 574,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 545,
											"end": 548,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 538,
											"end": 575,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 532,
											"end": 580,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 532,
											"end": 580,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 532,
											"end": 580,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 587,
											"end": 800,
											"name": "tag",
											"source": -1,
											"value": "23"
										},
										{
											"begin": 587,
											"end": 800,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 587,
											"end": 800,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 707,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 694,
											"end": 703,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 690,
											"end": 708,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 682,
											"end": 708,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 682,
											"end": 708,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 719,
											"end": 790,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "58"
										},
										{
											"begin": 787,
											"end": 788,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 785,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 772,
											"end": 789,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 763,
											"end": 769,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 719,
											"end": 790,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "39"
										},
										{
											"begin": 719,
											"end": 790,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 719,
											"end": 790,
											"name": "tag",
											"source": -1,
											"value": "58"
										},
										{
											"begin": 719,
											"end": 790,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 676,
											"end": 800,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 676,
											"end": 800,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 676,
											"end": 800,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 676,
											"end": 800,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 676,
											"end": 800,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 807,
											"end": 1096,
											"name": "tag",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 807,
											"end": 1096,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 807,
											"end": 1096,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 941,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 928,
											"end": 937,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 924,
											"end": 942,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 916,
											"end": 942,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 916,
											"end": 942,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 989,
											"end": 998,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 983,
											"end": 987,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 979,
											"end": 999,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 975,
											"end": 976,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 973,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 960,
											"end": 977,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 953,
											"end": 1000,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1014,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 1081,
											"end": 1085,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1014,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "43"
										},
										{
											"begin": 1014,
											"end": 1086,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1014,
											"end": 1086,
											"name": "tag",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 1014,
											"end": 1086,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1006,
											"end": 1086,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1006,
											"end": 1086,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 910,
											"end": 1096,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 910,
											"end": 1096,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 910,
											"end": 1096,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 910,
											"end": 1096,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 910,
											"end": 1096,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1103,
											"end": 1316,
											"name": "tag",
											"source": -1,
											"value": "11"
										},
										{
											"begin": 1103,
											"end": 1316,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1103,
											"end": 1316,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1221,
											"end": 1223,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1219,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1206,
											"end": 1224,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1198,
											"end": 1224,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1198,
											"end": 1224,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "62"
										},
										{
											"begin": 1303,
											"end": 1304,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1301,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1279,
											"end": 1285,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "53"
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "tag",
											"source": -1,
											"value": "62"
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1192,
											"end": 1316,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1192,
											"end": 1316,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1192,
											"end": 1316,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1192,
											"end": 1316,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1192,
											"end": 1316,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1323,
											"end": 1647,
											"name": "tag",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 1323,
											"end": 1647,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1323,
											"end": 1647,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1471,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 1458,
											"end": 1467,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1446,
											"end": 1472,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1446,
											"end": 1472,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1483,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "64"
										},
										{
											"begin": 1551,
											"end": 1552,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1536,
											"end": 1553,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1527,
											"end": 1533,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1483,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "53"
										},
										{
											"begin": 1483,
											"end": 1554,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1483,
											"end": 1554,
											"name": "tag",
											"source": -1,
											"value": "64"
										},
										{
											"begin": 1483,
											"end": 1554,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1565,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "65"
										},
										{
											"begin": 1633,
											"end": 1635,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1622,
											"end": 1631,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1618,
											"end": 1636,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1609,
											"end": 1615,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1565,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "53"
										},
										{
											"begin": 1565,
											"end": 1637,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1565,
											"end": 1637,
											"name": "tag",
											"source": -1,
											"value": "65"
										},
										{
											"begin": 1565,
											"end": 1637,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1440,
											"end": 1647,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 1440,
											"end": 1647,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1440,
											"end": 1647,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1440,
											"end": 1647,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1440,
											"end": 1647,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1440,
											"end": 1647,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "tag",
											"source": -1,
											"value": "46"
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1743,
											"end": 1748,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1737,
											"end": 1749,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 1727,
											"end": 1749,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1727,
											"end": 1749,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1708,
											"end": 1771,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1708,
											"end": 1771,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1708,
											"end": 1771,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1708,
											"end": 1771,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1779,
											"end": 1941,
											"name": "tag",
											"source": -1,
											"value": "48"
										},
										{
											"begin": 1779,
											"end": 1941,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1779,
											"end": 1941,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1899,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1888,
											"end": 1891,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1881,
											"end": 1900,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1930,
											"end": 1934,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1925,
											"end": 1928,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1921,
											"end": 1935,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1906,
											"end": 1935,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1906,
											"end": 1935,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1874,
											"end": 1941,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1874,
											"end": 1941,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1874,
											"end": 1941,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1874,
											"end": 1941,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1874,
											"end": 1941,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2021,
											"name": "tag",
											"source": -1,
											"value": "42"
										},
										{
											"begin": 1949,
											"end": 2021,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2021,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2016,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2000,
											"end": 2016,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2000,
											"end": 2016,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1994,
											"end": 2021,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1994,
											"end": 2021,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1994,
											"end": 2021,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1994,
											"end": 2021,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2100,
											"name": "tag",
											"source": -1,
											"value": "56"
										},
										{
											"begin": 2028,
											"end": 2100,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2100,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2090,
											"end": 2095,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2079,
											"end": 2095,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2079,
											"end": 2095,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2073,
											"end": 2100,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2073,
											"end": 2100,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2073,
											"end": 2100,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2073,
											"end": 2100,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2108,
											"end": 2376,
											"name": "tag",
											"source": -1,
											"value": "50"
										},
										{
											"begin": 2108,
											"end": 2376,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2173,
											"end": 2174,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2281,
											"name": "tag",
											"source": -1,
											"value": "71"
										},
										{
											"begin": 2180,
											"end": 2281,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2194,
											"end": 2200,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2191,
											"end": 2192,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2188,
											"end": 2201,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 2180,
											"end": 2281,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2180,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "73"
										},
										{
											"begin": 2180,
											"end": 2281,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 2270,
											"end": 2271,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2265,
											"end": 2268,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2261,
											"end": 2272,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 2251,
											"end": 2252,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2242,
											"end": 2253,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2235,
											"end": 2274,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2216,
											"end": 2218,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2213,
											"end": 2214,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2209,
											"end": 2219,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2204,
											"end": 2219,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2204,
											"end": 2219,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2180,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "71"
										},
										{
											"begin": 2180,
											"end": 2281,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2180,
											"end": 2281,
											"name": "tag",
											"source": -1,
											"value": "73"
										},
										{
											"begin": 2180,
											"end": 2281,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2293,
											"end": 2294,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2290,
											"end": 2303,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 2287,
											"end": 2289,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2287,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "74"
										},
										{
											"begin": 2287,
											"end": 2289,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 2361,
											"end": 2362,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2347,
											"end": 2350,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2336,
											"end": 2363,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2287,
											"end": 2289,
											"name": "tag",
											"source": -1,
											"value": "74"
										},
										{
											"begin": 2287,
											"end": 2289,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2157,
											"end": 2376,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2157,
											"end": 2376,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2157,
											"end": 2376,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2157,
											"end": 2376,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2157,
											"end": 2376,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2384,
											"end": 2481,
											"name": "tag",
											"source": -1,
											"value": "52"
										},
										{
											"begin": 2384,
											"end": 2481,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2384,
											"end": 2481,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2474,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2463,
											"end": 2465,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 2456,
											"end": 2461,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2452,
											"end": 2466,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2448,
											"end": 2476,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 2438,
											"end": 2476,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2438,
											"end": 2476,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2432,
											"end": 2481,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2432,
											"end": 2481,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2432,
											"end": 2481,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2432,
											"end": 2481,
											"name": "JUMP",
											"source": -1
										}
									]
								},
								"4887836E294A2761413359597244D307BBE3F94827F6160D9E1A399E00E2D1BE": "4e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f",
								"C359735A342ECE061E65AB7390D246D1E53BA5F24EEA70D6201F1D4A7B2F3475": "7364664e417364667364664c4548484a5347445348444a53484a53484a534844534a44484a4f4e47564f"
							}
						},
						"methodIdentifiers": {
							"data1()": "9ffd85c4",
							"data2()": "e3a7fd75",
							"data3()": "fc26b0ab",
							"getData()": "3bc5de30",
							"rlpItem()": "a699fb03"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_len\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_menPtr\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"data1\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data2\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data3\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rlpItem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"memPtr\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/demo2.sol\":\"demo2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/demo2.sol\":{\"keccak256\":\"0x634f9b75f76ffd5955b82242ace433c20d0868b4a5b4d6332ee62b63b5bbcf22\",\"urls\":[\"bzz-raw://42179c992b043cce2609af1ad7677062449f84a62fc74fcc02e0ce2c6cc5d598\",\"dweb:/ipfs/QmUFNrR7bXyPaQ4pWBTCjcXQZjgBTEgUFC93eVRFwif7PK\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/demo2.sol": {
				"ast": {
					"absolutePath": "contracts/demo2.sol",
					"exportedSymbols": {
						"demo2": [
							442
						]
					},
					"id": 443,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">",
								"0.4",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4:30:0"
						},
						{
							"id": 2,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "40:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 442,
							"linearizedBaseContracts": [
								442
							],
							"name": "demo2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9ffd85c4",
									"id": 5,
									"name": "data1",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 442,
									"src": "107:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 3,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "107:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "128:48:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_4887836e294a2761413359597244d307bbe3f94827f6160d9e1a399e00e2d1be",
											"typeString": "literal_string \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\""
										},
										"value": "NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc26b0ab",
									"id": 8,
									"name": "data3",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 442,
									"src": "187:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 6,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "187:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "7364664e417364667364664c4548484a5347445348444a53484a53484a534844534a44484a4f4e47564f",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:44:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c359735a342ece061e65ab7390d246d1e53ba5f24eea70d6201f1d4a7b2f3475",
											"typeString": "literal_string \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\""
										},
										"value": "sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e3a7fd75",
									"id": 11,
									"name": "data2",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 442,
									"src": "263:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 9,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "263:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4c45484f4e47564f776a6e66766a3377656838764b4a",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "286:24:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_456403c9720da4fa7d7375867b84ba5ad32318599c72d3314f61b294b0c7ff33",
											"typeString": "literal_string \"LEHONGVOwjnfvj3weh8vKJ\""
										},
										"value": "LEHONGVOwjnfvj3weh8vKJ"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 14,
									"name": "STRING_OFFSET",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 442,
									"src": "321:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 12,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "321:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783830",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "352:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "0x80"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 17,
									"name": "LIST_OFFSET",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 442,
									"src": "367:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 15,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "367:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786330",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "396:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "0xc0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 20,
									"name": "STRING_SHORT_START",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 442,
									"src": "411:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 18,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "411:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783830",
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "447:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "0x80"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 23,
									"name": "STRING_LONG_START",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 442,
									"src": "462:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 21,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "462:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786238",
										"id": 22,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "498:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_184_by_1",
											"typeString": "int_const 184"
										},
										"value": "0xb8"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 26,
									"name": "LIST_SHORT_START",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 442,
									"src": "513:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 24,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "513:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786330",
										"id": 25,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "549:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "0xc0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 29,
									"name": "LIST_LONG_START",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 442,
									"src": "564:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 27,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "564:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786638",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "600:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_248_by_1",
											"typeString": "int_const 248"
										},
										"value": "0xf8"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 32,
									"name": "WORD_SIZE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 442,
									"src": "615:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 30,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "615:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3332",
										"id": 31,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "642:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "demo2.RLPItem",
									"id": 37,
									"members": [
										{
											"constant": false,
											"id": 34,
											"name": "len",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 37,
											"src": "695:8:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 33,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "695:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 36,
											"name": "memPtr",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 37,
											"src": "718:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 35,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "718:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "RLPItem",
									"nodeType": "StructDefinition",
									"scope": 442,
									"src": "665:76:0",
									"visibility": "public"
								},
								{
									"canonicalName": "demo2.Iterator",
									"id": 42,
									"members": [
										{
											"constant": false,
											"id": 39,
											"name": "item",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 42,
											"src": "784:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
												"typeString": "struct demo2.RLPItem"
											},
											"typeName": {
												"contractScope": null,
												"id": 38,
												"name": "RLPItem",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 37,
												"src": "784:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
													"typeString": "struct demo2.RLPItem"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 41,
											"name": "nextPtr",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 42,
											"src": "849:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 40,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "849:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Iterator",
									"nodeType": "StructDefinition",
									"scope": 442,
									"src": "753:164:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a699fb03",
									"id": 44,
									"name": "rlpItem",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 442,
									"src": "929:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_RLPItem_$37_storage",
										"typeString": "struct demo2.RLPItem"
									},
									"typeName": {
										"contractScope": null,
										"id": 43,
										"name": "RLPItem",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 37,
										"src": "929:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
											"typeString": "struct demo2.RLPItem"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "1008:84:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 51,
															"name": "rlpItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1023:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_storage",
																"typeString": "struct demo2.RLPItem storage ref"
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "1023:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 54,
														"name": "_len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "1037:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1023:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "1023:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 57,
															"name": "rlpItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1056:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_storage",
																"typeString": "struct demo2.RLPItem storage ref"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "memPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "1056:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 60,
														"name": "_menPtr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "1073:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1056:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "1056:24:0"
											}
										]
									},
									"documentation": null,
									"id": 64,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"name": "_len",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 64,
												"src": "976:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "976:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"name": "_menPtr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 64,
												"src": "987:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "987:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "975:25:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:0:0"
									},
									"scope": 442,
									"src": "964:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "1159:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 70,
															"name": "rlpItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1194:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_storage",
																"typeString": "struct demo2.RLPItem storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_RLPItem_$37_storage",
																"typeString": "struct demo2.RLPItem storage ref"
															}
														],
														"id": 69,
														"name": "toUintStrict",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "1181:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_RLPItem_$37_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct demo2.RLPItem memory) pure returns (uint256)"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1181:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 68,
												"id": 72,
												"nodeType": "Return",
												"src": "1174:28:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "3bc5de30",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1130:2:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "1153:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1153:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1152:6:0"
									},
									"scope": 442,
									"src": "1114:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "1292:607:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 82,
																		"name": "item",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 76,
																		"src": "1315:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																			"typeString": "struct demo2.RLPItem memory"
																		}
																	},
																	"id": 83,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "1315:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 84,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1326:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1315:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 86,
																		"name": "item",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 76,
																		"src": "1331:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																			"typeString": "struct demo2.RLPItem memory"
																		}
																	},
																	"id": 87,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "1331:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3333",
																	"id": 88,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1343:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_33_by_1",
																		"typeString": "int_const 33"
																	},
																	"value": "33"
																},
																"src": "1331:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1315:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 81,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1307:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1307:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "1307:39:0"
											},
											{
												"assignments": [
													94
												],
												"declarations": [
													{
														"constant": false,
														"id": 94,
														"name": "offset",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 128,
														"src": "1363:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 93,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1363:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 99,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 96,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 76,
																"src": "1392:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																	"typeString": "struct demo2.RLPItem memory"
																}
															},
															"id": 97,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "memPtr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "1392:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 95,
														"name": "_payloadOffset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "1377:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1377:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1363:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 101,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 76,
																	"src": "1427:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "1427:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 103,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "1439:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1427:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6c656e677468206973206c657373207468616e206f6666736574",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b0b42ce8b5dee5c853d03ff9713140c28ab451add284160f67ced4e683e6ae54",
																"typeString": "literal_string \"length is less than offset\""
															},
															"value": "length is less than offset"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b0b42ce8b5dee5c853d03ff9713140c28ab451add284160f67ced4e683e6ae54",
																"typeString": "literal_string \"length is less than offset\""
															}
														],
														"id": 100,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1419:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1419:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1419:57:0"
											},
											{
												"assignments": [
													109
												],
												"declarations": [
													{
														"constant": false,
														"id": 109,
														"name": "len",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 128,
														"src": "1491:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 108,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1491:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 114,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 110,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "1502:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "1502:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 112,
														"name": "offset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "1513:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1502:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1491:28:0"
											},
											{
												"assignments": [
													116
												],
												"declarations": [
													{
														"constant": false,
														"id": 116,
														"name": "result",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 128,
														"src": "1536:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 115,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1536:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 117,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1536:11:0"
											},
											{
												"assignments": [
													119
												],
												"declarations": [
													{
														"constant": false,
														"id": 119,
														"name": "memPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 128,
														"src": "1562:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 118,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1562:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 124,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 120,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "1576:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "memPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "1576:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 122,
														"name": "offset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "1590:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1576:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1562:34:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1620:238:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1639:23:0",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1655:6:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1649:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1649:13:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1639:6:0"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1756:87:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1779:45:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "result",
																					"nodeType": "YulIdentifier",
																					"src": "1793:6:0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1805:3:0",
																							"type": "",
																							"value": "256"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1814:2:0",
																									"type": "",
																									"value": "32"
																								},
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1818:3:0"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "1810:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1810:12:0"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "1801:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1801:22:0"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "1789:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1789:35:0"
																		},
																		"variableNames": [
																			{
																				"name": "result",
																				"nodeType": "YulIdentifier",
																				"src": "1779:6:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "1747:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1752:2:0",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1744:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1744:11:0"
															},
															"nodeType": "YulIf",
															"src": "1741:2:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 109,
														"isOffset": false,
														"isSlot": false,
														"src": "1747:3:0",
														"valueSize": 1
													},
													{
														"declaration": 109,
														"isOffset": false,
														"isSlot": false,
														"src": "1818:3:0",
														"valueSize": 1
													},
													{
														"declaration": 119,
														"isOffset": false,
														"isSlot": false,
														"src": "1655:6:0",
														"valueSize": 1
													},
													{
														"declaration": 116,
														"isOffset": false,
														"isSlot": false,
														"src": "1639:6:0",
														"valueSize": 1
													},
													{
														"declaration": 116,
														"isOffset": false,
														"isSlot": false,
														"src": "1779:6:0",
														"valueSize": 1
													},
													{
														"declaration": 116,
														"isOffset": false,
														"isSlot": false,
														"src": "1793:6:0",
														"valueSize": 1
													}
												],
												"id": 125,
												"nodeType": "InlineAssembly",
												"src": "1611:247:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 126,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 116,
													"src": "1881:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 127,
												"nodeType": "Return",
												"src": "1874:13:0"
											}
										]
									},
									"documentation": null,
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 129,
												"src": "1242:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 75,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "1242:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1241:21:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 129,
												"src": "1286:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1286:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1285:6:0"
									},
									"scope": 442,
									"src": "1226:673:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "1992:264:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 137,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 131,
																	"src": "2047:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 138,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "2047:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3333",
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2059:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33_by_1",
																	"typeString": "int_const 33"
																},
																"value": "33"
															},
															"src": "2047:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2039:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2039:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "2039:23:0"
											},
											{
												"assignments": [
													144
												],
												"declarations": [
													{
														"constant": false,
														"id": 144,
														"name": "result",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 156,
														"src": "2079:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 143,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2079:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 145,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2079:11:0"
											},
											{
												"assignments": [
													147
												],
												"declarations": [
													{
														"constant": false,
														"id": 147,
														"name": "memPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 156,
														"src": "2105:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 146,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2105:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 152,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 148,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "2119:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "memPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "2119:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2133:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2119:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:29:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2158:57:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2177:23:0",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2193:6:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2187:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2187:13:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2177:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 147,
														"isOffset": false,
														"isSlot": false,
														"src": "2193:6:0",
														"valueSize": 1
													},
													{
														"declaration": 144,
														"isOffset": false,
														"isSlot": false,
														"src": "2177:6:0",
														"valueSize": 1
													}
												],
												"id": 153,
												"nodeType": "InlineAssembly",
												"src": "2149:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 154,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 144,
													"src": "2238:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 135,
												"id": 155,
												"nodeType": "Return",
												"src": "2231:13:0"
											}
										]
									},
									"documentation": null,
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUintStrict",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 157,
												"src": "1942:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 130,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "1942:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1941:21:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 157,
												"src": "1986:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1986:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1985:6:0"
									},
									"scope": 442,
									"src": "1920:336:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "2353:414:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 165,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "2376:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 166,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "2376:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2387:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2376:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 164,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2368:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2368:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "2368:21:0"
											},
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"name": "offset",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 207,
														"src": "2406:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 171,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2406:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 174,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "2435:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																	"typeString": "struct demo2.RLPItem memory"
																}
															},
															"id": 175,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "memPtr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "2435:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 173,
														"name": "_payloadOffset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "2420:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2420:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2406:41:0"
											},
											{
												"assignments": [
													179
												],
												"declarations": [
													{
														"constant": false,
														"id": 179,
														"name": "len",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 207,
														"src": "2462:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 178,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2462:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 180,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "2473:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 181,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "2473:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 182,
														"name": "offset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "2484:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2473:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2462:28:0"
											},
											{
												"assignments": [
													186
												],
												"declarations": [
													{
														"constant": false,
														"id": 186,
														"name": "result",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 207,
														"src": "2520:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 185,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2520:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 191,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 189,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "2552:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2542:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 187,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2546:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2520:36:0"
											},
											{
												"assignments": [
													193
												],
												"declarations": [
													{
														"constant": false,
														"id": 193,
														"name": "destPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 207,
														"src": "2573:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 192,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2573:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 194,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2573:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2609:62:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2628:28:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2643:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "result",
																		"nodeType": "YulIdentifier",
																		"src": "2649:6:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2639:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2639:17:0"
															},
															"variableNames": [
																{
																	"name": "destPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2628:7:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 193,
														"isOffset": false,
														"isSlot": false,
														"src": "2628:7:0",
														"valueSize": 1
													},
													{
														"declaration": 186,
														"isOffset": false,
														"isSlot": false,
														"src": "2649:6:0",
														"valueSize": 1
													}
												],
												"id": 195,
												"nodeType": "InlineAssembly",
												"src": "2600:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 197,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "2692:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "memPtr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 36,
																"src": "2692:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"id": 199,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "2706:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2692:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 201,
															"name": "destPtr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "2714:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 202,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "2723:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 196,
														"name": "copy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "2687:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256) pure"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2687:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "2687:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 205,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 186,
													"src": "2749:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 163,
												"id": 206,
												"nodeType": "Return",
												"src": "2742:13:0"
											}
										]
									},
									"documentation": null,
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toBytes",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 208,
												"src": "2295:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 158,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "2295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2294:21:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 208,
												"src": "2339:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2339:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2338:14:0"
									},
									"scope": 442,
									"src": "2278:489:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "2856:393:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 215,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "2875:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 216,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "2875:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2887:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2875:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 221,
												"nodeType": "IfStatement",
												"src": "2871:27:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2897:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 214,
													"id": 220,
													"nodeType": "Return",
													"src": "2890:8:0"
												}
											},
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"name": "count",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 262,
														"src": "2913:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 222,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2913:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 225,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2926:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2913:14:0"
											},
											{
												"assignments": [
													227
												],
												"declarations": [
													{
														"constant": false,
														"id": 227,
														"name": "currPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 262,
														"src": "2942:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 226,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2942:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 235,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 228,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "2957:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 229,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "memPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "2957:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 231,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "2986:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 232,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "memPtr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 36,
																"src": "2986:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 230,
															"name": "_payloadOffset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "2971:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) pure returns (uint256)"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2971:27:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2957:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2942:56:0"
											},
											{
												"assignments": [
													237
												],
												"declarations": [
													{
														"constant": false,
														"id": 237,
														"name": "endPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 262,
														"src": "3013:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 236,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3013:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 243,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 238,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "3027:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "memPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "3027:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 240,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "3041:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 241,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "3041:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3027:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3013:36:0"
											},
											{
												"body": {
													"id": 258,
													"nodeType": "Block",
													"src": "3089:122:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 247,
																	"name": "currPtr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "3108:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 248,
																		"name": "currPtr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 227,
																		"src": "3118:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 250,
																				"name": "currPtr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 227,
																				"src": "3140:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 249,
																			"name": "_itemLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 341,
																			"src": "3128:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3128:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3118:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3108:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 254,
															"nodeType": "ExpressionStatement",
															"src": "3108:40:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "3188:7:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 255,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 223,
																	"src": "3188:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 257,
															"nodeType": "ExpressionStatement",
															"src": "3188:7:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 244,
														"name": "currPtr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3071:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 245,
														"name": "endPtr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "3081:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3071:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 259,
												"nodeType": "WhileStatement",
												"src": "3064:147:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 260,
													"name": "count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 223,
													"src": "3232:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 261,
												"nodeType": "Return",
												"src": "3225:12:0"
											}
										]
									},
									"documentation": null,
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "numItems",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 263,
												"src": "2807:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 209,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "2807:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2806:21:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 263,
												"src": "2850:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2850:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2849:6:0"
									},
									"scope": 442,
									"src": "2789:460:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "3323:1552:0",
										"statements": [
											{
												"assignments": [
													271
												],
												"declarations": [
													{
														"constant": false,
														"id": 271,
														"name": "itemLen",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 340,
														"src": "3338:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 270,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3338:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 272,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "3338:12:0"
											},
											{
												"assignments": [
													274
												],
												"declarations": [
													{
														"constant": false,
														"id": 274,
														"name": "byte0",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 340,
														"src": "3365:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 273,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3365:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 275,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "3365:10:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3399:65:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3418:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3432:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3441:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3435:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3435:13:0"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nodeType": "YulIdentifier",
																	"src": "3427:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3427:22:0"
															},
															"variableNames": [
																{
																	"name": "byte0",
																	"nodeType": "YulIdentifier",
																	"src": "3418:5:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 274,
														"isOffset": false,
														"isSlot": false,
														"src": "3418:5:0",
														"valueSize": 1
													},
													{
														"declaration": 265,
														"isOffset": false,
														"isSlot": false,
														"src": "3441:6:0",
														"valueSize": 1
													}
												],
												"id": 276,
												"nodeType": "InlineAssembly",
												"src": "3390:74:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 277,
														"name": "byte0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "3484:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 278,
														"name": "STRING_SHORT_START",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "3492:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3484:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 284,
															"name": "byte0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "3566:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 285,
															"name": "STRING_LONG_START",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "3574:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "3566:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 295,
																"name": "byte0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "3676:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 296,
																"name": "LIST_SHORT_START",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "3684:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "3676:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 310,
																	"name": "byte0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "4271:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 311,
																	"name": "LIST_LONG_START",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "4279:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4271:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 333,
																"nodeType": "Block",
																"src": "4390:443:0",
																"statements": [
																	{
																		"assignments": [
																			323
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 323,
																				"name": "dataLen",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 333,
																				"src": "4409:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 322,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "4409:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 324,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4409:12:0"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "4449:302:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "4472:31:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "byte0",
																								"nodeType": "YulIdentifier",
																								"src": "4491:5:0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4498:4:0",
																								"type": "",
																								"value": "0xf7"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4487:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4487:16:0"
																					},
																					"variables": [
																						{
																							"name": "byteLen",
																							"nodeType": "YulTypedName",
																							"src": "4476:7:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"nodeType": "YulAssignment",
																					"src": "4525:24:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "memPtr",
																								"nodeType": "YulIdentifier",
																								"src": "4539:6:0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4547:1:0",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4535:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4535:14:0"
																					},
																					"variableNames": [
																						{
																							"name": "memPtr",
																							"nodeType": "YulIdentifier",
																							"src": "4525:6:0"
																						}
																					]
																				},
																				{
																					"nodeType": "YulAssignment",
																					"src": "4573:57:0",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "memPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4588:5:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4588:13:0"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4607:3:0",
																										"type": "",
																										"value": "256"
																									},
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "4616:2:0",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "byteLen",
																												"nodeType": "YulIdentifier",
																												"src": "4620:7:0"
																											}
																										],
																										"functionName": {
																											"name": "sub",
																											"nodeType": "YulIdentifier",
																											"src": "4612:3:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4612:16:0"
																									}
																								],
																								"functionName": {
																									"name": "exp",
																									"nodeType": "YulIdentifier",
																									"src": "4603:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4603:26:0"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "4584:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4584:46:0"
																					},
																					"variableNames": [
																						{
																							"name": "dataLen",
																							"nodeType": "YulIdentifier",
																							"src": "4573:7:0"
																						}
																					]
																				},
																				{
																					"nodeType": "YulAssignment",
																					"src": "4692:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "dataLen",
																								"nodeType": "YulIdentifier",
																								"src": "4707:7:0"
																							},
																							{
																								"arguments": [
																									{
																										"name": "byteLen",
																										"nodeType": "YulIdentifier",
																										"src": "4720:7:0"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4729:1:0",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4716:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4716:15:0"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4703:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4703:29:0"
																					},
																					"variableNames": [
																						{
																							"name": "itemLen",
																							"nodeType": "YulIdentifier",
																							"src": "4692:7:0"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 274,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "4491:5:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 323,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "4573:7:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 323,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "4707:7:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 271,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "4692:7:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 265,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "4525:6:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 265,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "4539:6:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 265,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "4594:6:0",
																				"valueSize": 1
																			}
																		],
																		"id": 325,
																		"nodeType": "InlineAssembly",
																		"src": "4440:311:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 329,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 327,
																						"name": "itemLen",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 271,
																						"src": "4777:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 328,
																						"name": "dataLen",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 323,
																						"src": "4788:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "4777:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "6164646974696f6e206f766572666c6f77",
																					"id": 330,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4797:19:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
																						"typeString": "literal_string \"addition overflow\""
																					},
																					"value": "addition overflow"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
																						"typeString": "literal_string \"addition overflow\""
																					}
																				],
																				"id": 326,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-18,
																					-18
																				],
																				"referencedDeclaration": -18,
																				"src": "4769:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4769:48:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 332,
																		"nodeType": "ExpressionStatement",
																		"src": "4769:48:0"
																	}
																]
															},
															"id": 334,
															"nodeType": "IfStatement",
															"src": "4267:566:0",
															"trueBody": {
																"id": 321,
																"nodeType": "Block",
																"src": "4296:73:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 313,
																				"name": "itemLen",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 271,
																				"src": "4315:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 316,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 314,
																						"name": "byte0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 274,
																						"src": "4325:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 315,
																						"name": "LIST_SHORT_START",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 26,
																						"src": "4333:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "4325:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 317,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4352:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "4325:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4315:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 320,
																		"nodeType": "ExpressionStatement",
																		"src": "4315:38:0"
																	}
																]
															}
														},
														"id": 335,
														"nodeType": "IfStatement",
														"src": "3672:1161:0",
														"trueBody": {
															"id": 309,
															"nodeType": "Block",
															"src": "3702:544:0",
															"statements": [
																{
																	"assignments": [
																		299
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 299,
																			"name": "dataLen",
																			"nodeType": "VariableDeclaration",
																			"overrides": null,
																			"scope": 309,
																			"src": "3721:12:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 298,
																				"name": "uint",
																				"nodeType": "ElementaryTypeName",
																				"src": "3721:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"value": null,
																			"visibility": "internal"
																		}
																	],
																	"id": 300,
																	"initialValue": null,
																	"nodeType": "VariableDeclarationStatement",
																	"src": "3721:12:0"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "3761:403:0",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3784:31:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "byte0",
																							"nodeType": "YulIdentifier",
																							"src": "3803:5:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3810:4:0",
																							"type": "",
																							"value": "0xb7"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "3799:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3799:16:0"
																				},
																				"variables": [
																					{
																						"name": "byteLen",
																						"nodeType": "YulTypedName",
																						"src": "3788:7:0",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "3872:24:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "memPtr",
																							"nodeType": "YulIdentifier",
																							"src": "3886:6:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3894:1:0",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3882:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3882:14:0"
																				},
																				"variableNames": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3872:6:0"
																					}
																				]
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "3993:57:0",
																				"value": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4014:6:0"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "4008:5:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4008:13:0"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4027:3:0",
																									"type": "",
																									"value": "256"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4036:2:0",
																											"type": "",
																											"value": "32"
																										},
																										{
																											"name": "byteLen",
																											"nodeType": "YulIdentifier",
																											"src": "4040:7:0"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nodeType": "YulIdentifier",
																										"src": "4032:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4032:16:0"
																								}
																							],
																							"functionName": {
																								"name": "exp",
																								"nodeType": "YulIdentifier",
																								"src": "4023:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4023:26:0"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "4004:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4004:46:0"
																				},
																				"variableNames": [
																					{
																						"name": "dataLen",
																						"nodeType": "YulIdentifier",
																						"src": "3993:7:0"
																					}
																				]
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "4105:40:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "dataLen",
																							"nodeType": "YulIdentifier",
																							"src": "4120:7:0"
																						},
																						{
																							"arguments": [
																								{
																									"name": "byteLen",
																									"nodeType": "YulIdentifier",
																									"src": "4133:7:0"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4142:1:0",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4129:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4129:15:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4116:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4116:29:0"
																				},
																				"variableNames": [
																					{
																						"name": "itemLen",
																						"nodeType": "YulIdentifier",
																						"src": "4105:7:0"
																					}
																				]
																			}
																		]
																	},
																	"evmVersion": "istanbul",
																	"externalReferences": [
																		{
																			"declaration": 274,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "3803:5:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 299,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "3993:7:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 299,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "4120:7:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 271,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "4105:7:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 265,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "3872:6:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 265,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "3886:6:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 265,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "4014:6:0",
																			"valueSize": 1
																		}
																	],
																	"id": 301,
																	"nodeType": "InlineAssembly",
																	"src": "3752:412:0"
																},
																{
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 305,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 303,
																					"name": "itemLen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 271,
																					"src": "4190:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 304,
																					"name": "dataLen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 299,
																					"src": "4201:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4190:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"hexValue": "6164646974696f6e206f766572666c6f77",
																				"id": 306,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4210:19:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
																					"typeString": "literal_string \"addition overflow\""
																				},
																				"value": "addition overflow"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
																					"typeString": "literal_string \"addition overflow\""
																				}
																			],
																			"id": 302,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				-18,
																				-18
																			],
																			"referencedDeclaration": -18,
																			"src": "4182:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (bool,string memory) pure"
																			}
																		},
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4182:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 308,
																	"nodeType": "ExpressionStatement",
																	"src": "4182:48:0"
																}
															]
														}
													},
													"id": 336,
													"nodeType": "IfStatement",
													"src": "3562:1271:0",
													"trueBody": {
														"expression": {
															"argumentTypes": null,
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"id": 287,
																"name": "itemLen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "3610:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 288,
																		"name": "byte0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 274,
																		"src": "3620:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 289,
																		"name": "STRING_SHORT_START",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 20,
																		"src": "3628:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "3620:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3649:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3620:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3610:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 294,
														"nodeType": "ExpressionStatement",
														"src": "3610:40:0"
													}
												},
												"id": 337,
												"nodeType": "IfStatement",
												"src": "3480:1353:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 280,
															"name": "itemLen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "3529:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3539:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 283,
													"nodeType": "ExpressionStatement",
													"src": "3529:11:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 338,
													"name": "itemLen",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 271,
													"src": "4856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 269,
												"id": 339,
												"nodeType": "Return",
												"src": "4849:14:0"
											}
										]
									},
									"documentation": null,
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_itemLength",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"name": "memPtr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 341,
												"src": "3282:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3282:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3281:13:0"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 341,
												"src": "3317:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3317:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3316:6:0"
									},
									"scope": 442,
									"src": "3261:1614:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 395,
										"nodeType": "Block",
										"src": "5004:538:0",
										"statements": [
											{
												"assignments": [
													349
												],
												"declarations": [
													{
														"constant": false,
														"id": 349,
														"name": "byte0",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 395,
														"src": "5019:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 348,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5019:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 350,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "5019:10:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5053:65:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5072:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5086:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5095:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5089:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5089:13:0"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nodeType": "YulIdentifier",
																	"src": "5081:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5081:22:0"
															},
															"variableNames": [
																{
																	"name": "byte0",
																	"nodeType": "YulIdentifier",
																	"src": "5072:5:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 349,
														"isOffset": false,
														"isSlot": false,
														"src": "5072:5:0",
														"valueSize": 1
													},
													{
														"declaration": 343,
														"isOffset": false,
														"isSlot": false,
														"src": "5095:6:0",
														"valueSize": 1
													}
												],
												"id": 351,
												"nodeType": "InlineAssembly",
												"src": "5044:74:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 352,
														"name": "byte0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "5138:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 353,
														"name": "STRING_SHORT_START",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "5146:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5138:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 357,
																"name": "byte0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "5215:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 358,
																"name": "STRING_LONG_START",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "5223:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "5215:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 360,
																			"name": "byte0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 349,
																			"src": "5245:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 361,
																			"name": "LIST_SHORT_START",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 26,
																			"src": "5254:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "5245:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 363,
																			"name": "byte0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 349,
																			"src": "5274:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 364,
																			"name": "LIST_LONG_START",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 29,
																			"src": "5282:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "5274:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5245:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 367,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5244:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5215:83:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 371,
																"name": "byte0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "5349:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 372,
																"name": "LIST_SHORT_START",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5357:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "5349:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"expression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 383,
																		"name": "byte0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 349,
																		"src": "5497:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 386,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 384,
																					"name": "LIST_LONG_START",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 29,
																					"src": "5506:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 385,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5524:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "5506:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 387,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5505:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "5497:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5529:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5497:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 347,
															"id": 391,
															"nodeType": "Return",
															"src": "5490:40:0"
														},
														"id": 392,
														"nodeType": "IfStatement",
														"src": "5345:185:0",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 374,
																		"name": "byte0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 349,
																		"src": "5418:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 377,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 375,
																					"name": "STRING_LONG_START",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 23,
																					"src": "5427:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 376,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5447:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "5427:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 378,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5426:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "5418:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5452:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5418:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 347,
															"id": 382,
															"nodeType": "Return",
															"src": "5411:42:0"
														}
													},
													"id": 393,
													"nodeType": "IfStatement",
													"src": "5211:319:0",
													"trueBody": {
														"expression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5324:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"functionReturnParameters": 347,
														"id": 370,
														"nodeType": "Return",
														"src": "5317:8:0"
													}
												},
												"id": 394,
												"nodeType": "IfStatement",
												"src": "5134:396:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5190:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 347,
													"id": 356,
													"nodeType": "Return",
													"src": "5183:8:0"
												}
											}
										]
									},
									"documentation": null,
									"id": 396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_payloadOffset",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"name": "memPtr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 396,
												"src": "4963:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4963:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4962:13:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 396,
												"src": "4998:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4998:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4997:6:0"
									},
									"scope": 442,
									"src": "4939:603:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "5613:727:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 405,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "5632:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5639:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5632:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 409,
												"nodeType": "IfStatement",
												"src": "5628:21:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 404,
													"id": 408,
													"nodeType": "Return",
													"src": "5642:7:0"
												}
											},
											{
												"body": {
													"id": 426,
													"nodeType": "Block",
													"src": "5760:182:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "5788:66:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dest",
																					"nodeType": "YulIdentifier",
																					"src": "5818:4:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5830:3:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5824:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5824:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5811:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5811:24:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5811:24:0"
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 400,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5818:4:0",
																	"valueSize": 1
																},
																{
																	"declaration": 398,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5830:3:0",
																	"valueSize": 1
																}
															],
															"id": 417,
															"nodeType": "InlineAssembly",
															"src": "5779:75:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 418,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "5874:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 419,
																	"name": "WORD_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "5881:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "5874:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 421,
															"nodeType": "ExpressionStatement",
															"src": "5874:16:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 422,
																	"name": "dest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "5909:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 423,
																	"name": "WORD_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "5917:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "5909:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 425,
															"nodeType": "ExpressionStatement",
															"src": "5909:17:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 410,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "5724:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 411,
														"name": "WORD_SIZE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "5731:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5724:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 427,
												"initializationExpression": null,
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 413,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "5742:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"argumentTypes": null,
															"id": 414,
															"name": "WORD_SIZE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "5749:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "5742:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 416,
													"nodeType": "ExpressionStatement",
													"src": "5742:16:0"
												},
												"nodeType": "ForStatement",
												"src": "5717:225:0"
											},
											{
												"assignments": [
													429
												],
												"declarations": [
													{
														"constant": false,
														"id": 429,
														"name": "mask",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 440,
														"src": "6043:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 428,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6043:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "323536",
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6055:3:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "256"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 431,
																		"name": "WORD_SIZE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 32,
																		"src": "6063:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 432,
																		"name": "len",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "6075:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6063:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 434,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6062:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6055:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6082:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6055:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6043:40:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6107:222:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6126:41:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6151:3:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6145:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6145:10:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "6161:4:0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6157:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6157:9:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6141:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6141:26:0"
															},
															"variables": [
																{
																	"name": "srcpart",
																	"nodeType": "YulTypedName",
																	"src": "6130:7:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6201:38:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dest",
																				"nodeType": "YulIdentifier",
																				"src": "6227:4:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6221:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6221:11:0"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6234:4:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6217:22:0"
															},
															"variables": [
																{
																	"name": "destpart",
																	"nodeType": "YulTypedName",
																	"src": "6205:8:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dest",
																		"nodeType": "YulIdentifier",
																		"src": "6286:4:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "destpart",
																				"nodeType": "YulIdentifier",
																				"src": "6295:8:0"
																			},
																			{
																				"name": "srcpart",
																				"nodeType": "YulIdentifier",
																				"src": "6305:7:0"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "6292:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6292:21:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6279:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6279:35:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6279:35:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 400,
														"isOffset": false,
														"isSlot": false,
														"src": "6227:4:0",
														"valueSize": 1
													},
													{
														"declaration": 400,
														"isOffset": false,
														"isSlot": false,
														"src": "6286:4:0",
														"valueSize": 1
													},
													{
														"declaration": 429,
														"isOffset": false,
														"isSlot": false,
														"src": "6161:4:0",
														"valueSize": 1
													},
													{
														"declaration": 429,
														"isOffset": false,
														"isSlot": false,
														"src": "6234:4:0",
														"valueSize": 1
													},
													{
														"declaration": 398,
														"isOffset": false,
														"isSlot": false,
														"src": "6151:3:0",
														"valueSize": 1
													}
												],
												"id": 439,
												"nodeType": "InlineAssembly",
												"src": "6098:231:0"
											}
										]
									},
									"documentation": null,
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "copy",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"name": "src",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 441,
												"src": "5569:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5569:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"name": "dest",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 441,
												"src": "5579:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5579:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"name": "len",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 441,
												"src": "5590:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5590:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5568:31:0"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5613:0:0"
									},
									"scope": 442,
									"src": "5555:785:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 443,
							"src": "81:6266:0"
						}
					],
					"src": "4:6358:0"
				},
				"id": 0
			}
		}
	}
}