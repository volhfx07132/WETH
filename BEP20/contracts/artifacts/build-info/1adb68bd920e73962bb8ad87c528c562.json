{
	"id": "1adb68bd920e73962bb8ad87c528c562",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.4",
	"solcLongVersion": "0.6.4+commit.1dca32f3",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BEP.sol": {
				"content": "pragma solidity 0.6.4;\r\n\r\ninterface IBEP20 {\r\n  /**\r\n   * @dev Returns the amount of tokens in existence.\r\n   */\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8);\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory);\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view returns (string memory);\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view returns (address);\r\n\r\n  /**\r\n   * @dev Returns the amount of tokens owned by `account`.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Returns the remaining number of tokens that `spender` will be\r\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n   * zero by default.\r\n   *\r\n   * This value changes when {approve} or {transferFrom} are called.\r\n   */\r\n  function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n   * that someone may use both the old and the new allowance by unfortunate\r\n   * transaction ordering. One possible solution to mitigate this race\r\n   * condition is to first reduce the spender's allowance to 0 and set the\r\n   * desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   * Emits an {Approval} event.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n   * allowance mechanism. `amount` is then deducted from the caller's\r\n   * allowance.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n   * another (`to`).\r\n   *\r\n   * Note that `value` may be zero.\r\n   */\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  /**\r\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n   * a call to {approve}. `value` is the new allowance.\r\n   */\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\ncontract Context {\r\n  // Empty internal constructor, to prevent people from mistakenly deploying\r\n  // an instance of this contract, which should be used via inheritance.\r\n  constructor () internal { }\r\n\r\n  function _msgSender() internal view returns (address payable) {\r\n    return msg.sender;\r\n  }\r\n\r\n  function _msgData() internal view returns (bytes memory) {\r\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    return msg.data;\r\n  }\r\n}\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n  /**\r\n   * @dev Returns the addition of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `+` operator.\r\n   *\r\n   * Requirements:\r\n   * - Addition cannot overflow.\r\n   */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return sub(a, b, \"SafeMath: subtraction overflow\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b <= a, errorMessage);\r\n    uint256 c = a - b;\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the multiplication of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `*` operator.\r\n   *\r\n   * Requirements:\r\n   * - Multiplication cannot overflow.\r\n   */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n    // benefit is lost if 'b' is also tested.\r\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    uint256 c = a * b;\r\n    require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return div(a, b, \"SafeMath: division by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    // Solidity only automatically asserts when dividing by 0\r\n    require(b > 0, errorMessage);\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return mod(a, b, \"SafeMath: modulo by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts with custom message when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b != 0, errorMessage);\r\n    return a % b;\r\n  }\r\n}\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\ncontract Ownable is Context {\r\n  address private _owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  /**\r\n   * @dev Initializes the contract setting the deployer as the initial owner.\r\n   */\r\n  constructor () internal {\r\n    address msgSender = _msgSender();\r\n    _owner = msgSender;\r\n    emit OwnershipTransferred(address(0), msgSender);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the address of the current owner.\r\n   */\r\n  function owner() public view returns (address) {\r\n    return _owner;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Leaves the contract without owner. It will not be possible to call\r\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n   *\r\n   * NOTE: Renouncing ownership will leave the contract without an owner,\r\n   * thereby removing any functionality that is only available to the owner.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipTransferred(_owner, address(0));\r\n    _owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   * Can only be called by the current owner.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    _transferOwnership(newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   */\r\n  function _transferOwnership(address newOwner) internal {\r\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n    emit OwnershipTransferred(_owner, newOwner);\r\n    _owner = newOwner;\r\n  }\r\n}\r\n\r\ncontract BEP20Token is Context, IBEP20, Ownable {\r\n  using SafeMath for uint256;\r\n\r\n  mapping (address => uint256) private _balances;\r\n\r\n  mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n  uint256 private _totalSupply;\r\n  uint8 private _decimals;\r\n  string private _symbol;\r\n  string private _name;\r\n\r\n  constructor(string memory name_, string memory symbol_, uint8 decimals_, uint256 totalSupply_) public {\r\n    _name = name_;\r\n    _symbol = symbol_;\r\n    _decimals = decimals_;\r\n    _totalSupply = totalSupply_;\r\n    _balances[msg.sender] = _totalSupply;\r\n\r\n    emit Transfer(address(0), msg.sender, _totalSupply);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external override view returns (address) {\r\n    return owner();\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external override view returns (uint8) {\r\n    return _decimals;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external override view returns (string memory) {\r\n    return _symbol;\r\n  }\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view override returns (string memory) {\r\n    return _name;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-totalSupply}.\r\n   */\r\n  function totalSupply() external override view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-balanceOf}.\r\n   */\r\n  function balanceOf(address account) external override view returns (uint256) {\r\n    return _balances[account];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transfer}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `recipient` cannot be the zero address.\r\n   * - the caller must have a balance of at least `amount`.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external override returns (bool) {\r\n    _transfer(_msgSender(), recipient, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-allowance}.\r\n   */\r\n  function allowance(address owner, address spender) external override view returns (uint256) {\r\n    return _allowances[owner][spender];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-approve}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function approve(address spender, uint256 amount) external override returns (bool) {\r\n    _approve(_msgSender(), spender, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transferFrom}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance. This is not\r\n   * required by the EIP. See the note at the beginning of {BEP20};\r\n   *\r\n   * Requirements:\r\n   * - `sender` and `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   * - the caller must have allowance for `sender`'s tokens of at least\r\n   * `amount`.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r\n    _transfer(sender, recipient, amount);\r\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   * - `spender` must have allowance for the caller of at least\r\n   * `subtractedValue`.\r\n   */\r\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\r\n   * the total supply.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `msg.sender` must be the token owner\r\n   */\r\n  function mint(uint256 amount) public onlyOwner returns (bool) {\r\n    _mint(_msgSender(), amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n   *\r\n   * This is internal function is equivalent to {transfer}, and can be used to\r\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `sender` cannot be the zero address.\r\n   * - `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   */\r\n  function _transfer(address sender, address recipient, uint256 amount) internal {\r\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n\r\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\r\n    _balances[recipient] = _balances[recipient].add(amount);\r\n    emit Transfer(sender, recipient, amount);\r\n  }\r\n\r\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n   * the total supply.\r\n   *\r\n   * Emits a {Transfer} event with `from` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `to` cannot be the zero address.\r\n   */\r\n  function _mint(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: mint to the zero address\");\r\n\r\n    _totalSupply = _totalSupply.add(amount);\r\n    _balances[account] = _balances[account].add(amount);\r\n    emit Transfer(address(0), account, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`, reducing the\r\n   * total supply.\r\n   *\r\n   * Emits a {Transfer} event with `to` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `account` cannot be the zero address.\r\n   * - `account` must have at least `amount` tokens.\r\n   */\r\n  function _burn(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: burn from the zero address\");\r\n\r\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\r\n    _totalSupply = _totalSupply.sub(amount);\r\n    emit Transfer(account, address(0), amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\r\n   *\r\n   * This is internal function is equivalent to `approve`, and can be used to\r\n   * e.g. set automatic allowances for certain subsystems, etc.\r\n   *\r\n   * Emits an {Approval} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `owner` cannot be the zero address.\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function _approve(address owner, address spender, uint256 amount) internal {\r\n    require(owner != address(0), \"BEP20: approve from the zero address\");\r\n    require(spender != address(0), \"BEP20: approve to the zero address\");\r\n\r\n    _allowances[owner][spender] = amount;\r\n    emit Approval(owner, spender, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\r\n   * from the caller's allowance.\r\n   *\r\n   * See {_burn} and {_approve}.\r\n   */\r\n  function _burnFrom(address account, uint256 amount) internal {\r\n    _burn(account, amount);\r\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\r\n  }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/BEP.sol": {
				"BEP20Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals_",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}.    * Requirements:    * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.    * Requirements    * - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}.    * Requirements:    * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}.    * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};    * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/BEP.sol\":11305:19285  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BEP.sol\":11635:11952  constructor(string memory name_, string memory symbol_, uint8 decimals_, uint256 totalSupply_) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"contracts/BEP.sol\":11635:11952  constructor(string memory name_, string memory symbol_, uint8 decimals_, uint256 totalSupply_) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":15:18   */\n  0x80\n    /* \"--CODEGEN--\":10:13   */\n  dup2\n    /* \"--CODEGEN--\":7:19   */\n  lt\n    /* \"--CODEGEN--\":4:6   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":32:33   */\n  0x00\n    /* \"--CODEGEN--\":29:30   */\n  dup1\n    /* \"--CODEGEN--\":22:34   */\n  revert\n    /* \"--CODEGEN--\":4:6   */\ntag_2:\n    /* \"contracts/BEP.sol\":11635:11952  constructor(string memory name_, string memory symbol_, uint8 decimals_, uint256 totalSupply_) public {\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_3:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_4:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":330:339   */\n  dup7\n    /* \"--CODEGEN--\":325:326   */\n  0x01\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:327   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:328   */\n  add\n    /* \"--CODEGEN--\":282:340   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_5\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_5:\n    /* \"--CODEGEN--\":384:396   */\n  dup1\n    /* \"--CODEGEN--\":379:382   */\n  dup4\n    /* \"--CODEGEN--\":372:397   */\n  mstore\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":415:418   */\n  dup4\n    /* \"--CODEGEN--\":411:425   */\n  add\n    /* \"--CODEGEN--\":404:425   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:432   */\n  pop\n  pop\n    /* \"contracts/BEP.sol\":11635:11952  constructor(string memory name_, string memory symbol_, uint8 decimals_, uint256 totalSupply_) public {\r... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_6:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_8\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_6)\ntag_8:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"contracts/BEP.sol\":11635:11952  constructor(string memory name_, string memory symbol_, uint8 decimals_, uint256 totalSupply_) public {\r... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_10\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_10:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_11\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_11:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":330:339   */\n  dup7\n    /* \"--CODEGEN--\":325:326   */\n  0x01\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:327   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:328   */\n  add\n    /* \"--CODEGEN--\":282:340   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_12\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_12:\n    /* \"--CODEGEN--\":384:396   */\n  dup1\n    /* \"--CODEGEN--\":379:382   */\n  dup4\n    /* \"--CODEGEN--\":372:397   */\n  mstore\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":415:418   */\n  dup4\n    /* \"--CODEGEN--\":411:425   */\n  add\n    /* \"--CODEGEN--\":404:425   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:432   */\n  pop\n  pop\n    /* \"contracts/BEP.sol\":11635:11952  constructor(string memory name_, string memory symbol_, uint8 decimals_, uint256 totalSupply_) public {\r... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_13:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_15\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_13)\ntag_15:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"contracts/BEP.sol\":11635:11952  constructor(string memory name_, string memory symbol_, uint8 decimals_, uint256 totalSupply_) public {\r... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/BEP.sol\":9814:9831  address msgSender */\n  0x00\n    /* \"contracts/BEP.sol\":9834:9846  _msgSender() */\n  tag_22\n    /* \"contracts/BEP.sol\":9834:9844  _msgSender */\n  shl(0x20, tag_23)\n    /* \"contracts/BEP.sol\":9834:9846  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"contracts/BEP.sol\":9814:9846  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"contracts/BEP.sol\":9862:9871  msgSender */\n  dup1\n    /* \"contracts/BEP.sol\":9853:9859  _owner */\n  0x00\n  dup1\n    /* \"contracts/BEP.sol\":9853:9871  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BEP.sol\":9916:9925  msgSender */\n  dup1\n    /* \"contracts/BEP.sol\":9883:9926  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/BEP.sol\":9912:9913  0 */\n  0x00\n    /* \"contracts/BEP.sol\":9883:9926  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/BEP.sol\":9783:9932  constructor () internal {\r... */\n  pop\n    /* \"contracts/BEP.sol\":11752:11757  name_ */\n  dup4\n    /* \"contracts/BEP.sol\":11744:11749  _name */\n  0x06\n    /* \"contracts/BEP.sol\":11744:11757  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_25\n  swap3\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  pop\n    /* \"contracts/BEP.sol\":11774:11781  symbol_ */\n  dup3\n    /* \"contracts/BEP.sol\":11764:11771  _symbol */\n  0x05\n    /* \"contracts/BEP.sol\":11764:11781  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_27\n  swap3\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_27:\n  pop\n    /* \"contracts/BEP.sol\":11800:11809  decimals_ */\n  dup2\n    /* \"contracts/BEP.sol\":11788:11797  _decimals */\n  0x04\n  0x00\n    /* \"contracts/BEP.sol\":11788:11809  _decimals = decimals_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BEP.sol\":11831:11843  totalSupply_ */\n  dup1\n    /* \"contracts/BEP.sol\":11816:11828  _totalSupply */\n  0x03\n    /* \"contracts/BEP.sol\":11816:11843  _totalSupply = totalSupply_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/BEP.sol\":11874:11886  _totalSupply */\n  sload(0x03)\n    /* \"contracts/BEP.sol\":11850:11859  _balances */\n  0x01\n    /* \"contracts/BEP.sol\":11850:11871  _balances[msg.sender] */\n  0x00\n    /* \"contracts/BEP.sol\":11860:11870  msg.sender */\n  caller\n    /* \"contracts/BEP.sol\":11850:11871  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/BEP.sol\":11850:11886  _balances[msg.sender] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/BEP.sol\":11921:11931  msg.sender */\n  caller\n    /* \"contracts/BEP.sol\":11900:11946  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/BEP.sol\":11917:11918  0 */\n  0x00\n    /* \"contracts/BEP.sol\":11900:11946  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/BEP.sol\":11933:11945  _totalSupply */\n  sload(0x03)\n    /* \"contracts/BEP.sol\":11900:11946  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/BEP.sol\":11635:11952  constructor(string memory name_, string memory symbol_, uint8 decimals_, uint256 totalSupply_) public {\r... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/BEP.sol\":11305:19285  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n  jump(tag_28)\n    /* \"contracts/BEP.sol\":3702:3794  function _msgSender() internal view returns (address payable) {\r... */\ntag_23:\n    /* \"contracts/BEP.sol\":3747:3762  address payable */\n  0x00\n    /* \"contracts/BEP.sol\":3778:3788  msg.sender */\n  caller\n    /* \"contracts/BEP.sol\":3771:3788  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/BEP.sol\":3702:3794  function _msgSender() internal view returns (address payable) {\r... */\n  swap1\n  jump\t// out\n    /* \"contracts/BEP.sol\":11305:19285  contract BEP20Token is Context, IBEP20, Ownable {\r... */\ntag_26:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_31\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_30)\ntag_31:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_30\n  jumpi\n  swap2\n  dup3\n  add\ntag_32:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_33\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_32)\ntag_33:\ntag_30:\n  pop\n  swap1\n  pop\n  tag_34\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n  pop\n  swap1\n  jump\t// out\ntag_35:\n  tag_36\n  swap2\n  swap1\ntag_37:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_38\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_37)\ntag_38:\n  pop\n  swap1\n  jump\ntag_36:\n  swap1\n  jump\t// out\ntag_28:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BEP.sol\":11305:19285  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"contracts/BEP.sol\":11305:19285  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x893d20e8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/BEP.sol\":12449:12537  function name() external view override returns (string memory) {\r... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_24:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_24)\n    tag_26:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/BEP.sol\":12449:12537  function name() external view override returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_27\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_27:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":13534:13687  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_29:\n        /* \"contracts/BEP.sol\":13534:13687  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_30\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":12593:12689  function totalSupply() external override view returns (uint256) {\r... */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":14132:14433  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_6:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x60\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_34:\n        /* \"contracts/BEP.sol\":14132:14433  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_35\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":12159:12247  function decimals() external override view returns (uint8) {\r... */\n    tag_7:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":14815:15015  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_39:\n        /* \"contracts/BEP.sol\":14815:15015  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":12743:12858  function balanceOf(address account) external override view returns (uint256) {\r... */\n    tag_9:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_42:\n        /* \"contracts/BEP.sol\":12743:12858  function balanceOf(address account) external override view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":10607:10737  function renounceOwnership() public onlyOwner {\r... */\n    tag_10:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/BEP.sol\":12012:12100  function getOwner() external override view returns (address) {\r... */\n    tag_11:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":10005:10078  function owner() public view returns (address) {\r... */\n    tag_12:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":12304:12396  function symbol() external override view returns (string memory) {\r... */\n    tag_13:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_52:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_52)\n    tag_54:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/BEP.sol\":12304:12396  function symbol() external override view returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_55\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_55:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":15938:16058  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_14:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_57:\n        /* \"contracts/BEP.sol\":15938:16058  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":15487:15738  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_15:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_60:\n        /* \"contracts/BEP.sol\":15487:15738  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":13052:13211  function transfer(address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_16:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_63:\n        /* \"contracts/BEP.sol\":13052:13211  function transfer(address recipient, uint256 amount) external override returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":13265:13404  function allowance(address owner, address spender) external override view returns (uint256) {\r... */\n    tag_17:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_66:\n        /* \"contracts/BEP.sol\":13265:13404  function allowance(address owner, address spender) external override view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":10882:10985  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_18:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_69:\n        /* \"contracts/BEP.sol\":10882:10985  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_70\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/BEP.sol\":12449:12537  function name() external view override returns (string memory) {\r... */\n    tag_23:\n        /* \"contracts/BEP.sol\":12497:12510  string memory */\n      0x60\n        /* \"contracts/BEP.sol\":12526:12531  _name */\n      0x06\n        /* \"contracts/BEP.sol\":12519:12531  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_72\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_73\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_72)\n    tag_73:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_74:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_74\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":12449:12537  function name() external view override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP.sol\":13534:13687  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n    tag_30:\n        /* \"contracts/BEP.sol\":13611:13615  bool */\n      0x00\n        /* \"contracts/BEP.sol\":13624:13663  _approve(_msgSender(), spender, amount) */\n      tag_76\n        /* \"contracts/BEP.sol\":13633:13645  _msgSender() */\n      tag_77\n        /* \"contracts/BEP.sol\":13633:13643  _msgSender */\n      tag_78\n        /* \"contracts/BEP.sol\":13633:13645  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"contracts/BEP.sol\":13647:13654  spender */\n      dup5\n        /* \"contracts/BEP.sol\":13656:13662  amount */\n      dup5\n        /* \"contracts/BEP.sol\":13624:13632  _approve */\n      tag_79\n        /* \"contracts/BEP.sol\":13624:13663  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_76:\n        /* \"contracts/BEP.sol\":13677:13681  true */\n      0x01\n        /* \"contracts/BEP.sol\":13670:13681  return true */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":13534:13687  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":12593:12689  function totalSupply() external override view returns (uint256) {\r... */\n    tag_32:\n        /* \"contracts/BEP.sol\":12648:12655  uint256 */\n      0x00\n        /* \"contracts/BEP.sol\":12671:12683  _totalSupply */\n      sload(0x03)\n        /* \"contracts/BEP.sol\":12664:12683  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":12593:12689  function totalSupply() external override view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP.sol\":14132:14433  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_35:\n        /* \"contracts/BEP.sol\":14232:14236  bool */\n      0x00\n        /* \"contracts/BEP.sol\":14245:14281  _transfer(sender, recipient, amount) */\n      tag_82\n        /* \"contracts/BEP.sol\":14255:14261  sender */\n      dup5\n        /* \"contracts/BEP.sol\":14263:14272  recipient */\n      dup5\n        /* \"contracts/BEP.sol\":14274:14280  amount */\n      dup5\n        /* \"contracts/BEP.sol\":14245:14254  _transfer */\n      tag_83\n        /* \"contracts/BEP.sol\":14245:14281  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_82:\n        /* \"contracts/BEP.sol\":14288:14409  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_84\n        /* \"contracts/BEP.sol\":14297:14303  sender */\n      dup5\n        /* \"contracts/BEP.sol\":14305:14317  _msgSender() */\n      tag_85\n        /* \"contracts/BEP.sol\":14305:14315  _msgSender */\n      tag_78\n        /* \"contracts/BEP.sol\":14305:14317  _msgSender() */\n      jump\t// in\n    tag_85:\n        /* \"contracts/BEP.sol\":14319:14408  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_86\n        /* \"contracts/BEP.sol\":14357:14363  amount */\n      dup6\n        /* \"contracts/BEP.sol\":14319:14408  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"contracts/BEP.sol\":14319:14330  _allowances */\n      0x02\n        /* \"contracts/BEP.sol\":14319:14338  _allowances[sender] */\n      0x00\n        /* \"contracts/BEP.sol\":14331:14337  sender */\n      dup12\n        /* \"contracts/BEP.sol\":14319:14338  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP.sol\":14319:14352  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"contracts/BEP.sol\":14339:14351  _msgSender() */\n      tag_87\n        /* \"contracts/BEP.sol\":14339:14349  _msgSender */\n      tag_78\n        /* \"contracts/BEP.sol\":14339:14351  _msgSender() */\n      jump\t// in\n    tag_87:\n        /* \"contracts/BEP.sol\":14319:14352  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP.sol\":14319:14356  _allowances[sender][_msgSender()].sub */\n      tag_88\n      swap1\n        /* \"contracts/BEP.sol\":14319:14408  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_86:\n        /* \"contracts/BEP.sol\":14288:14296  _approve */\n      tag_79\n        /* \"contracts/BEP.sol\":14288:14409  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_84:\n        /* \"contracts/BEP.sol\":14423:14427  true */\n      0x01\n        /* \"contracts/BEP.sol\":14416:14427  return true */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":14132:14433  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":12159:12247  function decimals() external override view returns (uint8) {\r... */\n    tag_37:\n        /* \"contracts/BEP.sol\":12211:12216  uint8 */\n      0x00\n        /* \"contracts/BEP.sol\":12232:12241  _decimals */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BEP.sol\":12225:12241  return _decimals */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":12159:12247  function decimals() external override view returns (uint8) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP.sol\":14815:15015  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_40:\n        /* \"contracts/BEP.sol\":14895:14899  bool */\n      0x00\n        /* \"contracts/BEP.sol\":14908:14991  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_91\n        /* \"contracts/BEP.sol\":14917:14929  _msgSender() */\n      tag_92\n        /* \"contracts/BEP.sol\":14917:14927  _msgSender */\n      tag_78\n        /* \"contracts/BEP.sol\":14917:14929  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"contracts/BEP.sol\":14931:14938  spender */\n      dup5\n        /* \"contracts/BEP.sol\":14940:14990  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_93\n        /* \"contracts/BEP.sol\":14979:14989  addedValue */\n      dup6\n        /* \"contracts/BEP.sol\":14940:14951  _allowances */\n      0x02\n        /* \"contracts/BEP.sol\":14940:14965  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/BEP.sol\":14952:14964  _msgSender() */\n      tag_94\n        /* \"contracts/BEP.sol\":14952:14962  _msgSender */\n      tag_78\n        /* \"contracts/BEP.sol\":14952:14964  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"contracts/BEP.sol\":14940:14965  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP.sol\":14940:14974  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/BEP.sol\":14966:14973  spender */\n      dup10\n        /* \"contracts/BEP.sol\":14940:14974  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP.sol\":14940:14978  _allowances[_msgSender()][spender].add */\n      tag_95\n      swap1\n        /* \"contracts/BEP.sol\":14940:14990  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_93:\n        /* \"contracts/BEP.sol\":14908:14916  _approve */\n      tag_79\n        /* \"contracts/BEP.sol\":14908:14991  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_91:\n        /* \"contracts/BEP.sol\":15005:15009  true */\n      0x01\n        /* \"contracts/BEP.sol\":14998:15009  return true */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":14815:15015  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":12743:12858  function balanceOf(address account) external override view returns (uint256) {\r... */\n    tag_43:\n        /* \"contracts/BEP.sol\":12811:12818  uint256 */\n      0x00\n        /* \"contracts/BEP.sol\":12834:12843  _balances */\n      0x01\n        /* \"contracts/BEP.sol\":12834:12852  _balances[account] */\n      0x00\n        /* \"contracts/BEP.sol\":12844:12851  account */\n      dup4\n        /* \"contracts/BEP.sol\":12834:12852  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP.sol\":12827:12852  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":12743:12858  function balanceOf(address account) external override view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":10607:10737  function renounceOwnership() public onlyOwner {\r... */\n    tag_45:\n        /* \"contracts/BEP.sol\":10209:10221  _msgSender() */\n      tag_98\n        /* \"contracts/BEP.sol\":10209:10219  _msgSender */\n      tag_78\n        /* \"contracts/BEP.sol\":10209:10221  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"contracts/BEP.sol\":10199:10221  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":10199:10205  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":10199:10221  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BEP.sol\":10191:10258  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/BEP.sol\":10702:10703  0 */\n      0x00\n        /* \"contracts/BEP.sol\":10665:10705  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":10686:10692  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":10665:10705  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP.sol\":10729:10730  0 */\n      0x00\n        /* \"contracts/BEP.sol\":10712:10718  _owner */\n      dup1\n      0x00\n        /* \"contracts/BEP.sol\":10712:10731  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP.sol\":10607:10737  function renounceOwnership() public onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/BEP.sol\":12012:12100  function getOwner() external override view returns (address) {\r... */\n    tag_47:\n        /* \"contracts/BEP.sol\":12064:12071  address */\n      0x00\n        /* \"contracts/BEP.sol\":12087:12094  owner() */\n      tag_102\n        /* \"contracts/BEP.sol\":12087:12092  owner */\n      tag_49\n        /* \"contracts/BEP.sol\":12087:12094  owner() */\n      jump\t// in\n    tag_102:\n        /* \"contracts/BEP.sol\":12080:12094  return owner() */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":12012:12100  function getOwner() external override view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP.sol\":10005:10078  function owner() public view returns (address) {\r... */\n    tag_49:\n        /* \"contracts/BEP.sol\":10043:10050  address */\n      0x00\n        /* \"contracts/BEP.sol\":10066:10072  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":10059:10072  return _owner */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":10005:10078  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP.sol\":12304:12396  function symbol() external override view returns (string memory) {\r... */\n    tag_51:\n        /* \"contracts/BEP.sol\":12354:12367  string memory */\n      0x60\n        /* \"contracts/BEP.sol\":12383:12390  _symbol */\n      0x05\n        /* \"contracts/BEP.sol\":12376:12390  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_105\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_106\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_105)\n    tag_106:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_107:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_107\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":12304:12396  function symbol() external override view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP.sol\":15938:16058  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_58:\n        /* \"contracts/BEP.sol\":15994:15998  bool */\n      0x00\n        /* \"contracts/BEP.sol\":10209:10221  _msgSender() */\n      tag_109\n        /* \"contracts/BEP.sol\":10209:10219  _msgSender */\n      tag_78\n        /* \"contracts/BEP.sol\":10209:10221  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/BEP.sol\":10199:10221  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":10199:10205  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":10199:10221  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BEP.sol\":10191:10258  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"contracts/BEP.sol\":16007:16034  _mint(_msgSender(), amount) */\n      tag_112\n        /* \"contracts/BEP.sol\":16013:16025  _msgSender() */\n      tag_113\n        /* \"contracts/BEP.sol\":16013:16023  _msgSender */\n      tag_78\n        /* \"contracts/BEP.sol\":16013:16025  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"contracts/BEP.sol\":16027:16033  amount */\n      dup4\n        /* \"contracts/BEP.sol\":16007:16012  _mint */\n      tag_114\n        /* \"contracts/BEP.sol\":16007:16034  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_112:\n        /* \"contracts/BEP.sol\":16048:16052  true */\n      0x01\n        /* \"contracts/BEP.sol\":16041:16052  return true */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":15938:16058  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":15487:15738  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_61:\n        /* \"contracts/BEP.sol\":15572:15576  bool */\n      0x00\n        /* \"contracts/BEP.sol\":15585:15714  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_116\n        /* \"contracts/BEP.sol\":15594:15606  _msgSender() */\n      tag_117\n        /* \"contracts/BEP.sol\":15594:15604  _msgSender */\n      tag_78\n        /* \"contracts/BEP.sol\":15594:15606  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"contracts/BEP.sol\":15608:15615  spender */\n      dup5\n        /* \"contracts/BEP.sol\":15617:15713  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_118\n        /* \"contracts/BEP.sol\":15656:15671  subtractedValue */\n      dup6\n        /* \"contracts/BEP.sol\":15617:15713  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/BEP.sol\":15617:15628  _allowances */\n      0x02\n        /* \"contracts/BEP.sol\":15617:15642  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/BEP.sol\":15629:15641  _msgSender() */\n      tag_119\n        /* \"contracts/BEP.sol\":15629:15639  _msgSender */\n      tag_78\n        /* \"contracts/BEP.sol\":15629:15641  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/BEP.sol\":15617:15642  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP.sol\":15617:15651  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/BEP.sol\":15643:15650  spender */\n      dup11\n        /* \"contracts/BEP.sol\":15617:15651  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP.sol\":15617:15655  _allowances[_msgSender()][spender].sub */\n      tag_88\n      swap1\n        /* \"contracts/BEP.sol\":15617:15713  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"contracts/BEP.sol\":15585:15593  _approve */\n      tag_79\n        /* \"contracts/BEP.sol\":15585:15714  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/BEP.sol\":15728:15732  true */\n      0x01\n        /* \"contracts/BEP.sol\":15721:15732  return true */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":15487:15738  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":13052:13211  function transfer(address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_64:\n        /* \"contracts/BEP.sol\":13132:13136  bool */\n      0x00\n        /* \"contracts/BEP.sol\":13145:13187  _transfer(_msgSender(), recipient, amount) */\n      tag_121\n        /* \"contracts/BEP.sol\":13155:13167  _msgSender() */\n      tag_122\n        /* \"contracts/BEP.sol\":13155:13165  _msgSender */\n      tag_78\n        /* \"contracts/BEP.sol\":13155:13167  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"contracts/BEP.sol\":13169:13178  recipient */\n      dup5\n        /* \"contracts/BEP.sol\":13180:13186  amount */\n      dup5\n        /* \"contracts/BEP.sol\":13145:13154  _transfer */\n      tag_83\n        /* \"contracts/BEP.sol\":13145:13187  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/BEP.sol\":13201:13205  true */\n      0x01\n        /* \"contracts/BEP.sol\":13194:13205  return true */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":13052:13211  function transfer(address recipient, uint256 amount) external override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":13265:13404  function allowance(address owner, address spender) external override view returns (uint256) {\r... */\n    tag_67:\n        /* \"contracts/BEP.sol\":13348:13355  uint256 */\n      0x00\n        /* \"contracts/BEP.sol\":13371:13382  _allowances */\n      0x02\n        /* \"contracts/BEP.sol\":13371:13389  _allowances[owner] */\n      0x00\n        /* \"contracts/BEP.sol\":13383:13388  owner */\n      dup5\n        /* \"contracts/BEP.sol\":13371:13389  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP.sol\":13371:13398  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/BEP.sol\":13390:13397  spender */\n      dup4\n        /* \"contracts/BEP.sol\":13371:13398  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP.sol\":13364:13398  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":13265:13404  function allowance(address owner, address spender) external override view returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":10882:10985  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_70:\n        /* \"contracts/BEP.sol\":10209:10221  _msgSender() */\n      tag_125\n        /* \"contracts/BEP.sol\":10209:10219  _msgSender */\n      tag_78\n        /* \"contracts/BEP.sol\":10209:10221  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"contracts/BEP.sol\":10199:10221  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":10199:10205  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":10199:10221  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BEP.sol\":10191:10258  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"contracts/BEP.sol\":10951:10979  _transferOwnership(newOwner) */\n      tag_128\n        /* \"contracts/BEP.sol\":10970:10978  newOwner */\n      dup2\n        /* \"contracts/BEP.sol\":10951:10969  _transferOwnership */\n      tag_129\n        /* \"contracts/BEP.sol\":10951:10979  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/BEP.sol\":10882:10985  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":3702:3794  function _msgSender() internal view returns (address payable) {\r... */\n    tag_78:\n        /* \"contracts/BEP.sol\":3747:3762  address payable */\n      0x00\n        /* \"contracts/BEP.sol\":3778:3788  msg.sender */\n      caller\n        /* \"contracts/BEP.sol\":3771:3788  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":3702:3794  function _msgSender() internal view returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP.sol\":18568:18888  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n    tag_79:\n        /* \"contracts/BEP.sol\":18675:18676  0 */\n      0x00\n        /* \"contracts/BEP.sol\":18658:18677  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":18658:18663  owner */\n      dup4\n        /* \"contracts/BEP.sol\":18658:18677  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP.sol\":18650:18718  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"contracts/BEP.sol\":18752:18753  0 */\n      0x00\n        /* \"contracts/BEP.sol\":18733:18754  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":18733:18740  spender */\n      dup3\n        /* \"contracts/BEP.sol\":18733:18754  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP.sol\":18725:18793  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"contracts/BEP.sol\":18832:18838  amount */\n      dup1\n        /* \"contracts/BEP.sol\":18802:18813  _allowances */\n      0x02\n        /* \"contracts/BEP.sol\":18802:18820  _allowances[owner] */\n      0x00\n        /* \"contracts/BEP.sol\":18814:18819  owner */\n      dup6\n        /* \"contracts/BEP.sol\":18802:18820  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP.sol\":18802:18829  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/BEP.sol\":18821:18828  spender */\n      dup5\n        /* \"contracts/BEP.sol\":18802:18829  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP.sol\":18802:18838  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP.sol\":18866:18873  spender */\n      dup2\n        /* \"contracts/BEP.sol\":18850:18882  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":18859:18864  owner */\n      dup4\n        /* \"contracts/BEP.sol\":18850:18882  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/BEP.sol\":18875:18881  amount */\n      dup4\n        /* \"contracts/BEP.sol\":18850:18882  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP.sol\":18568:18888  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":16518:16967  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n    tag_83:\n        /* \"contracts/BEP.sol\":16630:16631  0 */\n      0x00\n        /* \"contracts/BEP.sol\":16612:16632  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":16612:16618  sender */\n      dup4\n        /* \"contracts/BEP.sol\":16612:16632  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP.sol\":16604:16674  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"contracts/BEP.sol\":16710:16711  0 */\n      0x00\n        /* \"contracts/BEP.sol\":16689:16712  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":16689:16698  recipient */\n      dup3\n        /* \"contracts/BEP.sol\":16689:16712  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP.sol\":16681:16752  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"contracts/BEP.sol\":16781:16852  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_137\n        /* \"contracts/BEP.sol\":16803:16809  amount */\n      dup2\n        /* \"contracts/BEP.sol\":16781:16852  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"contracts/BEP.sol\":16781:16790  _balances */\n      0x01\n        /* \"contracts/BEP.sol\":16781:16798  _balances[sender] */\n      0x00\n        /* \"contracts/BEP.sol\":16791:16797  sender */\n      dup8\n        /* \"contracts/BEP.sol\":16781:16798  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP.sol\":16781:16802  _balances[sender].sub */\n      tag_88\n      swap1\n        /* \"contracts/BEP.sol\":16781:16852  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"contracts/BEP.sol\":16761:16770  _balances */\n      0x01\n        /* \"contracts/BEP.sol\":16761:16778  _balances[sender] */\n      0x00\n        /* \"contracts/BEP.sol\":16771:16777  sender */\n      dup6\n        /* \"contracts/BEP.sol\":16761:16778  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP.sol\":16761:16852  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP.sol\":16882:16914  _balances[recipient].add(amount) */\n      tag_138\n        /* \"contracts/BEP.sol\":16907:16913  amount */\n      dup2\n        /* \"contracts/BEP.sol\":16882:16891  _balances */\n      0x01\n        /* \"contracts/BEP.sol\":16882:16902  _balances[recipient] */\n      0x00\n        /* \"contracts/BEP.sol\":16892:16901  recipient */\n      dup6\n        /* \"contracts/BEP.sol\":16882:16902  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP.sol\":16882:16906  _balances[recipient].add */\n      tag_95\n      swap1\n        /* \"contracts/BEP.sol\":16882:16914  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"contracts/BEP.sol\":16859:16868  _balances */\n      0x01\n        /* \"contracts/BEP.sol\":16859:16879  _balances[recipient] */\n      0x00\n        /* \"contracts/BEP.sol\":16869:16878  recipient */\n      dup5\n        /* \"contracts/BEP.sol\":16859:16879  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP.sol\":16859:16914  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP.sol\":16943:16952  recipient */\n      dup2\n        /* \"contracts/BEP.sol\":16926:16961  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":16935:16941  sender */\n      dup4\n        /* \"contracts/BEP.sol\":16926:16961  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/BEP.sol\":16954:16960  amount */\n      dup4\n        /* \"contracts/BEP.sol\":16926:16961  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP.sol\":16518:16967  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":5661:5839  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_88:\n        /* \"contracts/BEP.sol\":5747:5754  uint256 */\n      0x00\n        /* \"contracts/BEP.sol\":5776:5777  a */\n      dup4\n        /* \"contracts/BEP.sol\":5771:5772  b */\n      dup4\n        /* \"contracts/BEP.sol\":5771:5777  b <= a */\n      gt\n      iszero\n        /* \"contracts/BEP.sol\":5779:5791  errorMessage */\n      dup3\n        /* \"contracts/BEP.sol\":5763:5792  require(b <= a, errorMessage) */\n      swap1\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_141:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_143\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_141)\n    tag_143:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/BEP.sol\":5763:5792  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_144\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_144:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n      pop\n        /* \"contracts/BEP.sol\":5799:5808  uint256 c */\n      0x00\n        /* \"contracts/BEP.sol\":5815:5816  b */\n      dup4\n        /* \"contracts/BEP.sol\":5811:5812  a */\n      dup6\n        /* \"contracts/BEP.sol\":5811:5816  a - b */\n      sub\n        /* \"contracts/BEP.sol\":5799:5816  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":5832:5833  c */\n      dup1\n        /* \"contracts/BEP.sol\":5825:5833  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/BEP.sol\":5661:5839  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":4834:5001  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_95:\n        /* \"contracts/BEP.sol\":4892:4899  uint256 */\n      0x00\n        /* \"contracts/BEP.sol\":4908:4917  uint256 c */\n      dup1\n        /* \"contracts/BEP.sol\":4924:4925  b */\n      dup3\n        /* \"contracts/BEP.sol\":4920:4921  a */\n      dup5\n        /* \"contracts/BEP.sol\":4920:4925  a + b */\n      add\n        /* \"contracts/BEP.sol\":4908:4925  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":4945:4946  a */\n      dup4\n        /* \"contracts/BEP.sol\":4940:4941  c */\n      dup2\n        /* \"contracts/BEP.sol\":4940:4946  c >= a */\n      lt\n      iszero\n        /* \"contracts/BEP.sol\":4932:4978  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"contracts/BEP.sol\":4994:4995  c */\n      dup1\n        /* \"contracts/BEP.sol\":4987:4995  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/BEP.sol\":4834:5001  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":17228:17518  function _mint(address account, uint256 amount) internal {\r... */\n    tag_114:\n        /* \"contracts/BEP.sol\":17319:17320  0 */\n      0x00\n        /* \"contracts/BEP.sol\":17300:17321  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":17300:17307  account */\n      dup3\n        /* \"contracts/BEP.sol\":17300:17321  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP.sol\":17292:17357  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"contracts/BEP.sol\":17381:17405  _totalSupply.add(amount) */\n      tag_149\n        /* \"contracts/BEP.sol\":17398:17404  amount */\n      dup2\n        /* \"contracts/BEP.sol\":17381:17393  _totalSupply */\n      sload(0x03)\n        /* \"contracts/BEP.sol\":17381:17397  _totalSupply.add */\n      tag_95\n      swap1\n        /* \"contracts/BEP.sol\":17381:17405  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_149:\n        /* \"contracts/BEP.sol\":17366:17378  _totalSupply */\n      0x03\n        /* \"contracts/BEP.sol\":17366:17405  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP.sol\":17433:17463  _balances[account].add(amount) */\n      tag_150\n        /* \"contracts/BEP.sol\":17456:17462  amount */\n      dup2\n        /* \"contracts/BEP.sol\":17433:17442  _balances */\n      0x01\n        /* \"contracts/BEP.sol\":17433:17451  _balances[account] */\n      0x00\n        /* \"contracts/BEP.sol\":17443:17450  account */\n      dup6\n        /* \"contracts/BEP.sol\":17433:17451  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP.sol\":17433:17455  _balances[account].add */\n      tag_95\n      swap1\n        /* \"contracts/BEP.sol\":17433:17463  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"contracts/BEP.sol\":17412:17421  _balances */\n      0x01\n        /* \"contracts/BEP.sol\":17412:17430  _balances[account] */\n      0x00\n        /* \"contracts/BEP.sol\":17422:17429  account */\n      dup5\n        /* \"contracts/BEP.sol\":17412:17430  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP.sol\":17412:17463  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP.sol\":17496:17503  account */\n      dup2\n        /* \"contracts/BEP.sol\":17475:17512  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":17492:17493  0 */\n      0x00\n        /* \"contracts/BEP.sol\":17475:17512  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/BEP.sol\":17505:17511  amount */\n      dup4\n        /* \"contracts/BEP.sol\":17475:17512  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP.sol\":17228:17518  function _mint(address account, uint256 amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":11083:11298  function _transferOwnership(address newOwner) internal {\r... */\n    tag_129:\n        /* \"contracts/BEP.sol\":11173:11174  0 */\n      0x00\n        /* \"contracts/BEP.sol\":11153:11175  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":11153:11161  newOwner */\n      dup2\n        /* \"contracts/BEP.sol\":11153:11175  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP.sol\":11145:11218  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"contracts/BEP.sol\":11259:11267  newOwner */\n      dup1\n        /* \"contracts/BEP.sol\":11230:11268  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":11251:11257  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":11230:11268  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP.sol\":11284:11292  newOwner */\n      dup1\n        /* \"contracts/BEP.sol\":11275:11281  _owner */\n      0x00\n      dup1\n        /* \"contracts/BEP.sol\":11275:11292  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP.sol\":11083:11298  function _transferOwnership(address newOwner) internal {\r... */\n      pop\n      jump\t// out\n    stop\n    data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57 42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4 42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2 42455032303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5 42455032303a20617070726f766520746f20746865207a65726f2061646472657373\n\n    auxdata: 0xa2646970667358221220bb91914486ddb1d1d812189db43a66f7aac49edb01793cc47152a91ec6fb0e4f64736f6c63430006040033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1D55 CODESIZE SUB DUP1 PUSH3 0x1D55 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 PUSH3 0x1DE PUSH3 0x388 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP4 PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x294 SWAP3 SWAP2 SWAP1 PUSH3 0x390 JUMP JUMPDEST POP DUP3 PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x2AD SWAP3 SWAP2 SWAP1 PUSH3 0x390 JUMP JUMPDEST POP DUP2 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH3 0x43F JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x3D3 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x404 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x404 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x403 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x3E6 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x413 SWAP2 SWAP1 PUSH3 0x417 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x43C SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x438 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x41E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1906 DUP1 PUSH3 0x44F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x541 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x61F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x495 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x374 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x132 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x17A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x72D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH2 0x806 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x81D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37C PUSH2 0x919 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D0 PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41A PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x45A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x43F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x487 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x527 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x609 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x661 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x635 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDD2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x719 PUSH2 0x712 PUSH2 0xEA7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A DUP5 DUP5 DUP5 PUSH2 0x10A6 JUMP JUMPDEST PUSH2 0x7FB DUP5 PUSH2 0x746 PUSH2 0xEA7 JUMP JUMPDEST PUSH2 0x7F6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1819 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x7AC PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C6 PUSH2 0x82A PUSH2 0xEA7 JUMP JUMPDEST DUP5 PUSH2 0x8C1 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x83B PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x921 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAB PUSH2 0xAB0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xB71 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB46 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB71 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB54 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB85 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC57 PUSH2 0xC51 PUSH2 0xEA7 JUMP JUMPDEST DUP4 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD23 PUSH2 0xC6D PUSH2 0xEA7 JUMP JUMPDEST DUP5 PUSH2 0xD1E DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x188A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xC97 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD41 PUSH2 0xD3A PUSH2 0xEA7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDDA PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA4 DUP2 PUSH2 0x1665 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17CF PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18AF PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x112C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17AA PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1867 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x121E DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1841 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12B3 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x140D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13B7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13FF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x149E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x154B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1560 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x15B8 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x16EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17F3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A2646970667358221220BB91914486DD 0xB1 0xD1 0xD8 SLT XOR SWAP14 0xB4 GASPRICE PUSH7 0xF7AAC49EDB0179 EXTCODECOPY 0xC4 PUSH18 0x52A91EC6FB0E4F64736F6C63430006040033 ",
							"sourceMap": "11305:7980:0:-:0;;;11635:317;5:9:-1;2:2;;;27:1;24;17:12;2:2;11635:317:0;;;;;;;;;;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;11635:317:0;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;11635:317:0;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11635:317:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;11635:317:0;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11635:317:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9814:17;9834:12;:10;;;:12;;:::i;:::-;9814:32;;9862:9;9853:6;;:18;;;;;;;;;;;;;;;;;;9916:9;9883:43;;9912:1;9883:43;;;;;;;;;;;;9783:149;11752:5;11744;:13;;;;;;;;;;;;:::i;:::-;;11774:7;11764;:17;;;;;;;;;;;;:::i;:::-;;11800:9;11788;;:21;;;;;;;;;;;;;;;;;;11831:12;11816;:27;;;;11874:12;;11850:9;:21;11860:10;11850:21;;;;;;;;;;;;;;;:36;;;;11921:10;11900:46;;11917:1;11900:46;;;11933:12;;11900:46;;;;;;;;;;;;;;;;;;11635:317;;;;11305:7980;;3702:92;3747:15;3778:10;3771:17;;3702:92;:::o;11305:7980::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146104db578063a9059cbb14610541578063dd62ed3e146105a7578063f2fde38b1461061f57610100565b8063893d20e81461037e5780638da5cb5b146103c857806395d89b4114610412578063a0712d681461049557610100565b8063313ce567116100d3578063313ce5671461029257806339509351146102b657806370a082311461031c578063715018a61461037457610100565b806306fdde0314610105578063095ea7b31461018857806318160ddd146101ee57806323b872dd1461020c575b600080fd5b61010d610663565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014d578082015181840152602081019050610132565b50505050905090810190601f16801561017a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d46004803603604081101561019e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610705565b604051808215151515815260200191505060405180910390f35b6101f6610723565b6040518082815260200191505060405180910390f35b6102786004803603606081101561022257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061072d565b604051808215151515815260200191505060405180910390f35b61029a610806565b604051808260ff1660ff16815260200191505060405180910390f35b610302600480360360408110156102cc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061081d565b604051808215151515815260200191505060405180910390f35b61035e6004803603602081101561033257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108d0565b6040518082815260200191505060405180910390f35b61037c610919565b005b610386610aa1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103d0610ab0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61041a610ad9565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561045a57808201518184015260208101905061043f565b50505050905090810190601f1680156104875780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104c1600480360360208110156104ab57600080fd5b8101908080359060200190929190505050610b7b565b604051808215151515815260200191505060405180910390f35b610527600480360360408110156104f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c60565b604051808215151515815260200191505060405180910390f35b61058d6004803603604081101561055757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d2d565b604051808215151515815260200191505060405180910390f35b610609600480360360408110156105bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d4b565b6040518082815260200191505060405180910390f35b6106616004803603602081101561063557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dd2565b005b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106fb5780601f106106d0576101008083540402835291602001916106fb565b820191906000526020600020905b8154815290600101906020018083116106de57829003601f168201915b5050505050905090565b6000610719610712610ea7565b8484610eaf565b6001905092915050565b6000600354905090565b600061073a8484846110a6565b6107fb84610746610ea7565b6107f68560405180606001604052806028815260200161181960289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006107ac610ea7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113609092919063ffffffff16565b610eaf565b600190509392505050565b6000600460009054906101000a900460ff16905090565b60006108c661082a610ea7565b846108c1856002600061083b610ea7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142090919063ffffffff16565b610eaf565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610921610ea7565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610aab610ab0565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b715780601f10610b4657610100808354040283529160200191610b71565b820191906000526020600020905b815481529060010190602001808311610b5457829003601f168201915b5050505050905090565b6000610b85610ea7565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c46576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610c57610c51610ea7565b836114a8565b60019050919050565b6000610d23610c6d610ea7565b84610d1e8560405180606001604052806025815260200161188a6025913960026000610c97610ea7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113609092919063ffffffff16565b610eaf565b6001905092915050565b6000610d41610d3a610ea7565b84846110a6565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610dda610ea7565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e9b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610ea481611665565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f35576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806117cf6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fbb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806118af6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561112c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806117aa6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806118676023913960400191505060405180910390fd5b61121e8160405180606001604052806026815260200161184160269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113609092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112b381600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142090919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600083831115829061140d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156113d25780820151818401526020810190506113b7565b50505050905090810190601f1680156113ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008082840190508381101561149e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561154b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6115608160035461142090919063ffffffff16565b6003819055506115b881600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142090919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156116eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806117f36026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a2646970667358221220bb91914486ddb1d1d812189db43a66f7aac49edb01793cc47152a91ec6fb0e4f64736f6c63430006040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x541 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x61F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x495 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x374 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x132 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x17A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x72D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH2 0x806 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x81D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37C PUSH2 0x919 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D0 PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41A PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x45A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x43F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x487 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x527 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x609 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x661 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x635 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDD2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x719 PUSH2 0x712 PUSH2 0xEA7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A DUP5 DUP5 DUP5 PUSH2 0x10A6 JUMP JUMPDEST PUSH2 0x7FB DUP5 PUSH2 0x746 PUSH2 0xEA7 JUMP JUMPDEST PUSH2 0x7F6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1819 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x7AC PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C6 PUSH2 0x82A PUSH2 0xEA7 JUMP JUMPDEST DUP5 PUSH2 0x8C1 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x83B PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x921 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAB PUSH2 0xAB0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xB71 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB46 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB71 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB54 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB85 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC57 PUSH2 0xC51 PUSH2 0xEA7 JUMP JUMPDEST DUP4 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD23 PUSH2 0xC6D PUSH2 0xEA7 JUMP JUMPDEST DUP5 PUSH2 0xD1E DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x188A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xC97 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD41 PUSH2 0xD3A PUSH2 0xEA7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDDA PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA4 DUP2 PUSH2 0x1665 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17CF PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18AF PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x112C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17AA PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1867 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x121E DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1841 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12B3 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x140D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13B7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13FF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x149E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x154B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1560 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x15B8 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x16EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17F3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A2646970667358221220BB91914486DD 0xB1 0xD1 0xD8 SLT XOR SWAP14 0xB4 GASPRICE PUSH7 0xF7AAC49EDB0179 EXTCODECOPY 0xC4 PUSH18 0x52A91EC6FB0E4F64736F6C63430006040033 ",
							"sourceMap": "11305:7980:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;11305:7980:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;12449:88:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12449:88:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13534:153;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;13534:153:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12593:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14132:301;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;14132:301:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12159:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;14815:200;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;14815:200:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12743:115;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;12743:115:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10607:130;;;:::i;:::-;;12012:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10005:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12304:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12304:92:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15938:120;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;15938:120:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;15487:251;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;15487:251:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;13052:159;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;13052:159:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;13265:139;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;13265:139:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10882:103;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;10882:103:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;12449:88;12497:13;12526:5;12519:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12449:88;:::o;13534:153::-;13611:4;13624:39;13633:12;:10;:12::i;:::-;13647:7;13656:6;13624:8;:39::i;:::-;13677:4;13670:11;;13534:153;;;;:::o;12593:96::-;12648:7;12671:12;;12664:19;;12593:96;:::o;14132:301::-;14232:4;14245:36;14255:6;14263:9;14274:6;14245:9;:36::i;:::-;14288:121;14297:6;14305:12;:10;:12::i;:::-;14319:89;14357:6;14319:89;;;;;;;;;;;;;;;;;:11;:19;14331:6;14319:19;;;;;;;;;;;;;;;:33;14339:12;:10;:12::i;:::-;14319:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;14288:8;:121::i;:::-;14423:4;14416:11;;14132:301;;;;;:::o;12159:88::-;12211:5;12232:9;;;;;;;;;;;12225:16;;12159:88;:::o;14815:200::-;14895:4;14908:83;14917:12;:10;:12::i;:::-;14931:7;14940:50;14979:10;14940:11;:25;14952:12;:10;:12::i;:::-;14940:25;;;;;;;;;;;;;;;:34;14966:7;14940:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;14908:8;:83::i;:::-;15005:4;14998:11;;14815:200;;;;:::o;12743:115::-;12811:7;12834:9;:18;12844:7;12834:18;;;;;;;;;;;;;;;;12827:25;;12743:115;;;:::o;10607:130::-;10209:12;:10;:12::i;:::-;10199:22;;:6;;;;;;;;;;;:22;;;10191:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10702:1:::1;10665:40;;10686:6;::::0;::::1;;;;;;;;;10665:40;;;;;;;;;;;;10729:1;10712:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;10607:130::o:0;12012:88::-;12064:7;12087;:5;:7::i;:::-;12080:14;;12012:88;:::o;10005:73::-;10043:7;10066:6;;;;;;;;;;;10059:13;;10005:73;:::o;12304:92::-;12354:13;12383:7;12376:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12304:92;:::o;15938:120::-;15994:4;10209:12;:10;:12::i;:::-;10199:22;;:6;;;;;;;;;;;:22;;;10191:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16007:27:::1;16013:12;:10;:12::i;:::-;16027:6;16007:5;:27::i;:::-;16048:4;16041:11;;15938:120:::0;;;:::o;15487:251::-;15572:4;15585:129;15594:12;:10;:12::i;:::-;15608:7;15617:96;15656:15;15617:96;;;;;;;;;;;;;;;;;:11;:25;15629:12;:10;:12::i;:::-;15617:25;;;;;;;;;;;;;;;:34;15643:7;15617:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;15585:8;:129::i;:::-;15728:4;15721:11;;15487:251;;;;:::o;13052:159::-;13132:4;13145:42;13155:12;:10;:12::i;:::-;13169:9;13180:6;13145:9;:42::i;:::-;13201:4;13194:11;;13052:159;;;;:::o;13265:139::-;13348:7;13371:11;:18;13383:5;13371:18;;;;;;;;;;;;;;;:27;13390:7;13371:27;;;;;;;;;;;;;;;;13364:34;;13265:139;;;;:::o;10882:103::-;10209:12;:10;:12::i;:::-;10199:22;;:6;;;;;;;;;;;:22;;;10191:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10951:28:::1;10970:8;10951:18;:28::i;:::-;10882:103:::0;:::o;3702:92::-;3747:15;3778:10;3771:17;;3702:92;:::o;18568:320::-;18675:1;18658:19;;:5;:19;;;;18650:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18752:1;18733:21;;:7;:21;;;;18725:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18832:6;18802:11;:18;18814:5;18802:18;;;;;;;;;;;;;;;:27;18821:7;18802:27;;;;;;;;;;;;;;;:36;;;;18866:7;18850:32;;18859:5;18850:32;;;18875:6;18850:32;;;;;;;;;;;;;;;;;;18568:320;;;:::o;16518:449::-;16630:1;16612:20;;:6;:20;;;;16604:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16710:1;16689:23;;:9;:23;;;;16681:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16781;16803:6;16781:71;;;;;;;;;;;;;;;;;:9;:17;16791:6;16781:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;16761:9;:17;16771:6;16761:17;;;;;;;;;;;;;;;:91;;;;16882:32;16907:6;16882:9;:20;16892:9;16882:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;16859:9;:20;16869:9;16859:20;;;;;;;;;;;;;;;:55;;;;16943:9;16926:35;;16935:6;16926:35;;;16954:6;16926:35;;;;;;;;;;;;;;;;;;16518:449;;;:::o;5661:178::-;5747:7;5776:1;5771;:6;;5779:12;5763:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5763:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5799:9;5815:1;5811;:5;5799:17;;5832:1;5825:8;;;5661:178;;;;;:::o;4834:167::-;4892:7;4908:9;4924:1;4920;:5;4908:17;;4945:1;4940;:6;;4932:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4994:1;4987:8;;;4834:167;;;;:::o;17228:290::-;17319:1;17300:21;;:7;:21;;;;17292:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17381:24;17398:6;17381:12;;:16;;:24;;;;:::i;:::-;17366:12;:39;;;;17433:30;17456:6;17433:9;:18;17443:7;17433:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;17412:9;:18;17422:7;17412:18;;;;;;;;;;;;;;;:51;;;;17496:7;17475:37;;17492:1;17475:37;;;17505:6;17475:37;;;;;;;;;;;;;;;;;;17228:290;;:::o;11083:215::-;11173:1;11153:22;;:8;:22;;;;11145:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11259:8;11230:38;;11251:6;;;;;;;;;;;11230:38;;;;;;;;;;;;11284:8;11275:6;;:17;;;;;;;;;;;;;;;;;;11083:215;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1281200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1387",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1263",
								"decimals()": "1084",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1119",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1106",
								"renounceOwnership()": "24386",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15,
									"end": 18,
									"name": "PUSH",
									"source": -1,
									"value": "80"
								},
								{
									"begin": 10,
									"end": 13,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 7,
									"end": 19,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 32,
									"end": 33,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 22,
									"end": 34,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "tag",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP7",
									"source": -1
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 307,
									"end": 327,
									"name": "MUL",
									"source": -1
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 282,
									"end": 340,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"source": -1,
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 379,
									"end": 382,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 415,
									"end": 418,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 404,
									"end": 425,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 404,
									"end": 425,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"source": -1,
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"source": -1,
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP7",
									"source": -1
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 307,
									"end": 327,
									"name": "MUL",
									"source": -1
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 282,
									"end": 340,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"source": -1,
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 379,
									"end": 382,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 415,
									"end": 418,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 404,
									"end": 425,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 404,
									"end": 425,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9814,
									"end": 9831,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9834,
									"end": 9846,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 9834,
									"end": 9844,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 9834,
									"end": 9844,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9834,
									"end": 9844,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 9834,
									"end": 9846,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9834,
									"end": 9846,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 9834,
									"end": 9846,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 9834,
									"end": 9846,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 9834,
									"end": 9846,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9814,
									"end": 9846,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9814,
									"end": 9846,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9862,
									"end": 9871,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9853,
									"end": 9859,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9853,
									"end": 9859,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9853,
									"end": 9871,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 9853,
									"end": 9871,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 9853,
									"end": 9871,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9853,
									"end": 9871,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9853,
									"end": 9871,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9853,
									"end": 9871,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9853,
									"end": 9871,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 9853,
									"end": 9871,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 9853,
									"end": 9871,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9853,
									"end": 9871,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9853,
									"end": 9871,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 9853,
									"end": 9871,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9853,
									"end": 9871,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9853,
									"end": 9871,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 9853,
									"end": 9871,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 9853,
									"end": 9871,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9853,
									"end": 9871,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9853,
									"end": 9871,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9916,
									"end": 9925,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9883,
									"end": 9926,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9883,
									"end": 9926,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9912,
									"end": 9913,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9883,
									"end": 9926,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9883,
									"end": 9926,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9883,
									"end": 9926,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 9883,
									"end": 9926,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9883,
									"end": 9926,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9883,
									"end": 9926,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9883,
									"end": 9926,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9883,
									"end": 9926,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9883,
									"end": 9926,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9883,
									"end": 9926,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 9883,
									"end": 9926,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9883,
									"end": 9926,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 9783,
									"end": 9932,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11752,
									"end": 11757,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11744,
									"end": 11749,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 11744,
									"end": 11757,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11744,
									"end": 11757,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11744,
									"end": 11757,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11744,
									"end": 11757,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11744,
									"end": 11757,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11744,
									"end": 11757,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11744,
									"end": 11757,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11744,
									"end": 11757,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 11744,
									"end": 11757,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 11744,
									"end": 11757,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11744,
									"end": 11757,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11744,
									"end": 11757,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 11744,
									"end": 11757,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11744,
									"end": 11757,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 11744,
									"end": 11757,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11744,
									"end": 11757,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11774,
									"end": 11781,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11764,
									"end": 11771,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 11764,
									"end": 11781,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11764,
									"end": 11781,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11764,
									"end": 11781,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11764,
									"end": 11781,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11764,
									"end": 11781,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11764,
									"end": 11781,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11764,
									"end": 11781,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11764,
									"end": 11781,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 11764,
									"end": 11781,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 11764,
									"end": 11781,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11764,
									"end": 11781,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11764,
									"end": 11781,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 11764,
									"end": 11781,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11764,
									"end": 11781,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 11764,
									"end": 11781,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11764,
									"end": 11781,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11800,
									"end": 11809,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11788,
									"end": 11797,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 11788,
									"end": 11797,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11788,
									"end": 11809,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 11788,
									"end": 11809,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 11788,
									"end": 11809,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11788,
									"end": 11809,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11788,
									"end": 11809,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11788,
									"end": 11809,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 11788,
									"end": 11809,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 11788,
									"end": 11809,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 11788,
									"end": 11809,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11788,
									"end": 11809,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11788,
									"end": 11809,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11788,
									"end": 11809,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 11788,
									"end": 11809,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11788,
									"end": 11809,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 11788,
									"end": 11809,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11788,
									"end": 11809,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11788,
									"end": 11809,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11788,
									"end": 11809,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11831,
									"end": 11843,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11816,
									"end": 11828,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 11816,
									"end": 11843,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11816,
									"end": 11843,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11816,
									"end": 11843,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11816,
									"end": 11843,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11874,
									"end": 11886,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 11874,
									"end": 11886,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11850,
									"end": 11859,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11850,
									"end": 11871,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11860,
									"end": 11870,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 11850,
									"end": 11871,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11850,
									"end": 11871,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11850,
									"end": 11871,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11850,
									"end": 11871,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11850,
									"end": 11871,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11850,
									"end": 11871,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11850,
									"end": 11871,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11850,
									"end": 11871,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11850,
									"end": 11871,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11850,
									"end": 11871,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11850,
									"end": 11871,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11850,
									"end": 11871,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11850,
									"end": 11871,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11850,
									"end": 11871,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11850,
									"end": 11871,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 11850,
									"end": 11886,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11850,
									"end": 11886,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11850,
									"end": 11886,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11850,
									"end": 11886,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11921,
									"end": 11931,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 11900,
									"end": 11946,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11900,
									"end": 11946,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11917,
									"end": 11918,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11900,
									"end": 11946,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11900,
									"end": 11946,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11900,
									"end": 11946,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 11933,
									"end": 11945,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 11933,
									"end": 11945,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11900,
									"end": 11946,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11900,
									"end": 11946,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11900,
									"end": 11946,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11900,
									"end": 11946,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11900,
									"end": 11946,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11900,
									"end": 11946,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11900,
									"end": 11946,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11900,
									"end": 11946,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11900,
									"end": 11946,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11900,
									"end": 11946,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11900,
									"end": 11946,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11900,
									"end": 11946,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11900,
									"end": 11946,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11900,
									"end": 11946,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11900,
									"end": 11946,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11900,
									"end": 11946,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11900,
									"end": 11946,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11900,
									"end": 11946,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11635,
									"end": 11952,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3702,
									"end": 3794,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 3702,
									"end": 3794,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3747,
									"end": 3762,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3778,
									"end": 3788,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 3771,
									"end": 3788,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3771,
									"end": 3788,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3702,
									"end": 3794,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3702,
									"end": 3794,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11305,
									"end": 19285,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bb91914486ddb1d1d812189db43a66f7aac49edb01793cc47152a91ec6fb0e4f64736f6c63430006040033",
									".code": [
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11305,
											"end": 19285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "29"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "29"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "34"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "34"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "39"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "39"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "42"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "42"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10607,
											"end": 10737,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10607,
											"end": 10737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10607,
											"end": 10737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 10607,
											"end": 10737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 10607,
											"end": 10737,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10607,
											"end": 10737,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 10607,
											"end": 10737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10607,
											"end": 10737,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "52"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "54"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "52"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "54"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "57"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "57"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "63"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "63"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "66"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "66"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "69"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "69"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12497,
											"end": 12510,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12526,
											"end": 12531,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12449,
											"end": 12537,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13611,
											"end": 13615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13624,
											"end": 13663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 13633,
											"end": 13645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 13633,
											"end": 13643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 13633,
											"end": 13645,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13633,
											"end": 13645,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 13633,
											"end": 13645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13647,
											"end": 13654,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13656,
											"end": 13662,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13624,
											"end": 13632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 13624,
											"end": 13663,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13624,
											"end": 13663,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 13624,
											"end": 13663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13677,
											"end": 13681,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13670,
											"end": 13681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13670,
											"end": 13681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13534,
											"end": 13687,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12648,
											"end": 12655,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12671,
											"end": 12683,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12671,
											"end": 12683,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12664,
											"end": 12683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12664,
											"end": 12683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12593,
											"end": 12689,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14232,
											"end": 14236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14245,
											"end": 14281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 14255,
											"end": 14261,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14263,
											"end": 14272,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14274,
											"end": 14280,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14245,
											"end": 14254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 14245,
											"end": 14281,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14245,
											"end": 14281,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 14245,
											"end": 14281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14288,
											"end": 14409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 14297,
											"end": 14303,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 14305,
											"end": 14315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14305,
											"end": 14317,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14305,
											"end": 14317,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 14305,
											"end": 14317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14357,
											"end": 14363,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "PUSH data",
											"source": 0,
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14330,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14319,
											"end": 14338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14331,
											"end": 14337,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14338,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14319,
											"end": 14338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14338,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14319,
											"end": 14338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14319,
											"end": 14338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14319,
											"end": 14338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14319,
											"end": 14338,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14339,
											"end": 14351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 14339,
											"end": 14349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14339,
											"end": 14351,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14339,
											"end": 14351,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 14339,
											"end": 14351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14319,
											"end": 14352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14319,
											"end": 14352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14319,
											"end": 14352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14319,
											"end": 14352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14319,
											"end": 14352,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14319,
											"end": 14356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14319,
											"end": 14408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14288,
											"end": 14296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 14288,
											"end": 14409,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14288,
											"end": 14409,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 14288,
											"end": 14409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14427,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14416,
											"end": 14427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14416,
											"end": 14427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14132,
											"end": 14433,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12211,
											"end": 12216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12232,
											"end": 12241,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12232,
											"end": 12241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12232,
											"end": 12241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12241,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12241,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12232,
											"end": 12241,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12241,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12241,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12232,
											"end": 12241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12225,
											"end": 12241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12225,
											"end": 12241,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12247,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14895,
											"end": 14899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14908,
											"end": 14991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 14917,
											"end": 14929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 14917,
											"end": 14927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14917,
											"end": 14929,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14917,
											"end": 14929,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 14917,
											"end": 14929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14931,
											"end": 14938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14979,
											"end": 14989,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14951,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14940,
											"end": 14965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14952,
											"end": 14964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 14952,
											"end": 14962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14952,
											"end": 14964,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14952,
											"end": 14964,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 14952,
											"end": 14964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14965,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14940,
											"end": 14965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14965,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14940,
											"end": 14965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14940,
											"end": 14965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14940,
											"end": 14965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14940,
											"end": 14965,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14966,
											"end": 14973,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14974,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14940,
											"end": 14974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14974,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14940,
											"end": 14974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14974,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14974,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14940,
											"end": 14974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14974,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14974,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14940,
											"end": 14974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14940,
											"end": 14974,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14974,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 14940,
											"end": 14978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14940,
											"end": 14990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14990,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14940,
											"end": 14990,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14940,
											"end": 14990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14908,
											"end": 14916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 14908,
											"end": 14991,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14908,
											"end": 14991,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 14908,
											"end": 14991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15005,
											"end": 15009,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14998,
											"end": 15009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14998,
											"end": 15009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14815,
											"end": 15015,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12811,
											"end": 12818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12834,
											"end": 12843,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12834,
											"end": 12852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12844,
											"end": 12851,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12852,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12834,
											"end": 12852,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12852,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12834,
											"end": 12852,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12852,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12852,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12834,
											"end": 12852,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12852,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12852,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12834,
											"end": 12852,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12834,
											"end": 12852,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12834,
											"end": 12852,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12827,
											"end": 12852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12743,
											"end": 12858,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10607,
											"end": 10737,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 10607,
											"end": 10737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 10209,
											"end": 10219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 10209,
											"end": 10221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10209,
											"end": 10221,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 10209,
											"end": 10221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10221,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10199,
											"end": 10221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10221,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10199,
											"end": 10221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10221,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10665,
											"end": 10705,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10665,
											"end": 10705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10686,
											"end": 10692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10686,
											"end": 10692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10686,
											"end": 10692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10686,
											"end": 10692,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10686,
											"end": 10692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10686,
											"end": 10692,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10686,
											"end": 10692,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10686,
											"end": 10692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10686,
											"end": 10692,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10686,
											"end": 10692,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10686,
											"end": 10692,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10665,
											"end": 10705,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10665,
											"end": 10705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10665,
											"end": 10705,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10665,
											"end": 10705,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10665,
											"end": 10705,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10665,
											"end": 10705,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10665,
											"end": 10705,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10665,
											"end": 10705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10665,
											"end": 10705,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10665,
											"end": 10705,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10665,
											"end": 10705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10665,
											"end": 10705,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10712,
											"end": 10718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10718,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10712,
											"end": 10731,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10712,
											"end": 10731,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10712,
											"end": 10731,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10731,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10731,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10712,
											"end": 10731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10731,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10731,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10731,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10607,
											"end": 10737,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12087,
											"end": 12094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 12087,
											"end": 12092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 12087,
											"end": 12094,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12087,
											"end": 12094,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 12087,
											"end": 12094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12080,
											"end": 12094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12080,
											"end": 12094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12100,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10043,
											"end": 10050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10066,
											"end": 10072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10066,
											"end": 10072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10066,
											"end": 10072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10066,
											"end": 10072,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10066,
											"end": 10072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10066,
											"end": 10072,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10066,
											"end": 10072,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10066,
											"end": 10072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10066,
											"end": 10072,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10066,
											"end": 10072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10059,
											"end": 10072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10005,
											"end": 10078,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12354,
											"end": 12367,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12383,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12376,
											"end": 12390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12304,
											"end": 12396,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15994,
											"end": 15998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10209,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10209,
											"end": 10219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 10209,
											"end": 10221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10209,
											"end": 10221,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10209,
											"end": 10221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10221,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10199,
											"end": 10221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10221,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10199,
											"end": 10221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10221,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16007,
											"end": 16034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 16013,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 16013,
											"end": 16023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 16013,
											"end": 16025,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16013,
											"end": 16025,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 16013,
											"end": 16025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16027,
											"end": 16033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16007,
											"end": 16012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 16007,
											"end": 16034,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16007,
											"end": 16034,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 16007,
											"end": 16034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16048,
											"end": 16052,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16041,
											"end": 16052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16041,
											"end": 16052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 16058,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15572,
											"end": 15576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15585,
											"end": 15714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 15594,
											"end": 15606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 15594,
											"end": 15604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 15594,
											"end": 15606,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15594,
											"end": 15606,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 15594,
											"end": 15606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15608,
											"end": 15615,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 15656,
											"end": 15671,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "PUSH data",
											"source": 0,
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15628,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15617,
											"end": 15642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15629,
											"end": 15641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 15629,
											"end": 15639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 15629,
											"end": 15641,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15629,
											"end": 15641,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 15629,
											"end": 15641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15642,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15617,
											"end": 15642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15642,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15617,
											"end": 15642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15642,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15617,
											"end": 15642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15642,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15617,
											"end": 15642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15617,
											"end": 15642,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15643,
											"end": 15650,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15651,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15617,
											"end": 15651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15651,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15617,
											"end": 15651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15617,
											"end": 15651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15617,
											"end": 15651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15617,
											"end": 15651,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 15617,
											"end": 15655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 15617,
											"end": 15713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15585,
											"end": 15593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 15585,
											"end": 15714,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15585,
											"end": 15714,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 15585,
											"end": 15714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15732,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15721,
											"end": 15732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15721,
											"end": 15732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15738,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13132,
											"end": 13136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13145,
											"end": 13187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 13155,
											"end": 13167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 13155,
											"end": 13165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 13155,
											"end": 13167,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13155,
											"end": 13167,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 13155,
											"end": 13167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13169,
											"end": 13178,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13180,
											"end": 13186,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13145,
											"end": 13154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 13145,
											"end": 13187,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13145,
											"end": 13187,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 13145,
											"end": 13187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13201,
											"end": 13205,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13194,
											"end": 13205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13194,
											"end": 13205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13052,
											"end": 13211,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13371,
											"end": 13382,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13383,
											"end": 13388,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13371,
											"end": 13398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13390,
											"end": 13397,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13371,
											"end": 13398,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13371,
											"end": 13398,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13371,
											"end": 13398,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13371,
											"end": 13398,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13371,
											"end": 13398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13371,
											"end": 13398,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13371,
											"end": 13398,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13371,
											"end": 13398,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13371,
											"end": 13398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13371,
											"end": 13398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13371,
											"end": 13398,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13371,
											"end": 13398,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13371,
											"end": 13398,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13371,
											"end": 13398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13371,
											"end": 13398,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13371,
											"end": 13398,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13364,
											"end": 13398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13364,
											"end": 13398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13404,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10209,
											"end": 10219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 10209,
											"end": 10221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10209,
											"end": 10221,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10209,
											"end": 10221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10221,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10199,
											"end": 10221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10221,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10199,
											"end": 10221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10199,
											"end": 10221,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 10191,
											"end": 10258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10951,
											"end": 10979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 10970,
											"end": 10978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10951,
											"end": 10969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 10951,
											"end": 10979,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10951,
											"end": 10979,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 10951,
											"end": 10979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10882,
											"end": 10985,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3702,
											"end": 3794,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3702,
											"end": 3794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3778,
											"end": 3788,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3771,
											"end": 3788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3771,
											"end": 3788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3702,
											"end": 3794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3702,
											"end": 3794,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18568,
											"end": 18888,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 18568,
											"end": 18888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18675,
											"end": 18676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18658,
											"end": 18677,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18658,
											"end": 18677,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18658,
											"end": 18663,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18658,
											"end": 18677,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18658,
											"end": 18677,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18658,
											"end": 18677,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18658,
											"end": 18677,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "PUSH data",
											"source": 0,
											"value": "1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4"
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 18650,
											"end": 18718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18752,
											"end": 18753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18733,
											"end": 18754,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18733,
											"end": 18754,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18733,
											"end": 18740,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18733,
											"end": 18754,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18733,
											"end": 18754,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18733,
											"end": 18754,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18733,
											"end": 18754,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "PUSH data",
											"source": 0,
											"value": "F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5"
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 18725,
											"end": 18793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18832,
											"end": 18838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18813,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18802,
											"end": 18820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18814,
											"end": 18819,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18820,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18802,
											"end": 18820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18820,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18802,
											"end": 18820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18820,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18802,
											"end": 18820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18820,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18802,
											"end": 18820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18802,
											"end": 18820,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18821,
											"end": 18828,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18829,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18802,
											"end": 18829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18829,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18802,
											"end": 18829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18802,
											"end": 18829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18802,
											"end": 18829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18802,
											"end": 18829,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18838,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18802,
											"end": 18838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18866,
											"end": 18873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18850,
											"end": 18882,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18850,
											"end": 18882,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18859,
											"end": 18864,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18850,
											"end": 18882,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18850,
											"end": 18882,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18850,
											"end": 18882,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 18875,
											"end": 18881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18850,
											"end": 18882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18850,
											"end": 18882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18850,
											"end": 18882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18850,
											"end": 18882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18850,
											"end": 18882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18850,
											"end": 18882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18850,
											"end": 18882,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18850,
											"end": 18882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18850,
											"end": 18882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18850,
											"end": 18882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18850,
											"end": 18882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18850,
											"end": 18882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18850,
											"end": 18882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18850,
											"end": 18882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18850,
											"end": 18882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18850,
											"end": 18882,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18850,
											"end": 18882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18850,
											"end": 18882,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 18568,
											"end": 18888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18568,
											"end": 18888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18568,
											"end": 18888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18568,
											"end": 18888,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16518,
											"end": 16967,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 16518,
											"end": 16967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16630,
											"end": 16631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16612,
											"end": 16632,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16612,
											"end": 16632,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16612,
											"end": 16618,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16612,
											"end": 16632,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16612,
											"end": 16632,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16612,
											"end": 16632,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16612,
											"end": 16632,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "PUSH data",
											"source": 0,
											"value": "D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57"
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 16604,
											"end": 16674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16710,
											"end": 16711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16689,
											"end": 16712,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16689,
											"end": 16712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16689,
											"end": 16698,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16689,
											"end": 16712,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16689,
											"end": 16712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16689,
											"end": 16712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16689,
											"end": 16712,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "PUSH data",
											"source": 0,
											"value": "ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2"
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 16681,
											"end": 16752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 16803,
											"end": 16809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "PUSH data",
											"source": 0,
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16790,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16781,
											"end": 16798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16791,
											"end": 16797,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16798,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16781,
											"end": 16798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16798,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16781,
											"end": 16798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16798,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16781,
											"end": 16798,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16798,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16781,
											"end": 16798,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16781,
											"end": 16798,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16798,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 16781,
											"end": 16802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 16781,
											"end": 16852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16761,
											"end": 16770,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16761,
											"end": 16778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16771,
											"end": 16777,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16761,
											"end": 16778,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16761,
											"end": 16778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16761,
											"end": 16778,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16761,
											"end": 16778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16761,
											"end": 16778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16761,
											"end": 16778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16761,
											"end": 16778,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16761,
											"end": 16778,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16761,
											"end": 16778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16761,
											"end": 16778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16761,
											"end": 16778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16761,
											"end": 16778,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16761,
											"end": 16778,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16761,
											"end": 16778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16761,
											"end": 16778,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16761,
											"end": 16852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16761,
											"end": 16852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16761,
											"end": 16852,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16761,
											"end": 16852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 16914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 16907,
											"end": 16913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 16891,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16882,
											"end": 16902,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16892,
											"end": 16901,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 16902,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16882,
											"end": 16902,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 16902,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16882,
											"end": 16902,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 16902,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 16902,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 16902,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16882,
											"end": 16902,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 16902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 16902,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 16902,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 16902,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16882,
											"end": 16902,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 16902,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16882,
											"end": 16902,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 16902,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 16906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 16882,
											"end": 16906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 16914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 16914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 16914,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16882,
											"end": 16914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16882,
											"end": 16914,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16882,
											"end": 16914,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 16882,
											"end": 16914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16868,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16859,
											"end": 16879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16869,
											"end": 16878,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16879,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16859,
											"end": 16879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16879,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16859,
											"end": 16879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16859,
											"end": 16879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16859,
											"end": 16879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16859,
											"end": 16879,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16914,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16943,
											"end": 16952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16961,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16926,
											"end": 16961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16935,
											"end": 16941,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16961,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16926,
											"end": 16961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16961,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16954,
											"end": 16960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16961,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16926,
											"end": 16961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16961,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16926,
											"end": 16961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16961,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16926,
											"end": 16961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16961,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16961,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16518,
											"end": 16967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16518,
											"end": 16967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16518,
											"end": 16967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16518,
											"end": 16967,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5661,
											"end": 5839,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 5661,
											"end": 5839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5747,
											"end": 5754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5776,
											"end": 5777,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 5772,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 5777,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 5777,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5791,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "141"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "143"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "141"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "143"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5799,
											"end": 5808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5815,
											"end": 5816,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5811,
											"end": 5812,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5811,
											"end": 5816,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5799,
											"end": 5816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5799,
											"end": 5816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5832,
											"end": 5833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5825,
											"end": 5833,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5825,
											"end": 5833,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5825,
											"end": 5833,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5661,
											"end": 5839,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5661,
											"end": 5839,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5661,
											"end": 5839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5661,
											"end": 5839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5661,
											"end": 5839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5661,
											"end": 5839,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4834,
											"end": 5001,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4834,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4892,
											"end": 4899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4908,
											"end": 4917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4924,
											"end": 4925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4921,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 4925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4945,
											"end": 4946,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 4941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 4946,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4940,
											"end": 4946,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4932,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 4995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4987,
											"end": 4995,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4987,
											"end": 4995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4987,
											"end": 4995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 5001,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 5001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 5001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 5001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 5001,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17228,
											"end": 17518,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 17228,
											"end": 17518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17319,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17300,
											"end": 17321,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17300,
											"end": 17321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17300,
											"end": 17307,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17300,
											"end": 17321,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17300,
											"end": 17321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17300,
											"end": 17321,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17300,
											"end": 17321,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "PUSH",
											"source": 0,
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 17292,
											"end": 17357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17381,
											"end": 17405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 17398,
											"end": 17404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17381,
											"end": 17393,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17381,
											"end": 17393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17381,
											"end": 17397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 17381,
											"end": 17397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17381,
											"end": 17405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17381,
											"end": 17405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17381,
											"end": 17405,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17381,
											"end": 17405,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17381,
											"end": 17405,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17381,
											"end": 17405,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 17381,
											"end": 17405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17378,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17366,
											"end": 17405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17405,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17433,
											"end": 17463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 17456,
											"end": 17462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17433,
											"end": 17442,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17443,
											"end": 17450,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17433,
											"end": 17451,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17433,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 17433,
											"end": 17455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17433,
											"end": 17463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17433,
											"end": 17463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17433,
											"end": 17463,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17433,
											"end": 17463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17433,
											"end": 17463,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17433,
											"end": 17463,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 17433,
											"end": 17463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17412,
											"end": 17421,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17412,
											"end": 17430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17422,
											"end": 17429,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17412,
											"end": 17430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17412,
											"end": 17430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17412,
											"end": 17430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17412,
											"end": 17430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17412,
											"end": 17430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17412,
											"end": 17430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17412,
											"end": 17430,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17412,
											"end": 17430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17412,
											"end": 17430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17412,
											"end": 17430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17412,
											"end": 17430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17412,
											"end": 17430,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17412,
											"end": 17430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17412,
											"end": 17430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17412,
											"end": 17430,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17412,
											"end": 17463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17412,
											"end": 17463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17412,
											"end": 17463,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17412,
											"end": 17463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17496,
											"end": 17503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17475,
											"end": 17512,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17475,
											"end": 17512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17492,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17475,
											"end": 17512,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17475,
											"end": 17512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17475,
											"end": 17512,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17505,
											"end": 17511,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17475,
											"end": 17512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17475,
											"end": 17512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17475,
											"end": 17512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17475,
											"end": 17512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17475,
											"end": 17512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17475,
											"end": 17512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17475,
											"end": 17512,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17475,
											"end": 17512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17475,
											"end": 17512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17475,
											"end": 17512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17475,
											"end": 17512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17475,
											"end": 17512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17475,
											"end": 17512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17475,
											"end": 17512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17475,
											"end": 17512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17475,
											"end": 17512,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17475,
											"end": 17512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17475,
											"end": 17512,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17228,
											"end": 17518,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11083,
											"end": 11298,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 11083,
											"end": 11298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11173,
											"end": 11174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11153,
											"end": 11175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11153,
											"end": 11175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11153,
											"end": 11161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11153,
											"end": 11175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11153,
											"end": 11175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11153,
											"end": 11175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11153,
											"end": 11175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 11145,
											"end": 11218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11259,
											"end": 11267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11230,
											"end": 11268,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11230,
											"end": 11268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11251,
											"end": 11257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11251,
											"end": 11257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11251,
											"end": 11257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11251,
											"end": 11257,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11251,
											"end": 11257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11251,
											"end": 11257,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11251,
											"end": 11257,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11251,
											"end": 11257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11251,
											"end": 11257,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11251,
											"end": 11257,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11251,
											"end": 11257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11230,
											"end": 11268,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11230,
											"end": 11268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11230,
											"end": 11268,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 11230,
											"end": 11268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11230,
											"end": 11268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11230,
											"end": 11268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11230,
											"end": 11268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11230,
											"end": 11268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11230,
											"end": 11268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11230,
											"end": 11268,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11230,
											"end": 11268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11230,
											"end": 11268,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11284,
											"end": 11292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11281,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11275,
											"end": 11281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11292,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11275,
											"end": 11292,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11292,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11292,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11275,
											"end": 11292,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11292,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11292,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11292,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11275,
											"end": 11292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11292,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11292,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11292,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11083,
											"end": 11298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11083,
											"end": 11298,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}.    * Requirements:    * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.    * Requirements    * - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}.    * Requirements:    * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}.    * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};    * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP.sol\":\"BEP20Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP.sol\":{\"keccak256\":\"0x5fc1d49f4d3474ed5dfa0cbb2e0168d214ee9a5108fa02f0ac857ddd42f8b0d6\",\"urls\":[\"bzz-raw://d30824d07e0b3ac146bad5941bc78cb0e9c6980b2aafa14a8d908d6b6e717b84\",\"dweb:/ipfs/QmW9Dr8nHyQDUdwG7H2MPYMwrWuaEMCQCeHymc6S84VsKw\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"Context": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP.sol\":{\"keccak256\":\"0x5fc1d49f4d3474ed5dfa0cbb2e0168d214ee9a5108fa02f0ac857ddd42f8b0d6\",\"urls\":[\"bzz-raw://d30824d07e0b3ac146bad5941bc78cb0e9c6980b2aafa14a8d908d6b6e717b84\",\"dweb:/ipfs/QmW9Dr8nHyQDUdwG7H2MPYMwrWuaEMCQCeHymc6S84VsKw\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.    * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.    * Returns a boolean value indicating whether the operation succeeded.    * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729    * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.    * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.    * Returns a boolean value indicating whether the operation succeeded.    * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729    * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP.sol\":{\"keccak256\":\"0x5fc1d49f4d3474ed5dfa0cbb2e0168d214ee9a5108fa02f0ac857ddd42f8b0d6\",\"urls\":[\"bzz-raw://d30824d07e0b3ac146bad5941bc78cb0e9c6980b2aafa14a8d908d6b6e717b84\",\"dweb:/ipfs/QmW9Dr8nHyQDUdwG7H2MPYMwrWuaEMCQCeHymc6S84VsKw\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions.  * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}.  * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions.  * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}.  * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP.sol\":{\"keccak256\":\"0x5fc1d49f4d3474ed5dfa0cbb2e0168d214ee9a5108fa02f0ac857ddd42f8b0d6\",\"urls\":[\"bzz-raw://d30824d07e0b3ac146bad5941bc78cb0e9c6980b2aafa14a8d908d6b6e717b84\",\"dweb:/ipfs/QmW9Dr8nHyQDUdwG7H2MPYMwrWuaEMCQCeHymc6S84VsKw\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/BEP.sol\":4599:9027  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BEP.sol\":4599:9027  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n\n    auxdata: 0xa264697066735822122086d4faf10a5c804bdff2d4a66740fd77e6524e66ec07213a120b74a4eea77f8e64736f6c63430006040033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122086d4faf10a5c804bdff2d4a66740fd77e6524e66ec07213a120b74a4eea77f8e64736f6c63430006040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xD4 STATICCALL CALL EXP 0x5C DUP1 0x4B 0xDF CALLCODE 0xD4 0xA6 PUSH8 0x40FD77E6524E66EC SMOD 0x21 GASPRICE SLT SIGNEXTEND PUSH21 0xA4EEA77F8E64736F6C634300060400330000000000 ",
							"sourceMap": "4599:4428:0:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122086d4faf10a5c804bdff2d4a66740fd77e6524e66ec07213a120b74a4eea77f8e64736f6c63430006040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xD4 STATICCALL CALL EXP 0x5C DUP1 0x4B 0xDF CALLCODE 0xD4 0xA6 PUSH8 0x40FD77E6524E66EC SMOD 0x21 GASPRICE SLT SIGNEXTEND PUSH21 0xA4EEA77F8E64736F6C634300060400330000000000 ",
							"sourceMap": "4599:4428:0:-:0;;;;;;12:1:-1;9;2:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4599,
									"end": 9027,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4599,
									"end": 9027,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"source": -1,
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE",
									"source": -1
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS",
									"source": -1
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8",
									"source": -1
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN",
									"source": -1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122086d4faf10a5c804bdff2d4a66740fd77e6524e66ec07213a120b74a4eea77f8e64736f6c63430006040033",
									".code": [
										{
											"begin": 4599,
											"end": 9027,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 4599,
											"end": 9027,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4599,
											"end": 9027,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4599,
											"end": 9027,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4599,
											"end": 9027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4599,
											"end": 9027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP.sol\":{\"keccak256\":\"0x5fc1d49f4d3474ed5dfa0cbb2e0168d214ee9a5108fa02f0ac857ddd42f8b0d6\",\"urls\":[\"bzz-raw://d30824d07e0b3ac146bad5941bc78cb0e9c6980b2aafa14a8d908d6b6e717b84\",\"dweb:/ipfs/QmW9Dr8nHyQDUdwG7H2MPYMwrWuaEMCQCeHymc6S84VsKw\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/BEP.sol": {
				"ast": {
					"absolutePath": "contracts/BEP.sol",
					"exportedSymbols": {
						"BEP20Token": [
							976
						],
						"Context": [
							125
						],
						"IBEP20": [
							100
						],
						"Ownable": [
							436
						],
						"SafeMath": [
							319
						]
					},
					"id": 977,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "48:64:0",
										"text": "@dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "136:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 7,
												"src": "162:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "162:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "161:9:0"
									},
									"scope": 100,
									"src": "116:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "177:49:0",
										"text": "@dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "247:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 13,
												"src": "273:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 10,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "273:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "272:7:0"
									},
									"scope": 100,
									"src": "230:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "286:47:0",
										"text": "@dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "352:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 19,
												"src": "378:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 16,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "378:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "377:15:0"
									},
									"scope": 100,
									"src": "337:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "399:43:0",
										"text": "@dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "459:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 25,
												"src": "485:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 22,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "485:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "484:15:0"
									},
									"scope": 100,
									"src": "446:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "506:50:0",
										"text": "@dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "577:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "603:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "602:9:0"
									},
									"scope": 100,
									"src": "560:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "618:70:0",
										"text": "@dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 39,
												"src": "711:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "710:17:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 39,
												"src": "751:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "750:9:0"
									},
									"scope": 100,
									"src": "692:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "766:203:0",
										"text": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 49,
												"src": "991:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 49,
												"src": "1010:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "990:35:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 49,
												"src": "1044:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1044:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1043:6:0"
									},
									"scope": 100,
									"src": "973:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1056:258:0",
										"text": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n\n   * This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 59,
												"src": "1337:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1337:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 59,
												"src": "1353:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1353:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1336:33:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 59,
												"src": "1393:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1393:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1392:9:0"
									},
									"scope": 100,
									"src": "1318:84:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "1408:629:0",
										"text": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n\n   * Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 69,
												"src": "2058:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2058:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 69,
												"src": "2075:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2057:33:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 69,
												"src": "2109:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2109:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2108:6:0"
									},
									"scope": 100,
									"src": "2041:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "2121:288:0",
										"text": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "2435:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2435:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "2451:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "2470:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2434:51:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "2504:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 78,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2504:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2503:6:0"
									},
									"scope": 100,
									"src": "2413:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2516:153:0",
										"text": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n\n   * Note that `value` may be zero."
									},
									"id": 90,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "2688:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2688:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "2710:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "2730:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2687:57:0"
									},
									"src": "2673:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2751:145:0",
										"text": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance."
									},
									"id": 99,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 99,
												"src": "2915:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2915:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 99,
												"src": "2938:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2938:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 99,
												"src": "2963:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2963:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2914:63:0"
									},
									"src": "2900:78:0"
								}
							],
							"scope": 977,
							"src": "26:2955:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 125,
							"linearizedBaseContracts": [
								125
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "3693:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 104,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3681:2:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3693:0:0"
									},
									"scope": 125,
									"src": "3669:27:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "3764:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 109,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "3778:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3778:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 108,
												"id": 111,
												"nodeType": "Return",
												"src": "3771:17:0"
											}
										]
									},
									"documentation": null,
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3721:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 113,
												"src": "3747:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3747:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3746:17:0"
									},
									"scope": 125,
									"src": "3702:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "3857:158:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 118,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "3864:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$125",
														"typeString": "contract Context"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "3864:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "4001:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4001:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 117,
												"id": 122,
												"nodeType": "Return",
												"src": "3994:15:0"
											}
										]
									},
									"documentation": null,
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:2:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 124,
												"src": "3843:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 115,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3843:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3842:14:0"
									},
									"scope": 125,
									"src": "3800:215:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 977,
							"src": "3495:523:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 126,
								"nodeType": "StructuredDocumentation",
								"src": "4022:575:0",
								"text": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 319,
							"linearizedBaseContracts": [
								319
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "4901:100:0",
										"statements": [
											{
												"assignments": [
													137
												],
												"declarations": [
													{
														"constant": false,
														"id": 137,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 151,
														"src": "4908:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 136,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4908:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 141,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 138,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4920:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 139,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "4924:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4920:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4908:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 143,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "4940:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 144,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "4945:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4940:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4948:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 142,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4932:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4932:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "4932:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 149,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 137,
													"src": "4994:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 135,
												"id": 150,
												"nodeType": "Return",
												"src": "4987:8:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "4621:209:0",
										"text": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n\n   * Counterpart to Solidity's `+` operator.\n\n   * Requirements:\n- Addition cannot overflow."
									},
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 152,
												"src": "4847:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 152,
												"src": "4858:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4858:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4846:22:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 152,
												"src": "4892:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4891:9:0"
									},
									"scope": 319,
									"src": "4834:167:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "5323:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 163,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "5341:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 164,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "5344:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5347:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 162,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															169,
															197
														],
														"referencedDeclaration": 197,
														"src": "5337:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5337:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 161,
												"id": 167,
												"nodeType": "Return",
												"src": "5330:50:0"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "5007:245:0",
										"text": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n\n   * Counterpart to Solidity's `-` operator.\n\n   * Requirements:\n- Subtraction cannot overflow."
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 169,
												"src": "5269:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5269:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 169,
												"src": "5280:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5280:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5268:22:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 169,
												"src": "5314:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5314:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5313:9:0"
									},
									"scope": 319,
									"src": "5256:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "5756:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 182,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "5771:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 183,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "5776:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5771:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 185,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "5779:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5763:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5763:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5763:29:0"
											},
											{
												"assignments": [
													189
												],
												"declarations": [
													{
														"constant": false,
														"id": 189,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 196,
														"src": "5799:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 188,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5799:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 193,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "5811:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 191,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "5815:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5811:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5799:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 194,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 189,
													"src": "5832:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 180,
												"id": 195,
												"nodeType": "Return",
												"src": "5825:8:0"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "5392:265:0",
										"text": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n\n   * Counterpart to Solidity's `-` operator.\n\n   * Requirements:\n- Subtraction cannot overflow."
									},
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 197,
												"src": "5674:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 197,
												"src": "5685:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 197,
												"src": "5696:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5696:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5673:50:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 197,
												"src": "5747:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5747:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5746:9:0"
									},
									"scope": 319,
									"src": "5661:178:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "6137:364:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 207,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "6357:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6362:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6357:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 213,
												"nodeType": "IfStatement",
												"src": "6353:37:0",
												"trueBody": {
													"id": 212,
													"nodeType": "Block",
													"src": "6365:25:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6381:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 206,
															"id": 211,
															"nodeType": "Return",
															"src": "6374:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 215,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 231,
														"src": "6398:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 214,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6398:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 219,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 216,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "6410:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 217,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "6414:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6410:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6398:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 221,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "6430:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 222,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "6434:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6430:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 224,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "6439:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6430:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6442:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6422:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6422:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "6422:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 229,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 215,
													"src": "6494:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 206,
												"id": 230,
												"nodeType": "Return",
												"src": "6487:8:0"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "5845:221:0",
										"text": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n\n   * Counterpart to Solidity's `*` operator.\n\n   * Requirements:\n- Multiplication cannot overflow."
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 232,
												"src": "6083:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 232,
												"src": "6094:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6094:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6082:22:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 232,
												"src": "6128:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6128:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6127:9:0"
									},
									"scope": 319,
									"src": "6070:431:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "7012:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 243,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "7030:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 244,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7033:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7036:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 242,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															249,
															277
														],
														"referencedDeclaration": 277,
														"src": "7026:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7026:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 247,
												"nodeType": "Return",
												"src": "7019:46:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "6507:434:0",
										"text": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero."
									},
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 249,
												"src": "6958:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6958:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 249,
												"src": "6969:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6957:22:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 249,
												"src": "7003:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7003:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7002:9:0"
									},
									"scope": 319,
									"src": "6945:126:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "7630:228:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 262,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "7708:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7712:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7708:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 265,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "7715:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7700:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7700:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "7700:28:0"
											},
											{
												"assignments": [
													269
												],
												"declarations": [
													{
														"constant": false,
														"id": 269,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 276,
														"src": "7735:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 268,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7735:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 273,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 270,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "7747:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 271,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "7751:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7747:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7735:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 274,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 269,
													"src": "7851:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 260,
												"id": 275,
												"nodeType": "Return",
												"src": "7844:8:0"
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "7077:454:0",
										"text": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero."
									},
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 277,
												"src": "7548:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7548:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 277,
												"src": "7559:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7559:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 277,
												"src": "7570:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 255,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7570:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7547:50:0"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 277,
												"src": "7621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7620:9:0"
									},
									"scope": 319,
									"src": "7535:323:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "8358:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 288,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "8376:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 289,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "8379:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8382:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 287,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															294,
															318
														],
														"referencedDeclaration": 318,
														"src": "8372:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8372:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 286,
												"id": 292,
												"nodeType": "Return",
												"src": "8365:44:0"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "7864:423:0",
										"text": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 294,
												"src": "8304:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8304:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 294,
												"src": "8315:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8315:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8303:22:0"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 294,
												"src": "8349:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8349:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8348:9:0"
									},
									"scope": 319,
									"src": "8291:124:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "8963:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 307,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "8978:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8983:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8978:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 310,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "8986:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8970:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8970:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "8970:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 313,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "9013:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 314,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "9017:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9013:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 305,
												"id": 316,
												"nodeType": "Return",
												"src": "9006:12:0"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "8421:443:0",
										"text": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero."
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 318,
												"src": "8881:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8881:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 318,
												"src": "8892:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 318,
												"src": "8903:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 300,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8903:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8880:50:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 318,
												"src": "8954:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8954:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8953:9:0"
									},
									"scope": 319,
									"src": "8868:156:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 977,
							"src": "4599:4428:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 321,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 125,
										"src": "9558:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$125",
											"typeString": "contract Context"
										}
									},
									"id": 322,
									"nodeType": "InheritanceSpecifier",
									"src": "9558:7:0"
								}
							],
							"contractDependencies": [
								125
							],
							"contractKind": "contract",
							"documentation": {
								"id": 320,
								"nodeType": "StructuredDocumentation",
								"src": "9031:505:0",
								"text": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner."
							},
							"fullyImplemented": true,
							"id": 436,
							"linearizedBaseContracts": [
								436,
								125
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 324,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 436,
									"src": "9571:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 323,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9571:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 330,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 330,
												"src": "9627:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9627:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 330,
												"src": "9658:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9626:57:0"
									},
									"src": "9600:84:0"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "9807:125:0",
										"statements": [
											{
												"assignments": [
													335
												],
												"declarations": [
													{
														"constant": false,
														"id": 335,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 351,
														"src": "9814:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 334,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9814:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 338,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 336,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "9834:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9834:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9814:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 339,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "9853:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 340,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "9862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9853:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "9853:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9912:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9904:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 344,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9904:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9904:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 348,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "9916:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 343,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "9883:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9883:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 350,
												"nodeType": "EmitStatement",
												"src": "9878:48:0"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "9690:89:0",
										"text": "@dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 352,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9795:2:0"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9807:0:0"
									},
									"scope": 436,
									"src": "9783:149:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "10052:26:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 358,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 324,
													"src": "10066:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 357,
												"id": 359,
												"nodeType": "Return",
												"src": "10059:13:0"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "9938:63:0",
										"text": "@dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10019:2:0"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 361,
												"src": "10043:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10043:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10042:9:0"
									},
									"scope": 436,
									"src": "10005:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "10184:88:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 365,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 324,
																"src": "10199:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 366,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "10209:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10209:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10199:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10223:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10191:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10191:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "10191:67:0"
											},
											{
												"id": 372,
												"nodeType": "PlaceholderStatement",
												"src": "10265:1:0"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "10084:75:0",
										"text": "@dev Throws if called by any account other than the owner."
									},
									"id": 374,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10181:2:0"
									},
									"src": "10163:109:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 395,
										"nodeType": "Block",
										"src": "10653:84:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 381,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "10686:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10702:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10694:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 382,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10694:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10694:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 380,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "10665:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10665:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "EmitStatement",
												"src": "10660:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 388,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "10712:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10729:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10721:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 389,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10721:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 392,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10721:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "10712:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "10712:19:0"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "10278:325:0",
										"text": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n\n   * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 396,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 378,
											"modifierName": {
												"argumentTypes": null,
												"id": 377,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 374,
												"src": "10643:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10643:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10633:2:0"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10653:0:0"
									},
									"scope": 436,
									"src": "10607:130:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "10944:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 405,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "10970:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 404,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "10951:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10951:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "10951:28:0"
											}
										]
									},
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "10743:135:0",
										"text": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 402,
											"modifierName": {
												"argumentTypes": null,
												"id": 401,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 374,
												"src": "10934:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10934:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 409,
												"src": "10909:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10909:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10908:18:0"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10944:0:0"
									},
									"scope": 436,
									"src": "10882:103:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "11138:160:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 416,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "11153:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11173:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11165:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 417,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11165:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11165:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "11153:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11177:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 415,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11145:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11145:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "11145:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 426,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "11251:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 427,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "11259:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 425,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "11230:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11230:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "EmitStatement",
												"src": "11225:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 430,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "11275:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 431,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "11284:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11275:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "11275:17:0"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "10991:88:0",
										"text": "@dev Transfers ownership of the contract to a new account (`newOwner`)."
									},
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 435,
												"src": "11111:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11111:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11110:18:0"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11138:0:0"
									},
									"scope": 436,
									"src": "11083:215:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 977,
							"src": "9538:1763:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 437,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 125,
										"src": "11328:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$125",
											"typeString": "contract Context"
										}
									},
									"id": 438,
									"nodeType": "InheritanceSpecifier",
									"src": "11328:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 439,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 100,
										"src": "11337:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$100",
											"typeString": "contract IBEP20"
										}
									},
									"id": 440,
									"nodeType": "InheritanceSpecifier",
									"src": "11337:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 441,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 436,
										"src": "11345:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$436",
											"typeString": "contract Ownable"
										}
									},
									"id": 442,
									"nodeType": "InheritanceSpecifier",
									"src": "11345:7:0"
								}
							],
							"contractDependencies": [
								100,
								125,
								436
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 976,
							"linearizedBaseContracts": [
								976,
								436,
								100,
								125
							],
							"name": "BEP20Token",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 445,
									"libraryName": {
										"contractScope": null,
										"id": 443,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 319,
										"src": "11364:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$319",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "11358:27:0",
									"typeName": {
										"id": 444,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11377:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 449,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 976,
									"src": "11391:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 448,
										"keyType": {
											"id": 446,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11400:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11391:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 447,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11411:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 455,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 976,
									"src": "11444:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 454,
										"keyType": {
											"id": 450,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11453:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11444:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 453,
											"keyType": {
												"id": 451,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11473:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11464:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 452,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11484:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 457,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 976,
									"src": "11520:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 456,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11520:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 459,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 976,
									"src": "11553:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 458,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "11553:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 461,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 976,
									"src": "11581:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 460,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11581:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 463,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 976,
									"src": "11608:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 462,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11608:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "11737:215:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 474,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "11744:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 475,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "11752:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "11744:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "11744:13:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 478,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "11764:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 479,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "11774:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "11764:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "11764:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 482,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "11788:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 483,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "11800:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "11788:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "11788:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 486,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "11816:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 487,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "11831:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11816:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "11816:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 490,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "11850:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 493,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 491,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "11860:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11860:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11850:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 494,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "11874:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11850:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "11850:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11917:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11909:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 498,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11909:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11909:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 502,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "11921:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11921:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 504,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "11933:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 497,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "11900:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11900:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 506,
												"nodeType": "EmitStatement",
												"src": "11895:51:0"
											}
										]
									},
									"documentation": null,
									"id": 508,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 508,
												"src": "11647:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 464,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11647:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 508,
												"src": "11668:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 466,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11668:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 508,
												"src": "11691:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 468,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11691:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"name": "totalSupply_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 508,
												"src": "11708:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11646:83:0"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11737:0:0"
									},
									"scope": 976,
									"src": "11635:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										31
									],
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "12073:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 515,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "12087:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12087:7:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 514,
												"id": 517,
												"nodeType": "Return",
												"src": "12080:14:0"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "11958:50:0",
										"text": "@dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 511,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12041:8:0"
									},
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12029:2:0"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 519,
												"src": "12064:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12064:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12063:9:0"
									},
									"scope": 976,
									"src": "12012:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										13
									],
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "12218:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 526,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 459,
													"src": "12232:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 525,
												"id": 527,
												"nodeType": "Return",
												"src": "12225:16:0"
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "12106:49:0",
										"text": "@dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 522,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12188:8:0"
									},
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12176:2:0"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 529,
												"src": "12211:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 523,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "12211:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12210:7:0"
									},
									"scope": 976,
									"src": "12159:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										19
									],
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "12369:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 536,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 461,
													"src": "12383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 535,
												"id": 537,
												"nodeType": "Return",
												"src": "12376:14:0"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "12253:47:0",
										"text": "@dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 532,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12331:8:0"
									},
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12319:2:0"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 539,
												"src": "12354:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 533,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12354:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12353:15:0"
									},
									"scope": 976,
									"src": "12304:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										25
									],
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "12512:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 546,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 463,
													"src": "12526:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 545,
												"id": 547,
												"nodeType": "Return",
												"src": "12519:12:0"
											}
										]
									},
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "12402:43:0",
										"text": "@dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 542,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12479:8:0"
									},
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12462:2:0"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 549,
												"src": "12497:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 543,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12497:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12496:15:0"
									},
									"scope": 976,
									"src": "12449:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										7
									],
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "12657:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 556,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 457,
													"src": "12671:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 555,
												"id": 557,
												"nodeType": "Return",
												"src": "12664:19:0"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "12543:46:0",
										"text": "@dev See {BEP20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 552,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12625:8:0"
									},
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12613:2:0"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 559,
												"src": "12648:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12648:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12647:9:0"
									},
									"scope": 976,
									"src": "12593:96:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										39
									],
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "12820:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 568,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "12834:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 570,
													"indexExpression": {
														"argumentTypes": null,
														"id": 569,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "12844:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12834:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 567,
												"id": 571,
												"nodeType": "Return",
												"src": "12827:25:0"
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "12695:44:0",
										"text": "@dev See {BEP20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 564,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12788:8:0"
									},
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 573,
												"src": "12762:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12762:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12761:17:0"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 573,
												"src": "12811:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12811:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12810:9:0"
									},
									"scope": 976,
									"src": "12743:115:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										49
									],
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "13138:73:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 585,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "13155:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13155:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 587,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "13169:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 588,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "13180:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 584,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "13145:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13145:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "13145:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13201:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 583,
												"id": 592,
												"nodeType": "Return",
												"src": "13194:11:0"
											}
										]
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "12864:184:0",
										"text": "@dev See {BEP20-transfer}.\n\n   * Requirements:\n\n   * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 580,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13114:8:0"
									},
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 594,
												"src": "13070:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13070:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 594,
												"src": "13089:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13069:35:0"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 594,
												"src": "13132:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 581,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13132:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13131:6:0"
									},
									"scope": 976,
									"src": "13052:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										59
									],
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "13357:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 605,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "13371:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 607,
														"indexExpression": {
															"argumentTypes": null,
															"id": 606,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "13383:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13371:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 609,
													"indexExpression": {
														"argumentTypes": null,
														"id": 608,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "13390:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13371:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 604,
												"id": 610,
												"nodeType": "Return",
												"src": "13364:34:0"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "13217:44:0",
										"text": "@dev See {BEP20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 601,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13325:8:0"
									},
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 612,
												"src": "13284:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13284:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 612,
												"src": "13299:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13283:32:0"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 612,
												"src": "13348:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13348:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13347:9:0"
									},
									"scope": 976,
									"src": "13265:139:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										69
									],
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "13617:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 624,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "13633:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13633:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 626,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "13647:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 627,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "13656:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 623,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "13624:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13624:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "13624:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13677:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 622,
												"id": 631,
												"nodeType": "Return",
												"src": "13670:11:0"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "13410:120:0",
										"text": "@dev See {BEP20-approve}.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 619,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13593:8:0"
									},
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 633,
												"src": "13551:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 633,
												"src": "13568:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13568:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13550:33:0"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 633,
												"src": "13611:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 620,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13611:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13610:6:0"
									},
									"scope": 976,
									"src": "13534:153:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										81
									],
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "14238:195:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 647,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "14255:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 648,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "14263:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 649,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "14274:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 646,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "14245:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14245:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "14245:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 653,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "14297:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 654,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "14305:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14305:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 663,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "14357:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 656,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 455,
																			"src": "14319:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 658,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 657,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 636,
																			"src": "14331:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14319:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 661,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 659,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 113,
																			"src": "14339:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14339:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14319:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 197,
																"src": "14319:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14319:89:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 652,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "14288:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14288:121:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "14288:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14423:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 645,
												"id": 669,
												"nodeType": "Return",
												"src": "14416:11:0"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "13693:435:0",
										"text": "@dev See {BEP20-transferFrom}.\n\n   * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {BEP20};\n\n   * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`."
									},
									"functionSelector": "23b872dd",
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 642,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14214:8:0"
									},
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 671,
												"src": "14154:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14154:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 671,
												"src": "14170:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14170:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 671,
												"src": "14189:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14153:51:0"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 671,
												"src": "14232:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 643,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14232:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14231:6:0"
									},
									"scope": 976,
									"src": "14132:301:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "14901:114:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 682,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "14917:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14917:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "14931:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 692,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 676,
																	"src": "14979:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 685,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 455,
																			"src": "14940:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 688,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 686,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 113,
																				"src": "14952:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14952:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14940:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 690,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 689,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 674,
																		"src": "14966:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14940:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 152,
																"src": "14940:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14940:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 681,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "14908:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14908:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "14908:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15005:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 680,
												"id": 697,
												"nodeType": "Return",
												"src": "14998:11:0"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "14439:372:0",
										"text": "@dev Atomically increases the allowance granted to `spender` by the caller.\n\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n\n   * Emits an {Approval} event indicating the updated allowance.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 699,
												"src": "14842:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14842:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 699,
												"src": "14859:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14859:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14841:37:0"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 699,
												"src": "14895:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 678,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14895:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14894:6:0"
									},
									"scope": 976,
									"src": "14815:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "15578:160:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 710,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "15594:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15594:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 712,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "15608:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 720,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 704,
																	"src": "15656:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15673:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 713,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 455,
																			"src": "15617:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 716,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 714,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 113,
																				"src": "15629:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15629:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15617:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 718,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 717,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 702,
																		"src": "15643:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15617:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 197,
																"src": "15617:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15617:96:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 709,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "15585:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15585:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "15585:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15728:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 708,
												"id": 726,
												"nodeType": "Return",
												"src": "15721:11:0"
											}
										]
									},
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "15021:462:0",
										"text": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n\n   * Emits an {Approval} event indicating the updated allowance.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 728,
												"src": "15514:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15514:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 728,
												"src": "15531:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15513:42:0"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 728,
												"src": "15572:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 706,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15572:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15571:6:0"
									},
									"scope": 976,
									"src": "15487:251:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "16000:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 739,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "16013:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16013:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 741,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "16027:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 738,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "16007:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16007:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "16007:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16048:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 737,
												"id": 745,
												"nodeType": "Return",
												"src": "16041:11:0"
											}
										]
									},
									"documentation": {
										"id": 729,
										"nodeType": "StructuredDocumentation",
										"src": "15744:190:0",
										"text": "@dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\nthe total supply.\n\n   * Requirements\n\n   * - `msg.sender` must be the token owner"
									},
									"functionSelector": "a0712d68",
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 734,
											"modifierName": {
												"argumentTypes": null,
												"id": 733,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 374,
												"src": "15975:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15975:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 747,
												"src": "15952:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15951:16:0"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 747,
												"src": "15994:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 735,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15994:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15993:6:0"
									},
									"scope": 976,
									"src": "15938:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "16597:370:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 758,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "16612:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16630:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16622:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 759,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16622:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16622:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16612:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16634:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 757,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "16604:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16604:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "16604:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 768,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 752,
																"src": "16689:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16710:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16702:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16702:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16702:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16689:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16714:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 767,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "16681:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16681:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "16681:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 777,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "16761:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 779,
														"indexExpression": {
															"argumentTypes": null,
															"id": 778,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "16771:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16761:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 784,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "16803:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16811:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 780,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "16781:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 782,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 781,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "16791:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16781:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 197,
															"src": "16781:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16781:71:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16761:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "16761:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 789,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "16859:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 791,
														"indexExpression": {
															"argumentTypes": null,
															"id": 790,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "16869:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16859:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 796,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "16907:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 792,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "16882:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 794,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 793,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 752,
																	"src": "16892:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16882:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 152,
															"src": "16882:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16882:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16859:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "16859:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 801,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "16935:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 802,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "16943:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 803,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "16954:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 800,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "16926:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16926:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "EmitStatement",
												"src": "16921:40:0"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "16064:450:0",
										"text": "@dev Moves tokens `amount` from `sender` to `recipient`.\n\n   * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n\n   * Emits a {Transfer} event.\n\n   * Requirements:\n\n   * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`."
									},
									"id": 807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 807,
												"src": "16537:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16537:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 807,
												"src": "16553:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16553:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 807,
												"src": "16572:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16536:51:0"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16597:0:0"
									},
									"scope": 976,
									"src": "16518:449:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "17285:233:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 816,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "17300:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17319:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17311:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 817,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17311:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17311:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17300:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17323:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 815,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "17292:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17292:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "17292:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 825,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "17366:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 828,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 812,
																"src": "17398:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 826,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "17381:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 152,
															"src": "17381:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17381:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17366:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "17366:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 832,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "17412:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 834,
														"indexExpression": {
															"argumentTypes": null,
															"id": 833,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "17422:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17412:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 839,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 812,
																"src": "17456:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 835,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "17433:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 837,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 836,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "17443:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17433:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 152,
															"src": "17433:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17433:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17412:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "17412:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17492:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17484:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 844,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17484:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17484:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 848,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "17496:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 849,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "17505:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 843,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "17475:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17475:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "EmitStatement",
												"src": "17470:42:0"
											}
										]
									},
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "16973:251:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n\n   * Emits a {Transfer} event with `from` set to the zero address.\n\n   * Requirements\n\n   * - `to` cannot be the zero address."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 853,
												"src": "17243:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17243:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 853,
												"src": "17260:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17260:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17242:33:0"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17285:0:0"
									},
									"scope": 976,
									"src": "17228:290:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "17883:273:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 862,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "17898:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17917:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17909:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 863,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17909:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17909:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17898:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17921:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 861,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "17890:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17890:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "17890:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 871,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "17966:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 873,
														"indexExpression": {
															"argumentTypes": null,
															"id": 872,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "17976:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17966:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 878,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "18010:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18018:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 874,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "17987:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 876,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 875,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "17997:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17987:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 197,
															"src": "17987:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17987:68:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17966:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "17966:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 883,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "18062:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 886,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "18094:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 884,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "18077:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 169,
															"src": "18077:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18077:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18062:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "18062:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 891,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "18122:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18139:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18131:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 892,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18131:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18131:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 896,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "18143:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 890,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "18113:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18113:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 898,
												"nodeType": "EmitStatement",
												"src": "18108:42:0"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "17524:298:0",
										"text": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n\n   * Emits a {Transfer} event with `to` set to the zero address.\n\n   * Requirements\n\n   * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens."
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 900,
												"src": "17841:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17841:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 900,
												"src": "17858:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17858:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17840:33:0"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17883:0:0"
									},
									"scope": 976,
									"src": "17826:330:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "18643:245:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 911,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 903,
																"src": "18658:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18675:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18667:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 912,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18667:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18667:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18658:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18679:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 910,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18650:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18650:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "18650:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 921,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "18733:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18752:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18744:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 922,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18744:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18744:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18733:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18756:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 920,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "18725:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18725:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "18725:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 930,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 455,
																"src": "18802:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 933,
															"indexExpression": {
																"argumentTypes": null,
																"id": 931,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 903,
																"src": "18814:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18802:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 934,
														"indexExpression": {
															"argumentTypes": null,
															"id": 932,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "18821:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18802:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 935,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "18832:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18802:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 937,
												"nodeType": "ExpressionStatement",
												"src": "18802:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 939,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "18859:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 940,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "18866:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 941,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "18875:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 938,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "18850:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18850:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "EmitStatement",
												"src": "18845:37:0"
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "18162:402:0",
										"text": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n\n   * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n\n   * Emits an {Approval} event.\n\n   * Requirements:\n\n   * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address."
									},
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 945,
												"src": "18586:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18586:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 945,
												"src": "18601:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18601:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 945,
												"src": "18618:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18618:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18585:48:0"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18643:0:0"
									},
									"scope": 976,
									"src": "18568:320:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "19121:161:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 954,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "19134:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 955,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "19143:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 953,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "19128:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19128:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "19128:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 959,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "19166:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 960,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "19175:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19175:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 969,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "19228:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19236:38:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 962,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 455,
																			"src": "19189:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 964,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 963,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 948,
																			"src": "19201:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "19189:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 967,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 965,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 113,
																			"src": "19210:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19210:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19189:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 197,
																"src": "19189:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19189:86:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 958,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "19157:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19157:119:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "19157:119:0"
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "18894:162:0",
										"text": "@dev Destroys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n\n   * See {_burn} and {_approve}."
									},
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 975,
												"src": "19079:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19079:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 975,
												"src": "19096:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19096:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19078:33:0"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19121:0:0"
									},
									"scope": 976,
									"src": "19060:222:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 977,
							"src": "11305:7980:0"
						}
					],
					"src": "0:19285:0"
				},
				"id": 0
			}
		}
	}
}