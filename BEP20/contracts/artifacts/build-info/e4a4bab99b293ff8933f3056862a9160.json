{
	"id": "e4a4bab99b293ff8933f3056862a9160",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.4",
	"solcLongVersion": "0.6.4+commit.1dca32f3",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/demo2.sol": {
				"content": "    pragma solidity >0.4.0 <0.9.0;\r\n    pragma experimental ABIEncoderV2;\r\n\r\n    contract demo2 {\r\n        bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\";\r\n        bytes public data3 = \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\";\r\n        bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\";\r\n        uint8 constant STRING_OFFSET = 0x80; //128\r\n        uint8 constant LIST_OFFSET = 0xc0; //192\r\n        uint8 constant STRING_SHORT_START = 0x80; //184\r\n        uint8 constant STRING_LONG_START  = 0xb8; //128\r\n        uint8 constant LIST_SHORT_START   = 0xc0; //192\r\n        uint8 constant LIST_LONG_START    = 0xf8; //248\r\n        uint8 constant WORD_SIZE = 32;\r\n        \r\n        struct RLPItem {\r\n            uint len;\r\n            uint memPtr;\r\n        }\r\n\r\n        struct Iterator {\r\n            RLPItem item;   // Item that's being iterated over.\r\n            uint nextPtr;   // Position of the next item in the list.\r\n        }\r\n\r\n        RLPItem public rlpItem;\r\n        Iterator public iterator;\r\n\r\n        constructor() public {\r\n            rlpItem.len = 6;\r\n            rlpItem.memPtr = 2;\r\n            iterator.item = rlpItem;\r\n            iterator.nextPtr = 4;\r\n        }\r\n               \r\n\r\n        function getDecodeData() public view returns(bool) {\r\n            return isList(rlpItem);\r\n        }\r\n\r\n        function isList(RLPItem memory item) internal pure returns (bool) {\r\n            if (item.len == 0) return false;\r\n\r\n            uint8 byte0;\r\n            uint memPtr = item.memPtr;\r\n            assembly {\r\n                byte0 := byte(0, mload(memPtr))\r\n            }\r\n\r\n            if (byte0 < LIST_SHORT_START)\r\n                return false;\r\n            return true;\r\n        }\r\n\r\n        // function iterator1(RLPItem memory self) internal pure returns (Iterator memory) {\r\n        //     require(isList(self));\r\n\r\n        //     uint ptr = self.memPtr + _payloadOffset(self.memPtr);\r\n        //     return Iterator(self, ptr);\r\n        // }\r\n\r\n        function getEncodeData() public view returns(bytes memory) {\r\n            return toBytes(rlpItem);\r\n        }\r\n\r\n        function toRLPItem(bytes memory self) internal pure returns (RLPItem memory) {\r\n            uint memPtr;\r\n            assembly {\r\n                memPtr := add(self, 0x20)\r\n            }\r\n\r\n            return RLPItem(self.length, memPtr);\r\n        }\r\n\r\n        function toBytes(RLPItem memory item) internal pure returns (bytes memory) {\r\n            require(item.len > 0);\r\n\r\n            uint offset = _payloadOffset(item.memPtr);\r\n            uint len = item.len - offset; // data length\r\n            bytes memory result = new bytes(len);\r\n\r\n            uint destPtr;\r\n            assembly {\r\n                destPtr := add(0x20, result)\r\n            }\r\n\r\n            copy(item.memPtr + offset, destPtr, len);\r\n            return result;\r\n        }\r\n        \r\n\r\n\r\n        function next(Iterator memory self) internal pure returns (RLPItem memory) {\r\n            require(hasNext(self));\r\n\r\n            uint ptr = self.nextPtr;\r\n            uint itemLength = _itemLength(ptr);\r\n            self.nextPtr = ptr + itemLength;\r\n\r\n            return RLPItem(itemLength, ptr);\r\n        }\r\n\r\n        function hasNext(Iterator memory self) internal pure returns (bool) {\r\n            RLPItem memory item = self.item;\r\n            return self.nextPtr < item.memPtr + item.len;\r\n        }\r\n        \r\n        function toRlpBytes(RLPItem memory item) internal pure returns (bytes memory) {\r\n            bytes memory result = new bytes(item.len);\r\n            if (result.length == 0) return result;\r\n\r\n            uint ptr;\r\n            assembly {\r\n                ptr := add(0x20, result)\r\n            }\r\n\r\n            copy(item.memPtr, ptr, item.len);\r\n            return result;\r\n        }\r\n\r\n        function toBoolean(RLPItem memory item) internal pure returns (bool) {\r\n            require(item.len == 1);\r\n            uint result;\r\n            uint memPtr = item.memPtr;\r\n            assembly {\r\n                result := byte(0, mload(memPtr))\r\n            }\r\n\r\n            return result == 0 ? false : true;\r\n        }\r\n\r\n        function toAddress(RLPItem memory item) internal pure returns (address) {\r\n            // 1 byte for the length prefix\r\n            require(item.len == 21);\r\n\r\n            return address(toUint(item));\r\n        }\r\n\r\n        function toUint(RLPItem memory item) internal pure returns (uint) {\r\n            require(item.len > 0 && item.len <= 33);\r\n\r\n            uint offset = _payloadOffset(item.memPtr);\r\n            require(item.len >= offset, \"length is less than offset\");\r\n            uint len = item.len - offset;\r\n\r\n            uint result;\r\n            uint memPtr = item.memPtr + offset;\r\n            assembly {\r\n                result := mload(memPtr)\r\n            // shfit to the correct location if neccesary\r\n                if lt(len, 32) {\r\n                    result := div(result, exp(256, sub(32, len)))\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n         \r\n        function toUintStrict(RLPItem memory item) internal pure returns (uint) {\r\n            // one byte prefix\r\n            require(item.len == 33);\r\n\r\n            uint result;\r\n            uint memPtr = item.memPtr + 1;\r\n            assembly {\r\n                result := mload(memPtr)\r\n            }\r\n\r\n            return result;\r\n        }\r\n        \r\n\r\n        // function toBytes(RLPItem memory item) internal pure returns (bytes memory) {\r\n        //     require(item.len > 0);\r\n\r\n        //     uint offset = _payloadOffset(item.memPtr);\r\n        //     uint len = item.len - offset; // data length\r\n        //     bytes memory result = new bytes(len);\r\n\r\n        //     uint destPtr;\r\n        //     assembly {\r\n        //         destPtr := add(0x20, result)\r\n        //     }\r\n\r\n        //     copy(item.memPtr + offset, destPtr, len);\r\n        //     return result;\r\n        // }\r\n\r\n        \r\n        function numItems(RLPItem memory item) private pure returns (uint) {\r\n            if (item.len == 0) return 0;\r\n            uint count = 0;\r\n            uint currPtr = item.memPtr + _payloadOffset(item.memPtr);\r\n            uint endPtr = item.memPtr + item.len;\r\n            while (currPtr < endPtr) {\r\n                currPtr = currPtr + _itemLength(currPtr); // skip over an item\r\n                count++;\r\n            }\r\n            return count;\r\n        }\r\n\r\n        function _itemLength(uint memPtr) private pure returns (uint) {\r\n            uint itemLen;\r\n            uint byte0;\r\n            assembly {\r\n                byte0 := byte(0, mload(memPtr))\r\n            }\r\n\r\n            if (byte0 < STRING_SHORT_START)\r\n                itemLen = 1;\r\n\r\n            else if (byte0 < STRING_LONG_START)\r\n                itemLen = byte0 - STRING_SHORT_START + 1;\r\n\r\n            else if (byte0 < LIST_SHORT_START) {\r\n                uint dataLen;\r\n                assembly {\r\n                    let byteLen := sub(byte0, 0xb7) // # of bytes the actual length is\r\n                    memPtr := add(memPtr, 1) // skip over the first byte\r\n\r\n                    /* 32 byte word size */\r\n                    dataLen := div(mload(memPtr), exp(256, sub(32, byteLen))) // right shifting to get the len\r\n                    itemLen := add(dataLen, add(byteLen, 1))\r\n                }\r\n                require(itemLen >= dataLen, \"addition overflow\");\r\n            }\r\n\r\n            else if (byte0 < LIST_LONG_START) {\r\n                itemLen = byte0 - LIST_SHORT_START + 1;\r\n            }\r\n\r\n            else {\r\n                uint dataLen;\r\n                assembly {\r\n                    let byteLen := sub(byte0, 0xf7)\r\n                    memPtr := add(memPtr, 1)\r\n\r\n                    dataLen := div(mload(memPtr), exp(256, sub(32, byteLen))) // right shifting to the correct length\r\n                    itemLen := add(dataLen, add(byteLen, 1))\r\n                }\r\n                require(itemLen >= dataLen, \"addition overflow\");\r\n            }\r\n\r\n            return itemLen;\r\n        }\r\n\r\n         // @return number of bytes until the data\r\n        function _payloadOffset(uint memPtr) private pure returns (uint) {\r\n            uint byte0;\r\n            assembly {\r\n                byte0 := byte(0, mload(memPtr))\r\n            }\r\n\r\n            if (byte0 < STRING_SHORT_START)\r\n                return 0;\r\n            else if (byte0 < STRING_LONG_START || (byte0 >= LIST_SHORT_START && byte0 < LIST_LONG_START))\r\n                return 1;\r\n            else if (byte0 < LIST_SHORT_START)  // being explicit\r\n                return byte0 - (STRING_LONG_START - 1) + 1;\r\n            else\r\n                return byte0 - (LIST_LONG_START - 1) + 1;\r\n        } \r\n\r\n        function copy(uint src, uint dest, uint len) private pure {\r\n            if (len == 0) return;\r\n\r\n            // copy as many word sizes as possible\r\n            for (; len >= WORD_SIZE; len -= WORD_SIZE) {\r\n                assembly {\r\n                    mstore(dest, mload(src))\r\n                }\r\n\r\n                src += WORD_SIZE;\r\n                dest += WORD_SIZE;\r\n            }\r\n\r\n            // left over bytes. Mask is used to remove unwanted bytes from the word\r\n            uint mask = 256 ** (WORD_SIZE - len) - 1;\r\n            assembly {\r\n                let srcpart := and(mload(src), not(mask)) // zero out src\r\n                let destpart := and(mload(dest), mask) // retrieve the bytes\r\n                mstore(dest, or(destpart, srcpart))\r\n            }\r\n        }\r\n    } \r\n            "
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/demo2.sol": {
				"demo2": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "data1",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "data2",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "data3",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDecodeData",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEncodeData",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "iterator",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "len",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "memPtr",
											"type": "uint256"
										}
									],
									"internalType": "struct demo2.RLPItem",
									"name": "item",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "nextPtr",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rlpItem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "len",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "memPtr",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/demo2.sol\":81:9528  contract demo2 {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/demo2.sol\":107:176  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x2e\n  dup2\n  mstore\n  0x20\n  add\n  data_4887836e294a2761413359597244d307bbe3f94827f6160d9e1a399e00e2d1be\n  0x2e\n  swap2\n  codecopy\n  0x00\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/demo2.sol\":187:252  bytes public data3 = \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\" */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x2a\n  dup2\n  mstore\n  0x20\n  add\n  data_c359735a342ece061e65ab7390d246d1e53ba5f24eea70d6201f1d4a7b2f3475\n  0x2a\n  swap2\n  codecopy\n  0x01\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_3\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_3:\n  pop\n    /* \"contracts/demo2.sol\":263:310  bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\" */\n  sstore(0x02, 0x4c45484f4e47564f776a6e66766a3377656838764b4a00000000000000000000)\n    /* \"contracts/demo2.sol\":1035:1204  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_4:\n    /* \"contracts/demo2.sol\":1035:1204  constructor() public {\r... */\n  pop\n    /* \"contracts/demo2.sol\":1085:1086  6 */\n  0x06\n    /* \"contracts/demo2.sol\":1071:1078  rlpItem */\n  0x03\n    /* \"contracts/demo2.sol\":1071:1082  rlpItem.len */\n  0x00\n  add\n    /* \"contracts/demo2.sol\":1071:1086  rlpItem.len = 6 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/demo2.sol\":1118:1119  2 */\n  0x02\n    /* \"contracts/demo2.sol\":1101:1108  rlpItem */\n  0x03\n    /* \"contracts/demo2.sol\":1101:1115  rlpItem.memPtr */\n  0x01\n  add\n    /* \"contracts/demo2.sol\":1101:1119  rlpItem.memPtr = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/demo2.sol\":1150:1157  rlpItem */\n  0x03\n    /* \"contracts/demo2.sol\":1134:1142  iterator */\n  0x05\n    /* \"contracts/demo2.sol\":1134:1147  iterator.item */\n  0x00\n  add\n    /* \"contracts/demo2.sol\":1134:1157  iterator.item = rlpItem */\n  0x00\n  dup3\n  add\n  sload\n  dup2\n  0x00\n  add\n  sstore\n  0x01\n  dup3\n  add\n  sload\n  dup2\n  0x01\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"contracts/demo2.sol\":1191:1192  4 */\n  0x04\n    /* \"contracts/demo2.sol\":1172:1180  iterator */\n  0x05\n    /* \"contracts/demo2.sol\":1172:1188  iterator.nextPtr */\n  0x02\n  add\n    /* \"contracts/demo2.sol\":1172:1192  iterator.nextPtr = 4 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/demo2.sol\":81:9528  contract demo2 {\r... */\n  jump(tag_7)\ntag_2:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_9\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_8)\ntag_9:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_8\n  jumpi\n  swap2\n  dup3\n  add\ntag_10:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_10)\ntag_11:\ntag_8:\n  pop\n  swap1\n  pop\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n  swap1\n  jump\t// out\ntag_13:\n  tag_14\n  swap2\n  swap1\ntag_15:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_16\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_15)\ntag_16:\n  pop\n  swap1\n  jump\ntag_14:\n  swap1\n  jump\t// out\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_4887836e294a2761413359597244d307bbe3f94827f6160d9e1a399e00e2d1be 4e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f\ndata_c359735a342ece061e65ab7390d246d1e53ba5f24eea70d6201f1d4a7b2f3475 7364664e417364667364664c4548484a5347445348444a53484a53484a534844534a44484a4f4e47564f\n\nsub_0: assembly {\n        /* \"contracts/demo2.sol\":81:9528  contract demo2 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"contracts/demo2.sol\":81:9528  contract demo2 {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xe3a7fd75\n      gt\n      tag_10\n      jumpi\n      dup1\n      0xe3a7fd75\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xeaacd81e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfc26b0ab\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xfddcc148\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x0ff7af0f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9ffd85c4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa699fb03\n      eq\n      tag_5\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/demo2.sol\":1233:1333  function getDecodeData() public view returns(bool) {\r... */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      jump(tag_14)\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":107:176  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      jump(tag_18)\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":965:987  RLPItem public rlpItem */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap3\n      swap2\n      swap1\n      jump(tag_22)\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":263:310  bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\" */\n    tag_6:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      jump(tag_26)\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":2004:2113  function getEncodeData() public view returns(bytes memory) {\r... */\n    tag_7:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      jump(tag_30)\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":187:252  bytes public data3 = \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_8:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      jump(tag_18)\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":998:1022  Iterator public iterator */\n    tag_9:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap3\n      swap2\n      swap1\n      jump(tag_37)\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":1233:1333  function getDecodeData() public view returns(bool) {\r... */\n    tag_12:\n        /* \"contracts/demo2.sol\":1278:1282  bool */\n      0x00\n        /* \"contracts/demo2.sol\":1306:1321  isList(rlpItem) */\n      tag_39\n        /* \"contracts/demo2.sol\":1313:1320  rlpItem */\n      0x03\n        /* \"contracts/demo2.sol\":1306:1321  isList(rlpItem) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/demo2.sol\":1306:1312  isList */\n      tag_40\n        /* \"contracts/demo2.sol\":1306:1321  isList(rlpItem) */\n      jump\t// in\n    tag_39:\n        /* \"contracts/demo2.sol\":1299:1321  return isList(rlpItem) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":1233:1333  function getDecodeData() public view returns(bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/demo2.sol\":107:176  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_16:\n      0x00\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_41\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_42\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_41)\n    tag_42:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_43:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_43\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/demo2.sol\":965:987  RLPItem public rlpItem */\n    tag_20:\n      0x03\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/demo2.sol\":263:310  bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\" */\n    tag_24:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/demo2.sol\":2004:2113  function getEncodeData() public view returns(bytes memory) {\r... */\n    tag_28:\n        /* \"contracts/demo2.sol\":2049:2061  bytes memory */\n      0x60\n        /* \"contracts/demo2.sol\":2085:2101  toBytes(rlpItem) */\n      tag_45\n        /* \"contracts/demo2.sol\":2093:2100  rlpItem */\n      0x03\n        /* \"contracts/demo2.sol\":2085:2101  toBytes(rlpItem) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/demo2.sol\":2085:2092  toBytes */\n      tag_46\n        /* \"contracts/demo2.sol\":2085:2101  toBytes(rlpItem) */\n      jump\t// in\n    tag_45:\n        /* \"contracts/demo2.sol\":2078:2101  return toBytes(rlpItem) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":2004:2113  function getEncodeData() public view returns(bytes memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/demo2.sol\":187:252  bytes public data3 = \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_32:\n      0x01\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_47\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_48\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_47)\n    tag_48:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_49:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_49\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/demo2.sol\":998:1022  Iterator public iterator */\n    tag_35:\n      0x05\n      dup1\n      0x00\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/demo2.sol\":1345:1727  function isList(RLPItem memory item) internal pure returns (bool) {\r... */\n    tag_40:\n        /* \"contracts/demo2.sol\":1405:1409  bool */\n      0x00\n        /* \"contracts/demo2.sol\":1442:1443  0 */\n      dup1\n        /* \"contracts/demo2.sol\":1430:1434  item */\n      dup3\n        /* \"contracts/demo2.sol\":1430:1438  item.len */\n      0x00\n      add\n      mload\n        /* \"contracts/demo2.sol\":1430:1443  item.len == 0 */\n      eq\n        /* \"contracts/demo2.sol\":1426:1457  if (item.len == 0) return false */\n      iszero\n      tag_51\n      jumpi\n        /* \"contracts/demo2.sol\":1452:1457  false */\n      0x00\n        /* \"contracts/demo2.sol\":1445:1457  return false */\n      swap1\n      pop\n      jump(tag_50)\n        /* \"contracts/demo2.sol\":1426:1457  if (item.len == 0) return false */\n    tag_51:\n        /* \"contracts/demo2.sol\":1474:1485  uint8 byte0 */\n      0x00\n        /* \"contracts/demo2.sol\":1500:1511  uint memPtr */\n      dup1\n        /* \"contracts/demo2.sol\":1514:1518  item */\n      dup4\n        /* \"contracts/demo2.sol\":1514:1525  item.memPtr */\n      0x20\n      add\n      mload\n        /* \"contracts/demo2.sol\":1500:1525  uint memPtr = item.memPtr */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":1591:1597  memPtr */\n      dup1\n        /* \"contracts/demo2.sol\":1585:1598  mload(memPtr) */\n      mload\n        /* \"contracts/demo2.sol\":1582:1583  0 */\n      0x00\n        /* \"contracts/demo2.sol\":1577:1599  byte(0, mload(memPtr)) */\n      byte\n        /* \"contracts/demo2.sol\":1568:1599  byte0 := byte(0, mload(memPtr)) */\n      swap2\n      pop\n        /* \"contracts/demo2.sol\":573:577  0xc0 */\n      0xc0\n        /* \"contracts/demo2.sol\":1634:1658  byte0 < LIST_SHORT_START */\n      0xff\n      and\n        /* \"contracts/demo2.sol\":1634:1639  byte0 */\n      dup3\n        /* \"contracts/demo2.sol\":1634:1658  byte0 < LIST_SHORT_START */\n      0xff\n      and\n      lt\n        /* \"contracts/demo2.sol\":1630:1689  if (byte0 < LIST_SHORT_START)\r... */\n      iszero\n      tag_52\n      jumpi\n        /* \"contracts/demo2.sol\":1684:1689  false */\n      0x00\n        /* \"contracts/demo2.sol\":1677:1689  return false */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_50)\n        /* \"contracts/demo2.sol\":1630:1689  if (byte0 < LIST_SHORT_START)\r... */\n    tag_52:\n        /* \"contracts/demo2.sol\":1711:1715  true */\n      0x01\n        /* \"contracts/demo2.sol\":1704:1715  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/demo2.sol\":1345:1727  function isList(RLPItem memory item) internal pure returns (bool) {\r... */\n    tag_50:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/demo2.sol\":2386:2875  function toBytes(RLPItem memory item) internal pure returns (bytes memory) {\r... */\n    tag_46:\n        /* \"contracts/demo2.sol\":2447:2459  bytes memory */\n      0x60\n        /* \"contracts/demo2.sol\":2495:2496  0 */\n      0x00\n        /* \"contracts/demo2.sol\":2484:2488  item */\n      dup3\n        /* \"contracts/demo2.sol\":2484:2492  item.len */\n      0x00\n      add\n      mload\n        /* \"contracts/demo2.sol\":2484:2496  item.len > 0 */\n      gt\n        /* \"contracts/demo2.sol\":2476:2497  require(item.len > 0) */\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/demo2.sol\":2476:2497  require(item.len > 0) */\n    tag_54:\n        /* \"contracts/demo2.sol\":2514:2525  uint offset */\n      0x00\n        /* \"contracts/demo2.sol\":2528:2555  _payloadOffset(item.memPtr) */\n      tag_55\n        /* \"contracts/demo2.sol\":2543:2547  item */\n      dup4\n        /* \"contracts/demo2.sol\":2543:2554  item.memPtr */\n      0x20\n      add\n      mload\n        /* \"contracts/demo2.sol\":2528:2542  _payloadOffset */\n      tag_56\n        /* \"contracts/demo2.sol\":2528:2555  _payloadOffset(item.memPtr) */\n      jump\t// in\n    tag_55:\n        /* \"contracts/demo2.sol\":2514:2555  uint offset = _payloadOffset(item.memPtr) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":2570:2578  uint len */\n      0x00\n        /* \"contracts/demo2.sol\":2592:2598  offset */\n      dup2\n        /* \"contracts/demo2.sol\":2581:2585  item */\n      dup5\n        /* \"contracts/demo2.sol\":2581:2589  item.len */\n      0x00\n      add\n      mload\n        /* \"contracts/demo2.sol\":2581:2598  item.len - offset */\n      sub\n        /* \"contracts/demo2.sol\":2570:2598  uint len = item.len - offset */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":2628:2647  bytes memory result */\n      0x60\n        /* \"contracts/demo2.sol\":2660:2663  len */\n      dup2\n        /* \"contracts/demo2.sol\":2650:2664  new bytes(len) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_57\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:30   */\n      0x01\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:31   */\n      mul\n        /* \"--CODEGEN--\":124:128   */\n      dup1\n        /* \"--CODEGEN--\":108:122   */\n      calldatasize\n        /* \"--CODEGEN--\":100:106   */\n      dup4\n        /* \"--CODEGEN--\":87:129   */\n      calldatacopy\n        /* \"--CODEGEN--\":155:159   */\n      dup1\n        /* \"--CODEGEN--\":147:153   */\n      dup3\n        /* \"--CODEGEN--\":143:160   */\n      add\n        /* \"--CODEGEN--\":133:160   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:164   */\n      pop\n        /* \"contracts/demo2.sol\":2650:2664  new bytes(len) */\n      swap1\n      pop\n    tag_57:\n      pop\n        /* \"contracts/demo2.sol\":2628:2664  bytes memory result = new bytes(len) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":2681:2693  uint destPtr */\n      0x00\n        /* \"contracts/demo2.sol\":2757:2763  result */\n      dup2\n        /* \"contracts/demo2.sol\":2751:2755  0x20 */\n      0x20\n        /* \"contracts/demo2.sol\":2747:2764  add(0x20, result) */\n      add\n        /* \"contracts/demo2.sol\":2736:2764  destPtr := add(0x20, result) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":2795:2835  copy(item.memPtr + offset, destPtr, len) */\n      tag_58\n        /* \"contracts/demo2.sol\":2814:2820  offset */\n      dup5\n        /* \"contracts/demo2.sol\":2800:2804  item */\n      dup8\n        /* \"contracts/demo2.sol\":2800:2811  item.memPtr */\n      0x20\n      add\n      mload\n        /* \"contracts/demo2.sol\":2800:2820  item.memPtr + offset */\n      add\n        /* \"contracts/demo2.sol\":2822:2829  destPtr */\n      dup3\n        /* \"contracts/demo2.sol\":2831:2834  len */\n      dup6\n        /* \"contracts/demo2.sol\":2795:2799  copy */\n      tag_59\n        /* \"contracts/demo2.sol\":2795:2835  copy(item.memPtr + offset, destPtr, len) */\n      jump\t// in\n    tag_58:\n        /* \"contracts/demo2.sol\":2857:2863  result */\n      dup2\n        /* \"contracts/demo2.sol\":2850:2863  return result */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/demo2.sol\":2386:2875  function toBytes(RLPItem memory item) internal pure returns (bytes memory) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/demo2.sol\":8120:8723  function _payloadOffset(uint memPtr) private pure returns (uint) {\r... */\n    tag_56:\n        /* \"contracts/demo2.sol\":8179:8183  uint */\n      0x00\n        /* \"contracts/demo2.sol\":8200:8210  uint byte0 */\n      dup1\n        /* \"contracts/demo2.sol\":8276:8282  memPtr */\n      dup3\n        /* \"contracts/demo2.sol\":8270:8283  mload(memPtr) */\n      mload\n        /* \"contracts/demo2.sol\":8267:8268  0 */\n      0x00\n        /* \"contracts/demo2.sol\":8262:8284  byte(0, mload(memPtr)) */\n      byte\n        /* \"contracts/demo2.sol\":8253:8284  byte0 := byte(0, mload(memPtr)) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":459:463  0x80 */\n      0x80\n        /* \"contracts/demo2.sol\":8319:8345  byte0 < STRING_SHORT_START */\n      0xff\n      and\n        /* \"contracts/demo2.sol\":8319:8324  byte0 */\n      dup2\n        /* \"contracts/demo2.sol\":8319:8345  byte0 < STRING_SHORT_START */\n      lt\n        /* \"contracts/demo2.sol\":8315:8711  if (byte0 < STRING_SHORT_START)\r... */\n      iszero\n      tag_61\n      jumpi\n        /* \"contracts/demo2.sol\":8371:8372  0 */\n      0x00\n        /* \"contracts/demo2.sol\":8364:8372  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_60)\n        /* \"contracts/demo2.sol\":8315:8711  if (byte0 < STRING_SHORT_START)\r... */\n    tag_61:\n        /* \"contracts/demo2.sol\":516:520  0xb8 */\n      0xb8\n        /* \"contracts/demo2.sol\":8396:8421  byte0 < STRING_LONG_START */\n      0xff\n      and\n        /* \"contracts/demo2.sol\":8396:8401  byte0 */\n      dup2\n        /* \"contracts/demo2.sol\":8396:8421  byte0 < STRING_LONG_START */\n      lt\n        /* \"contracts/demo2.sol\":8396:8479  byte0 < STRING_LONG_START || (byte0 >= LIST_SHORT_START && byte0 < LIST_LONG_START) */\n      dup1\n      tag_63\n      jumpi\n      pop\n        /* \"contracts/demo2.sol\":573:577  0xc0 */\n      0xc0\n        /* \"contracts/demo2.sol\":8426:8451  byte0 >= LIST_SHORT_START */\n      0xff\n      and\n        /* \"contracts/demo2.sol\":8426:8431  byte0 */\n      dup2\n        /* \"contracts/demo2.sol\":8426:8451  byte0 >= LIST_SHORT_START */\n      lt\n      iszero\n        /* \"contracts/demo2.sol\":8426:8478  byte0 >= LIST_SHORT_START && byte0 < LIST_LONG_START */\n      dup1\n      iszero\n      tag_64\n      jumpi\n      pop\n        /* \"contracts/demo2.sol\":630:634  0xf8 */\n      0xf8\n        /* \"contracts/demo2.sol\":8455:8478  byte0 < LIST_LONG_START */\n      0xff\n      and\n        /* \"contracts/demo2.sol\":8455:8460  byte0 */\n      dup2\n        /* \"contracts/demo2.sol\":8455:8478  byte0 < LIST_LONG_START */\n      lt\n        /* \"contracts/demo2.sol\":8426:8478  byte0 >= LIST_SHORT_START && byte0 < LIST_LONG_START */\n    tag_64:\n        /* \"contracts/demo2.sol\":8396:8479  byte0 < STRING_LONG_START || (byte0 >= LIST_SHORT_START && byte0 < LIST_LONG_START) */\n    tag_63:\n        /* \"contracts/demo2.sol\":8392:8711  if (byte0 < STRING_LONG_START || (byte0 >= LIST_SHORT_START && byte0 < LIST_LONG_START))\r... */\n      iszero\n      tag_65\n      jumpi\n        /* \"contracts/demo2.sol\":8505:8506  1 */\n      0x01\n        /* \"contracts/demo2.sol\":8498:8506  return 1 */\n      swap2\n      pop\n      pop\n      jump(tag_60)\n        /* \"contracts/demo2.sol\":8392:8711  if (byte0 < STRING_LONG_START || (byte0 >= LIST_SHORT_START && byte0 < LIST_LONG_START))\r... */\n    tag_65:\n        /* \"contracts/demo2.sol\":573:577  0xc0 */\n      0xc0\n        /* \"contracts/demo2.sol\":8530:8554  byte0 < LIST_SHORT_START */\n      0xff\n      and\n        /* \"contracts/demo2.sol\":8530:8535  byte0 */\n      dup2\n        /* \"contracts/demo2.sol\":8530:8554  byte0 < LIST_SHORT_START */\n      lt\n        /* \"contracts/demo2.sol\":8526:8711  if (byte0 < LIST_SHORT_START)  // being explicit\r... */\n      iszero\n      tag_67\n      jumpi\n        /* \"contracts/demo2.sol\":8633:8634  1 */\n      0x01\n        /* \"contracts/demo2.sol\":8628:8629  1 */\n      dup1\n        /* \"contracts/demo2.sol\":516:520  0xb8 */\n      0xb8\n        /* \"contracts/demo2.sol\":8608:8629  STRING_LONG_START - 1 */\n      sub\n        /* \"contracts/demo2.sol\":8599:8630  byte0 - (STRING_LONG_START - 1) */\n      0xff\n      and\n        /* \"contracts/demo2.sol\":8599:8604  byte0 */\n      dup3\n        /* \"contracts/demo2.sol\":8599:8630  byte0 - (STRING_LONG_START - 1) */\n      sub\n        /* \"contracts/demo2.sol\":8599:8634  byte0 - (STRING_LONG_START - 1) + 1 */\n      add\n        /* \"contracts/demo2.sol\":8592:8634  return byte0 - (STRING_LONG_START - 1) + 1 */\n      swap2\n      pop\n      pop\n      jump(tag_60)\n        /* \"contracts/demo2.sol\":8526:8711  if (byte0 < LIST_SHORT_START)  // being explicit\r... */\n    tag_67:\n        /* \"contracts/demo2.sol\":8710:8711  1 */\n      0x01\n        /* \"contracts/demo2.sol\":8705:8706  1 */\n      dup1\n        /* \"contracts/demo2.sol\":630:634  0xf8 */\n      0xf8\n        /* \"contracts/demo2.sol\":8687:8706  LIST_LONG_START - 1 */\n      sub\n        /* \"contracts/demo2.sol\":8678:8707  byte0 - (LIST_LONG_START - 1) */\n      0xff\n      and\n        /* \"contracts/demo2.sol\":8678:8683  byte0 */\n      dup3\n        /* \"contracts/demo2.sol\":8678:8707  byte0 - (LIST_LONG_START - 1) */\n      sub\n        /* \"contracts/demo2.sol\":8678:8711  byte0 - (LIST_LONG_START - 1) + 1 */\n      add\n        /* \"contracts/demo2.sol\":8671:8711  return byte0 - (LIST_LONG_START - 1) + 1 */\n      swap2\n      pop\n      pop\n        /* \"contracts/demo2.sol\":8120:8723  function _payloadOffset(uint memPtr) private pure returns (uint) {\r... */\n    tag_60:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/demo2.sol\":8736:9521  function copy(uint src, uint dest, uint len) private pure {\r... */\n    tag_59:\n        /* \"contracts/demo2.sol\":8820:8821  0 */\n      0x00\n        /* \"contracts/demo2.sol\":8813:8816  len */\n      dup2\n        /* \"contracts/demo2.sol\":8813:8821  len == 0 */\n      eq\n        /* \"contracts/demo2.sol\":8809:8830  if (len == 0) return; */\n      iszero\n      tag_70\n      jumpi\n        /* \"contracts/demo2.sol\":8823:8830  return; */\n      jump(tag_69)\n        /* \"contracts/demo2.sol\":8809:8830  if (len == 0) return; */\n    tag_70:\n        /* \"contracts/demo2.sol\":8898:9123  for (; len >= WORD_SIZE; len -= WORD_SIZE) {\r... */\n    tag_71:\n        /* \"contracts/demo2.sol\":678:680  32 */\n      0x20\n        /* \"contracts/demo2.sol\":8905:8921  len >= WORD_SIZE */\n      0xff\n      and\n        /* \"contracts/demo2.sol\":8905:8908  len */\n      dup2\n        /* \"contracts/demo2.sol\":8905:8921  len >= WORD_SIZE */\n      lt\n        /* \"contracts/demo2.sol\":8898:9123  for (; len >= WORD_SIZE; len -= WORD_SIZE) {\r... */\n      tag_72\n      jumpi\n        /* \"contracts/demo2.sol\":9011:9014  src */\n      dup3\n        /* \"contracts/demo2.sol\":9005:9015  mload(src) */\n      mload\n        /* \"contracts/demo2.sol\":8999:9003  dest */\n      dup3\n        /* \"contracts/demo2.sol\":8992:9016  mstore(dest, mload(src)) */\n      mstore\n        /* \"contracts/demo2.sol\":678:680  32 */\n      0x20\n        /* \"contracts/demo2.sol\":9055:9071  src += WORD_SIZE */\n      0xff\n      and\n      dup4\n      add\n      swap3\n      pop\n        /* \"contracts/demo2.sol\":678:680  32 */\n      0x20\n        /* \"contracts/demo2.sol\":9090:9107  dest += WORD_SIZE */\n      0xff\n      and\n      dup3\n      add\n      swap2\n      pop\n        /* \"contracts/demo2.sol\":678:680  32 */\n      0x20\n        /* \"contracts/demo2.sol\":8923:8939  len -= WORD_SIZE */\n      0xff\n      and\n      dup2\n      sub\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":8898:9123  for (; len >= WORD_SIZE; len -= WORD_SIZE) {\r... */\n      jump(tag_71)\n    tag_72:\n        /* \"contracts/demo2.sol\":9224:9233  uint mask */\n      0x00\n        /* \"contracts/demo2.sol\":9263:9264  1 */\n      0x01\n        /* \"contracts/demo2.sol\":9256:9259  len */\n      dup3\n        /* \"contracts/demo2.sol\":678:680  32 */\n      0x20\n        /* \"contracts/demo2.sol\":9244:9259  WORD_SIZE - len */\n      0xff\n      and\n      sub\n        /* \"contracts/demo2.sol\":9236:9239  256 */\n      0x0100\n        /* \"contracts/demo2.sol\":9236:9260  256 ** (WORD_SIZE - len) */\n      exp\n        /* \"contracts/demo2.sol\":9236:9264  256 ** (WORD_SIZE - len) - 1 */\n      sub\n        /* \"contracts/demo2.sol\":9224:9264  uint mask = 256 ** (WORD_SIZE - len) - 1 */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":9342:9346  mask */\n      dup1\n        /* \"contracts/demo2.sol\":9338:9347  not(mask) */\n      not\n        /* \"contracts/demo2.sol\":9332:9335  src */\n      dup5\n        /* \"contracts/demo2.sol\":9326:9336  mload(src) */\n      mload\n        /* \"contracts/demo2.sol\":9322:9348  and(mload(src), not(mask)) */\n      and\n        /* \"contracts/demo2.sol\":9415:9419  mask */\n      dup2\n        /* \"contracts/demo2.sol\":9408:9412  dest */\n      dup5\n        /* \"contracts/demo2.sol\":9402:9413  mload(dest) */\n      mload\n        /* \"contracts/demo2.sol\":9398:9420  and(mload(dest), mask) */\n      and\n        /* \"contracts/demo2.sol\":9486:9493  srcpart */\n      dup2\n        /* \"contracts/demo2.sol\":9476:9484  destpart */\n      dup2\n        /* \"contracts/demo2.sol\":9473:9494  or(destpart, srcpart) */\n      or\n        /* \"contracts/demo2.sol\":9467:9471  dest */\n      dup6\n        /* \"contracts/demo2.sol\":9460:9495  mstore(dest, or(destpart, srcpart)) */\n      mstore\n        /* \"contracts/demo2.sol\":9288:9510  {\r... */\n      pop\n      pop\n      pop\n    tag_69:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":5:109   */\n    tag_75:\n        /* \"--CODEGEN--\":82:103   */\n      tag_77\n        /* \"--CODEGEN--\":97:102   */\n      dup2\n        /* \"--CODEGEN--\":82:103   */\n      jump(tag_78)\n    tag_77:\n        /* \"--CODEGEN--\":77:80   */\n      dup3\n        /* \"--CODEGEN--\":70:104   */\n      mstore\n        /* \"--CODEGEN--\":64:109   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":116:229   */\n    tag_79:\n        /* \"--CODEGEN--\":199:223   */\n      tag_81\n        /* \"--CODEGEN--\":217:222   */\n      dup2\n        /* \"--CODEGEN--\":199:223   */\n      jump(tag_82)\n    tag_81:\n        /* \"--CODEGEN--\":194:197   */\n      dup3\n        /* \"--CODEGEN--\":187:224   */\n      mstore\n        /* \"--CODEGEN--\":181:229   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":236:579   */\n    tag_83:\n      0x00\n        /* \"--CODEGEN--\":346:384   */\n      tag_85\n        /* \"--CODEGEN--\":378:383   */\n      dup3\n        /* \"--CODEGEN--\":346:384   */\n      jump(tag_86)\n    tag_85:\n        /* \"--CODEGEN--\":396:466   */\n      tag_87\n        /* \"--CODEGEN--\":459:465   */\n      dup2\n        /* \"--CODEGEN--\":454:457   */\n      dup6\n        /* \"--CODEGEN--\":396:466   */\n      jump(tag_88)\n    tag_87:\n        /* \"--CODEGEN--\":389:466   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":471:523   */\n      tag_89\n        /* \"--CODEGEN--\":516:522   */\n      dup2\n        /* \"--CODEGEN--\":511:514   */\n      dup6\n        /* \"--CODEGEN--\":504:508   */\n      0x20\n        /* \"--CODEGEN--\":497:502   */\n      dup7\n        /* \"--CODEGEN--\":493:509   */\n      add\n        /* \"--CODEGEN--\":471:523   */\n      jump(tag_90)\n    tag_89:\n        /* \"--CODEGEN--\":544:573   */\n      tag_91\n        /* \"--CODEGEN--\":566:572   */\n      dup2\n        /* \"--CODEGEN--\":544:573   */\n      jump(tag_92)\n    tag_91:\n        /* \"--CODEGEN--\":539:542   */\n      dup5\n        /* \"--CODEGEN--\":535:574   */\n      add\n        /* \"--CODEGEN--\":528:574   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":326:579   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":586:921   */\n    tag_93:\n      0x00\n        /* \"--CODEGEN--\":692:726   */\n      tag_95\n        /* \"--CODEGEN--\":720:725   */\n      dup3\n        /* \"--CODEGEN--\":692:726   */\n      jump(tag_96)\n    tag_95:\n        /* \"--CODEGEN--\":738:808   */\n      tag_97\n        /* \"--CODEGEN--\":801:807   */\n      dup2\n        /* \"--CODEGEN--\":796:799   */\n      dup6\n        /* \"--CODEGEN--\":738:808   */\n      jump(tag_88)\n    tag_97:\n        /* \"--CODEGEN--\":731:808   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":813:865   */\n      tag_98\n        /* \"--CODEGEN--\":858:864   */\n      dup2\n        /* \"--CODEGEN--\":853:856   */\n      dup6\n        /* \"--CODEGEN--\":846:850   */\n      0x20\n        /* \"--CODEGEN--\":839:844   */\n      dup7\n        /* \"--CODEGEN--\":835:851   */\n      add\n        /* \"--CODEGEN--\":813:865   */\n      jump(tag_90)\n    tag_98:\n        /* \"--CODEGEN--\":886:915   */\n      tag_99\n        /* \"--CODEGEN--\":908:914   */\n      dup2\n        /* \"--CODEGEN--\":886:915   */\n      jump(tag_92)\n    tag_99:\n        /* \"--CODEGEN--\":881:884   */\n      dup5\n        /* \"--CODEGEN--\":877:916   */\n      add\n        /* \"--CODEGEN--\":870:916   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":672:921   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":979:1448   */\n    tag_100:\n        /* \"--CODEGEN--\":1114:1118   */\n      0x40\n        /* \"--CODEGEN--\":1109:1112   */\n      dup3\n        /* \"--CODEGEN--\":1105:1119   */\n      add\n        /* \"--CODEGEN--\":1196:1200   */\n      0x00\n        /* \"--CODEGEN--\":1189:1194   */\n      dup3\n        /* \"--CODEGEN--\":1185:1201   */\n      add\n        /* \"--CODEGEN--\":1179:1202   */\n      mload\n        /* \"--CODEGEN--\":1208:1271   */\n      tag_102\n        /* \"--CODEGEN--\":1265:1269   */\n      0x00\n        /* \"--CODEGEN--\":1260:1263   */\n      dup6\n        /* \"--CODEGEN--\":1256:1270   */\n      add\n        /* \"--CODEGEN--\":1242:1254   */\n      dup3\n        /* \"--CODEGEN--\":1208:1271   */\n      jump(tag_103)\n    tag_102:\n        /* \"--CODEGEN--\":1134:1277   */\n      pop\n        /* \"--CODEGEN--\":1352:1356   */\n      0x20\n        /* \"--CODEGEN--\":1345:1350   */\n      dup3\n        /* \"--CODEGEN--\":1341:1357   */\n      add\n        /* \"--CODEGEN--\":1335:1358   */\n      mload\n        /* \"--CODEGEN--\":1364:1427   */\n      tag_104\n        /* \"--CODEGEN--\":1421:1425   */\n      0x20\n        /* \"--CODEGEN--\":1416:1419   */\n      dup6\n        /* \"--CODEGEN--\":1412:1426   */\n      add\n        /* \"--CODEGEN--\":1398:1410   */\n      dup3\n        /* \"--CODEGEN--\":1364:1427   */\n      jump(tag_103)\n    tag_104:\n        /* \"--CODEGEN--\":1287:1433   */\n      pop\n        /* \"--CODEGEN--\":1087:1448   */\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1455:1558   */\n    tag_103:\n        /* \"--CODEGEN--\":1528:1552   */\n      tag_106\n        /* \"--CODEGEN--\":1546:1551   */\n      dup2\n        /* \"--CODEGEN--\":1528:1552   */\n      jump(tag_107)\n    tag_106:\n        /* \"--CODEGEN--\":1523:1526   */\n      dup3\n        /* \"--CODEGEN--\":1516:1553   */\n      mstore\n        /* \"--CODEGEN--\":1510:1558   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1565:1678   */\n    tag_108:\n        /* \"--CODEGEN--\":1648:1672   */\n      tag_110\n        /* \"--CODEGEN--\":1666:1671   */\n      dup2\n        /* \"--CODEGEN--\":1648:1672   */\n      jump(tag_107)\n    tag_110:\n        /* \"--CODEGEN--\":1643:1646   */\n      dup3\n        /* \"--CODEGEN--\":1636:1673   */\n      mstore\n        /* \"--CODEGEN--\":1630:1678   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1685:1886   */\n    tag_14:\n      0x00\n        /* \"--CODEGEN--\":1797:1799   */\n      0x20\n        /* \"--CODEGEN--\":1786:1795   */\n      dup3\n        /* \"--CODEGEN--\":1782:1800   */\n      add\n        /* \"--CODEGEN--\":1774:1800   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1811:1876   */\n      tag_112\n        /* \"--CODEGEN--\":1873:1874   */\n      0x00\n        /* \"--CODEGEN--\":1862:1871   */\n      dup4\n        /* \"--CODEGEN--\":1858:1875   */\n      add\n        /* \"--CODEGEN--\":1849:1855   */\n      dup5\n        /* \"--CODEGEN--\":1811:1876   */\n      jump(tag_75)\n    tag_112:\n        /* \"--CODEGEN--\":1768:1886   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1893:2106   */\n    tag_26:\n      0x00\n        /* \"--CODEGEN--\":2011:2013   */\n      0x20\n        /* \"--CODEGEN--\":2000:2009   */\n      dup3\n        /* \"--CODEGEN--\":1996:2014   */\n      add\n        /* \"--CODEGEN--\":1988:2014   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":2025:2096   */\n      tag_114\n        /* \"--CODEGEN--\":2093:2094   */\n      0x00\n        /* \"--CODEGEN--\":2082:2091   */\n      dup4\n        /* \"--CODEGEN--\":2078:2095   */\n      add\n        /* \"--CODEGEN--\":2069:2075   */\n      dup5\n        /* \"--CODEGEN--\":2025:2096   */\n      jump(tag_79)\n    tag_114:\n        /* \"--CODEGEN--\":1982:2106   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":2113:2402   */\n    tag_18:\n      0x00\n        /* \"--CODEGEN--\":2245:2247   */\n      0x20\n        /* \"--CODEGEN--\":2234:2243   */\n      dup3\n        /* \"--CODEGEN--\":2230:2248   */\n      add\n        /* \"--CODEGEN--\":2222:2248   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":2295:2304   */\n      dup2\n        /* \"--CODEGEN--\":2289:2293   */\n      dup2\n        /* \"--CODEGEN--\":2285:2305   */\n      sub\n        /* \"--CODEGEN--\":2281:2282   */\n      0x00\n        /* \"--CODEGEN--\":2270:2279   */\n      dup4\n        /* \"--CODEGEN--\":2266:2283   */\n      add\n        /* \"--CODEGEN--\":2259:2306   */\n      mstore\n        /* \"--CODEGEN--\":2320:2392   */\n      tag_116\n        /* \"--CODEGEN--\":2387:2391   */\n      dup2\n        /* \"--CODEGEN--\":2378:2384   */\n      dup5\n        /* \"--CODEGEN--\":2320:2392   */\n      jump(tag_93)\n    tag_116:\n        /* \"--CODEGEN--\":2312:2392   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":2216:2402   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":2409:2706   */\n    tag_30:\n      0x00\n        /* \"--CODEGEN--\":2545:2547   */\n      0x20\n        /* \"--CODEGEN--\":2534:2543   */\n      dup3\n        /* \"--CODEGEN--\":2530:2548   */\n      add\n        /* \"--CODEGEN--\":2522:2548   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":2595:2604   */\n      dup2\n        /* \"--CODEGEN--\":2589:2593   */\n      dup2\n        /* \"--CODEGEN--\":2585:2605   */\n      sub\n        /* \"--CODEGEN--\":2581:2582   */\n      0x00\n        /* \"--CODEGEN--\":2570:2579   */\n      dup4\n        /* \"--CODEGEN--\":2566:2583   */\n      add\n        /* \"--CODEGEN--\":2559:2606   */\n      mstore\n        /* \"--CODEGEN--\":2620:2696   */\n      tag_118\n        /* \"--CODEGEN--\":2691:2695   */\n      dup2\n        /* \"--CODEGEN--\":2682:2688   */\n      dup5\n        /* \"--CODEGEN--\":2620:2696   */\n      jump(tag_83)\n    tag_118:\n        /* \"--CODEGEN--\":2612:2696   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":2516:2706   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":2713:3121   */\n    tag_37:\n      0x00\n        /* \"--CODEGEN--\":2901:2903   */\n      0x60\n        /* \"--CODEGEN--\":2890:2899   */\n      dup3\n        /* \"--CODEGEN--\":2886:2904   */\n      add\n        /* \"--CODEGEN--\":2878:2904   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":2915:3028   */\n      tag_120\n        /* \"--CODEGEN--\":3025:3026   */\n      0x00\n        /* \"--CODEGEN--\":3014:3023   */\n      dup4\n        /* \"--CODEGEN--\":3010:3027   */\n      add\n        /* \"--CODEGEN--\":3001:3007   */\n      dup6\n        /* \"--CODEGEN--\":2915:3028   */\n      jump(tag_100)\n    tag_120:\n        /* \"--CODEGEN--\":3039:3111   */\n      tag_121\n        /* \"--CODEGEN--\":3107:3109   */\n      0x40\n        /* \"--CODEGEN--\":3096:3105   */\n      dup4\n        /* \"--CODEGEN--\":3092:3110   */\n      add\n        /* \"--CODEGEN--\":3083:3089   */\n      dup5\n        /* \"--CODEGEN--\":3039:3111   */\n      jump(tag_108)\n    tag_121:\n        /* \"--CODEGEN--\":2872:3121   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":3128:3452   */\n    tag_22:\n      0x00\n        /* \"--CODEGEN--\":3274:3276   */\n      0x40\n        /* \"--CODEGEN--\":3263:3272   */\n      dup3\n        /* \"--CODEGEN--\":3259:3277   */\n      add\n        /* \"--CODEGEN--\":3251:3277   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":3288:3359   */\n      tag_123\n        /* \"--CODEGEN--\":3356:3357   */\n      0x00\n        /* \"--CODEGEN--\":3345:3354   */\n      dup4\n        /* \"--CODEGEN--\":3341:3358   */\n      add\n        /* \"--CODEGEN--\":3332:3338   */\n      dup6\n        /* \"--CODEGEN--\":3288:3359   */\n      jump(tag_108)\n    tag_123:\n        /* \"--CODEGEN--\":3370:3442   */\n      tag_124\n        /* \"--CODEGEN--\":3438:3440   */\n      0x20\n        /* \"--CODEGEN--\":3427:3436   */\n      dup4\n        /* \"--CODEGEN--\":3423:3441   */\n      add\n        /* \"--CODEGEN--\":3414:3420   */\n      dup5\n        /* \"--CODEGEN--\":3370:3442   */\n      jump(tag_108)\n    tag_124:\n        /* \"--CODEGEN--\":3245:3452   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":3459:3576   */\n    tag_96:\n      0x00\n        /* \"--CODEGEN--\":3548:3553   */\n      dup2\n        /* \"--CODEGEN--\":3542:3554   */\n      mload\n        /* \"--CODEGEN--\":3532:3554   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":3513:3576   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":3583:3704   */\n    tag_86:\n      0x00\n        /* \"--CODEGEN--\":3676:3681   */\n      dup2\n        /* \"--CODEGEN--\":3670:3682   */\n      mload\n        /* \"--CODEGEN--\":3660:3682   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":3641:3704   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":3712:3874   */\n    tag_88:\n      0x00\n        /* \"--CODEGEN--\":3826:3832   */\n      dup3\n        /* \"--CODEGEN--\":3821:3824   */\n      dup3\n        /* \"--CODEGEN--\":3814:3833   */\n      mstore\n        /* \"--CODEGEN--\":3863:3867   */\n      0x20\n        /* \"--CODEGEN--\":3858:3861   */\n      dup3\n        /* \"--CODEGEN--\":3854:3868   */\n      add\n        /* \"--CODEGEN--\":3839:3868   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":3807:3874   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":3882:3967   */\n    tag_78:\n      0x00\n        /* \"--CODEGEN--\":3955:3960   */\n      dup2\n        /* \"--CODEGEN--\":3948:3961   */\n      iszero\n        /* \"--CODEGEN--\":3941:3962   */\n      iszero\n        /* \"--CODEGEN--\":3930:3962   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":3924:3967   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":3974:4046   */\n    tag_82:\n      0x00\n        /* \"--CODEGEN--\":4036:4041   */\n      dup2\n        /* \"--CODEGEN--\":4025:4041   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":4019:4046   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":4053:4125   */\n    tag_107:\n      0x00\n        /* \"--CODEGEN--\":4115:4120   */\n      dup2\n        /* \"--CODEGEN--\":4104:4120   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":4098:4125   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":4133:4401   */\n    tag_90:\n        /* \"--CODEGEN--\":4198:4199   */\n      0x00\n        /* \"--CODEGEN--\":4205:4306   */\n    tag_132:\n        /* \"--CODEGEN--\":4219:4225   */\n      dup4\n        /* \"--CODEGEN--\":4216:4217   */\n      dup2\n        /* \"--CODEGEN--\":4213:4226   */\n      lt\n        /* \"--CODEGEN--\":4205:4306   */\n      iszero\n      tag_134\n      jumpi\n        /* \"--CODEGEN--\":4295:4296   */\n      dup1\n        /* \"--CODEGEN--\":4290:4293   */\n      dup3\n        /* \"--CODEGEN--\":4286:4297   */\n      add\n        /* \"--CODEGEN--\":4280:4298   */\n      mload\n        /* \"--CODEGEN--\":4276:4277   */\n      dup2\n        /* \"--CODEGEN--\":4271:4274   */\n      dup5\n        /* \"--CODEGEN--\":4267:4278   */\n      add\n        /* \"--CODEGEN--\":4260:4299   */\n      mstore\n        /* \"--CODEGEN--\":4241:4243   */\n      0x20\n        /* \"--CODEGEN--\":4238:4239   */\n      dup2\n        /* \"--CODEGEN--\":4234:4244   */\n      add\n        /* \"--CODEGEN--\":4229:4244   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":4205:4306   */\n      jump(tag_132)\n    tag_134:\n        /* \"--CODEGEN--\":4321:4327   */\n      dup4\n        /* \"--CODEGEN--\":4318:4319   */\n      dup2\n        /* \"--CODEGEN--\":4315:4328   */\n      gt\n        /* \"--CODEGEN--\":4312:4314   */\n      iszero\n      tag_135\n      jumpi\n        /* \"--CODEGEN--\":4386:4387   */\n      0x00\n        /* \"--CODEGEN--\":4377:4383   */\n      dup5\n        /* \"--CODEGEN--\":4372:4375   */\n      dup5\n        /* \"--CODEGEN--\":4368:4384   */\n      add\n        /* \"--CODEGEN--\":4361:4388   */\n      mstore\n        /* \"--CODEGEN--\":4312:4314   */\n    tag_135:\n        /* \"--CODEGEN--\":4182:4401   */\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":4409:4506   */\n    tag_92:\n      0x00\n        /* \"--CODEGEN--\":4497:4499   */\n      0x1f\n        /* \"--CODEGEN--\":4493:4500   */\n      not\n        /* \"--CODEGEN--\":4488:4490   */\n      0x1f\n        /* \"--CODEGEN--\":4481:4486   */\n      dup4\n        /* \"--CODEGEN--\":4477:4491   */\n      add\n        /* \"--CODEGEN--\":4473:4501   */\n      and\n        /* \"--CODEGEN--\":4463:4501   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":4457:4506   */\n      swap2\n      swap1\n      pop\n      jump\n\n    auxdata: 0xa264697066735822122007dc402866dd2950742648112b87878a0d86fc87183d3e7f30e205830c85f76864736f6c63430006040033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526040518060600160405280602e81526020016108f9602e9139600090805190602001906100329291906100d7565b506040518060600160405280602a8152602001610927602a9139600190805190602001906100619291906100d7565b507f4c45484f4e47564f776a6e66766a3377656838764b4a0000000000000000000060025534801561009257600080fd5b5060066003600001819055506002600360010181905550600360056000016000820154816000015560018201548160010155905050600460056002018190555061017c565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061011857805160ff1916838001178555610146565b82800160010185558215610146579182015b8281111561014557825182559160200191906001019061012a565b5b5090506101539190610157565b5090565b61017991905b8082111561017557600081600090555060010161015d565b5090565b90565b61076e8061018b6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063e3a7fd751161005b578063e3a7fd75146100dd578063eaacd81e146100fb578063fc26b0ab14610119578063fddcc148146101375761007d565b80630ff7af0f146100825780639ffd85c4146100a0578063a699fb03146100be575b600080fd5b61008a610156565b60405161009791906105e1565b60405180910390f35b6100a8610186565b6040516100b59190610617565b60405180910390f35b6100c6610224565b6040516100d4929190610684565b60405180910390f35b6100e5610236565b6040516100f291906105fc565b60405180910390f35b61010361023c565b6040516101109190610639565b60405180910390f35b61012161026c565b60405161012e9190610617565b60405180910390f35b61013f61030a565b60405161014d92919061065b565b60405180910390f35b600061018160036040518060400160405290816000820154815260200160018201548152505061033a565b905090565b60008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561021c5780601f106101f15761010080835404028352916020019161021c565b820191906000526020600020905b8154815290600101906020018083116101ff57829003601f168201915b505050505081565b60038060000154908060010154905082565b60025481565b6060610267600360405180604001604052908160008201548152602001600182015481525050610388565b905090565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b505050505081565b60058060000160405180604001604052908160008201548152602001600182015481525050908060020154905082565b600080826000015114156103515760009050610383565b60008083602001519050805160001a915060c060ff168260ff16101561037c57600092505050610383565b6001925050505b919050565b6060600082600001511161039b57600080fd5b60006103aa8360200151610414565b905060008184600001510390506060816040519080825280601f01601f1916602001820160405280156103ec5781602001600182028036833780820191505090505b509050600081602001905061040884876020015101828561049d565b81945050505050919050565b600080825160001a9050608060ff16811015610434576000915050610498565b60b860ff16811080610459575060c060ff168110158015610458575060f860ff1681105b5b15610468576001915050610498565b60c060ff168110156104885760018060b80360ff16820301915050610498565b60018060f80360ff168203019150505b919050565b60008114156104ab576104ff565b5b602060ff1681106104db5782518252602060ff1683019250602060ff1682019150602060ff16810390506104ac565b6000600182602060ff16036101000a03905080198451168184511681811785525050505b505050565b61050d816106d4565b82525050565b61051c816106e0565b82525050565b600061052d826106b8565b61053781856106c3565b93506105478185602086016106f4565b61055081610727565b840191505092915050565b6000610566826106ad565b61057081856106c3565b93506105808185602086016106f4565b61058981610727565b840191505092915050565b6040820160008201516105aa60008501826105c3565b5060208201516105bd60208501826105c3565b50505050565b6105cc816106ea565b82525050565b6105db816106ea565b82525050565b60006020820190506105f66000830184610504565b92915050565b60006020820190506106116000830184610513565b92915050565b60006020820190508181036000830152610631818461055b565b905092915050565b600060208201905081810360008301526106538184610522565b905092915050565b60006060820190506106706000830185610594565b61067d60408301846105d2565b9392505050565b600060408201905061069960008301856105d2565b6106a660208301846105d2565b9392505050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b60008115159050919050565b6000819050919050565b6000819050919050565b60005b838110156107125780820151818401526020810190506106f7565b83811115610721576000848401525b50505050565b6000601f19601f830116905091905056fea264697066735822122007dc402866dd2950742648112b87878a0d86fc87183d3e7f30e205830c85f76864736f6c634300060400334e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f7364664e417364667364664c4548484a5347445348444a53484a53484a534844534a44484a4f4e47564f",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8F9 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x32 SWAP3 SWAP2 SWAP1 PUSH2 0xD7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x927 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x61 SWAP3 SWAP2 SWAP1 PUSH2 0xD7 JUMP JUMPDEST POP PUSH32 0x4C45484F4E47564F776A6E66766A3377656838764B4A00000000000000000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 PUSH1 0x3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x5 PUSH1 0x0 ADD PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x4 PUSH1 0x5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x17C JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x118 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x146 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x146 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x145 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x12A JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x157 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x179 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x175 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x15D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x76E DUP1 PUSH2 0x18B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE3A7FD75 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xE3A7FD75 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xEAACD81E EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xFC26B0AB EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xFDDCC148 EQ PUSH2 0x137 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0xFF7AF0F EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x9FFD85C4 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA699FB03 EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x156 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH2 0x186 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD4 SWAP3 SWAP2 SWAP1 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE5 PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x103 PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH2 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH2 0x30A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP3 SWAP2 SWAP1 PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x181 PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x33A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x21C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x21C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x267 PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x388 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x5 DUP1 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x383 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 MLOAD PUSH1 0x0 BYTE SWAP2 POP PUSH1 0xC0 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x383 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD GT PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3AA DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x414 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH1 0x0 ADD MLOAD SUB SWAP1 POP PUSH1 0x60 DUP2 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3EC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD SWAP1 POP PUSH2 0x408 DUP5 DUP8 PUSH1 0x20 ADD MLOAD ADD DUP3 DUP6 PUSH2 0x49D JUMP JUMPDEST DUP2 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x80 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x498 JUMP JUMPDEST PUSH1 0xB8 PUSH1 0xFF AND DUP2 LT DUP1 PUSH2 0x459 JUMPI POP PUSH1 0xC0 PUSH1 0xFF AND DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x458 JUMPI POP PUSH1 0xF8 PUSH1 0xFF AND DUP2 LT JUMPDEST JUMPDEST ISZERO PUSH2 0x468 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x498 JUMP JUMPDEST PUSH1 0xC0 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0x488 JUMPI PUSH1 0x1 DUP1 PUSH1 0xB8 SUB PUSH1 0xFF AND DUP3 SUB ADD SWAP2 POP POP PUSH2 0x498 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xF8 SUB PUSH1 0xFF AND DUP3 SUB ADD SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x4AB JUMPI PUSH2 0x4FF JUMP JUMPDEST JUMPDEST PUSH1 0x20 PUSH1 0xFF AND DUP2 LT PUSH2 0x4DB JUMPI DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 PUSH1 0xFF AND DUP4 ADD SWAP3 POP PUSH1 0x20 PUSH1 0xFF AND DUP3 ADD SWAP2 POP PUSH1 0x20 PUSH1 0xFF AND DUP2 SUB SWAP1 POP PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0x20 PUSH1 0xFF AND SUB PUSH2 0x100 EXP SUB SWAP1 POP DUP1 NOT DUP5 MLOAD AND DUP2 DUP5 MLOAD AND DUP2 DUP2 OR DUP6 MSTORE POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x50D DUP2 PUSH2 0x6D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x51C DUP2 PUSH2 0x6E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52D DUP3 PUSH2 0x6B8 JUMP JUMPDEST PUSH2 0x537 DUP2 DUP6 PUSH2 0x6C3 JUMP JUMPDEST SWAP4 POP PUSH2 0x547 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH2 0x550 DUP2 PUSH2 0x727 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x566 DUP3 PUSH2 0x6AD JUMP JUMPDEST PUSH2 0x570 DUP2 DUP6 PUSH2 0x6C3 JUMP JUMPDEST SWAP4 POP PUSH2 0x580 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH2 0x589 DUP2 PUSH2 0x727 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x5AA PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x5C3 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x5BD PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x5C3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5CC DUP2 PUSH2 0x6EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5DB DUP2 PUSH2 0x6EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5F6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x504 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x611 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x513 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x631 DUP2 DUP5 PUSH2 0x55B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x653 DUP2 DUP5 PUSH2 0x522 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x670 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x594 JUMP JUMPDEST PUSH2 0x67D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x5D2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x699 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x6A6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5D2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x712 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6F7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x721 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0xDC BLOCKHASH 0x28 PUSH7 0xDD295074264811 0x2B DUP8 DUP8 DUP11 0xD DUP7 0xFC DUP8 XOR RETURNDATASIZE RETURNDATACOPY PUSH32 0x30E205830C85F76864736F6C634300060400334E414C4548484A534744534447 0x48 0x4A MSTORE8 DIFFICULTY 0x48 MSTORE8 SSTORE 0x48 DIFFICULTY 0x4A MSTORE8 0x48 DIFFICULTY 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 DIFFICULTY MSTORE8 0x4A DIFFICULTY 0x48 0x4A 0x4F 0x4E SELFBALANCE JUMP 0x4F PUSH20 0x64664E417364667364664C4548484A5347445348 DIFFICULTY 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 DIFFICULTY MSTORE8 0x4A DIFFICULTY 0x48 0x4A 0x4F 0x4E SELFBALANCE JUMP 0x4F ",
							"sourceMap": "81:9447:0:-:0;;;107:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;187:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;263:47;;;1035:169;5:9:-1;2:2;;;27:1;24;17:12;2:2;1035:169:0;1085:1;1071:7;:11;;:15;;;;1118:1;1101:7;:14;;:18;;;;1150:7;1134:8;:13;;:23;;;;;;;;;;;;;;;;;;;1191:1;1172:8;:16;;:20;;;;81:9447;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c8063e3a7fd751161005b578063e3a7fd75146100dd578063eaacd81e146100fb578063fc26b0ab14610119578063fddcc148146101375761007d565b80630ff7af0f146100825780639ffd85c4146100a0578063a699fb03146100be575b600080fd5b61008a610156565b60405161009791906105e1565b60405180910390f35b6100a8610186565b6040516100b59190610617565b60405180910390f35b6100c6610224565b6040516100d4929190610684565b60405180910390f35b6100e5610236565b6040516100f291906105fc565b60405180910390f35b61010361023c565b6040516101109190610639565b60405180910390f35b61012161026c565b60405161012e9190610617565b60405180910390f35b61013f61030a565b60405161014d92919061065b565b60405180910390f35b600061018160036040518060400160405290816000820154815260200160018201548152505061033a565b905090565b60008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561021c5780601f106101f15761010080835404028352916020019161021c565b820191906000526020600020905b8154815290600101906020018083116101ff57829003601f168201915b505050505081565b60038060000154908060010154905082565b60025481565b6060610267600360405180604001604052908160008201548152602001600182015481525050610388565b905090565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b505050505081565b60058060000160405180604001604052908160008201548152602001600182015481525050908060020154905082565b600080826000015114156103515760009050610383565b60008083602001519050805160001a915060c060ff168260ff16101561037c57600092505050610383565b6001925050505b919050565b6060600082600001511161039b57600080fd5b60006103aa8360200151610414565b905060008184600001510390506060816040519080825280601f01601f1916602001820160405280156103ec5781602001600182028036833780820191505090505b509050600081602001905061040884876020015101828561049d565b81945050505050919050565b600080825160001a9050608060ff16811015610434576000915050610498565b60b860ff16811080610459575060c060ff168110158015610458575060f860ff1681105b5b15610468576001915050610498565b60c060ff168110156104885760018060b80360ff16820301915050610498565b60018060f80360ff168203019150505b919050565b60008114156104ab576104ff565b5b602060ff1681106104db5782518252602060ff1683019250602060ff1682019150602060ff16810390506104ac565b6000600182602060ff16036101000a03905080198451168184511681811785525050505b505050565b61050d816106d4565b82525050565b61051c816106e0565b82525050565b600061052d826106b8565b61053781856106c3565b93506105478185602086016106f4565b61055081610727565b840191505092915050565b6000610566826106ad565b61057081856106c3565b93506105808185602086016106f4565b61058981610727565b840191505092915050565b6040820160008201516105aa60008501826105c3565b5060208201516105bd60208501826105c3565b50505050565b6105cc816106ea565b82525050565b6105db816106ea565b82525050565b60006020820190506105f66000830184610504565b92915050565b60006020820190506106116000830184610513565b92915050565b60006020820190508181036000830152610631818461055b565b905092915050565b600060208201905081810360008301526106538184610522565b905092915050565b60006060820190506106706000830185610594565b61067d60408301846105d2565b9392505050565b600060408201905061069960008301856105d2565b6106a660208301846105d2565b9392505050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b60008115159050919050565b6000819050919050565b6000819050919050565b60005b838110156107125780820151818401526020810190506106f7565b83811115610721576000848401525b50505050565b6000601f19601f830116905091905056fea264697066735822122007dc402866dd2950742648112b87878a0d86fc87183d3e7f30e205830c85f76864736f6c63430006040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE3A7FD75 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xE3A7FD75 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xEAACD81E EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xFC26B0AB EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xFDDCC148 EQ PUSH2 0x137 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0xFF7AF0F EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x9FFD85C4 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA699FB03 EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x156 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH2 0x186 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD4 SWAP3 SWAP2 SWAP1 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE5 PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x103 PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH2 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH2 0x30A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP3 SWAP2 SWAP1 PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x181 PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x33A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x21C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x21C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x267 PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x388 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x5 DUP1 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD MLOAD EQ ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x383 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 MLOAD PUSH1 0x0 BYTE SWAP2 POP PUSH1 0xC0 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x383 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD GT PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3AA DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x414 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH1 0x0 ADD MLOAD SUB SWAP1 POP PUSH1 0x60 DUP2 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3EC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD SWAP1 POP PUSH2 0x408 DUP5 DUP8 PUSH1 0x20 ADD MLOAD ADD DUP3 DUP6 PUSH2 0x49D JUMP JUMPDEST DUP2 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x80 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x498 JUMP JUMPDEST PUSH1 0xB8 PUSH1 0xFF AND DUP2 LT DUP1 PUSH2 0x459 JUMPI POP PUSH1 0xC0 PUSH1 0xFF AND DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x458 JUMPI POP PUSH1 0xF8 PUSH1 0xFF AND DUP2 LT JUMPDEST JUMPDEST ISZERO PUSH2 0x468 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x498 JUMP JUMPDEST PUSH1 0xC0 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0x488 JUMPI PUSH1 0x1 DUP1 PUSH1 0xB8 SUB PUSH1 0xFF AND DUP3 SUB ADD SWAP2 POP POP PUSH2 0x498 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xF8 SUB PUSH1 0xFF AND DUP3 SUB ADD SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x4AB JUMPI PUSH2 0x4FF JUMP JUMPDEST JUMPDEST PUSH1 0x20 PUSH1 0xFF AND DUP2 LT PUSH2 0x4DB JUMPI DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 PUSH1 0xFF AND DUP4 ADD SWAP3 POP PUSH1 0x20 PUSH1 0xFF AND DUP3 ADD SWAP2 POP PUSH1 0x20 PUSH1 0xFF AND DUP2 SUB SWAP1 POP PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0x20 PUSH1 0xFF AND SUB PUSH2 0x100 EXP SUB SWAP1 POP DUP1 NOT DUP5 MLOAD AND DUP2 DUP5 MLOAD AND DUP2 DUP2 OR DUP6 MSTORE POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x50D DUP2 PUSH2 0x6D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x51C DUP2 PUSH2 0x6E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52D DUP3 PUSH2 0x6B8 JUMP JUMPDEST PUSH2 0x537 DUP2 DUP6 PUSH2 0x6C3 JUMP JUMPDEST SWAP4 POP PUSH2 0x547 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH2 0x550 DUP2 PUSH2 0x727 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x566 DUP3 PUSH2 0x6AD JUMP JUMPDEST PUSH2 0x570 DUP2 DUP6 PUSH2 0x6C3 JUMP JUMPDEST SWAP4 POP PUSH2 0x580 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x6F4 JUMP JUMPDEST PUSH2 0x589 DUP2 PUSH2 0x727 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x5AA PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x5C3 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x5BD PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x5C3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5CC DUP2 PUSH2 0x6EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5DB DUP2 PUSH2 0x6EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5F6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x504 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x611 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x513 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x631 DUP2 DUP5 PUSH2 0x55B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x653 DUP2 DUP5 PUSH2 0x522 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x670 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x594 JUMP JUMPDEST PUSH2 0x67D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x5D2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x699 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x6A6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5D2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x712 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6F7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x721 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0xDC BLOCKHASH 0x28 PUSH7 0xDD295074264811 0x2B DUP8 DUP8 DUP11 0xD DUP7 0xFC DUP8 XOR RETURNDATASIZE RETURNDATACOPY PUSH32 0x30E205830C85F76864736F6C6343000604003300000000000000000000000000 ",
							"sourceMap": "81:9447:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;81:9447:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;1233:100:0;;;:::i;:::-;;;;;;;;;;;;;;;;107:69;;;:::i;:::-;;;;;;;;;;;;;;;;965:22;;;:::i;:::-;;;;;;;;;;;;;;;;;263:47;;;:::i;:::-;;;;;;;;;;;;;;;;2004:109;;;:::i;:::-;;;;;;;;;;;;;;;;187:65;;;:::i;:::-;;;;;;;;;;;;;;;;998:24;;;:::i;:::-;;;;;;;;;;;;;;;;;1233:100;1278:4;1306:15;1313:7;1306:15;;;;;;;;;;;;;;;;;;;;;;;;;:6;:15::i;:::-;1299:22;;1233:100;:::o;107:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;965:22::-;;;;;;;;;;;;;;:::o;263:47::-;;;;:::o;2004:109::-;2049:12;2085:16;2093:7;2085:16;;;;;;;;;;;;;;;;;;;;;;;;;:7;:16::i;:::-;2078:23;;2004:109;:::o;187:65::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;998:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1345:382::-;1405:4;1442:1;1430:4;:8;;;:13;1426:31;;;1452:5;1445:12;;;;1426:31;1474:11;1500;1514:4;:11;;;1500:25;;1591:6;1585:13;1582:1;1577:22;1568:31;;573:4;1634:24;;:5;:24;;;1630:59;;;1684:5;1677:12;;;;;;1630:59;1711:4;1704:11;;;;1345:382;;;;:::o;2386:489::-;2447:12;2495:1;2484:4;:8;;;:12;2476:21;;12:1:-1;9;2:12;2476:21:0;2514:11;2528:27;2543:4;:11;;;2528:14;:27::i;:::-;2514:41;;2570:8;2592:6;2581:4;:8;;;:17;2570:28;;2628:19;2660:3;2650:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;124:4;108:14;100:6;87:42;155:4;147:6;143:17;133:27;;0:164;2650:14:0;;;;2628:36;;2681:12;2757:6;2751:4;2747:17;2736:28;;2795:40;2814:6;2800:4;:11;;;:20;2822:7;2831:3;2795:4;:40::i;:::-;2857:6;2850:13;;;;;;2386:489;;;:::o;8120:603::-;8179:4;8200:10;8276:6;8270:13;8267:1;8262:22;8253:31;;459:4;8319:26;;:5;:26;8315:396;;;8371:1;8364:8;;;;;8315:396;516:4;8396:25;;:5;:25;:83;;;;573:4;8426:25;;:5;:25;;:52;;;;;630:4;8455:23;;:5;:23;8426:52;8396:83;8392:319;;;8505:1;8498:8;;;;;8392:319;573:4;8530:24;;:5;:24;8526:185;;;8633:1;8628;516:4;8608:21;8599:31;;:5;:31;:35;8592:42;;;;;8526:185;8710:1;8705;630:4;8687:19;8678:29;;:5;:29;:33;8671:40;;;8120:603;;;;:::o;8736:785::-;8820:1;8813:3;:8;8809:21;;;8823:7;;8809:21;8898:225;678:2;8905:16;;:3;:16;8898:225;;9011:3;9005:10;8999:4;8992:24;678:2;9055:16;;;;;;678:2;9090:17;;;;;;678:2;8923:16;;;;;;8898:225;;;9224:9;9263:1;9256:3;678:2;9244:15;;;9236:3;:24;:28;9224:40;;9342:4;9338:9;9332:3;9326:10;9322:26;9415:4;9408;9402:11;9398:22;9486:7;9476:8;9473:21;9467:4;9460:35;9288:222;;;;;;;:::o;5:104:-1:-;82:21;97:5;82:21;;;77:3;70:34;64:45;;;116:113;199:24;217:5;199:24;;;194:3;187:37;181:48;;;236:343;;346:38;378:5;346:38;;;396:70;459:6;454:3;396:70;;;389:77;;471:52;516:6;511:3;504:4;497:5;493:16;471:52;;;544:29;566:6;544:29;;;539:3;535:39;528:46;;326:253;;;;;;586:335;;692:34;720:5;692:34;;;738:70;801:6;796:3;738:70;;;731:77;;813:52;858:6;853:3;846:4;839:5;835:16;813:52;;;886:29;908:6;886:29;;;881:3;877:39;870:46;;672:249;;;;;;979:469;1114:4;1109:3;1105:14;1196:4;1189:5;1185:16;1179:23;1208:63;1265:4;1260:3;1256:14;1242:12;1208:63;;;1134:143;1352:4;1345:5;1341:16;1335:23;1364:63;1421:4;1416:3;1412:14;1398:12;1364:63;;;1287:146;1087:361;;;;1455:103;1528:24;1546:5;1528:24;;;1523:3;1516:37;1510:48;;;1565:113;1648:24;1666:5;1648:24;;;1643:3;1636:37;1630:48;;;1685:201;;1797:2;1786:9;1782:18;1774:26;;1811:65;1873:1;1862:9;1858:17;1849:6;1811:65;;;1768:118;;;;;1893:213;;2011:2;2000:9;1996:18;1988:26;;2025:71;2093:1;2082:9;2078:17;2069:6;2025:71;;;1982:124;;;;;2113:289;;2245:2;2234:9;2230:18;2222:26;;2295:9;2289:4;2285:20;2281:1;2270:9;2266:17;2259:47;2320:72;2387:4;2378:6;2320:72;;;2312:80;;2216:186;;;;;2409:297;;2545:2;2534:9;2530:18;2522:26;;2595:9;2589:4;2585:20;2581:1;2570:9;2566:17;2559:47;2620:76;2691:4;2682:6;2620:76;;;2612:84;;2516:190;;;;;2713:408;;2901:2;2890:9;2886:18;2878:26;;2915:113;3025:1;3014:9;3010:17;3001:6;2915:113;;;3039:72;3107:2;3096:9;3092:18;3083:6;3039:72;;;2872:249;;;;;;3128:324;;3274:2;3263:9;3259:18;3251:26;;3288:71;3356:1;3345:9;3341:17;3332:6;3288:71;;;3370:72;3438:2;3427:9;3423:18;3414:6;3370:72;;;3245:207;;;;;;3459:117;;3548:5;3542:12;3532:22;;3513:63;;;;3583:121;;3676:5;3670:12;3660:22;;3641:63;;;;3712:162;;3826:6;3821:3;3814:19;3863:4;3858:3;3854:14;3839:29;;3807:67;;;;;3882:85;;3955:5;3948:13;3941:21;3930:32;;3924:43;;;;3974:72;;4036:5;4025:16;;4019:27;;;;4053:72;;4115:5;4104:16;;4098:27;;;;4133:268;4198:1;4205:101;4219:6;4216:1;4213:13;4205:101;;;4295:1;4290:3;4286:11;4280:18;4276:1;4271:3;4267:11;4260:39;4241:2;4238:1;4234:10;4229:15;;4205:101;;;4321:6;4318:1;4315:13;4312:2;;;4386:1;4377:6;4372:3;4368:16;4361:27;4312:2;4182:219;;;;;4409:97;;4497:2;4493:7;4488:2;4481:5;4477:14;4473:28;4463:38;;4457:49;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "380400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"data1()": "infinite",
								"data2()": "1129",
								"data3()": "infinite",
								"getDecodeData()": "infinite",
								"getEncodeData()": "infinite",
								"iterator()": "infinite",
								"rlpItem()": "infinite"
							},
							"internal": {
								"_itemLength(uint256)": "infinite",
								"_payloadOffset(uint256)": "infinite",
								"copy(uint256,uint256,uint256)": "infinite",
								"hasNext(struct demo2.Iterator memory)": "infinite",
								"isList(struct demo2.RLPItem memory)": "infinite",
								"next(struct demo2.Iterator memory)": "infinite",
								"numItems(struct demo2.RLPItem memory)": "infinite",
								"toAddress(struct demo2.RLPItem memory)": "infinite",
								"toBoolean(struct demo2.RLPItem memory)": "infinite",
								"toBytes(struct demo2.RLPItem memory)": "infinite",
								"toRLPItem(bytes memory)": "infinite",
								"toRlpBytes(struct demo2.RLPItem memory)": "infinite",
								"toUint(struct demo2.RLPItem memory)": "infinite",
								"toUintStrict(struct demo2.RLPItem memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "2E"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH data",
									"source": 0,
									"value": "4887836E294A2761413359597244D307BBE3F94827F6160D9E1A399E00E2D1BE"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "2E"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "2A"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH data",
									"source": 0,
									"value": "C359735A342ECE061E65AB7390D246D1E53BA5F24EEA70D6201F1D4A7B2F3475"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "2A"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 263,
									"end": 310,
									"name": "PUSH",
									"source": 0,
									"value": "4C45484F4E47564F776A6E66766A3377656838764B4A00000000000000000000"
								},
								{
									"begin": 263,
									"end": 310,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 263,
									"end": 310,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1035,
									"end": 1204,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1035,
									"end": 1204,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1085,
									"end": 1086,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1071,
									"end": 1078,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1071,
									"end": 1082,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1071,
									"end": 1082,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1071,
									"end": 1086,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1071,
									"end": 1086,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1071,
									"end": 1086,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1071,
									"end": 1086,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1118,
									"end": 1119,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1101,
									"end": 1108,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1101,
									"end": 1115,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1101,
									"end": 1115,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1101,
									"end": 1119,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1101,
									"end": 1119,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1101,
									"end": 1119,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1101,
									"end": 1119,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1150,
									"end": 1157,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1134,
									"end": 1142,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1134,
									"end": 1157,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1134,
									"end": 1157,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1134,
									"end": 1157,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1134,
									"end": 1157,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1134,
									"end": 1157,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1134,
									"end": 1157,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1134,
									"end": 1157,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1134,
									"end": 1157,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1134,
									"end": 1157,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1134,
									"end": 1157,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1134,
									"end": 1157,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1134,
									"end": 1157,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1134,
									"end": 1157,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1134,
									"end": 1157,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1134,
									"end": 1157,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1134,
									"end": 1157,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1134,
									"end": 1157,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1134,
									"end": 1157,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1134,
									"end": 1157,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1191,
									"end": 1192,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1172,
									"end": 1180,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1172,
									"end": 1188,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1172,
									"end": 1188,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1172,
									"end": 1192,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1172,
									"end": 1192,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1172,
									"end": 1192,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1172,
									"end": 1192,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 9528,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122007dc402866dd2950742648112b87878a0d86fc87183d3e7f30e205830c85f76864736f6c63430006040033",
									".code": [
										{
											"begin": 81,
											"end": 9528,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "PUSH",
											"source": 0,
											"value": "E3A7FD75"
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "PUSH",
											"source": 0,
											"value": "E3A7FD75"
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "PUSH",
											"source": 0,
											"value": "EAACD81E"
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "PUSH",
											"source": 0,
											"value": "FC26B0AB"
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "PUSH",
											"source": 0,
											"value": "FDDCC148"
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "PUSH",
											"source": 0,
											"value": "FF7AF0F"
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "PUSH",
											"source": 0,
											"value": "9FFD85C4"
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "PUSH",
											"source": 0,
											"value": "A699FB03"
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 81,
											"end": 9528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 965,
											"end": 987,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 965,
											"end": 987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 965,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 965,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 965,
											"end": 987,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 965,
											"end": 987,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 965,
											"end": 987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 965,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 965,
											"end": 987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 965,
											"end": 987,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 965,
											"end": 987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 965,
											"end": 987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 965,
											"end": 987,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 965,
											"end": 987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 965,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 965,
											"end": 987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 987,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 965,
											"end": 987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 987,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1313,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1333,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 965,
											"end": 987,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 965,
											"end": 987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 965,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 965,
											"end": 987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 987,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 987,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 965,
											"end": 987,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 987,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 965,
											"end": 987,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 965,
											"end": 987,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2093,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2085,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2078,
											"end": 2101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2113,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1022,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1345,
											"end": 1727,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 1443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1434,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1430,
											"end": 1438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1426,
											"end": 1457,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1426,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1426,
											"end": 1457,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1445,
											"end": 1457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1445,
											"end": 1457,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1426,
											"end": 1457,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1426,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1474,
											"end": 1485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 1511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1518,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1525,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1514,
											"end": 1525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1525,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1591,
											"end": 1597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1599,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1568,
											"end": 1599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 573,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 1634,
											"end": 1658,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1634,
											"end": 1658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1639,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1658,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1634,
											"end": 1658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1658,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1689,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1630,
											"end": 1689,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1689,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1677,
											"end": 1689,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1689,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1630,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1711,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1704,
											"end": 1715,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1345,
											"end": 1727,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1345,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1345,
											"end": 1727,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1345,
											"end": 1727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1345,
											"end": 1727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1345,
											"end": 1727,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2386,
											"end": 2875,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2386,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2495,
											"end": 2496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2476,
											"end": 2497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2476,
											"end": 2497,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2476,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2543,
											"end": 2547,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2554,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2554,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2554,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2528,
											"end": 2555,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2528,
											"end": 2555,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2528,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 2598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2585,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2581,
											"end": 2589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2598,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2647,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2660,
											"end": 2663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17,
											"end": 31,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 128,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 108,
											"end": 122,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": 100,
											"end": 106,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 87,
											"end": 129,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 155,
											"end": 159,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 143,
											"end": 160,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 133,
											"end": 160,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 133,
											"end": 160,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 164,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2681,
											"end": 2693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2757,
											"end": 2763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2755,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2747,
											"end": 2764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2795,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2814,
											"end": 2820,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2804,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2811,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2800,
											"end": 2811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2811,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2800,
											"end": 2820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2834,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2795,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2795,
											"end": 2835,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2795,
											"end": 2835,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2795,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2850,
											"end": 2863,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2850,
											"end": 2863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2850,
											"end": 2863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2850,
											"end": 2863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2850,
											"end": 2863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2850,
											"end": 2863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2875,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8120,
											"end": 8723,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8120,
											"end": 8723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8179,
											"end": 8183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8200,
											"end": 8210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8276,
											"end": 8282,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8270,
											"end": 8283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8267,
											"end": 8268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8262,
											"end": 8284,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 459,
											"end": 463,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8319,
											"end": 8345,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8319,
											"end": 8345,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8319,
											"end": 8324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8319,
											"end": 8345,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8711,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8315,
											"end": 8711,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8371,
											"end": 8372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8364,
											"end": 8372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8364,
											"end": 8372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8364,
											"end": 8372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8364,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8364,
											"end": 8372,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8711,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8315,
											"end": 8711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 516,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "B8"
										},
										{
											"begin": 8396,
											"end": 8421,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8396,
											"end": 8421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8396,
											"end": 8401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8396,
											"end": 8421,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8396,
											"end": 8479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8396,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 8396,
											"end": 8479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8396,
											"end": 8479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 573,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 8426,
											"end": 8451,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8426,
											"end": 8451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8426,
											"end": 8431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8426,
											"end": 8451,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8426,
											"end": 8451,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8426,
											"end": 8478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8426,
											"end": 8478,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8426,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8426,
											"end": 8478,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8426,
											"end": 8478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 630,
											"end": 634,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 8455,
											"end": 8478,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8455,
											"end": 8478,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8455,
											"end": 8460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8455,
											"end": 8478,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8426,
											"end": 8478,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8426,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8396,
											"end": 8479,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 8396,
											"end": 8479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8392,
											"end": 8711,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8392,
											"end": 8711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8392,
											"end": 8711,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8505,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8498,
											"end": 8506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8498,
											"end": 8506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8498,
											"end": 8506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8498,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8498,
											"end": 8506,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8392,
											"end": 8711,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8392,
											"end": 8711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 573,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 8530,
											"end": 8554,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8530,
											"end": 8554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8530,
											"end": 8535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8530,
											"end": 8554,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8526,
											"end": 8711,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8526,
											"end": 8711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8526,
											"end": 8711,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8633,
											"end": 8634,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8628,
											"end": 8629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "B8"
										},
										{
											"begin": 8608,
											"end": 8629,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8599,
											"end": 8630,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8599,
											"end": 8630,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8599,
											"end": 8604,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8599,
											"end": 8630,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8599,
											"end": 8634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8592,
											"end": 8634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8592,
											"end": 8634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8592,
											"end": 8634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8592,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8592,
											"end": 8634,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8526,
											"end": 8711,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8526,
											"end": 8711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8710,
											"end": 8711,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8705,
											"end": 8706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 630,
											"end": 634,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 8687,
											"end": 8706,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8678,
											"end": 8707,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8678,
											"end": 8707,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8678,
											"end": 8683,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8678,
											"end": 8707,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8678,
											"end": 8711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8671,
											"end": 8711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8671,
											"end": 8711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8671,
											"end": 8711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8120,
											"end": 8723,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8120,
											"end": 8723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8120,
											"end": 8723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8120,
											"end": 8723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8120,
											"end": 8723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8120,
											"end": 8723,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8736,
											"end": 9521,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8736,
											"end": 9521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8820,
											"end": 8821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8813,
											"end": 8816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8813,
											"end": 8821,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8809,
											"end": 8830,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8809,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8809,
											"end": 8830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8823,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 8823,
											"end": 8830,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8809,
											"end": 8830,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8809,
											"end": 8830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8898,
											"end": 9123,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8898,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 678,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8905,
											"end": 8921,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8905,
											"end": 8921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8905,
											"end": 8908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8905,
											"end": 8921,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8898,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 8898,
											"end": 9123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9011,
											"end": 9014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8999,
											"end": 9003,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8992,
											"end": 9016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 678,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9055,
											"end": 9071,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9055,
											"end": 9071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9071,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9071,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9071,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 678,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9090,
											"end": 9107,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9090,
											"end": 9107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9107,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9107,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 678,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8923,
											"end": 8939,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8923,
											"end": 8939,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8923,
											"end": 8939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8923,
											"end": 8939,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8923,
											"end": 8939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8923,
											"end": 8939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8898,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8898,
											"end": 9123,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8898,
											"end": 9123,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 8898,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9233,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9263,
											"end": 9264,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9256,
											"end": 9259,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 678,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9244,
											"end": 9259,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9244,
											"end": 9259,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9244,
											"end": 9259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9236,
											"end": 9239,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9236,
											"end": 9260,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9236,
											"end": 9264,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9342,
											"end": 9346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9347,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9332,
											"end": 9335,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9326,
											"end": 9336,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9415,
											"end": 9419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9408,
											"end": 9412,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9402,
											"end": 9413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9398,
											"end": 9420,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9486,
											"end": 9493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9473,
											"end": 9494,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9471,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9460,
											"end": 9495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9288,
											"end": 9510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9288,
											"end": 9510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9288,
											"end": 9510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9288,
											"end": 9510,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 9288,
											"end": 9510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9288,
											"end": 9510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9288,
											"end": 9510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9288,
											"end": 9510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9288,
											"end": 9510,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5,
											"end": 109,
											"name": "tag",
											"source": -1,
											"value": "75"
										},
										{
											"begin": 5,
											"end": 109,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 82,
											"end": 103,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "77"
										},
										{
											"begin": 97,
											"end": 102,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 82,
											"end": 103,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "78"
										},
										{
											"begin": 82,
											"end": 103,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 82,
											"end": 103,
											"name": "tag",
											"source": -1,
											"value": "77"
										},
										{
											"begin": 82,
											"end": 103,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 77,
											"end": 80,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 70,
											"end": 104,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 64,
											"end": 109,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 64,
											"end": 109,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 64,
											"end": 109,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 116,
											"end": 229,
											"name": "tag",
											"source": -1,
											"value": "79"
										},
										{
											"begin": 116,
											"end": 229,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 199,
											"end": 223,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "81"
										},
										{
											"begin": 217,
											"end": 222,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 199,
											"end": 223,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "82"
										},
										{
											"begin": 199,
											"end": 223,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 199,
											"end": 223,
											"name": "tag",
											"source": -1,
											"value": "81"
										},
										{
											"begin": 199,
											"end": 223,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 194,
											"end": 197,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 187,
											"end": 224,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 181,
											"end": 229,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 181,
											"end": 229,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 181,
											"end": 229,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 236,
											"end": 579,
											"name": "tag",
											"source": -1,
											"value": "83"
										},
										{
											"begin": 236,
											"end": 579,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 236,
											"end": 579,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 346,
											"end": 384,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "85"
										},
										{
											"begin": 378,
											"end": 383,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 346,
											"end": 384,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "86"
										},
										{
											"begin": 346,
											"end": 384,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 346,
											"end": 384,
											"name": "tag",
											"source": -1,
											"value": "85"
										},
										{
											"begin": 346,
											"end": 384,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 396,
											"end": 466,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "87"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 454,
											"end": 457,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 396,
											"end": 466,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "88"
										},
										{
											"begin": 396,
											"end": 466,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 396,
											"end": 466,
											"name": "tag",
											"source": -1,
											"value": "87"
										},
										{
											"begin": 396,
											"end": 466,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 389,
											"end": 466,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 389,
											"end": 466,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 471,
											"end": 523,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "89"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 504,
											"end": 508,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 497,
											"end": 502,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 493,
											"end": 509,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 471,
											"end": 523,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "90"
										},
										{
											"begin": 471,
											"end": 523,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 471,
											"end": 523,
											"name": "tag",
											"source": -1,
											"value": "89"
										},
										{
											"begin": 471,
											"end": 523,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 544,
											"end": 573,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "91"
										},
										{
											"begin": 566,
											"end": 572,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 544,
											"end": 573,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "92"
										},
										{
											"begin": 544,
											"end": 573,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 544,
											"end": 573,
											"name": "tag",
											"source": -1,
											"value": "91"
										},
										{
											"begin": 544,
											"end": 573,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 539,
											"end": 542,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 535,
											"end": 574,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 528,
											"end": 574,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 528,
											"end": 574,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 326,
											"end": 579,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 326,
											"end": 579,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 326,
											"end": 579,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 326,
											"end": 579,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 326,
											"end": 579,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 326,
											"end": 579,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 586,
											"end": 921,
											"name": "tag",
											"source": -1,
											"value": "93"
										},
										{
											"begin": 586,
											"end": 921,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 586,
											"end": 921,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 692,
											"end": 726,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "95"
										},
										{
											"begin": 720,
											"end": 725,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 692,
											"end": 726,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "96"
										},
										{
											"begin": 692,
											"end": 726,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 692,
											"end": 726,
											"name": "tag",
											"source": -1,
											"value": "95"
										},
										{
											"begin": 692,
											"end": 726,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "97"
										},
										{
											"begin": 801,
											"end": 807,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 796,
											"end": 799,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 738,
											"end": 808,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "88"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 738,
											"end": 808,
											"name": "tag",
											"source": -1,
											"value": "97"
										},
										{
											"begin": 738,
											"end": 808,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 731,
											"end": 808,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 731,
											"end": 808,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 813,
											"end": 865,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "98"
										},
										{
											"begin": 858,
											"end": 864,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 853,
											"end": 856,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 846,
											"end": 850,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 835,
											"end": 851,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 813,
											"end": 865,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "90"
										},
										{
											"begin": 813,
											"end": 865,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 813,
											"end": 865,
											"name": "tag",
											"source": -1,
											"value": "98"
										},
										{
											"begin": 813,
											"end": 865,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 886,
											"end": 915,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "99"
										},
										{
											"begin": 908,
											"end": 914,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 886,
											"end": 915,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "92"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 886,
											"end": 915,
											"name": "tag",
											"source": -1,
											"value": "99"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 881,
											"end": 884,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 877,
											"end": 916,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 870,
											"end": 916,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 870,
											"end": 916,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 672,
											"end": 921,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 672,
											"end": 921,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 672,
											"end": 921,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 672,
											"end": 921,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 672,
											"end": 921,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 672,
											"end": 921,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 979,
											"end": 1448,
											"name": "tag",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 979,
											"end": 1448,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1114,
											"end": 1118,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1112,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1105,
											"end": 1119,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1196,
											"end": 1200,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1185,
											"end": 1201,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1179,
											"end": 1202,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 1208,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "102"
										},
										{
											"begin": 1265,
											"end": 1269,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1263,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1256,
											"end": 1270,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1242,
											"end": 1254,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1208,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "103"
										},
										{
											"begin": 1208,
											"end": 1271,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1208,
											"end": 1271,
											"name": "tag",
											"source": -1,
											"value": "102"
										},
										{
											"begin": 1208,
											"end": 1271,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1134,
											"end": 1277,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1356,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1345,
											"end": 1350,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1341,
											"end": 1357,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1335,
											"end": 1358,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 1364,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "104"
										},
										{
											"begin": 1421,
											"end": 1425,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1419,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1398,
											"end": 1410,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1364,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "103"
										},
										{
											"begin": 1364,
											"end": 1427,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1364,
											"end": 1427,
											"name": "tag",
											"source": -1,
											"value": "104"
										},
										{
											"begin": 1364,
											"end": 1427,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1287,
											"end": 1433,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1087,
											"end": 1448,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1087,
											"end": 1448,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1087,
											"end": 1448,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1087,
											"end": 1448,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1455,
											"end": 1558,
											"name": "tag",
											"source": -1,
											"value": "103"
										},
										{
											"begin": 1455,
											"end": 1558,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "106"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "107"
										},
										{
											"begin": 1528,
											"end": 1552,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1552,
											"name": "tag",
											"source": -1,
											"value": "106"
										},
										{
											"begin": 1528,
											"end": 1552,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1523,
											"end": 1526,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1516,
											"end": 1553,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1510,
											"end": 1558,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1510,
											"end": 1558,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1510,
											"end": 1558,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1565,
											"end": 1678,
											"name": "tag",
											"source": -1,
											"value": "108"
										},
										{
											"begin": 1565,
											"end": 1678,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1648,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "110"
										},
										{
											"begin": 1666,
											"end": 1671,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1648,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "107"
										},
										{
											"begin": 1648,
											"end": 1672,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1648,
											"end": 1672,
											"name": "tag",
											"source": -1,
											"value": "110"
										},
										{
											"begin": 1648,
											"end": 1672,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1643,
											"end": 1646,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1636,
											"end": 1673,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1630,
											"end": 1678,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1630,
											"end": 1678,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1630,
											"end": 1678,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1685,
											"end": 1886,
											"name": "tag",
											"source": -1,
											"value": "14"
										},
										{
											"begin": 1685,
											"end": 1886,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1685,
											"end": 1886,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1799,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1786,
											"end": 1795,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1782,
											"end": 1800,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1774,
											"end": 1800,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1774,
											"end": 1800,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1811,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "112"
										},
										{
											"begin": 1873,
											"end": 1874,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1871,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1875,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1849,
											"end": 1855,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1811,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "75"
										},
										{
											"begin": 1811,
											"end": 1876,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1811,
											"end": 1876,
											"name": "tag",
											"source": -1,
											"value": "112"
										},
										{
											"begin": 1811,
											"end": 1876,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1768,
											"end": 1886,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1768,
											"end": 1886,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1768,
											"end": 1886,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1768,
											"end": 1886,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1768,
											"end": 1886,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1893,
											"end": 2106,
											"name": "tag",
											"source": -1,
											"value": "26"
										},
										{
											"begin": 1893,
											"end": 2106,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1893,
											"end": 2106,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2013,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1996,
											"end": 2014,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1988,
											"end": 2014,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1988,
											"end": 2014,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2025,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "114"
										},
										{
											"begin": 2093,
											"end": 2094,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2082,
											"end": 2091,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2078,
											"end": 2095,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2069,
											"end": 2075,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2025,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "79"
										},
										{
											"begin": 2025,
											"end": 2096,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2025,
											"end": 2096,
											"name": "tag",
											"source": -1,
											"value": "114"
										},
										{
											"begin": 2025,
											"end": 2096,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1982,
											"end": 2106,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1982,
											"end": 2106,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1982,
											"end": 2106,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1982,
											"end": 2106,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1982,
											"end": 2106,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2113,
											"end": 2402,
											"name": "tag",
											"source": -1,
											"value": "18"
										},
										{
											"begin": 2113,
											"end": 2402,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2113,
											"end": 2402,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2247,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2234,
											"end": 2243,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2230,
											"end": 2248,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2222,
											"end": 2248,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2222,
											"end": 2248,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2295,
											"end": 2304,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2289,
											"end": 2293,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2285,
											"end": 2305,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2281,
											"end": 2282,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2279,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2266,
											"end": 2283,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2259,
											"end": 2306,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2320,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "116"
										},
										{
											"begin": 2387,
											"end": 2391,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2320,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "93"
										},
										{
											"begin": 2320,
											"end": 2392,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2320,
											"end": 2392,
											"name": "tag",
											"source": -1,
											"value": "116"
										},
										{
											"begin": 2320,
											"end": 2392,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2312,
											"end": 2392,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2216,
											"end": 2402,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 2216,
											"end": 2402,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2216,
											"end": 2402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2216,
											"end": 2402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2216,
											"end": 2402,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2409,
											"end": 2706,
											"name": "tag",
											"source": -1,
											"value": "30"
										},
										{
											"begin": 2409,
											"end": 2706,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2409,
											"end": 2706,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2545,
											"end": 2547,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2530,
											"end": 2548,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2522,
											"end": 2548,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2522,
											"end": 2548,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 2604,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2589,
											"end": 2593,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2585,
											"end": 2605,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2581,
											"end": 2582,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2579,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2566,
											"end": 2583,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2559,
											"end": 2606,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2620,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "118"
										},
										{
											"begin": 2691,
											"end": 2695,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2682,
											"end": 2688,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2620,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "83"
										},
										{
											"begin": 2620,
											"end": 2696,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2620,
											"end": 2696,
											"name": "tag",
											"source": -1,
											"value": "118"
										},
										{
											"begin": 2620,
											"end": 2696,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2612,
											"end": 2696,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2612,
											"end": 2696,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2516,
											"end": 2706,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 2516,
											"end": 2706,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2516,
											"end": 2706,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2516,
											"end": 2706,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2516,
											"end": 2706,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2713,
											"end": 3121,
											"name": "tag",
											"source": -1,
											"value": "37"
										},
										{
											"begin": 2713,
											"end": 3121,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2713,
											"end": 3121,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2901,
											"end": 2903,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 2890,
											"end": 2899,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2886,
											"end": 2904,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2878,
											"end": 2904,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2878,
											"end": 2904,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2915,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "120"
										},
										{
											"begin": 3025,
											"end": 3026,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3014,
											"end": 3023,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3010,
											"end": 3027,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3001,
											"end": 3007,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 2915,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 2915,
											"end": 3028,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2915,
											"end": 3028,
											"name": "tag",
											"source": -1,
											"value": "120"
										},
										{
											"begin": 2915,
											"end": 3028,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3039,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "121"
										},
										{
											"begin": 3107,
											"end": 3109,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 3096,
											"end": 3105,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3092,
											"end": 3110,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3083,
											"end": 3089,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3039,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "108"
										},
										{
											"begin": 3039,
											"end": 3111,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3039,
											"end": 3111,
											"name": "tag",
											"source": -1,
											"value": "121"
										},
										{
											"begin": 3039,
											"end": 3111,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2872,
											"end": 3121,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 2872,
											"end": 3121,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 2872,
											"end": 3121,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2872,
											"end": 3121,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2872,
											"end": 3121,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2872,
											"end": 3121,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3128,
											"end": 3452,
											"name": "tag",
											"source": -1,
											"value": "22"
										},
										{
											"begin": 3128,
											"end": 3452,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3128,
											"end": 3452,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3274,
											"end": 3276,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 3263,
											"end": 3272,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3259,
											"end": 3277,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3251,
											"end": 3277,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3251,
											"end": 3277,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3288,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "123"
										},
										{
											"begin": 3356,
											"end": 3357,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3354,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3341,
											"end": 3358,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3332,
											"end": 3338,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 3288,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "108"
										},
										{
											"begin": 3288,
											"end": 3359,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3288,
											"end": 3359,
											"name": "tag",
											"source": -1,
											"value": "123"
										},
										{
											"begin": 3288,
											"end": 3359,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3370,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "124"
										},
										{
											"begin": 3438,
											"end": 3440,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3427,
											"end": 3436,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3423,
											"end": 3441,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3414,
											"end": 3420,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3370,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "108"
										},
										{
											"begin": 3370,
											"end": 3442,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3370,
											"end": 3442,
											"name": "tag",
											"source": -1,
											"value": "124"
										},
										{
											"begin": 3370,
											"end": 3442,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3245,
											"end": 3452,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 3245,
											"end": 3452,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 3245,
											"end": 3452,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3245,
											"end": 3452,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3245,
											"end": 3452,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3245,
											"end": 3452,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3459,
											"end": 3576,
											"name": "tag",
											"source": -1,
											"value": "96"
										},
										{
											"begin": 3459,
											"end": 3576,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3459,
											"end": 3576,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3548,
											"end": 3553,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 3532,
											"end": 3554,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3532,
											"end": 3554,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3583,
											"end": 3704,
											"name": "tag",
											"source": -1,
											"value": "86"
										},
										{
											"begin": 3583,
											"end": 3704,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3583,
											"end": 3704,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3681,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3670,
											"end": 3682,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 3660,
											"end": 3682,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3660,
											"end": 3682,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3641,
											"end": 3704,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3641,
											"end": 3704,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3641,
											"end": 3704,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3641,
											"end": 3704,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3712,
											"end": 3874,
											"name": "tag",
											"source": -1,
											"value": "88"
										},
										{
											"begin": 3712,
											"end": 3874,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3712,
											"end": 3874,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3826,
											"end": 3832,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3821,
											"end": 3824,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3814,
											"end": 3833,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3863,
											"end": 3867,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3858,
											"end": 3861,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3854,
											"end": 3868,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3839,
											"end": 3868,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3839,
											"end": 3868,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3807,
											"end": 3874,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 3807,
											"end": 3874,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3807,
											"end": 3874,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3807,
											"end": 3874,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3807,
											"end": 3874,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3882,
											"end": 3967,
											"name": "tag",
											"source": -1,
											"value": "78"
										},
										{
											"begin": 3882,
											"end": 3967,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3882,
											"end": 3967,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3955,
											"end": 3960,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3948,
											"end": 3961,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3962,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 3930,
											"end": 3962,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3930,
											"end": 3962,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3924,
											"end": 3967,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3924,
											"end": 3967,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3924,
											"end": 3967,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3924,
											"end": 3967,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3974,
											"end": 4046,
											"name": "tag",
											"source": -1,
											"value": "82"
										},
										{
											"begin": 3974,
											"end": 4046,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3974,
											"end": 4046,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4036,
											"end": 4041,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4025,
											"end": 4041,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4025,
											"end": 4041,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4019,
											"end": 4046,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4019,
											"end": 4046,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4019,
											"end": 4046,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4019,
											"end": 4046,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 4053,
											"end": 4125,
											"name": "tag",
											"source": -1,
											"value": "107"
										},
										{
											"begin": 4053,
											"end": 4125,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4053,
											"end": 4125,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4104,
											"end": 4120,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4104,
											"end": 4120,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4098,
											"end": 4125,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4098,
											"end": 4125,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4098,
											"end": 4125,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4098,
											"end": 4125,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 4133,
											"end": 4401,
											"name": "tag",
											"source": -1,
											"value": "90"
										},
										{
											"begin": 4133,
											"end": 4401,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4198,
											"end": 4199,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4205,
											"end": 4306,
											"name": "tag",
											"source": -1,
											"value": "132"
										},
										{
											"begin": 4205,
											"end": 4306,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4219,
											"end": 4225,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 4216,
											"end": 4217,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4213,
											"end": 4226,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4205,
											"end": 4306,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4205,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "134"
										},
										{
											"begin": 4205,
											"end": 4306,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 4295,
											"end": 4296,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 4290,
											"end": 4293,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4286,
											"end": 4297,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4280,
											"end": 4298,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 4276,
											"end": 4277,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4271,
											"end": 4274,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 4267,
											"end": 4278,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4260,
											"end": 4299,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4241,
											"end": 4243,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 4238,
											"end": 4239,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4234,
											"end": 4244,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4229,
											"end": 4244,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4229,
											"end": 4244,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4205,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "132"
										},
										{
											"begin": 4205,
											"end": 4306,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 4205,
											"end": 4306,
											"name": "tag",
											"source": -1,
											"value": "134"
										},
										{
											"begin": 4205,
											"end": 4306,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4321,
											"end": 4327,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 4318,
											"end": 4319,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4315,
											"end": 4328,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 4312,
											"end": 4314,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4312,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "135"
										},
										{
											"begin": 4312,
											"end": 4314,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 4386,
											"end": 4387,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4383,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 4372,
											"end": 4375,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 4368,
											"end": 4384,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4361,
											"end": 4388,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4312,
											"end": 4314,
											"name": "tag",
											"source": -1,
											"value": "135"
										},
										{
											"begin": 4312,
											"end": 4314,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4182,
											"end": 4401,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4182,
											"end": 4401,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4182,
											"end": 4401,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4182,
											"end": 4401,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4182,
											"end": 4401,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 4409,
											"end": 4506,
											"name": "tag",
											"source": -1,
											"value": "92"
										},
										{
											"begin": 4409,
											"end": 4506,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4409,
											"end": 4506,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4497,
											"end": 4499,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 4493,
											"end": 4500,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4488,
											"end": 4490,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 4481,
											"end": 4486,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 4477,
											"end": 4491,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4473,
											"end": 4501,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 4463,
											"end": 4501,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4463,
											"end": 4501,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4457,
											"end": 4506,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4457,
											"end": 4506,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4457,
											"end": 4506,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4457,
											"end": 4506,
											"name": "JUMP",
											"source": -1
										}
									]
								},
								"4887836E294A2761413359597244D307BBE3F94827F6160D9E1A399E00E2D1BE": "4e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f",
								"C359735A342ECE061E65AB7390D246D1E53BA5F24EEA70D6201F1D4A7B2F3475": "7364664e417364667364664c4548484a5347445348444a53484a53484a534844534a44484a4f4e47564f"
							}
						},
						"methodIdentifiers": {
							"data1()": "9ffd85c4",
							"data2()": "e3a7fd75",
							"data3()": "fc26b0ab",
							"getDecodeData()": "0ff7af0f",
							"getEncodeData()": "eaacd81e",
							"iterator()": "fddcc148",
							"rlpItem()": "a699fb03"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"data1\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data2\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data3\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDecodeData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEncodeData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"iterator\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"memPtr\",\"type\":\"uint256\"}],\"internalType\":\"struct demo2.RLPItem\",\"name\":\"item\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nextPtr\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rlpItem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"memPtr\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/demo2.sol\":\"demo2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/demo2.sol\":{\"keccak256\":\"0xd212c44dcb06f97d1bbf1236320b813d9f6a7ab3424fdbfb765fdab92ad24969\",\"urls\":[\"bzz-raw://74e0bbf51edf1dfeaae2517eaa2afa4192b6abf2f37a42bf192ac3307184a480\",\"dweb:/ipfs/QmamZwJyxbSg6G68VdswQtXzDNBWYzr3kbYcgbfokbteMA\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/demo2.sol": {
				"ast": {
					"absolutePath": "contracts/demo2.sol",
					"exportedSymbols": {
						"demo2": [
							662
						]
					},
					"id": 663,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">",
								"0.4",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4:30:0"
						},
						{
							"id": 2,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "40:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 662,
							"linearizedBaseContracts": [
								662
							],
							"name": "demo2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9ffd85c4",
									"id": 5,
									"name": "data1",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 662,
									"src": "107:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 3,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "107:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "128:48:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_4887836e294a2761413359597244d307bbe3f94827f6160d9e1a399e00e2d1be",
											"typeString": "literal_string \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\""
										},
										"value": "NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc26b0ab",
									"id": 8,
									"name": "data3",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 662,
									"src": "187:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 6,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "187:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "7364664e417364667364664c4548484a5347445348444a53484a53484a534844534a44484a4f4e47564f",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:44:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c359735a342ece061e65ab7390d246d1e53ba5f24eea70d6201f1d4a7b2f3475",
											"typeString": "literal_string \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\""
										},
										"value": "sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e3a7fd75",
									"id": 11,
									"name": "data2",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 662,
									"src": "263:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 9,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "263:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4c45484f4e47564f776a6e66766a3377656838764b4a",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "286:24:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_456403c9720da4fa7d7375867b84ba5ad32318599c72d3314f61b294b0c7ff33",
											"typeString": "literal_string \"LEHONGVOwjnfvj3weh8vKJ\""
										},
										"value": "LEHONGVOwjnfvj3weh8vKJ"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 14,
									"name": "STRING_OFFSET",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 662,
									"src": "321:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 12,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "321:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783830",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "352:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "0x80"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 17,
									"name": "LIST_OFFSET",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 662,
									"src": "373:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 15,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "373:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786330",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "402:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "0xc0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 20,
									"name": "STRING_SHORT_START",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 662,
									"src": "423:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 18,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "423:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783830",
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "459:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "0x80"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 23,
									"name": "STRING_LONG_START",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 662,
									"src": "480:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 21,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "480:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786238",
										"id": 22,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "516:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_184_by_1",
											"typeString": "int_const 184"
										},
										"value": "0xb8"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 26,
									"name": "LIST_SHORT_START",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 662,
									"src": "537:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 24,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "537:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786330",
										"id": 25,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "573:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "0xc0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 29,
									"name": "LIST_LONG_START",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 662,
									"src": "594:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 27,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "594:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786638",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "630:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_248_by_1",
											"typeString": "int_const 248"
										},
										"value": "0xf8"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 32,
									"name": "WORD_SIZE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 662,
									"src": "651:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 30,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "651:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3332",
										"id": 31,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "678:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "demo2.RLPItem",
									"id": 37,
									"members": [
										{
											"constant": false,
											"id": 34,
											"name": "len",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 37,
											"src": "731:8:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 33,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "731:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 36,
											"name": "memPtr",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 37,
											"src": "754:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 35,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "754:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "RLPItem",
									"nodeType": "StructDefinition",
									"scope": 662,
									"src": "701:76:0",
									"visibility": "public"
								},
								{
									"canonicalName": "demo2.Iterator",
									"id": 42,
									"members": [
										{
											"constant": false,
											"id": 39,
											"name": "item",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 42,
											"src": "820:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
												"typeString": "struct demo2.RLPItem"
											},
											"typeName": {
												"contractScope": null,
												"id": 38,
												"name": "RLPItem",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 37,
												"src": "820:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
													"typeString": "struct demo2.RLPItem"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 41,
											"name": "nextPtr",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 42,
											"src": "885:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 40,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "885:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Iterator",
									"nodeType": "StructDefinition",
									"scope": 662,
									"src": "789:164:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a699fb03",
									"id": 44,
									"name": "rlpItem",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 662,
									"src": "965:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_RLPItem_$37_storage",
										"typeString": "struct demo2.RLPItem"
									},
									"typeName": {
										"contractScope": null,
										"id": 43,
										"name": "RLPItem",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 37,
										"src": "965:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
											"typeString": "struct demo2.RLPItem"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fddcc148",
									"id": 46,
									"name": "iterator",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 662,
									"src": "998:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Iterator_$42_storage",
										"typeString": "struct demo2.Iterator"
									},
									"typeName": {
										"contractScope": null,
										"id": 45,
										"name": "Iterator",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 42,
										"src": "998:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Iterator_$42_storage_ptr",
											"typeString": "struct demo2.Iterator"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "1056:148:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 49,
															"name": "rlpItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1071:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_storage",
																"typeString": "struct demo2.RLPItem storage ref"
															}
														},
														"id": 51,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "1071:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "36",
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1085:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "1071:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "1071:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 55,
															"name": "rlpItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1101:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_storage",
																"typeString": "struct demo2.RLPItem storage ref"
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "memPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "1101:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1118:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1101:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1101:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 61,
															"name": "iterator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "1134:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Iterator_$42_storage",
																"typeString": "struct demo2.Iterator storage ref"
															}
														},
														"id": 63,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "item",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 39,
														"src": "1134:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RLPItem_$37_storage",
															"typeString": "struct demo2.RLPItem storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 64,
														"name": "rlpItem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "1150:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RLPItem_$37_storage",
															"typeString": "struct demo2.RLPItem storage ref"
														}
													},
													"src": "1134:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage",
														"typeString": "struct demo2.RLPItem storage ref"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1134:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 67,
															"name": "iterator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "1172:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Iterator_$42_storage",
																"typeString": "struct demo2.Iterator storage ref"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "nextPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 41,
														"src": "1172:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "34",
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1191:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "1172:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "1172:20:0"
											}
										]
									},
									"documentation": null,
									"id": 74,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1046:2:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1056:0:0"
									},
									"scope": 662,
									"src": "1035:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1284:49:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 80,
															"name": "rlpItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1313:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_storage",
																"typeString": "struct demo2.RLPItem storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_RLPItem_$37_storage",
																"typeString": "struct demo2.RLPItem storage ref"
															}
														],
														"id": 79,
														"name": "isList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "1306:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_RLPItem_$37_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (struct demo2.RLPItem memory) pure returns (bool)"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1306:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 78,
												"id": 82,
												"nodeType": "Return",
												"src": "1299:22:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "0ff7af0f",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDecodeData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1255:2:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 84,
												"src": "1278:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 76,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1278:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1277:6:0"
									},
									"scope": 662,
									"src": "1233:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "1411:316:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 91,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "1430:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 92,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "1430:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 93,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1442:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1430:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 97,
												"nodeType": "IfStatement",
												"src": "1426:31:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1452:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"functionReturnParameters": 90,
													"id": 96,
													"nodeType": "Return",
													"src": "1445:12:0"
												}
											},
											{
												"assignments": [
													99
												],
												"declarations": [
													{
														"constant": false,
														"id": 99,
														"name": "byte0",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 115,
														"src": "1474:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 98,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1474:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1474:11:0"
											},
											{
												"assignments": [
													102
												],
												"declarations": [
													{
														"constant": false,
														"id": 102,
														"name": "memPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 115,
														"src": "1500:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 101,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1500:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 105,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 103,
														"name": "item",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "1514:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
															"typeString": "struct demo2.RLPItem memory"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "memPtr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 36,
													"src": "1514:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1500:25:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1549:65:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1568:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1582:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1591:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1585:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1585:13:0"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nodeType": "YulIdentifier",
																	"src": "1577:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1577:22:0"
															},
															"variableNames": [
																{
																	"name": "byte0",
																	"nodeType": "YulIdentifier",
																	"src": "1568:5:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 99,
														"isOffset": false,
														"isSlot": false,
														"src": "1568:5:0",
														"valueSize": 1
													},
													{
														"declaration": 102,
														"isOffset": false,
														"isSlot": false,
														"src": "1591:6:0",
														"valueSize": 1
													}
												],
												"id": 106,
												"nodeType": "InlineAssembly",
												"src": "1540:74:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 107,
														"name": "byte0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "1634:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 108,
														"name": "LIST_SHORT_START",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1642:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1634:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 112,
												"nodeType": "IfStatement",
												"src": "1630:59:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1684:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"functionReturnParameters": 90,
													"id": 111,
													"nodeType": "Return",
													"src": "1677:12:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1711:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 90,
												"id": 114,
												"nodeType": "Return",
												"src": "1704:11:0"
											}
										]
									},
									"documentation": null,
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isList",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 116,
												"src": "1361:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 85,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "1361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1360:21:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 116,
												"src": "1405:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 88,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1405:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1404:6:0"
									},
									"scope": 662,
									"src": "1345:382:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2063:50:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 122,
															"name": "rlpItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "2093:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_storage",
																"typeString": "struct demo2.RLPItem storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_RLPItem_$37_storage",
																"typeString": "struct demo2.RLPItem storage ref"
															}
														],
														"id": 121,
														"name": "toBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "2085:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_RLPItem_$37_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (struct demo2.RLPItem memory) pure returns (bytes memory)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2085:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 120,
												"id": 124,
												"nodeType": "Return",
												"src": "2078:23:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "eaacd81e",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEncodeData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2026:2:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 126,
												"src": "2049:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2049:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2048:14:0"
									},
									"scope": 662,
									"src": "2004:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "2202:172:0",
										"statements": [
											{
												"assignments": [
													134
												],
												"declarations": [
													{
														"constant": false,
														"id": 134,
														"name": "memPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 143,
														"src": "2217:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 133,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2217:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2217:11:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2252:59:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2271:25:0",
															"value": {
																"arguments": [
																	{
																		"name": "self",
																		"nodeType": "YulIdentifier",
																		"src": "2285:4:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2291:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2281:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2281:15:0"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2271:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 134,
														"isOffset": false,
														"isSlot": false,
														"src": "2271:6:0",
														"valueSize": 1
													},
													{
														"declaration": 128,
														"isOffset": false,
														"isSlot": false,
														"src": "2285:4:0",
														"valueSize": 1
													}
												],
												"id": 136,
												"nodeType": "InlineAssembly",
												"src": "2243:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 138,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 128,
																"src": "2342:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2342:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 140,
															"name": "memPtr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "2355:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 137,
														"name": "RLPItem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "2334:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_RLPItem_$37_storage_ptr_$",
															"typeString": "type(struct demo2.RLPItem storage pointer)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_memory",
														"typeString": "struct demo2.RLPItem memory"
													}
												},
												"functionReturnParameters": 132,
												"id": 142,
												"nodeType": "Return",
												"src": "2327:35:0"
											}
										]
									},
									"documentation": null,
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toRLPItem",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 144,
												"src": "2144:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 127,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2144:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2143:19:0"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 144,
												"src": "2186:14:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 130,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "2186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2185:16:0"
									},
									"scope": 662,
									"src": "2125:249:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "2461:414:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 152,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "2484:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "2484:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2484:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 151,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2476:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2476:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "2476:21:0"
											},
											{
												"assignments": [
													159
												],
												"declarations": [
													{
														"constant": false,
														"id": 159,
														"name": "offset",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 194,
														"src": "2514:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 158,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2514:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 164,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 161,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "2543:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																	"typeString": "struct demo2.RLPItem memory"
																}
															},
															"id": 162,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "memPtr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "2543:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 160,
														"name": "_payloadOffset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "2528:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2528:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2514:41:0"
											},
											{
												"assignments": [
													166
												],
												"declarations": [
													{
														"constant": false,
														"id": 166,
														"name": "len",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 194,
														"src": "2570:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 165,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2570:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 171,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 167,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "2581:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 168,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "2581:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 169,
														"name": "offset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "2592:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2581:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2570:28:0"
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"name": "result",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 194,
														"src": "2628:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 172,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2628:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 178,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 176,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "2660:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 175,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2650:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 174,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2654:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2650:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2628:36:0"
											},
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"name": "destPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 194,
														"src": "2681:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 179,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2681:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 181,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2681:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2717:62:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2736:28:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2751:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "result",
																		"nodeType": "YulIdentifier",
																		"src": "2757:6:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2747:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2747:17:0"
															},
															"variableNames": [
																{
																	"name": "destPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2736:7:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 180,
														"isOffset": false,
														"isSlot": false,
														"src": "2736:7:0",
														"valueSize": 1
													},
													{
														"declaration": 173,
														"isOffset": false,
														"isSlot": false,
														"src": "2757:6:0",
														"valueSize": 1
													}
												],
												"id": 182,
												"nodeType": "InlineAssembly",
												"src": "2708:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 184,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "2800:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 185,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "memPtr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 36,
																"src": "2800:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"id": 186,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "2814:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2800:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 188,
															"name": "destPtr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "2822:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 189,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "2831:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 183,
														"name": "copy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "2795:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256) pure"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2795:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "2795:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 192,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 173,
													"src": "2857:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 150,
												"id": 193,
												"nodeType": "Return",
												"src": "2850:13:0"
											}
										]
									},
									"documentation": null,
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toBytes",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 195,
												"src": "2403:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 145,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "2403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2402:21:0"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 195,
												"src": "2447:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 148,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2446:14:0"
									},
									"scope": 662,
									"src": "2386:489:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "2974:232:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 204,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 197,
																	"src": "3005:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Iterator_$42_memory_ptr",
																		"typeString": "struct demo2.Iterator memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Iterator_$42_memory_ptr",
																		"typeString": "struct demo2.Iterator memory"
																	}
																],
																"id": 203,
																"name": "hasNext",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "2997:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_struct$_Iterator_$42_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (struct demo2.Iterator memory) pure returns (bool)"
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2997:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 202,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2989:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2989:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "2989:22:0"
											},
											{
												"assignments": [
													209
												],
												"declarations": [
													{
														"constant": false,
														"id": 209,
														"name": "ptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 232,
														"src": "3028:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 208,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3028:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 212,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 210,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "3039:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Iterator_$42_memory_ptr",
															"typeString": "struct demo2.Iterator memory"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "nextPtr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 41,
													"src": "3039:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3028:23:0"
											},
											{
												"assignments": [
													214
												],
												"declarations": [
													{
														"constant": false,
														"id": 214,
														"name": "itemLength",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 232,
														"src": "3066:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 213,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3066:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 218,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 216,
															"name": "ptr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "3096:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 215,
														"name": "_itemLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 561,
														"src": "3084:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3084:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3066:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 219,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "3115:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Iterator_$42_memory_ptr",
																"typeString": "struct demo2.Iterator memory"
															}
														},
														"id": 221,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "nextPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 41,
														"src": "3115:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 222,
															"name": "ptr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "3130:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 223,
															"name": "itemLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "3136:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3130:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3115:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "3115:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 228,
															"name": "itemLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "3178:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 229,
															"name": "ptr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "3190:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 227,
														"name": "RLPItem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "3170:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_RLPItem_$37_storage_ptr_$",
															"typeString": "type(struct demo2.RLPItem storage pointer)"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3170:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_memory",
														"typeString": "struct demo2.RLPItem memory"
													}
												},
												"functionReturnParameters": 201,
												"id": 231,
												"nodeType": "Return",
												"src": "3163:31:0"
											}
										]
									},
									"documentation": null,
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "next",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 233,
												"src": "2913:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Iterator_$42_memory_ptr",
													"typeString": "struct demo2.Iterator"
												},
												"typeName": {
													"contractScope": null,
													"id": 196,
													"name": "Iterator",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 42,
													"src": "2913:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Iterator_$42_storage_ptr",
														"typeString": "struct demo2.Iterator"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2912:22:0"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 233,
												"src": "2958:14:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 199,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "2958:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2957:16:0"
									},
									"scope": 662,
									"src": "2899:307:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "3286:117:0",
										"statements": [
											{
												"assignments": [
													241
												],
												"declarations": [
													{
														"constant": false,
														"id": 241,
														"name": "item",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 254,
														"src": "3301:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
															"typeString": "struct demo2.RLPItem"
														},
														"typeName": {
															"contractScope": null,
															"id": 240,
															"name": "RLPItem",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 37,
															"src": "3301:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
																"typeString": "struct demo2.RLPItem"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 244,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 242,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "3323:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Iterator_$42_memory_ptr",
															"typeString": "struct demo2.Iterator memory"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "item",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 39,
													"src": "3323:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_memory",
														"typeString": "struct demo2.RLPItem memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3301:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 245,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "3354:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Iterator_$42_memory_ptr",
																"typeString": "struct demo2.Iterator memory"
															}
														},
														"id": 246,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nextPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 41,
														"src": "3354:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 247,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "3369:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																	"typeString": "struct demo2.RLPItem memory"
																}
															},
															"id": 248,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "memPtr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "3369:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 249,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "3383:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																	"typeString": "struct demo2.RLPItem memory"
																}
															},
															"id": 250,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "len",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "3383:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3369:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3354:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 239,
												"id": 253,
												"nodeType": "Return",
												"src": "3347:44:0"
											}
										]
									},
									"documentation": null,
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasNext",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 255,
												"src": "3235:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Iterator_$42_memory_ptr",
													"typeString": "struct demo2.Iterator"
												},
												"typeName": {
													"contractScope": null,
													"id": 234,
													"name": "Iterator",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 42,
													"src": "3235:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Iterator_$42_storage_ptr",
														"typeString": "struct demo2.Iterator"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3234:22:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 255,
												"src": "3280:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 237,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3280:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3279:6:0"
									},
									"scope": 662,
									"src": "3218:185:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "3501:303:0",
										"statements": [
											{
												"assignments": [
													263
												],
												"declarations": [
													{
														"constant": false,
														"id": 263,
														"name": "result",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 291,
														"src": "3516:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 262,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3516:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 269,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 266,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "3548:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																	"typeString": "struct demo2.RLPItem memory"
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "len",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "3548:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3538:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 264,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3542:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3538:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3516:41:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 270,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "3576:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3576:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3593:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3576:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 276,
												"nodeType": "IfStatement",
												"src": "3572:37:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 274,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "3603:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"functionReturnParameters": 261,
													"id": 275,
													"nodeType": "Return",
													"src": "3596:13:0"
												}
											},
											{
												"assignments": [
													278
												],
												"declarations": [
													{
														"constant": false,
														"id": 278,
														"name": "ptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 291,
														"src": "3626:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 277,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3626:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 279,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "3626:8:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3658:58:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3677:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3688:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "result",
																		"nodeType": "YulIdentifier",
																		"src": "3694:6:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3684:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3684:17:0"
															},
															"variableNames": [
																{
																	"name": "ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3677:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 278,
														"isOffset": false,
														"isSlot": false,
														"src": "3677:3:0",
														"valueSize": 1
													},
													{
														"declaration": 263,
														"isOffset": false,
														"isSlot": false,
														"src": "3694:6:0",
														"valueSize": 1
													}
												],
												"id": 280,
												"nodeType": "InlineAssembly",
												"src": "3649:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 282,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "3737:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																	"typeString": "struct demo2.RLPItem memory"
																}
															},
															"id": 283,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "memPtr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "3737:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 284,
															"name": "ptr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "3750:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 285,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "3755:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																	"typeString": "struct demo2.RLPItem memory"
																}
															},
															"id": 286,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "len",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "3755:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 281,
														"name": "copy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "3732:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256) pure"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3732:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "3732:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 289,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 263,
													"src": "3786:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 261,
												"id": 290,
												"nodeType": "Return",
												"src": "3779:13:0"
											}
										]
									},
									"documentation": null,
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toRlpBytes",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 292,
												"src": "3443:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 256,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "3443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3442:21:0"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 292,
												"src": "3487:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 259,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3487:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3486:14:0"
									},
									"scope": 662,
									"src": "3423:381:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "3885:254:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 300,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "3908:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "3908:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3920:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3908:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3900:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3900:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "3900:22:0"
											},
											{
												"assignments": [
													307
												],
												"declarations": [
													{
														"constant": false,
														"id": 307,
														"name": "result",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 322,
														"src": "3937:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 306,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3937:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 308,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "3937:11:0"
											},
											{
												"assignments": [
													310
												],
												"declarations": [
													{
														"constant": false,
														"id": 310,
														"name": "memPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 322,
														"src": "3963:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 309,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3963:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 313,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 311,
														"name": "item",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "3977:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
															"typeString": "struct demo2.RLPItem memory"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "memPtr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 36,
													"src": "3977:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3963:25:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4012:66:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4031:32:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4046:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4055:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4049:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4049:13:0"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nodeType": "YulIdentifier",
																	"src": "4041:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:22:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4031:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 310,
														"isOffset": false,
														"isSlot": false,
														"src": "4055:6:0",
														"valueSize": 1
													},
													{
														"declaration": 307,
														"isOffset": false,
														"isSlot": false,
														"src": "4031:6:0",
														"valueSize": 1
													}
												],
												"id": 314,
												"nodeType": "InlineAssembly",
												"src": "4003:75:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 315,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4101:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4111:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4101:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4123:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4101:26:0",
													"trueExpression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4115:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 298,
												"id": 321,
												"nodeType": "Return",
												"src": "4094:33:0"
											}
										]
									},
									"documentation": null,
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toBoolean",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 323,
												"src": "3835:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 293,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "3835:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3834:21:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 323,
												"src": "3879:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 296,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3879:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3878:6:0"
									},
									"scope": 662,
									"src": "3816:323:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "4223:140:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 331,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "4291:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 332,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "4291:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3231",
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4303:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_21_by_1",
																	"typeString": "int_const 21"
																},
																"value": "21"
															},
															"src": "4291:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 330,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4283:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "4283:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 340,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "4345:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																],
																"id": 339,
																"name": "toUint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "4338:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_struct$_RLPItem_$37_memory_ptr_$returns$_t_uint256_$",
																	"typeString": "function (struct demo2.RLPItem memory) pure returns (uint256)"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4338:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4330:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 337,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4330:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 329,
												"id": 343,
												"nodeType": "Return",
												"src": "4323:28:0"
											}
										]
									},
									"documentation": null,
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 345,
												"src": "4170:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 324,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "4170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4169:21:0"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 345,
												"src": "4214:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4214:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4213:9:0"
									},
									"scope": 662,
									"src": "4151:212:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "4441:603:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 353,
																		"name": "item",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "4464:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																			"typeString": "struct demo2.RLPItem memory"
																		}
																	},
																	"id": 354,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "4464:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4475:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4464:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 357,
																		"name": "item",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "4480:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																			"typeString": "struct demo2.RLPItem memory"
																		}
																	},
																	"id": 358,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "4480:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3333",
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4492:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_33_by_1",
																		"typeString": "int_const 33"
																	},
																	"value": "33"
																},
																"src": "4480:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4464:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4456:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4456:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "4456:39:0"
											},
											{
												"assignments": [
													365
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"name": "offset",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 399,
														"src": "4512:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 364,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4512:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 370,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 367,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "4541:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																	"typeString": "struct demo2.RLPItem memory"
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "memPtr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "4541:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 366,
														"name": "_payloadOffset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "4526:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4526:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4512:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 372,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "4576:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 373,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "4576:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 374,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "4588:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4576:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6c656e677468206973206c657373207468616e206f6666736574",
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4596:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b0b42ce8b5dee5c853d03ff9713140c28ab451add284160f67ced4e683e6ae54",
																"typeString": "literal_string \"length is less than offset\""
															},
															"value": "length is less than offset"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b0b42ce8b5dee5c853d03ff9713140c28ab451add284160f67ced4e683e6ae54",
																"typeString": "literal_string \"length is less than offset\""
															}
														],
														"id": 371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4568:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4568:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "4568:57:0"
											},
											{
												"assignments": [
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 380,
														"name": "len",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 399,
														"src": "4640:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 379,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4640:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 381,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "4651:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "4651:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 383,
														"name": "offset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "4662:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4651:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4640:28:0"
											},
											{
												"assignments": [
													387
												],
												"declarations": [
													{
														"constant": false,
														"id": 387,
														"name": "result",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 399,
														"src": "4685:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 386,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4685:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 388,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4685:11:0"
											},
											{
												"assignments": [
													390
												],
												"declarations": [
													{
														"constant": false,
														"id": 390,
														"name": "memPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 399,
														"src": "4711:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 389,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4711:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 395,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 391,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "4725:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 392,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "memPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "4725:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 393,
														"name": "offset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "4739:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4725:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4711:34:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4769:236:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4788:23:0",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4804:6:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4798:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4798:13:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4788:6:0"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4903:87:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4926:45:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "result",
																					"nodeType": "YulIdentifier",
																					"src": "4940:6:0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4952:3:0",
																							"type": "",
																							"value": "256"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4961:2:0",
																									"type": "",
																									"value": "32"
																								},
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "4965:3:0"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "4957:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4957:12:0"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "4948:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4948:22:0"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "4936:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4936:35:0"
																		},
																		"variableNames": [
																			{
																				"name": "result",
																				"nodeType": "YulIdentifier",
																				"src": "4926:6:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "4894:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4899:2:0",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4891:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4891:11:0"
															},
															"nodeType": "YulIf",
															"src": "4888:2:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 380,
														"isOffset": false,
														"isSlot": false,
														"src": "4894:3:0",
														"valueSize": 1
													},
													{
														"declaration": 380,
														"isOffset": false,
														"isSlot": false,
														"src": "4965:3:0",
														"valueSize": 1
													},
													{
														"declaration": 390,
														"isOffset": false,
														"isSlot": false,
														"src": "4804:6:0",
														"valueSize": 1
													},
													{
														"declaration": 387,
														"isOffset": false,
														"isSlot": false,
														"src": "4788:6:0",
														"valueSize": 1
													},
													{
														"declaration": 387,
														"isOffset": false,
														"isSlot": false,
														"src": "4926:6:0",
														"valueSize": 1
													},
													{
														"declaration": 387,
														"isOffset": false,
														"isSlot": false,
														"src": "4940:6:0",
														"valueSize": 1
													}
												],
												"id": 396,
												"nodeType": "InlineAssembly",
												"src": "4760:245:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 397,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 387,
													"src": "5026:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 398,
												"nodeType": "Return",
												"src": "5019:13:0"
											}
										]
									},
									"documentation": null,
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 400,
												"src": "4391:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 346,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4390:21:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 400,
												"src": "4435:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4435:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4434:6:0"
									},
									"scope": 662,
									"src": "4375:669:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "5137:264:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 408,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "5192:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 409,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "5192:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3333",
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5204:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33_by_1",
																	"typeString": "int_const 33"
																},
																"value": "33"
															},
															"src": "5192:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 407,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5184:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5184:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 413,
												"nodeType": "ExpressionStatement",
												"src": "5184:23:0"
											},
											{
												"assignments": [
													415
												],
												"declarations": [
													{
														"constant": false,
														"id": 415,
														"name": "result",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 427,
														"src": "5224:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 414,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5224:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 416,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "5224:11:0"
											},
											{
												"assignments": [
													418
												],
												"declarations": [
													{
														"constant": false,
														"id": 418,
														"name": "memPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 427,
														"src": "5250:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 417,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5250:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 423,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 419,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "5264:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "memPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "5264:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5278:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5264:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5250:29:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5303:57:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5322:23:0",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5338:6:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5332:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5332:13:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5322:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 418,
														"isOffset": false,
														"isSlot": false,
														"src": "5338:6:0",
														"valueSize": 1
													},
													{
														"declaration": 415,
														"isOffset": false,
														"isSlot": false,
														"src": "5322:6:0",
														"valueSize": 1
													}
												],
												"id": 424,
												"nodeType": "InlineAssembly",
												"src": "5294:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 425,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 415,
													"src": "5383:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 406,
												"id": 426,
												"nodeType": "Return",
												"src": "5376:13:0"
											}
										]
									},
									"documentation": null,
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUintStrict",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 428,
												"src": "5087:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 401,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "5087:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5086:21:0"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 428,
												"src": "5131:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5131:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5130:6:0"
									},
									"scope": 662,
									"src": "5065:336:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "6037:393:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 435,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "6056:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "6056:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6068:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6056:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 441,
												"nodeType": "IfStatement",
												"src": "6052:27:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6078:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 434,
													"id": 440,
													"nodeType": "Return",
													"src": "6071:8:0"
												}
											},
											{
												"assignments": [
													443
												],
												"declarations": [
													{
														"constant": false,
														"id": 443,
														"name": "count",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 482,
														"src": "6094:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 442,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6094:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 445,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6107:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6094:14:0"
											},
											{
												"assignments": [
													447
												],
												"declarations": [
													{
														"constant": false,
														"id": 447,
														"name": "currPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 482,
														"src": "6123:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 446,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6123:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 455,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 448,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "6138:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "memPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "6138:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 451,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "6167:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 452,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "memPtr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 36,
																"src": "6167:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 450,
															"name": "_payloadOffset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "6152:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) pure returns (uint256)"
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6152:27:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6138:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6123:56:0"
											},
											{
												"assignments": [
													457
												],
												"declarations": [
													{
														"constant": false,
														"id": 457,
														"name": "endPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 482,
														"src": "6194:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 456,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6194:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 463,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 458,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "6208:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "memPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "6208:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 460,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "6222:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 461,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "6222:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6208:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6194:36:0"
											},
											{
												"body": {
													"id": 478,
													"nodeType": "Block",
													"src": "6270:122:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 467,
																	"name": "currPtr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "6289:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 468,
																		"name": "currPtr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "6299:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 470,
																				"name": "currPtr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 447,
																				"src": "6321:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 469,
																			"name": "_itemLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 561,
																			"src": "6309:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6309:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6299:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6289:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 474,
															"nodeType": "ExpressionStatement",
															"src": "6289:40:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "6369:7:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 475,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 443,
																	"src": "6369:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 477,
															"nodeType": "ExpressionStatement",
															"src": "6369:7:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 464,
														"name": "currPtr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6252:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 465,
														"name": "endPtr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "6262:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6252:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 479,
												"nodeType": "WhileStatement",
												"src": "6245:147:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 480,
													"name": "count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 443,
													"src": "6413:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 434,
												"id": 481,
												"nodeType": "Return",
												"src": "6406:12:0"
											}
										]
									},
									"documentation": null,
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "numItems",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 483,
												"src": "5988:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 429,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "5988:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5987:21:0"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 483,
												"src": "6031:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6031:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6030:6:0"
									},
									"scope": 662,
									"src": "5970:460:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "6504:1552:0",
										"statements": [
											{
												"assignments": [
													491
												],
												"declarations": [
													{
														"constant": false,
														"id": 491,
														"name": "itemLen",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 560,
														"src": "6519:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 490,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6519:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "6519:12:0"
											},
											{
												"assignments": [
													494
												],
												"declarations": [
													{
														"constant": false,
														"id": 494,
														"name": "byte0",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 560,
														"src": "6546:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 493,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6546:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 495,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "6546:10:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6580:65:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6599:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6613:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6622:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6616:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6616:13:0"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nodeType": "YulIdentifier",
																	"src": "6608:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6608:22:0"
															},
															"variableNames": [
																{
																	"name": "byte0",
																	"nodeType": "YulIdentifier",
																	"src": "6599:5:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 494,
														"isOffset": false,
														"isSlot": false,
														"src": "6599:5:0",
														"valueSize": 1
													},
													{
														"declaration": 485,
														"isOffset": false,
														"isSlot": false,
														"src": "6622:6:0",
														"valueSize": 1
													}
												],
												"id": 496,
												"nodeType": "InlineAssembly",
												"src": "6571:74:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 497,
														"name": "byte0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "6665:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 498,
														"name": "STRING_SHORT_START",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "6673:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6665:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 504,
															"name": "byte0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "6747:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 505,
															"name": "STRING_LONG_START",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "6755:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "6747:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 515,
																"name": "byte0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "6857:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 516,
																"name": "LIST_SHORT_START",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "6865:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "6857:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 530,
																	"name": "byte0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 494,
																	"src": "7452:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 531,
																	"name": "LIST_LONG_START",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "7460:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "7452:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 553,
																"nodeType": "Block",
																"src": "7571:443:0",
																"statements": [
																	{
																		"assignments": [
																			543
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 543,
																				"name": "dataLen",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 553,
																				"src": "7590:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 542,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "7590:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 544,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7590:12:0"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7630:302:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7653:31:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "byte0",
																								"nodeType": "YulIdentifier",
																								"src": "7672:5:0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7679:4:0",
																								"type": "",
																								"value": "0xf7"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "7668:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7668:16:0"
																					},
																					"variables": [
																						{
																							"name": "byteLen",
																							"nodeType": "YulTypedName",
																							"src": "7657:7:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"nodeType": "YulAssignment",
																					"src": "7706:24:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "memPtr",
																								"nodeType": "YulIdentifier",
																								"src": "7720:6:0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7728:1:0",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7716:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7716:14:0"
																					},
																					"variableNames": [
																						{
																							"name": "memPtr",
																							"nodeType": "YulIdentifier",
																							"src": "7706:6:0"
																						}
																					]
																				},
																				{
																					"nodeType": "YulAssignment",
																					"src": "7754:57:0",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "memPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7775:6:0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "7769:5:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7769:13:0"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7788:3:0",
																										"type": "",
																										"value": "256"
																									},
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "7797:2:0",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "byteLen",
																												"nodeType": "YulIdentifier",
																												"src": "7801:7:0"
																											}
																										],
																										"functionName": {
																											"name": "sub",
																											"nodeType": "YulIdentifier",
																											"src": "7793:3:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7793:16:0"
																									}
																								],
																								"functionName": {
																									"name": "exp",
																									"nodeType": "YulIdentifier",
																									"src": "7784:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7784:26:0"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "7765:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7765:46:0"
																					},
																					"variableNames": [
																						{
																							"name": "dataLen",
																							"nodeType": "YulIdentifier",
																							"src": "7754:7:0"
																						}
																					]
																				},
																				{
																					"nodeType": "YulAssignment",
																					"src": "7873:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "dataLen",
																								"nodeType": "YulIdentifier",
																								"src": "7888:7:0"
																							},
																							{
																								"arguments": [
																									{
																										"name": "byteLen",
																										"nodeType": "YulIdentifier",
																										"src": "7901:7:0"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7910:1:0",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7897:15:0"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7884:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7884:29:0"
																					},
																					"variableNames": [
																						{
																							"name": "itemLen",
																							"nodeType": "YulIdentifier",
																							"src": "7873:7:0"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 494,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7672:5:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 543,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7754:7:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 543,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7888:7:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 491,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7873:7:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 485,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7706:6:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 485,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7720:6:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 485,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7775:6:0",
																				"valueSize": 1
																			}
																		],
																		"id": 545,
																		"nodeType": "InlineAssembly",
																		"src": "7621:311:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 549,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 547,
																						"name": "itemLen",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 491,
																						"src": "7958:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 548,
																						"name": "dataLen",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 543,
																						"src": "7969:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "7958:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "6164646974696f6e206f766572666c6f77",
																					"id": 550,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7978:19:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
																						"typeString": "literal_string \"addition overflow\""
																					},
																					"value": "addition overflow"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
																						"typeString": "literal_string \"addition overflow\""
																					}
																				],
																				"id": 546,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-18,
																					-18
																				],
																				"referencedDeclaration": -18,
																				"src": "7950:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7950:48:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 552,
																		"nodeType": "ExpressionStatement",
																		"src": "7950:48:0"
																	}
																]
															},
															"id": 554,
															"nodeType": "IfStatement",
															"src": "7448:566:0",
															"trueBody": {
																"id": 541,
																"nodeType": "Block",
																"src": "7477:73:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 533,
																				"name": "itemLen",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 491,
																				"src": "7496:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 538,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 536,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 534,
																						"name": "byte0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 494,
																						"src": "7506:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 535,
																						"name": "LIST_SHORT_START",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 26,
																						"src": "7514:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "7506:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 537,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7533:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "7506:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7496:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 540,
																		"nodeType": "ExpressionStatement",
																		"src": "7496:38:0"
																	}
																]
															}
														},
														"id": 555,
														"nodeType": "IfStatement",
														"src": "6853:1161:0",
														"trueBody": {
															"id": 529,
															"nodeType": "Block",
															"src": "6883:544:0",
															"statements": [
																{
																	"assignments": [
																		519
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 519,
																			"name": "dataLen",
																			"nodeType": "VariableDeclaration",
																			"overrides": null,
																			"scope": 529,
																			"src": "6902:12:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 518,
																				"name": "uint",
																				"nodeType": "ElementaryTypeName",
																				"src": "6902:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"value": null,
																			"visibility": "internal"
																		}
																	],
																	"id": 520,
																	"initialValue": null,
																	"nodeType": "VariableDeclarationStatement",
																	"src": "6902:12:0"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "6942:403:0",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6965:31:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "byte0",
																							"nodeType": "YulIdentifier",
																							"src": "6984:5:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6991:4:0",
																							"type": "",
																							"value": "0xb7"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "6980:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6980:16:0"
																				},
																				"variables": [
																					{
																						"name": "byteLen",
																						"nodeType": "YulTypedName",
																						"src": "6969:7:0",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "7053:24:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "memPtr",
																							"nodeType": "YulIdentifier",
																							"src": "7067:6:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7075:1:0",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7063:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7063:14:0"
																				},
																				"variableNames": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "7053:6:0"
																					}
																				]
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "7174:57:0",
																				"value": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7195:6:0"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "7189:5:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7189:13:0"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7208:3:0",
																									"type": "",
																									"value": "256"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "7217:2:0",
																											"type": "",
																											"value": "32"
																										},
																										{
																											"name": "byteLen",
																											"nodeType": "YulIdentifier",
																											"src": "7221:7:0"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nodeType": "YulIdentifier",
																										"src": "7213:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "7213:16:0"
																								}
																							],
																							"functionName": {
																								"name": "exp",
																								"nodeType": "YulIdentifier",
																								"src": "7204:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7204:26:0"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "7185:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7185:46:0"
																				},
																				"variableNames": [
																					{
																						"name": "dataLen",
																						"nodeType": "YulIdentifier",
																						"src": "7174:7:0"
																					}
																				]
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "7286:40:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "dataLen",
																							"nodeType": "YulIdentifier",
																							"src": "7301:7:0"
																						},
																						{
																							"arguments": [
																								{
																									"name": "byteLen",
																									"nodeType": "YulIdentifier",
																									"src": "7314:7:0"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7323:1:0",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7310:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7310:15:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7297:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7297:29:0"
																				},
																				"variableNames": [
																					{
																						"name": "itemLen",
																						"nodeType": "YulIdentifier",
																						"src": "7286:7:0"
																					}
																				]
																			}
																		]
																	},
																	"evmVersion": "istanbul",
																	"externalReferences": [
																		{
																			"declaration": 494,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "6984:5:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 519,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "7174:7:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 519,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "7301:7:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 491,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "7286:7:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 485,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "7053:6:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 485,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "7067:6:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 485,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "7195:6:0",
																			"valueSize": 1
																		}
																	],
																	"id": 521,
																	"nodeType": "InlineAssembly",
																	"src": "6933:412:0"
																},
																{
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 525,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 523,
																					"name": "itemLen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 491,
																					"src": "7371:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 524,
																					"name": "dataLen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 519,
																					"src": "7382:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7371:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"hexValue": "6164646974696f6e206f766572666c6f77",
																				"id": 526,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7391:19:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
																					"typeString": "literal_string \"addition overflow\""
																				},
																				"value": "addition overflow"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
																					"typeString": "literal_string \"addition overflow\""
																				}
																			],
																			"id": 522,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				-18,
																				-18
																			],
																			"referencedDeclaration": -18,
																			"src": "7363:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (bool,string memory) pure"
																			}
																		},
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7363:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 528,
																	"nodeType": "ExpressionStatement",
																	"src": "7363:48:0"
																}
															]
														}
													},
													"id": 556,
													"nodeType": "IfStatement",
													"src": "6743:1271:0",
													"trueBody": {
														"expression": {
															"argumentTypes": null,
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"id": 507,
																"name": "itemLen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "6791:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 508,
																		"name": "byte0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 494,
																		"src": "6801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 509,
																		"name": "STRING_SHORT_START",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 20,
																		"src": "6809:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "6801:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6830:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6801:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6791:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 514,
														"nodeType": "ExpressionStatement",
														"src": "6791:40:0"
													}
												},
												"id": 557,
												"nodeType": "IfStatement",
												"src": "6661:1353:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 500,
															"name": "itemLen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "6710:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6720:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "6710:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 503,
													"nodeType": "ExpressionStatement",
													"src": "6710:11:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 558,
													"name": "itemLen",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 491,
													"src": "8037:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 489,
												"id": 559,
												"nodeType": "Return",
												"src": "8030:14:0"
											}
										]
									},
									"documentation": null,
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_itemLength",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"name": "memPtr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 561,
												"src": "6463:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6463:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6462:13:0"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 561,
												"src": "6498:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6498:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6497:6:0"
									},
									"scope": 662,
									"src": "6442:1614:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "8185:538:0",
										"statements": [
											{
												"assignments": [
													569
												],
												"declarations": [
													{
														"constant": false,
														"id": 569,
														"name": "byte0",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 615,
														"src": "8200:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 568,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8200:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 570,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "8200:10:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8234:65:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8253:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8267:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8276:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8270:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8270:13:0"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nodeType": "YulIdentifier",
																	"src": "8262:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8262:22:0"
															},
															"variableNames": [
																{
																	"name": "byte0",
																	"nodeType": "YulIdentifier",
																	"src": "8253:5:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 569,
														"isOffset": false,
														"isSlot": false,
														"src": "8253:5:0",
														"valueSize": 1
													},
													{
														"declaration": 563,
														"isOffset": false,
														"isSlot": false,
														"src": "8276:6:0",
														"valueSize": 1
													}
												],
												"id": 571,
												"nodeType": "InlineAssembly",
												"src": "8225:74:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 572,
														"name": "byte0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "8319:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 573,
														"name": "STRING_SHORT_START",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "8327:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "8319:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 577,
																"name": "byte0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "8396:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 578,
																"name": "STRING_LONG_START",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "8404:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8396:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 580,
																			"name": "byte0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 569,
																			"src": "8426:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 581,
																			"name": "LIST_SHORT_START",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 26,
																			"src": "8435:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "8426:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 583,
																			"name": "byte0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 569,
																			"src": "8455:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 584,
																			"name": "LIST_LONG_START",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 29,
																			"src": "8463:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "8455:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "8426:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 587,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8425:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "8396:83:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 591,
																"name": "byte0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "8530:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 592,
																"name": "LIST_SHORT_START",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "8538:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8530:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"expression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 603,
																		"name": "byte0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "8678:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 604,
																					"name": "LIST_LONG_START",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 29,
																					"src": "8687:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 605,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8705:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "8687:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 607,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8686:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "8678:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8710:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8678:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 567,
															"id": 611,
															"nodeType": "Return",
															"src": "8671:40:0"
														},
														"id": 612,
														"nodeType": "IfStatement",
														"src": "8526:185:0",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 594,
																		"name": "byte0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "8599:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 595,
																					"name": "STRING_LONG_START",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 23,
																					"src": "8608:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 596,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8628:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "8608:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 598,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8607:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "8599:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8633:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8599:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 567,
															"id": 602,
															"nodeType": "Return",
															"src": "8592:42:0"
														}
													},
													"id": 613,
													"nodeType": "IfStatement",
													"src": "8392:319:0",
													"trueBody": {
														"expression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8505:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"functionReturnParameters": 567,
														"id": 590,
														"nodeType": "Return",
														"src": "8498:8:0"
													}
												},
												"id": 614,
												"nodeType": "IfStatement",
												"src": "8315:396:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8371:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 567,
													"id": 576,
													"nodeType": "Return",
													"src": "8364:8:0"
												}
											}
										]
									},
									"documentation": null,
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_payloadOffset",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"name": "memPtr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 616,
												"src": "8144:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8144:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8143:13:0"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 616,
												"src": "8179:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8179:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8178:6:0"
									},
									"scope": 662,
									"src": "8120:603:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "8794:727:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 625,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "8813:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8820:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8813:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 629,
												"nodeType": "IfStatement",
												"src": "8809:21:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 624,
													"id": 628,
													"nodeType": "Return",
													"src": "8823:7:0"
												}
											},
											{
												"body": {
													"id": 646,
													"nodeType": "Block",
													"src": "8941:182:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8969:66:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dest",
																					"nodeType": "YulIdentifier",
																					"src": "8999:4:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "9011:3:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "9005:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9005:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8992:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8992:24:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8992:24:0"
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 620,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "8999:4:0",
																	"valueSize": 1
																},
																{
																	"declaration": 618,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9011:3:0",
																	"valueSize": 1
																}
															],
															"id": 637,
															"nodeType": "InlineAssembly",
															"src": "8960:75:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 638,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "9055:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 639,
																	"name": "WORD_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "9062:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "9055:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 641,
															"nodeType": "ExpressionStatement",
															"src": "9055:16:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 642,
																	"name": "dest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "9090:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 643,
																	"name": "WORD_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "9098:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "9090:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 645,
															"nodeType": "ExpressionStatement",
															"src": "9090:17:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 630,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "8905:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 631,
														"name": "WORD_SIZE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "8912:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "8905:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 647,
												"initializationExpression": null,
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 633,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "8923:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"argumentTypes": null,
															"id": 634,
															"name": "WORD_SIZE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "8930:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "8923:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 636,
													"nodeType": "ExpressionStatement",
													"src": "8923:16:0"
												},
												"nodeType": "ForStatement",
												"src": "8898:225:0"
											},
											{
												"assignments": [
													649
												],
												"declarations": [
													{
														"constant": false,
														"id": 649,
														"name": "mask",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 660,
														"src": "9224:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 648,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9224:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 658,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "323536",
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9236:3:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "256"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 651,
																		"name": "WORD_SIZE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 32,
																		"src": "9244:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 652,
																		"name": "len",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 622,
																		"src": "9256:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9244:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 654,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9243:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9236:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 656,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9263:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9236:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9224:40:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9288:222:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9307:41:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "9332:3:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9326:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9326:10:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "9342:4:0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9338:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9338:9:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9322:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "9322:26:0"
															},
															"variables": [
																{
																	"name": "srcpart",
																	"nodeType": "YulTypedName",
																	"src": "9311:7:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9382:38:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dest",
																				"nodeType": "YulIdentifier",
																				"src": "9408:4:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9402:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9402:11:0"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "9415:4:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9398:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "9398:22:0"
															},
															"variables": [
																{
																	"name": "destpart",
																	"nodeType": "YulTypedName",
																	"src": "9386:8:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dest",
																		"nodeType": "YulIdentifier",
																		"src": "9467:4:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "destpart",
																				"nodeType": "YulIdentifier",
																				"src": "9476:8:0"
																			},
																			{
																				"name": "srcpart",
																				"nodeType": "YulIdentifier",
																				"src": "9486:7:0"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "9473:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9473:21:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9460:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "9460:35:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9460:35:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 620,
														"isOffset": false,
														"isSlot": false,
														"src": "9408:4:0",
														"valueSize": 1
													},
													{
														"declaration": 620,
														"isOffset": false,
														"isSlot": false,
														"src": "9467:4:0",
														"valueSize": 1
													},
													{
														"declaration": 649,
														"isOffset": false,
														"isSlot": false,
														"src": "9342:4:0",
														"valueSize": 1
													},
													{
														"declaration": 649,
														"isOffset": false,
														"isSlot": false,
														"src": "9415:4:0",
														"valueSize": 1
													},
													{
														"declaration": 618,
														"isOffset": false,
														"isSlot": false,
														"src": "9332:3:0",
														"valueSize": 1
													}
												],
												"id": 659,
												"nodeType": "InlineAssembly",
												"src": "9279:231:0"
											}
										]
									},
									"documentation": null,
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "copy",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"name": "src",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 661,
												"src": "8750:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8750:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"name": "dest",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 661,
												"src": "8760:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8760:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"name": "len",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 661,
												"src": "8771:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8749:31:0"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8794:0:0"
									},
									"scope": 662,
									"src": "8736:785:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 663,
							"src": "81:9447:0"
						}
					],
					"src": "4:9539:0"
				},
				"id": 0
			}
		}
	}
}