{
	"id": "77116a72316332d74cf1967b0cb54a90",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.4",
	"solcLongVersion": "0.6.4+commit.1dca32f3",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/demo2.sol": {
				"content": "    pragma solidity >0.4.0 <0.9.0;\r\n    pragma experimental ABIEncoderV2;\r\n\r\n    contract demo2 {\r\n        bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\";\r\n        bytes public data3 = \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\";\r\n        bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\";\r\n        uint8 constant STRING_OFFSET = 0x80;\r\n        uint8 constant LIST_OFFSET = 0xc0;\r\n        uint8 constant STRING_SHORT_START = 0x80;\r\n        uint8 constant STRING_LONG_START  = 0xb8;\r\n        uint8 constant LIST_SHORT_START   = 0xc0;\r\n        uint8 constant LIST_LONG_START    = 0xf8;\r\n        uint8 constant WORD_SIZE = 32;\r\n        \r\n        struct RLPItem {\r\n            uint len;\r\n            uint memPtr;\r\n        }\r\n\r\n        struct Iterator {\r\n            RLPItem item;   // Item that's being iterated over.\r\n            uint nextPtr;   // Position of the next item in the list.\r\n        }\r\n\r\n        RLPItem public rlpItem;\r\n        Iterator public iterator;\r\n\r\n        constructor() public {\r\n            rlpItem.len = 6;\r\n            rlpItem.memPtr = 2;\r\n            iterator.item = rlpItem;\r\n            iterator.nextPtr = 4;\r\n        }\r\n               \r\n\r\n        function getDecodeData(bytes memory self) public view returns(RLPItem memory) {\r\n            return toRLPItem(self);\r\n        }\r\n\r\n        function getEncodeData() public view returns(bytes memory) {\r\n            return toBytes(rlpItem);\r\n        }\r\n\r\n        function toRLPItem(bytes memory self) internal pure returns (RLPItem memory) {\r\n            uint memPtr;\r\n            assembly {\r\n                memPtr := add(self, 0x20)\r\n            }\r\n\r\n            return RLPItem(self.length, memPtr);\r\n        }\r\n\r\n        function toBytes(RLPItem memory item) internal pure returns (bytes memory) {\r\n            require(item.len > 0);\r\n\r\n            uint offset = _payloadOffset(item.memPtr);\r\n            uint len = item.len - offset; // data length\r\n            bytes memory result = new bytes(len);\r\n\r\n            uint destPtr;\r\n            assembly {\r\n                destPtr := add(0x20, result)\r\n            }\r\n\r\n            copy(item.memPtr + offset, destPtr, len);\r\n            return result;\r\n        }\r\n        \r\n\r\n\r\n        function next(Iterator memory self) internal pure returns (RLPItem memory) {\r\n            require(hasNext(self));\r\n\r\n            uint ptr = self.nextPtr;\r\n            uint itemLength = _itemLength(ptr);\r\n            self.nextPtr = ptr + itemLength;\r\n\r\n            return RLPItem(itemLength, ptr);\r\n        }\r\n\r\n        function hasNext(Iterator memory self) internal pure returns (bool) {\r\n            RLPItem memory item = self.item;\r\n            return self.nextPtr < item.memPtr + item.len;\r\n        }\r\n        \r\n        function toRlpBytes(RLPItem memory item) internal pure returns (bytes memory) {\r\n            bytes memory result = new bytes(item.len);\r\n            if (result.length == 0) return result;\r\n\r\n            uint ptr;\r\n            assembly {\r\n                ptr := add(0x20, result)\r\n            }\r\n\r\n            copy(item.memPtr, ptr, item.len);\r\n            return result;\r\n        }\r\n\r\n        function toBoolean(RLPItem memory item) internal pure returns (bool) {\r\n            require(item.len == 1);\r\n            uint result;\r\n            uint memPtr = item.memPtr;\r\n            assembly {\r\n                result := byte(0, mload(memPtr))\r\n            }\r\n\r\n            return result == 0 ? false : true;\r\n        }\r\n\r\n        function toAddress(RLPItem memory item) internal pure returns (address) {\r\n            // 1 byte for the length prefix\r\n            require(item.len == 21);\r\n\r\n            return address(toUint(item));\r\n        }\r\n\r\n        function toUint(RLPItem memory item) internal pure returns (uint) {\r\n            require(item.len > 0 && item.len <= 33);\r\n\r\n            uint offset = _payloadOffset(item.memPtr);\r\n            require(item.len >= offset, \"length is less than offset\");\r\n            uint len = item.len - offset;\r\n\r\n            uint result;\r\n            uint memPtr = item.memPtr + offset;\r\n            assembly {\r\n                result := mload(memPtr)\r\n            // shfit to the correct location if neccesary\r\n                if lt(len, 32) {\r\n                    result := div(result, exp(256, sub(32, len)))\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n         \r\n        function toUintStrict(RLPItem memory item) internal pure returns (uint) {\r\n            // one byte prefix\r\n            require(item.len == 33);\r\n\r\n            uint result;\r\n            uint memPtr = item.memPtr + 1;\r\n            assembly {\r\n                result := mload(memPtr)\r\n            }\r\n\r\n            return result;\r\n        }\r\n        \r\n\r\n        // function toBytes(RLPItem memory item) internal pure returns (bytes memory) {\r\n        //     require(item.len > 0);\r\n\r\n        //     uint offset = _payloadOffset(item.memPtr);\r\n        //     uint len = item.len - offset; // data length\r\n        //     bytes memory result = new bytes(len);\r\n\r\n        //     uint destPtr;\r\n        //     assembly {\r\n        //         destPtr := add(0x20, result)\r\n        //     }\r\n\r\n        //     copy(item.memPtr + offset, destPtr, len);\r\n        //     return result;\r\n        // }\r\n\r\n        \r\n        function numItems(RLPItem memory item) private pure returns (uint) {\r\n            if (item.len == 0) return 0;\r\n            uint count = 0;\r\n            uint currPtr = item.memPtr + _payloadOffset(item.memPtr);\r\n            uint endPtr = item.memPtr + item.len;\r\n            while (currPtr < endPtr) {\r\n                currPtr = currPtr + _itemLength(currPtr); // skip over an item\r\n                count++;\r\n            }\r\n            return count;\r\n        }\r\n\r\n        function _itemLength(uint memPtr) private pure returns (uint) {\r\n            uint itemLen;\r\n            uint byte0;\r\n            assembly {\r\n                byte0 := byte(0, mload(memPtr))\r\n            }\r\n\r\n            if (byte0 < STRING_SHORT_START)\r\n                itemLen = 1;\r\n\r\n            else if (byte0 < STRING_LONG_START)\r\n                itemLen = byte0 - STRING_SHORT_START + 1;\r\n\r\n            else if (byte0 < LIST_SHORT_START) {\r\n                uint dataLen;\r\n                assembly {\r\n                    let byteLen := sub(byte0, 0xb7) // # of bytes the actual length is\r\n                    memPtr := add(memPtr, 1) // skip over the first byte\r\n\r\n                    /* 32 byte word size */\r\n                    dataLen := div(mload(memPtr), exp(256, sub(32, byteLen))) // right shifting to get the len\r\n                    itemLen := add(dataLen, add(byteLen, 1))\r\n                }\r\n                require(itemLen >= dataLen, \"addition overflow\");\r\n            }\r\n\r\n            else if (byte0 < LIST_LONG_START) {\r\n                itemLen = byte0 - LIST_SHORT_START + 1;\r\n            }\r\n\r\n            else {\r\n                uint dataLen;\r\n                assembly {\r\n                    let byteLen := sub(byte0, 0xf7)\r\n                    memPtr := add(memPtr, 1)\r\n\r\n                    dataLen := div(mload(memPtr), exp(256, sub(32, byteLen))) // right shifting to the correct length\r\n                    itemLen := add(dataLen, add(byteLen, 1))\r\n                }\r\n                require(itemLen >= dataLen, \"addition overflow\");\r\n            }\r\n\r\n            return itemLen;\r\n        }\r\n\r\n         // @return number of bytes until the data\r\n        function _payloadOffset(uint memPtr) private pure returns (uint) {\r\n            uint byte0;\r\n            assembly {\r\n                byte0 := byte(0, mload(memPtr))\r\n            }\r\n\r\n            if (byte0 < STRING_SHORT_START)\r\n                return 0;\r\n            else if (byte0 < STRING_LONG_START || (byte0 >= LIST_SHORT_START && byte0 < LIST_LONG_START))\r\n                return 1;\r\n            else if (byte0 < LIST_SHORT_START)  // being explicit\r\n                return byte0 - (STRING_LONG_START - 1) + 1;\r\n            else\r\n                return byte0 - (LIST_LONG_START - 1) + 1;\r\n        } \r\n\r\n        function copy(uint src, uint dest, uint len) private pure {\r\n            if (len == 0) return;\r\n\r\n            // copy as many word sizes as possible\r\n            for (; len >= WORD_SIZE; len -= WORD_SIZE) {\r\n                assembly {\r\n                    mstore(dest, mload(src))\r\n                }\r\n\r\n                src += WORD_SIZE;\r\n                dest += WORD_SIZE;\r\n            }\r\n\r\n            // left over bytes. Mask is used to remove unwanted bytes from the word\r\n            uint mask = 256 ** (WORD_SIZE - len) - 1;\r\n            assembly {\r\n                let srcpart := and(mload(src), not(mask)) // zero out src\r\n                let destpart := and(mload(dest), mask) // retrieve the bytes\r\n                mstore(dest, or(destpart, srcpart))\r\n            }\r\n        }\r\n    } \r\n            "
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/demo2.sol": {
				"demo2": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "data1",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "data2",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "data3",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "self",
									"type": "bytes"
								}
							],
							"name": "getDecodeData",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "len",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "memPtr",
											"type": "uint256"
										}
									],
									"internalType": "struct demo2.RLPItem",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEncodeData",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "iterator",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "len",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "memPtr",
											"type": "uint256"
										}
									],
									"internalType": "struct demo2.RLPItem",
									"name": "item",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "nextPtr",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rlpItem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "len",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "memPtr",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/demo2.sol\":81:8860  contract demo2 {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/demo2.sol\":107:176  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x2e\n  dup2\n  mstore\n  0x20\n  add\n  data_4887836e294a2761413359597244d307bbe3f94827f6160d9e1a399e00e2d1be\n  0x2e\n  swap2\n  codecopy\n  0x00\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/demo2.sol\":187:252  bytes public data3 = \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\" */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x2a\n  dup2\n  mstore\n  0x20\n  add\n  data_c359735a342ece061e65ab7390d246d1e53ba5f24eea70d6201f1d4a7b2f3475\n  0x2a\n  swap2\n  codecopy\n  0x01\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_3\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_3:\n  pop\n    /* \"contracts/demo2.sol\":263:310  bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\" */\n  sstore(0x02, 0x4c45484f4e47564f776a6e66766a3377656838764b4a00000000000000000000)\n    /* \"contracts/demo2.sol\":999:1168  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_4:\n    /* \"contracts/demo2.sol\":999:1168  constructor() public {\r... */\n  pop\n    /* \"contracts/demo2.sol\":1049:1050  6 */\n  0x06\n    /* \"contracts/demo2.sol\":1035:1042  rlpItem */\n  0x03\n    /* \"contracts/demo2.sol\":1035:1046  rlpItem.len */\n  0x00\n  add\n    /* \"contracts/demo2.sol\":1035:1050  rlpItem.len = 6 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/demo2.sol\":1082:1083  2 */\n  0x02\n    /* \"contracts/demo2.sol\":1065:1072  rlpItem */\n  0x03\n    /* \"contracts/demo2.sol\":1065:1079  rlpItem.memPtr */\n  0x01\n  add\n    /* \"contracts/demo2.sol\":1065:1083  rlpItem.memPtr = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/demo2.sol\":1114:1121  rlpItem */\n  0x03\n    /* \"contracts/demo2.sol\":1098:1106  iterator */\n  0x05\n    /* \"contracts/demo2.sol\":1098:1111  iterator.item */\n  0x00\n  add\n    /* \"contracts/demo2.sol\":1098:1121  iterator.item = rlpItem */\n  0x00\n  dup3\n  add\n  sload\n  dup2\n  0x00\n  add\n  sstore\n  0x01\n  dup3\n  add\n  sload\n  dup2\n  0x01\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"contracts/demo2.sol\":1155:1156  4 */\n  0x04\n    /* \"contracts/demo2.sol\":1136:1144  iterator */\n  0x05\n    /* \"contracts/demo2.sol\":1136:1152  iterator.nextPtr */\n  0x02\n  add\n    /* \"contracts/demo2.sol\":1136:1156  iterator.nextPtr = 4 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/demo2.sol\":81:8860  contract demo2 {\r... */\n  jump(tag_7)\ntag_2:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_9\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_8)\ntag_9:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_8\n  jumpi\n  swap2\n  dup3\n  add\ntag_10:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_10)\ntag_11:\ntag_8:\n  pop\n  swap1\n  pop\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n  swap1\n  jump\t// out\ntag_13:\n  tag_14\n  swap2\n  swap1\ntag_15:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_16\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_15)\ntag_16:\n  pop\n  swap1\n  jump\ntag_14:\n  swap1\n  jump\t// out\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_4887836e294a2761413359597244d307bbe3f94827f6160d9e1a399e00e2d1be 4e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f\ndata_c359735a342ece061e65ab7390d246d1e53ba5f24eea70d6201f1d4a7b2f3475 7364664e417364667364664c4548484a5347445348444a53484a53484a534844534a44484a4f4e47564f\n\nsub_0: assembly {\n        /* \"contracts/demo2.sol\":81:8860  contract demo2 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"contracts/demo2.sol\":81:8860  contract demo2 {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xe3a7fd75\n      gt\n      tag_10\n      jumpi\n      dup1\n      0xe3a7fd75\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xeaacd81e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfc26b0ab\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xfddcc148\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x2ed5fb83\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9ffd85c4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa699fb03\n      eq\n      tag_5\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/demo2.sol\":1197:1324  function getDecodeData(bytes memory self) public view returns(RLPItem memory) {\r... */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      jump(tag_13)\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      jump(tag_16)\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":107:176  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      jump(tag_20)\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":929:951  RLPItem public rlpItem */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap3\n      swap2\n      swap1\n      jump(tag_24)\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":263:310  bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\" */\n    tag_6:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      jump(tag_28)\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":1336:1445  function getEncodeData() public view returns(bytes memory) {\r... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      jump(tag_32)\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":187:252  bytes public data3 = \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      jump(tag_20)\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":962:986  Iterator public iterator */\n    tag_9:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap3\n      swap2\n      swap1\n      jump(tag_39)\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":1197:1324  function getDecodeData(bytes memory self) public view returns(RLPItem memory) {\r... */\n    tag_14:\n        /* \"contracts/demo2.sol\":1259:1273  RLPItem memory */\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"contracts/demo2.sol\":1297:1312  toRLPItem(self) */\n      tag_43\n        /* \"contracts/demo2.sol\":1307:1311  self */\n      dup3\n        /* \"contracts/demo2.sol\":1297:1306  toRLPItem */\n      tag_44\n        /* \"contracts/demo2.sol\":1297:1312  toRLPItem(self) */\n      jump\t// in\n    tag_43:\n        /* \"contracts/demo2.sol\":1290:1312  return toRLPItem(self) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":1197:1324  function getDecodeData(bytes memory self) public view returns(RLPItem memory) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/demo2.sol\":107:176  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_18:\n      0x00\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_45\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_46\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_45)\n    tag_46:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_47:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_47\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_45:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/demo2.sol\":929:951  RLPItem public rlpItem */\n    tag_22:\n      0x03\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/demo2.sol\":263:310  bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\" */\n    tag_26:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/demo2.sol\":1336:1445  function getEncodeData() public view returns(bytes memory) {\r... */\n    tag_30:\n        /* \"contracts/demo2.sol\":1381:1393  bytes memory */\n      0x60\n        /* \"contracts/demo2.sol\":1417:1433  toBytes(rlpItem) */\n      tag_49\n        /* \"contracts/demo2.sol\":1425:1432  rlpItem */\n      0x03\n        /* \"contracts/demo2.sol\":1417:1433  toBytes(rlpItem) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/demo2.sol\":1417:1424  toBytes */\n      tag_50\n        /* \"contracts/demo2.sol\":1417:1433  toBytes(rlpItem) */\n      jump\t// in\n    tag_49:\n        /* \"contracts/demo2.sol\":1410:1433  return toBytes(rlpItem) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":1336:1445  function getEncodeData() public view returns(bytes memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/demo2.sol\":187:252  bytes public data3 = \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_34:\n      0x01\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_51\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_52\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_51)\n    tag_52:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_53:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_53\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_51:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/demo2.sol\":962:986  Iterator public iterator */\n    tag_37:\n      0x05\n      dup1\n      0x00\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/demo2.sol\":1457:1706  function toRLPItem(bytes memory self) internal pure returns (RLPItem memory) {\r... */\n    tag_44:\n        /* \"contracts/demo2.sol\":1518:1532  RLPItem memory */\n      tag_54\n      tag_41\n      jump\t// in\n    tag_54:\n        /* \"contracts/demo2.sol\":1549:1560  uint memPtr */\n      0x00\n        /* \"contracts/demo2.sol\":1623:1627  0x20 */\n      0x20\n        /* \"contracts/demo2.sol\":1617:1621  self */\n      dup4\n        /* \"contracts/demo2.sol\":1613:1628  add(self, 0x20) */\n      add\n        /* \"contracts/demo2.sol\":1603:1628  memPtr := add(self, 0x20) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":1666:1694  RLPItem(self.length, memPtr) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/demo2.sol\":1674:1678  self */\n      dup5\n        /* \"contracts/demo2.sol\":1674:1685  self.length */\n      mload\n        /* \"contracts/demo2.sol\":1666:1694  RLPItem(self.length, memPtr) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/demo2.sol\":1687:1693  memPtr */\n      dup3\n        /* \"contracts/demo2.sol\":1666:1694  RLPItem(self.length, memPtr) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/demo2.sol\":1659:1694  return RLPItem(self.length, memPtr) */\n      swap2\n      pop\n      pop\n        /* \"contracts/demo2.sol\":1457:1706  function toRLPItem(bytes memory self) internal pure returns (RLPItem memory) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/demo2.sol\":1718:2207  function toBytes(RLPItem memory item) internal pure returns (bytes memory) {\r... */\n    tag_50:\n        /* \"contracts/demo2.sol\":1779:1791  bytes memory */\n      0x60\n        /* \"contracts/demo2.sol\":1827:1828  0 */\n      0x00\n        /* \"contracts/demo2.sol\":1816:1820  item */\n      dup3\n        /* \"contracts/demo2.sol\":1816:1824  item.len */\n      0x00\n      add\n      mload\n        /* \"contracts/demo2.sol\":1816:1828  item.len > 0 */\n      gt\n        /* \"contracts/demo2.sol\":1808:1829  require(item.len > 0) */\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/demo2.sol\":1808:1829  require(item.len > 0) */\n    tag_57:\n        /* \"contracts/demo2.sol\":1846:1857  uint offset */\n      0x00\n        /* \"contracts/demo2.sol\":1860:1887  _payloadOffset(item.memPtr) */\n      tag_58\n        /* \"contracts/demo2.sol\":1875:1879  item */\n      dup4\n        /* \"contracts/demo2.sol\":1875:1886  item.memPtr */\n      0x20\n      add\n      mload\n        /* \"contracts/demo2.sol\":1860:1874  _payloadOffset */\n      tag_59\n        /* \"contracts/demo2.sol\":1860:1887  _payloadOffset(item.memPtr) */\n      jump\t// in\n    tag_58:\n        /* \"contracts/demo2.sol\":1846:1887  uint offset = _payloadOffset(item.memPtr) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":1902:1910  uint len */\n      0x00\n        /* \"contracts/demo2.sol\":1924:1930  offset */\n      dup2\n        /* \"contracts/demo2.sol\":1913:1917  item */\n      dup5\n        /* \"contracts/demo2.sol\":1913:1921  item.len */\n      0x00\n      add\n      mload\n        /* \"contracts/demo2.sol\":1913:1930  item.len - offset */\n      sub\n        /* \"contracts/demo2.sol\":1902:1930  uint len = item.len - offset */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":1960:1979  bytes memory result */\n      0x60\n        /* \"contracts/demo2.sol\":1992:1995  len */\n      dup2\n        /* \"contracts/demo2.sol\":1982:1996  new bytes(len) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_60\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:30   */\n      0x01\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:31   */\n      mul\n        /* \"--CODEGEN--\":124:128   */\n      dup1\n        /* \"--CODEGEN--\":108:122   */\n      calldatasize\n        /* \"--CODEGEN--\":100:106   */\n      dup4\n        /* \"--CODEGEN--\":87:129   */\n      calldatacopy\n        /* \"--CODEGEN--\":155:159   */\n      dup1\n        /* \"--CODEGEN--\":147:153   */\n      dup3\n        /* \"--CODEGEN--\":143:160   */\n      add\n        /* \"--CODEGEN--\":133:160   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:164   */\n      pop\n        /* \"contracts/demo2.sol\":1982:1996  new bytes(len) */\n      swap1\n      pop\n    tag_60:\n      pop\n        /* \"contracts/demo2.sol\":1960:1996  bytes memory result = new bytes(len) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":2013:2025  uint destPtr */\n      0x00\n        /* \"contracts/demo2.sol\":2089:2095  result */\n      dup2\n        /* \"contracts/demo2.sol\":2083:2087  0x20 */\n      0x20\n        /* \"contracts/demo2.sol\":2079:2096  add(0x20, result) */\n      add\n        /* \"contracts/demo2.sol\":2068:2096  destPtr := add(0x20, result) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":2127:2167  copy(item.memPtr + offset, destPtr, len) */\n      tag_61\n        /* \"contracts/demo2.sol\":2146:2152  offset */\n      dup5\n        /* \"contracts/demo2.sol\":2132:2136  item */\n      dup8\n        /* \"contracts/demo2.sol\":2132:2143  item.memPtr */\n      0x20\n      add\n      mload\n        /* \"contracts/demo2.sol\":2132:2152  item.memPtr + offset */\n      add\n        /* \"contracts/demo2.sol\":2154:2161  destPtr */\n      dup3\n        /* \"contracts/demo2.sol\":2163:2166  len */\n      dup6\n        /* \"contracts/demo2.sol\":2127:2131  copy */\n      tag_62\n        /* \"contracts/demo2.sol\":2127:2167  copy(item.memPtr + offset, destPtr, len) */\n      jump\t// in\n    tag_61:\n        /* \"contracts/demo2.sol\":2189:2195  result */\n      dup2\n        /* \"contracts/demo2.sol\":2182:2195  return result */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/demo2.sol\":1718:2207  function toBytes(RLPItem memory item) internal pure returns (bytes memory) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/demo2.sol\":7452:8055  function _payloadOffset(uint memPtr) private pure returns (uint) {\r... */\n    tag_59:\n        /* \"contracts/demo2.sol\":7511:7515  uint */\n      0x00\n        /* \"contracts/demo2.sol\":7532:7542  uint byte0 */\n      dup1\n        /* \"contracts/demo2.sol\":7608:7614  memPtr */\n      dup3\n        /* \"contracts/demo2.sol\":7602:7615  mload(memPtr) */\n      mload\n        /* \"contracts/demo2.sol\":7599:7600  0 */\n      0x00\n        /* \"contracts/demo2.sol\":7594:7616  byte(0, mload(memPtr)) */\n      byte\n        /* \"contracts/demo2.sol\":7585:7616  byte0 := byte(0, mload(memPtr)) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":447:451  0x80 */\n      0x80\n        /* \"contracts/demo2.sol\":7651:7677  byte0 < STRING_SHORT_START */\n      0xff\n      and\n        /* \"contracts/demo2.sol\":7651:7656  byte0 */\n      dup2\n        /* \"contracts/demo2.sol\":7651:7677  byte0 < STRING_SHORT_START */\n      lt\n        /* \"contracts/demo2.sol\":7647:8043  if (byte0 < STRING_SHORT_START)\r... */\n      iszero\n      tag_64\n      jumpi\n        /* \"contracts/demo2.sol\":7703:7704  0 */\n      0x00\n        /* \"contracts/demo2.sol\":7696:7704  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_63)\n        /* \"contracts/demo2.sol\":7647:8043  if (byte0 < STRING_SHORT_START)\r... */\n    tag_64:\n        /* \"contracts/demo2.sol\":498:502  0xb8 */\n      0xb8\n        /* \"contracts/demo2.sol\":7728:7753  byte0 < STRING_LONG_START */\n      0xff\n      and\n        /* \"contracts/demo2.sol\":7728:7733  byte0 */\n      dup2\n        /* \"contracts/demo2.sol\":7728:7753  byte0 < STRING_LONG_START */\n      lt\n        /* \"contracts/demo2.sol\":7728:7811  byte0 < STRING_LONG_START || (byte0 >= LIST_SHORT_START && byte0 < LIST_LONG_START) */\n      dup1\n      tag_66\n      jumpi\n      pop\n        /* \"contracts/demo2.sol\":549:553  0xc0 */\n      0xc0\n        /* \"contracts/demo2.sol\":7758:7783  byte0 >= LIST_SHORT_START */\n      0xff\n      and\n        /* \"contracts/demo2.sol\":7758:7763  byte0 */\n      dup2\n        /* \"contracts/demo2.sol\":7758:7783  byte0 >= LIST_SHORT_START */\n      lt\n      iszero\n        /* \"contracts/demo2.sol\":7758:7810  byte0 >= LIST_SHORT_START && byte0 < LIST_LONG_START */\n      dup1\n      iszero\n      tag_67\n      jumpi\n      pop\n        /* \"contracts/demo2.sol\":600:604  0xf8 */\n      0xf8\n        /* \"contracts/demo2.sol\":7787:7810  byte0 < LIST_LONG_START */\n      0xff\n      and\n        /* \"contracts/demo2.sol\":7787:7792  byte0 */\n      dup2\n        /* \"contracts/demo2.sol\":7787:7810  byte0 < LIST_LONG_START */\n      lt\n        /* \"contracts/demo2.sol\":7758:7810  byte0 >= LIST_SHORT_START && byte0 < LIST_LONG_START */\n    tag_67:\n        /* \"contracts/demo2.sol\":7728:7811  byte0 < STRING_LONG_START || (byte0 >= LIST_SHORT_START && byte0 < LIST_LONG_START) */\n    tag_66:\n        /* \"contracts/demo2.sol\":7724:8043  if (byte0 < STRING_LONG_START || (byte0 >= LIST_SHORT_START && byte0 < LIST_LONG_START))\r... */\n      iszero\n      tag_68\n      jumpi\n        /* \"contracts/demo2.sol\":7837:7838  1 */\n      0x01\n        /* \"contracts/demo2.sol\":7830:7838  return 1 */\n      swap2\n      pop\n      pop\n      jump(tag_63)\n        /* \"contracts/demo2.sol\":7724:8043  if (byte0 < STRING_LONG_START || (byte0 >= LIST_SHORT_START && byte0 < LIST_LONG_START))\r... */\n    tag_68:\n        /* \"contracts/demo2.sol\":549:553  0xc0 */\n      0xc0\n        /* \"contracts/demo2.sol\":7862:7886  byte0 < LIST_SHORT_START */\n      0xff\n      and\n        /* \"contracts/demo2.sol\":7862:7867  byte0 */\n      dup2\n        /* \"contracts/demo2.sol\":7862:7886  byte0 < LIST_SHORT_START */\n      lt\n        /* \"contracts/demo2.sol\":7858:8043  if (byte0 < LIST_SHORT_START)  // being explicit\r... */\n      iszero\n      tag_70\n      jumpi\n        /* \"contracts/demo2.sol\":7965:7966  1 */\n      0x01\n        /* \"contracts/demo2.sol\":7960:7961  1 */\n      dup1\n        /* \"contracts/demo2.sol\":498:502  0xb8 */\n      0xb8\n        /* \"contracts/demo2.sol\":7940:7961  STRING_LONG_START - 1 */\n      sub\n        /* \"contracts/demo2.sol\":7931:7962  byte0 - (STRING_LONG_START - 1) */\n      0xff\n      and\n        /* \"contracts/demo2.sol\":7931:7936  byte0 */\n      dup3\n        /* \"contracts/demo2.sol\":7931:7962  byte0 - (STRING_LONG_START - 1) */\n      sub\n        /* \"contracts/demo2.sol\":7931:7966  byte0 - (STRING_LONG_START - 1) + 1 */\n      add\n        /* \"contracts/demo2.sol\":7924:7966  return byte0 - (STRING_LONG_START - 1) + 1 */\n      swap2\n      pop\n      pop\n      jump(tag_63)\n        /* \"contracts/demo2.sol\":7858:8043  if (byte0 < LIST_SHORT_START)  // being explicit\r... */\n    tag_70:\n        /* \"contracts/demo2.sol\":8042:8043  1 */\n      0x01\n        /* \"contracts/demo2.sol\":8037:8038  1 */\n      dup1\n        /* \"contracts/demo2.sol\":600:604  0xf8 */\n      0xf8\n        /* \"contracts/demo2.sol\":8019:8038  LIST_LONG_START - 1 */\n      sub\n        /* \"contracts/demo2.sol\":8010:8039  byte0 - (LIST_LONG_START - 1) */\n      0xff\n      and\n        /* \"contracts/demo2.sol\":8010:8015  byte0 */\n      dup3\n        /* \"contracts/demo2.sol\":8010:8039  byte0 - (LIST_LONG_START - 1) */\n      sub\n        /* \"contracts/demo2.sol\":8010:8043  byte0 - (LIST_LONG_START - 1) + 1 */\n      add\n        /* \"contracts/demo2.sol\":8003:8043  return byte0 - (LIST_LONG_START - 1) + 1 */\n      swap2\n      pop\n      pop\n        /* \"contracts/demo2.sol\":7452:8055  function _payloadOffset(uint memPtr) private pure returns (uint) {\r... */\n    tag_63:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/demo2.sol\":8068:8853  function copy(uint src, uint dest, uint len) private pure {\r... */\n    tag_62:\n        /* \"contracts/demo2.sol\":8152:8153  0 */\n      0x00\n        /* \"contracts/demo2.sol\":8145:8148  len */\n      dup2\n        /* \"contracts/demo2.sol\":8145:8153  len == 0 */\n      eq\n        /* \"contracts/demo2.sol\":8141:8162  if (len == 0) return; */\n      iszero\n      tag_73\n      jumpi\n        /* \"contracts/demo2.sol\":8155:8162  return; */\n      jump(tag_72)\n        /* \"contracts/demo2.sol\":8141:8162  if (len == 0) return; */\n    tag_73:\n        /* \"contracts/demo2.sol\":8230:8455  for (; len >= WORD_SIZE; len -= WORD_SIZE) {\r... */\n    tag_74:\n        /* \"contracts/demo2.sol\":642:644  32 */\n      0x20\n        /* \"contracts/demo2.sol\":8237:8253  len >= WORD_SIZE */\n      0xff\n      and\n        /* \"contracts/demo2.sol\":8237:8240  len */\n      dup2\n        /* \"contracts/demo2.sol\":8237:8253  len >= WORD_SIZE */\n      lt\n        /* \"contracts/demo2.sol\":8230:8455  for (; len >= WORD_SIZE; len -= WORD_SIZE) {\r... */\n      tag_75\n      jumpi\n        /* \"contracts/demo2.sol\":8343:8346  src */\n      dup3\n        /* \"contracts/demo2.sol\":8337:8347  mload(src) */\n      mload\n        /* \"contracts/demo2.sol\":8331:8335  dest */\n      dup3\n        /* \"contracts/demo2.sol\":8324:8348  mstore(dest, mload(src)) */\n      mstore\n        /* \"contracts/demo2.sol\":642:644  32 */\n      0x20\n        /* \"contracts/demo2.sol\":8387:8403  src += WORD_SIZE */\n      0xff\n      and\n      dup4\n      add\n      swap3\n      pop\n        /* \"contracts/demo2.sol\":642:644  32 */\n      0x20\n        /* \"contracts/demo2.sol\":8422:8439  dest += WORD_SIZE */\n      0xff\n      and\n      dup3\n      add\n      swap2\n      pop\n        /* \"contracts/demo2.sol\":642:644  32 */\n      0x20\n        /* \"contracts/demo2.sol\":8255:8271  len -= WORD_SIZE */\n      0xff\n      and\n      dup2\n      sub\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":8230:8455  for (; len >= WORD_SIZE; len -= WORD_SIZE) {\r... */\n      jump(tag_74)\n    tag_75:\n        /* \"contracts/demo2.sol\":8556:8565  uint mask */\n      0x00\n        /* \"contracts/demo2.sol\":8595:8596  1 */\n      0x01\n        /* \"contracts/demo2.sol\":8588:8591  len */\n      dup3\n        /* \"contracts/demo2.sol\":642:644  32 */\n      0x20\n        /* \"contracts/demo2.sol\":8576:8591  WORD_SIZE - len */\n      0xff\n      and\n      sub\n        /* \"contracts/demo2.sol\":8568:8571  256 */\n      0x0100\n        /* \"contracts/demo2.sol\":8568:8592  256 ** (WORD_SIZE - len) */\n      exp\n        /* \"contracts/demo2.sol\":8568:8596  256 ** (WORD_SIZE - len) - 1 */\n      sub\n        /* \"contracts/demo2.sol\":8556:8596  uint mask = 256 ** (WORD_SIZE - len) - 1 */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":8674:8678  mask */\n      dup1\n        /* \"contracts/demo2.sol\":8670:8679  not(mask) */\n      not\n        /* \"contracts/demo2.sol\":8664:8667  src */\n      dup5\n        /* \"contracts/demo2.sol\":8658:8668  mload(src) */\n      mload\n        /* \"contracts/demo2.sol\":8654:8680  and(mload(src), not(mask)) */\n      and\n        /* \"contracts/demo2.sol\":8747:8751  mask */\n      dup2\n        /* \"contracts/demo2.sol\":8740:8744  dest */\n      dup5\n        /* \"contracts/demo2.sol\":8734:8745  mload(dest) */\n      mload\n        /* \"contracts/demo2.sol\":8730:8752  and(mload(dest), mask) */\n      and\n        /* \"contracts/demo2.sol\":8818:8825  srcpart */\n      dup2\n        /* \"contracts/demo2.sol\":8808:8816  destpart */\n      dup2\n        /* \"contracts/demo2.sol\":8805:8826  or(destpart, srcpart) */\n      or\n        /* \"contracts/demo2.sol\":8799:8803  dest */\n      dup6\n        /* \"contracts/demo2.sol\":8792:8827  mstore(dest, or(destpart, srcpart)) */\n      mstore\n        /* \"contracts/demo2.sol\":8620:8842  {\r... */\n      pop\n      pop\n      pop\n    tag_72:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/demo2.sol\":81:8860  contract demo2 {\r... */\n    tag_41:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"--CODEGEN--\":6:446   */\n    tag_78:\n      0x00\n        /* \"--CODEGEN--\":107:110   */\n      dup3\n        /* \"--CODEGEN--\":100:104   */\n      0x1f\n        /* \"--CODEGEN--\":92:98   */\n      dup4\n        /* \"--CODEGEN--\":88:105   */\n      add\n        /* \"--CODEGEN--\":84:111   */\n      slt\n        /* \"--CODEGEN--\":74:76   */\n      tag_80\n      jumpi\n        /* \"--CODEGEN--\":125:126   */\n      0x00\n        /* \"--CODEGEN--\":122:123   */\n      dup1\n        /* \"--CODEGEN--\":115:127   */\n      revert\n        /* \"--CODEGEN--\":74:76   */\n    tag_80:\n        /* \"--CODEGEN--\":162:168   */\n      dup2\n        /* \"--CODEGEN--\":149:169   */\n      calldataload\n        /* \"--CODEGEN--\":184:248   */\n      tag_81\n        /* \"--CODEGEN--\":199:247   */\n      tag_82\n        /* \"--CODEGEN--\":240:246   */\n      dup3\n        /* \"--CODEGEN--\":199:247   */\n      jump(tag_83)\n    tag_82:\n        /* \"--CODEGEN--\":184:248   */\n      jump(tag_84)\n    tag_81:\n        /* \"--CODEGEN--\":175:248   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":268:274   */\n      dup1\n        /* \"--CODEGEN--\":261:266   */\n      dup3\n        /* \"--CODEGEN--\":254:275   */\n      mstore\n        /* \"--CODEGEN--\":304:308   */\n      0x20\n        /* \"--CODEGEN--\":296:302   */\n      dup4\n        /* \"--CODEGEN--\":292:309   */\n      add\n        /* \"--CODEGEN--\":337:341   */\n      0x20\n        /* \"--CODEGEN--\":330:335   */\n      dup4\n        /* \"--CODEGEN--\":326:342   */\n      add\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":363:369   */\n      dup4\n        /* \"--CODEGEN--\":358:361   */\n      dup4\n        /* \"--CODEGEN--\":354:370   */\n      add\n        /* \"--CODEGEN--\":351:376   */\n      gt\n        /* \"--CODEGEN--\":348:350   */\n      iszero\n      tag_85\n      jumpi\n        /* \"--CODEGEN--\":389:390   */\n      0x00\n        /* \"--CODEGEN--\":386:387   */\n      dup1\n        /* \"--CODEGEN--\":379:391   */\n      revert\n        /* \"--CODEGEN--\":348:350   */\n    tag_85:\n        /* \"--CODEGEN--\":399:440   */\n      tag_86\n        /* \"--CODEGEN--\":433:439   */\n      dup4\n        /* \"--CODEGEN--\":428:431   */\n      dup3\n        /* \"--CODEGEN--\":423:426   */\n      dup5\n        /* \"--CODEGEN--\":399:440   */\n      jump(tag_87)\n    tag_86:\n        /* \"--CODEGEN--\":67:446   */\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":454:799   */\n    tag_13:\n      0x00\n        /* \"--CODEGEN--\":567:569   */\n      0x20\n        /* \"--CODEGEN--\":555:564   */\n      dup3\n        /* \"--CODEGEN--\":546:553   */\n      dup5\n        /* \"--CODEGEN--\":542:565   */\n      sub\n        /* \"--CODEGEN--\":538:570   */\n      slt\n        /* \"--CODEGEN--\":535:537   */\n      iszero\n      tag_89\n      jumpi\n        /* \"--CODEGEN--\":583:584   */\n      0x00\n        /* \"--CODEGEN--\":580:581   */\n      dup1\n        /* \"--CODEGEN--\":573:585   */\n      revert\n        /* \"--CODEGEN--\":535:537   */\n    tag_89:\n        /* \"--CODEGEN--\":646:647   */\n      0x00\n        /* \"--CODEGEN--\":635:644   */\n      dup3\n        /* \"--CODEGEN--\":631:648   */\n      add\n        /* \"--CODEGEN--\":618:649   */\n      calldataload\n        /* \"--CODEGEN--\":669:687   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":661:667   */\n      dup2\n        /* \"--CODEGEN--\":658:688   */\n      gt\n        /* \"--CODEGEN--\":655:657   */\n      iszero\n      tag_90\n      jumpi\n        /* \"--CODEGEN--\":701:702   */\n      0x00\n        /* \"--CODEGEN--\":698:699   */\n      dup1\n        /* \"--CODEGEN--\":691:703   */\n      revert\n        /* \"--CODEGEN--\":655:657   */\n    tag_90:\n        /* \"--CODEGEN--\":721:783   */\n      tag_91\n        /* \"--CODEGEN--\":775:782   */\n      dup5\n        /* \"--CODEGEN--\":766:772   */\n      dup3\n        /* \"--CODEGEN--\":755:764   */\n      dup6\n        /* \"--CODEGEN--\":751:773   */\n      add\n        /* \"--CODEGEN--\":721:783   */\n      jump(tag_78)\n    tag_91:\n        /* \"--CODEGEN--\":711:783   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":597:789   */\n      pop\n        /* \"--CODEGEN--\":529:799   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":806:919   */\n    tag_92:\n        /* \"--CODEGEN--\":889:913   */\n      tag_94\n        /* \"--CODEGEN--\":907:912   */\n      dup2\n        /* \"--CODEGEN--\":889:913   */\n      jump(tag_95)\n    tag_94:\n        /* \"--CODEGEN--\":884:887   */\n      dup3\n        /* \"--CODEGEN--\":877:914   */\n      mstore\n        /* \"--CODEGEN--\":871:919   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":926:1269   */\n    tag_96:\n      0x00\n        /* \"--CODEGEN--\":1036:1074   */\n      tag_98\n        /* \"--CODEGEN--\":1068:1073   */\n      dup3\n        /* \"--CODEGEN--\":1036:1074   */\n      jump(tag_99)\n    tag_98:\n        /* \"--CODEGEN--\":1086:1156   */\n      tag_100\n        /* \"--CODEGEN--\":1149:1155   */\n      dup2\n        /* \"--CODEGEN--\":1144:1147   */\n      dup6\n        /* \"--CODEGEN--\":1086:1156   */\n      jump(tag_101)\n    tag_100:\n        /* \"--CODEGEN--\":1079:1156   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":1161:1213   */\n      tag_102\n        /* \"--CODEGEN--\":1206:1212   */\n      dup2\n        /* \"--CODEGEN--\":1201:1204   */\n      dup6\n        /* \"--CODEGEN--\":1194:1198   */\n      0x20\n        /* \"--CODEGEN--\":1187:1192   */\n      dup7\n        /* \"--CODEGEN--\":1183:1199   */\n      add\n        /* \"--CODEGEN--\":1161:1213   */\n      jump(tag_103)\n    tag_102:\n        /* \"--CODEGEN--\":1234:1263   */\n      tag_104\n        /* \"--CODEGEN--\":1256:1262   */\n      dup2\n        /* \"--CODEGEN--\":1234:1263   */\n      jump(tag_105)\n    tag_104:\n        /* \"--CODEGEN--\":1229:1232   */\n      dup5\n        /* \"--CODEGEN--\":1225:1264   */\n      add\n        /* \"--CODEGEN--\":1218:1264   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":1016:1269   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1276:1611   */\n    tag_106:\n      0x00\n        /* \"--CODEGEN--\":1382:1416   */\n      tag_108\n        /* \"--CODEGEN--\":1410:1415   */\n      dup3\n        /* \"--CODEGEN--\":1382:1416   */\n      jump(tag_109)\n    tag_108:\n        /* \"--CODEGEN--\":1428:1498   */\n      tag_110\n        /* \"--CODEGEN--\":1491:1497   */\n      dup2\n        /* \"--CODEGEN--\":1486:1489   */\n      dup6\n        /* \"--CODEGEN--\":1428:1498   */\n      jump(tag_101)\n    tag_110:\n        /* \"--CODEGEN--\":1421:1498   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":1503:1555   */\n      tag_111\n        /* \"--CODEGEN--\":1548:1554   */\n      dup2\n        /* \"--CODEGEN--\":1543:1546   */\n      dup6\n        /* \"--CODEGEN--\":1536:1540   */\n      0x20\n        /* \"--CODEGEN--\":1529:1534   */\n      dup7\n        /* \"--CODEGEN--\":1525:1541   */\n      add\n        /* \"--CODEGEN--\":1503:1555   */\n      jump(tag_103)\n    tag_111:\n        /* \"--CODEGEN--\":1576:1605   */\n      tag_112\n        /* \"--CODEGEN--\":1598:1604   */\n      dup2\n        /* \"--CODEGEN--\":1576:1605   */\n      jump(tag_105)\n    tag_112:\n        /* \"--CODEGEN--\":1571:1574   */\n      dup5\n        /* \"--CODEGEN--\":1567:1606   */\n      add\n        /* \"--CODEGEN--\":1560:1606   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":1362:1611   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1669:2142   */\n    tag_113:\n        /* \"--CODEGEN--\":1808:1812   */\n      0x40\n        /* \"--CODEGEN--\":1803:1806   */\n      dup3\n        /* \"--CODEGEN--\":1799:1813   */\n      add\n        /* \"--CODEGEN--\":1890:1894   */\n      0x00\n        /* \"--CODEGEN--\":1883:1888   */\n      dup3\n        /* \"--CODEGEN--\":1879:1895   */\n      add\n        /* \"--CODEGEN--\":1873:1896   */\n      mload\n        /* \"--CODEGEN--\":1902:1965   */\n      tag_115\n        /* \"--CODEGEN--\":1959:1963   */\n      0x00\n        /* \"--CODEGEN--\":1954:1957   */\n      dup6\n        /* \"--CODEGEN--\":1950:1964   */\n      add\n        /* \"--CODEGEN--\":1936:1948   */\n      dup3\n        /* \"--CODEGEN--\":1902:1965   */\n      jump(tag_116)\n    tag_115:\n        /* \"--CODEGEN--\":1828:1971   */\n      pop\n        /* \"--CODEGEN--\":2046:2050   */\n      0x20\n        /* \"--CODEGEN--\":2039:2044   */\n      dup3\n        /* \"--CODEGEN--\":2035:2051   */\n      add\n        /* \"--CODEGEN--\":2029:2052   */\n      mload\n        /* \"--CODEGEN--\":2058:2121   */\n      tag_117\n        /* \"--CODEGEN--\":2115:2119   */\n      0x20\n        /* \"--CODEGEN--\":2110:2113   */\n      dup6\n        /* \"--CODEGEN--\":2106:2120   */\n      add\n        /* \"--CODEGEN--\":2092:2104   */\n      dup3\n        /* \"--CODEGEN--\":2058:2121   */\n      jump(tag_116)\n    tag_117:\n        /* \"--CODEGEN--\":1981:2127   */\n      pop\n        /* \"--CODEGEN--\":1781:2142   */\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":2200:2669   */\n    tag_118:\n        /* \"--CODEGEN--\":2335:2339   */\n      0x40\n        /* \"--CODEGEN--\":2330:2333   */\n      dup3\n        /* \"--CODEGEN--\":2326:2340   */\n      add\n        /* \"--CODEGEN--\":2417:2421   */\n      0x00\n        /* \"--CODEGEN--\":2410:2415   */\n      dup3\n        /* \"--CODEGEN--\":2406:2422   */\n      add\n        /* \"--CODEGEN--\":2400:2423   */\n      mload\n        /* \"--CODEGEN--\":2429:2492   */\n      tag_120\n        /* \"--CODEGEN--\":2486:2490   */\n      0x00\n        /* \"--CODEGEN--\":2481:2484   */\n      dup6\n        /* \"--CODEGEN--\":2477:2491   */\n      add\n        /* \"--CODEGEN--\":2463:2475   */\n      dup3\n        /* \"--CODEGEN--\":2429:2492   */\n      jump(tag_116)\n    tag_120:\n        /* \"--CODEGEN--\":2355:2498   */\n      pop\n        /* \"--CODEGEN--\":2573:2577   */\n      0x20\n        /* \"--CODEGEN--\":2566:2571   */\n      dup3\n        /* \"--CODEGEN--\":2562:2578   */\n      add\n        /* \"--CODEGEN--\":2556:2579   */\n      mload\n        /* \"--CODEGEN--\":2585:2648   */\n      tag_121\n        /* \"--CODEGEN--\":2642:2646   */\n      0x20\n        /* \"--CODEGEN--\":2637:2640   */\n      dup6\n        /* \"--CODEGEN--\":2633:2647   */\n      add\n        /* \"--CODEGEN--\":2619:2631   */\n      dup3\n        /* \"--CODEGEN--\":2585:2648   */\n      jump(tag_116)\n    tag_121:\n        /* \"--CODEGEN--\":2508:2654   */\n      pop\n        /* \"--CODEGEN--\":2308:2669   */\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":2676:2779   */\n    tag_116:\n        /* \"--CODEGEN--\":2749:2773   */\n      tag_123\n        /* \"--CODEGEN--\":2767:2772   */\n      dup2\n        /* \"--CODEGEN--\":2749:2773   */\n      jump(tag_124)\n    tag_123:\n        /* \"--CODEGEN--\":2744:2747   */\n      dup3\n        /* \"--CODEGEN--\":2737:2774   */\n      mstore\n        /* \"--CODEGEN--\":2731:2779   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":2786:2899   */\n    tag_125:\n        /* \"--CODEGEN--\":2869:2893   */\n      tag_127\n        /* \"--CODEGEN--\":2887:2892   */\n      dup2\n        /* \"--CODEGEN--\":2869:2893   */\n      jump(tag_124)\n    tag_127:\n        /* \"--CODEGEN--\":2864:2867   */\n      dup3\n        /* \"--CODEGEN--\":2857:2894   */\n      mstore\n        /* \"--CODEGEN--\":2851:2899   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":2906:3119   */\n    tag_28:\n      0x00\n        /* \"--CODEGEN--\":3024:3026   */\n      0x20\n        /* \"--CODEGEN--\":3013:3022   */\n      dup3\n        /* \"--CODEGEN--\":3009:3027   */\n      add\n        /* \"--CODEGEN--\":3001:3027   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":3038:3109   */\n      tag_129\n        /* \"--CODEGEN--\":3106:3107   */\n      0x00\n        /* \"--CODEGEN--\":3095:3104   */\n      dup4\n        /* \"--CODEGEN--\":3091:3108   */\n      add\n        /* \"--CODEGEN--\":3082:3088   */\n      dup5\n        /* \"--CODEGEN--\":3038:3109   */\n      jump(tag_92)\n    tag_129:\n        /* \"--CODEGEN--\":2995:3119   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":3126:3415   */\n    tag_20:\n      0x00\n        /* \"--CODEGEN--\":3258:3260   */\n      0x20\n        /* \"--CODEGEN--\":3247:3256   */\n      dup3\n        /* \"--CODEGEN--\":3243:3261   */\n      add\n        /* \"--CODEGEN--\":3235:3261   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":3308:3317   */\n      dup2\n        /* \"--CODEGEN--\":3302:3306   */\n      dup2\n        /* \"--CODEGEN--\":3298:3318   */\n      sub\n        /* \"--CODEGEN--\":3294:3295   */\n      0x00\n        /* \"--CODEGEN--\":3283:3292   */\n      dup4\n        /* \"--CODEGEN--\":3279:3296   */\n      add\n        /* \"--CODEGEN--\":3272:3319   */\n      mstore\n        /* \"--CODEGEN--\":3333:3405   */\n      tag_131\n        /* \"--CODEGEN--\":3400:3404   */\n      dup2\n        /* \"--CODEGEN--\":3391:3397   */\n      dup5\n        /* \"--CODEGEN--\":3333:3405   */\n      jump(tag_106)\n    tag_131:\n        /* \"--CODEGEN--\":3325:3405   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":3229:3415   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":3422:3719   */\n    tag_32:\n      0x00\n        /* \"--CODEGEN--\":3558:3560   */\n      0x20\n        /* \"--CODEGEN--\":3547:3556   */\n      dup3\n        /* \"--CODEGEN--\":3543:3561   */\n      add\n        /* \"--CODEGEN--\":3535:3561   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":3608:3617   */\n      dup2\n        /* \"--CODEGEN--\":3602:3606   */\n      dup2\n        /* \"--CODEGEN--\":3598:3618   */\n      sub\n        /* \"--CODEGEN--\":3594:3595   */\n      0x00\n        /* \"--CODEGEN--\":3583:3592   */\n      dup4\n        /* \"--CODEGEN--\":3579:3596   */\n      add\n        /* \"--CODEGEN--\":3572:3619   */\n      mstore\n        /* \"--CODEGEN--\":3633:3709   */\n      tag_133\n        /* \"--CODEGEN--\":3704:3708   */\n      dup2\n        /* \"--CODEGEN--\":3695:3701   */\n      dup5\n        /* \"--CODEGEN--\":3633:3709   */\n      jump(tag_96)\n    tag_133:\n        /* \"--CODEGEN--\":3625:3709   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":3529:3719   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":3726:4031   */\n    tag_16:\n      0x00\n        /* \"--CODEGEN--\":3890:3892   */\n      0x40\n        /* \"--CODEGEN--\":3879:3888   */\n      dup3\n        /* \"--CODEGEN--\":3875:3893   */\n      add\n        /* \"--CODEGEN--\":3867:3893   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":3904:4021   */\n      tag_135\n        /* \"--CODEGEN--\":4018:4019   */\n      0x00\n        /* \"--CODEGEN--\":4007:4016   */\n      dup4\n        /* \"--CODEGEN--\":4003:4020   */\n      add\n        /* \"--CODEGEN--\":3994:4000   */\n      dup5\n        /* \"--CODEGEN--\":3904:4021   */\n      jump(tag_113)\n    tag_135:\n        /* \"--CODEGEN--\":3861:4031   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":4038:4446   */\n    tag_39:\n      0x00\n        /* \"--CODEGEN--\":4226:4228   */\n      0x60\n        /* \"--CODEGEN--\":4215:4224   */\n      dup3\n        /* \"--CODEGEN--\":4211:4229   */\n      add\n        /* \"--CODEGEN--\":4203:4229   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":4240:4353   */\n      tag_137\n        /* \"--CODEGEN--\":4350:4351   */\n      0x00\n        /* \"--CODEGEN--\":4339:4348   */\n      dup4\n        /* \"--CODEGEN--\":4335:4352   */\n      add\n        /* \"--CODEGEN--\":4326:4332   */\n      dup6\n        /* \"--CODEGEN--\":4240:4353   */\n      jump(tag_118)\n    tag_137:\n        /* \"--CODEGEN--\":4364:4436   */\n      tag_138\n        /* \"--CODEGEN--\":4432:4434   */\n      0x40\n        /* \"--CODEGEN--\":4421:4430   */\n      dup4\n        /* \"--CODEGEN--\":4417:4435   */\n      add\n        /* \"--CODEGEN--\":4408:4414   */\n      dup5\n        /* \"--CODEGEN--\":4364:4436   */\n      jump(tag_125)\n    tag_138:\n        /* \"--CODEGEN--\":4197:4446   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":4453:4777   */\n    tag_24:\n      0x00\n        /* \"--CODEGEN--\":4599:4601   */\n      0x40\n        /* \"--CODEGEN--\":4588:4597   */\n      dup3\n        /* \"--CODEGEN--\":4584:4602   */\n      add\n        /* \"--CODEGEN--\":4576:4602   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":4613:4684   */\n      tag_140\n        /* \"--CODEGEN--\":4681:4682   */\n      0x00\n        /* \"--CODEGEN--\":4670:4679   */\n      dup4\n        /* \"--CODEGEN--\":4666:4683   */\n      add\n        /* \"--CODEGEN--\":4657:4663   */\n      dup6\n        /* \"--CODEGEN--\":4613:4684   */\n      jump(tag_125)\n    tag_140:\n        /* \"--CODEGEN--\":4695:4767   */\n      tag_141\n        /* \"--CODEGEN--\":4763:4765   */\n      0x20\n        /* \"--CODEGEN--\":4752:4761   */\n      dup4\n        /* \"--CODEGEN--\":4748:4766   */\n      add\n        /* \"--CODEGEN--\":4739:4745   */\n      dup5\n        /* \"--CODEGEN--\":4695:4767   */\n      jump(tag_125)\n    tag_141:\n        /* \"--CODEGEN--\":4570:4777   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":4784:5040   */\n    tag_84:\n      0x00\n        /* \"--CODEGEN--\":4846:4848   */\n      0x40\n        /* \"--CODEGEN--\":4840:4849   */\n      mload\n        /* \"--CODEGEN--\":4830:4849   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":4884:4888   */\n      dup2\n        /* \"--CODEGEN--\":4876:4882   */\n      dup2\n        /* \"--CODEGEN--\":4872:4889   */\n      add\n        /* \"--CODEGEN--\":4983:4989   */\n      dup2\n        /* \"--CODEGEN--\":4971:4981   */\n      dup2\n        /* \"--CODEGEN--\":4968:4990   */\n      lt\n        /* \"--CODEGEN--\":4947:4965   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":4935:4945   */\n      dup3\n        /* \"--CODEGEN--\":4932:4966   */\n      gt\n        /* \"--CODEGEN--\":4929:4991   */\n      or\n        /* \"--CODEGEN--\":4926:4928   */\n      iszero\n      tag_143\n      jumpi\n        /* \"--CODEGEN--\":5004:5005   */\n      0x00\n        /* \"--CODEGEN--\":5001:5002   */\n      dup1\n        /* \"--CODEGEN--\":4994:5006   */\n      revert\n        /* \"--CODEGEN--\":4926:4928   */\n    tag_143:\n        /* \"--CODEGEN--\":5024:5034   */\n      dup1\n        /* \"--CODEGEN--\":5020:5022   */\n      0x40\n        /* \"--CODEGEN--\":5013:5035   */\n      mstore\n        /* \"--CODEGEN--\":4824:5040   */\n      pop\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":5047:5368   */\n    tag_83:\n      0x00\n        /* \"--CODEGEN--\":5190:5208   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":5182:5188   */\n      dup3\n        /* \"--CODEGEN--\":5179:5209   */\n      gt\n        /* \"--CODEGEN--\":5176:5178   */\n      iszero\n      tag_145\n      jumpi\n        /* \"--CODEGEN--\":5222:5223   */\n      0x00\n        /* \"--CODEGEN--\":5219:5220   */\n      dup1\n        /* \"--CODEGEN--\":5212:5224   */\n      revert\n        /* \"--CODEGEN--\":5176:5178   */\n    tag_145:\n        /* \"--CODEGEN--\":5289:5293   */\n      0x1f\n        /* \"--CODEGEN--\":5285:5294   */\n      not\n        /* \"--CODEGEN--\":5278:5282   */\n      0x1f\n        /* \"--CODEGEN--\":5270:5276   */\n      dup4\n        /* \"--CODEGEN--\":5266:5283   */\n      add\n        /* \"--CODEGEN--\":5262:5295   */\n      and\n        /* \"--CODEGEN--\":5254:5295   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":5353:5357   */\n      0x20\n        /* \"--CODEGEN--\":5347:5351   */\n      dup2\n        /* \"--CODEGEN--\":5343:5358   */\n      add\n        /* \"--CODEGEN--\":5335:5358   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":5113:5368   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":5375:5492   */\n    tag_109:\n      0x00\n        /* \"--CODEGEN--\":5464:5469   */\n      dup2\n        /* \"--CODEGEN--\":5458:5470   */\n      mload\n        /* \"--CODEGEN--\":5448:5470   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":5429:5492   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":5499:5620   */\n    tag_99:\n      0x00\n        /* \"--CODEGEN--\":5592:5597   */\n      dup2\n        /* \"--CODEGEN--\":5586:5598   */\n      mload\n        /* \"--CODEGEN--\":5576:5598   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":5557:5620   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":5628:5790   */\n    tag_101:\n      0x00\n        /* \"--CODEGEN--\":5742:5748   */\n      dup3\n        /* \"--CODEGEN--\":5737:5740   */\n      dup3\n        /* \"--CODEGEN--\":5730:5749   */\n      mstore\n        /* \"--CODEGEN--\":5779:5783   */\n      0x20\n        /* \"--CODEGEN--\":5774:5777   */\n      dup3\n        /* \"--CODEGEN--\":5770:5784   */\n      add\n        /* \"--CODEGEN--\":5755:5784   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":5723:5790   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":5798:5870   */\n    tag_95:\n      0x00\n        /* \"--CODEGEN--\":5860:5865   */\n      dup2\n        /* \"--CODEGEN--\":5849:5865   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":5843:5870   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":5877:5949   */\n    tag_124:\n      0x00\n        /* \"--CODEGEN--\":5939:5944   */\n      dup2\n        /* \"--CODEGEN--\":5928:5944   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":5922:5949   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":5957:6102   */\n    tag_87:\n        /* \"--CODEGEN--\":6038:6044   */\n      dup3\n        /* \"--CODEGEN--\":6033:6036   */\n      dup2\n        /* \"--CODEGEN--\":6028:6031   */\n      dup4\n        /* \"--CODEGEN--\":6015:6045   */\n      calldatacopy\n        /* \"--CODEGEN--\":6094:6095   */\n      0x00\n        /* \"--CODEGEN--\":6085:6091   */\n      dup4\n        /* \"--CODEGEN--\":6080:6083   */\n      dup4\n        /* \"--CODEGEN--\":6076:6092   */\n      add\n        /* \"--CODEGEN--\":6069:6096   */\n      mstore\n        /* \"--CODEGEN--\":6008:6102   */\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":6111:6379   */\n    tag_103:\n        /* \"--CODEGEN--\":6176:6177   */\n      0x00\n        /* \"--CODEGEN--\":6183:6284   */\n    tag_153:\n        /* \"--CODEGEN--\":6197:6203   */\n      dup4\n        /* \"--CODEGEN--\":6194:6195   */\n      dup2\n        /* \"--CODEGEN--\":6191:6204   */\n      lt\n        /* \"--CODEGEN--\":6183:6284   */\n      iszero\n      tag_155\n      jumpi\n        /* \"--CODEGEN--\":6273:6274   */\n      dup1\n        /* \"--CODEGEN--\":6268:6271   */\n      dup3\n        /* \"--CODEGEN--\":6264:6275   */\n      add\n        /* \"--CODEGEN--\":6258:6276   */\n      mload\n        /* \"--CODEGEN--\":6254:6255   */\n      dup2\n        /* \"--CODEGEN--\":6249:6252   */\n      dup5\n        /* \"--CODEGEN--\":6245:6256   */\n      add\n        /* \"--CODEGEN--\":6238:6277   */\n      mstore\n        /* \"--CODEGEN--\":6219:6221   */\n      0x20\n        /* \"--CODEGEN--\":6216:6217   */\n      dup2\n        /* \"--CODEGEN--\":6212:6222   */\n      add\n        /* \"--CODEGEN--\":6207:6222   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":6183:6284   */\n      jump(tag_153)\n    tag_155:\n        /* \"--CODEGEN--\":6299:6305   */\n      dup4\n        /* \"--CODEGEN--\":6296:6297   */\n      dup2\n        /* \"--CODEGEN--\":6293:6306   */\n      gt\n        /* \"--CODEGEN--\":6290:6292   */\n      iszero\n      tag_156\n      jumpi\n        /* \"--CODEGEN--\":6364:6365   */\n      0x00\n        /* \"--CODEGEN--\":6355:6361   */\n      dup5\n        /* \"--CODEGEN--\":6350:6353   */\n      dup5\n        /* \"--CODEGEN--\":6346:6362   */\n      add\n        /* \"--CODEGEN--\":6339:6366   */\n      mstore\n        /* \"--CODEGEN--\":6290:6292   */\n    tag_156:\n        /* \"--CODEGEN--\":6160:6379   */\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":6387:6484   */\n    tag_105:\n      0x00\n        /* \"--CODEGEN--\":6475:6477   */\n      0x1f\n        /* \"--CODEGEN--\":6471:6478   */\n      not\n        /* \"--CODEGEN--\":6466:6468   */\n      0x1f\n        /* \"--CODEGEN--\":6459:6464   */\n      dup4\n        /* \"--CODEGEN--\":6455:6469   */\n      add\n        /* \"--CODEGEN--\":6451:6479   */\n      and\n        /* \"--CODEGEN--\":6441:6479   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":6435:6484   */\n      swap2\n      swap1\n      pop\n      jump\n\n    auxdata: 0xa26469706673582212201e0870a955bf232901723b4ea6728c70438a172fa8fea86816395a4be1bbe7db64736f6c63430006040033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526040518060600160405280602e81526020016109fe602e9139600090805190602001906100329291906100d7565b506040518060600160405280602a8152602001610a2c602a9139600190805190602001906100619291906100d7565b507f4c45484f4e47564f776a6e66766a3377656838764b4a0000000000000000000060025534801561009257600080fd5b5060066003600001819055506002600360010181905550600360056000016000820154816000015560018201548160010155905050600460056002018190555061017c565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061011857805160ff1916838001178555610146565b82800160010185558215610146579182015b8281111561014557825182559160200191906001019061012a565b5b5090506101539190610157565b5090565b61017991905b8082111561017557600081600090555060010161015d565b5090565b90565b6108738061018b6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063e3a7fd751161005b578063e3a7fd75146100ef578063eaacd81e1461010d578063fc26b0ab1461012b578063fddcc148146101495761007d565b80632ed5fb83146100825780639ffd85c4146100b2578063a699fb03146100d0575b600080fd5b61009c6004803603810190610097919061054c565b610168565b6040516100a991906106e9565b60405180910390f35b6100ba610180565b6040516100c791906106a5565b60405180910390f35b6100d861021e565b6040516100e692919061072d565b60405180910390f35b6100f7610230565b604051610104919061068a565b60405180910390f35b610115610236565b60405161012291906106c7565b60405180910390f35b610133610266565b60405161014091906106a5565b60405180910390f35b610151610304565b60405161015f929190610704565b60405180910390f35b6101706104de565b61017982610334565b9050919050565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102165780601f106101eb57610100808354040283529160200191610216565b820191906000526020600020905b8154815290600101906020018083116101f957829003601f168201915b505050505081565b60038060000154908060010154905082565b60025481565b6060610261600360405180604001604052908160008201548152602001600182015481525050610362565b905090565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102fc5780601f106102d1576101008083540402835291602001916102fc565b820191906000526020600020905b8154815290600101906020018083116102df57829003601f168201915b505050505081565b60058060000160405180604001604052908160008201548152602001600182015481525050908060020154905082565b61033c6104de565b600060208301905060405180604001604052808451815260200182815250915050919050565b6060600082600001511161037557600080fd5b600061038483602001516103ee565b905060008184600001510390506060816040519080825280601f01601f1916602001820160405280156103c65781602001600182028036833780820191505090505b50905060008160200190506103e2848760200151018285610477565b81945050505050919050565b600080825160001a9050608060ff1681101561040e576000915050610472565b60b860ff16811080610433575060c060ff168110158015610432575060f860ff1681105b5b15610442576001915050610472565b60c060ff168110156104625760018060b80360ff16820301915050610472565b60018060f80360ff168203019150505b919050565b6000811415610485576104d9565b5b602060ff1681106104b55782518252602060ff1683019250602060ff1682019150602060ff1681039050610486565b6000600182602060ff16036101000a03905080198451168184511681811785525050505b505050565b604051806040016040528060008152602001600081525090565b600082601f83011261050957600080fd5b813561051c61051782610783565b610756565b9150808252602083016020830185838301111561053857600080fd5b6105438382846107ea565b50505092915050565b60006020828403121561055e57600080fd5b600082013567ffffffffffffffff81111561057857600080fd5b610584848285016104f8565b91505092915050565b610596816107d6565b82525050565b60006105a7826107ba565b6105b181856107c5565b93506105c18185602086016107f9565b6105ca8161082c565b840191505092915050565b60006105e0826107af565b6105ea81856107c5565b93506105fa8185602086016107f9565b6106038161082c565b840191505092915050565b604082016000820151610624600085018261066c565b506020820151610637602085018261066c565b50505050565b604082016000820151610653600085018261066c565b506020820151610666602085018261066c565b50505050565b610675816107e0565b82525050565b610684816107e0565b82525050565b600060208201905061069f600083018461058d565b92915050565b600060208201905081810360008301526106bf81846105d5565b905092915050565b600060208201905081810360008301526106e1818461059c565b905092915050565b60006040820190506106fe600083018461060e565b92915050565b6000606082019050610719600083018561063d565b610726604083018461067b565b9392505050565b6000604082019050610742600083018561067b565b61074f602083018461067b565b9392505050565b6000604051905081810181811067ffffffffffffffff8211171561077957600080fd5b8060405250919050565b600067ffffffffffffffff82111561079a57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156108175780820151818401526020810190506107fc565b83811115610826576000848401525b50505050565b6000601f19601f830116905091905056fea26469706673582212201e0870a955bf232901723b4ea6728c70438a172fa8fea86816395a4be1bbe7db64736f6c634300060400334e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f7364664e417364667364664c4548484a5347445348444a53484a53484a534844534a44484a4f4e47564f",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9FE PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x32 SWAP3 SWAP2 SWAP1 PUSH2 0xD7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA2C PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x61 SWAP3 SWAP2 SWAP1 PUSH2 0xD7 JUMP JUMPDEST POP PUSH32 0x4C45484F4E47564F776A6E66766A3377656838764B4A00000000000000000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 PUSH1 0x3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x5 PUSH1 0x0 ADD PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x4 PUSH1 0x5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x17C JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x118 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x146 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x146 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x145 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x12A JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x157 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x179 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x175 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x15D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x873 DUP1 PUSH2 0x18B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE3A7FD75 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xE3A7FD75 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xEAACD81E EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0xFC26B0AB EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xFDDCC148 EQ PUSH2 0x149 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x2ED5FB83 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x9FFD85C4 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xA699FB03 EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x54C JUMP JUMPDEST PUSH2 0x168 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBA PUSH2 0x180 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP3 SWAP2 SWAP1 PUSH2 0x72D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF7 PUSH2 0x230 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x115 PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH2 0x266 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x151 PUSH2 0x304 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP3 SWAP2 SWAP1 PUSH2 0x704 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x170 PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x179 DUP3 PUSH2 0x334 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x216 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1EB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x216 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x261 PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x362 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x2FC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x5 DUP1 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x33C PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD GT PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x384 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x3EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH1 0x0 ADD MLOAD SUB SWAP1 POP PUSH1 0x60 DUP2 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3C6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD SWAP1 POP PUSH2 0x3E2 DUP5 DUP8 PUSH1 0x20 ADD MLOAD ADD DUP3 DUP6 PUSH2 0x477 JUMP JUMPDEST DUP2 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x80 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x472 JUMP JUMPDEST PUSH1 0xB8 PUSH1 0xFF AND DUP2 LT DUP1 PUSH2 0x433 JUMPI POP PUSH1 0xC0 PUSH1 0xFF AND DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x432 JUMPI POP PUSH1 0xF8 PUSH1 0xFF AND DUP2 LT JUMPDEST JUMPDEST ISZERO PUSH2 0x442 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x472 JUMP JUMPDEST PUSH1 0xC0 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0x462 JUMPI PUSH1 0x1 DUP1 PUSH1 0xB8 SUB PUSH1 0xFF AND DUP3 SUB ADD SWAP2 POP POP PUSH2 0x472 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xF8 SUB PUSH1 0xFF AND DUP3 SUB ADD SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x485 JUMPI PUSH2 0x4D9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 PUSH1 0xFF AND DUP2 LT PUSH2 0x4B5 JUMPI DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 PUSH1 0xFF AND DUP4 ADD SWAP3 POP PUSH1 0x20 PUSH1 0xFF AND DUP3 ADD SWAP2 POP PUSH1 0x20 PUSH1 0xFF AND DUP2 SUB SWAP1 POP PUSH2 0x486 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0x20 PUSH1 0xFF AND SUB PUSH2 0x100 EXP SUB SWAP1 POP DUP1 NOT DUP5 MLOAD AND DUP2 DUP5 MLOAD AND DUP2 DUP2 OR DUP6 MSTORE POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x51C PUSH2 0x517 DUP3 PUSH2 0x783 JUMP JUMPDEST PUSH2 0x756 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x543 DUP4 DUP3 DUP5 PUSH2 0x7EA JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x55E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x584 DUP5 DUP3 DUP6 ADD PUSH2 0x4F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x596 DUP2 PUSH2 0x7D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A7 DUP3 PUSH2 0x7BA JUMP JUMPDEST PUSH2 0x5B1 DUP2 DUP6 PUSH2 0x7C5 JUMP JUMPDEST SWAP4 POP PUSH2 0x5C1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x5CA DUP2 PUSH2 0x82C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E0 DUP3 PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x5EA DUP2 DUP6 PUSH2 0x7C5 JUMP JUMPDEST SWAP4 POP PUSH2 0x5FA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x603 DUP2 PUSH2 0x82C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x624 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x66C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x637 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x66C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x653 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x66C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x666 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x66C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x675 DUP2 PUSH2 0x7E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x684 DUP2 PUSH2 0x7E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x69F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x58D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6BF DUP2 DUP5 PUSH2 0x5D5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6E1 DUP2 DUP5 PUSH2 0x59C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6FE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x60E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x719 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x63D JUMP JUMPDEST PUSH2 0x726 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x67B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x742 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x67B JUMP JUMPDEST PUSH2 0x74F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x67B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x779 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x79A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x817 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7FC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x826 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E ADDMOD PUSH17 0xA955BF232901723B4EA6728C70438A172F 0xA8 INVALID 0xA8 PUSH9 0x16395A4BE1BBE7DB64 PUSH20 0x6F6C634300060400334E414C4548484A53474453 DIFFICULTY SELFBALANCE 0x48 0x4A MSTORE8 DIFFICULTY 0x48 MSTORE8 SSTORE 0x48 DIFFICULTY 0x4A MSTORE8 0x48 DIFFICULTY 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 DIFFICULTY MSTORE8 0x4A DIFFICULTY 0x48 0x4A 0x4F 0x4E SELFBALANCE JUMP 0x4F PUSH20 0x64664E417364667364664C4548484A5347445348 DIFFICULTY 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 DIFFICULTY MSTORE8 0x4A DIFFICULTY 0x48 0x4A 0x4F 0x4E SELFBALANCE JUMP 0x4F ",
							"sourceMap": "81:8779:0:-:0;;;107:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;187:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;263:47;;;999:169;5:9:-1;2:2;;;27:1;24;17:12;2:2;999:169:0;1049:1;1035:7;:11;;:15;;;;1082:1;1065:7;:14;;:18;;;;1114:7;1098:8;:13;;:23;;;;;;;;;;;;;;;;;;;1155:1;1136:8;:16;;:20;;;;81:8779;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c8063e3a7fd751161005b578063e3a7fd75146100ef578063eaacd81e1461010d578063fc26b0ab1461012b578063fddcc148146101495761007d565b80632ed5fb83146100825780639ffd85c4146100b2578063a699fb03146100d0575b600080fd5b61009c6004803603810190610097919061054c565b610168565b6040516100a991906106e9565b60405180910390f35b6100ba610180565b6040516100c791906106a5565b60405180910390f35b6100d861021e565b6040516100e692919061072d565b60405180910390f35b6100f7610230565b604051610104919061068a565b60405180910390f35b610115610236565b60405161012291906106c7565b60405180910390f35b610133610266565b60405161014091906106a5565b60405180910390f35b610151610304565b60405161015f929190610704565b60405180910390f35b6101706104de565b61017982610334565b9050919050565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102165780601f106101eb57610100808354040283529160200191610216565b820191906000526020600020905b8154815290600101906020018083116101f957829003601f168201915b505050505081565b60038060000154908060010154905082565b60025481565b6060610261600360405180604001604052908160008201548152602001600182015481525050610362565b905090565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102fc5780601f106102d1576101008083540402835291602001916102fc565b820191906000526020600020905b8154815290600101906020018083116102df57829003601f168201915b505050505081565b60058060000160405180604001604052908160008201548152602001600182015481525050908060020154905082565b61033c6104de565b600060208301905060405180604001604052808451815260200182815250915050919050565b6060600082600001511161037557600080fd5b600061038483602001516103ee565b905060008184600001510390506060816040519080825280601f01601f1916602001820160405280156103c65781602001600182028036833780820191505090505b50905060008160200190506103e2848760200151018285610477565b81945050505050919050565b600080825160001a9050608060ff1681101561040e576000915050610472565b60b860ff16811080610433575060c060ff168110158015610432575060f860ff1681105b5b15610442576001915050610472565b60c060ff168110156104625760018060b80360ff16820301915050610472565b60018060f80360ff168203019150505b919050565b6000811415610485576104d9565b5b602060ff1681106104b55782518252602060ff1683019250602060ff1682019150602060ff1681039050610486565b6000600182602060ff16036101000a03905080198451168184511681811785525050505b505050565b604051806040016040528060008152602001600081525090565b600082601f83011261050957600080fd5b813561051c61051782610783565b610756565b9150808252602083016020830185838301111561053857600080fd5b6105438382846107ea565b50505092915050565b60006020828403121561055e57600080fd5b600082013567ffffffffffffffff81111561057857600080fd5b610584848285016104f8565b91505092915050565b610596816107d6565b82525050565b60006105a7826107ba565b6105b181856107c5565b93506105c18185602086016107f9565b6105ca8161082c565b840191505092915050565b60006105e0826107af565b6105ea81856107c5565b93506105fa8185602086016107f9565b6106038161082c565b840191505092915050565b604082016000820151610624600085018261066c565b506020820151610637602085018261066c565b50505050565b604082016000820151610653600085018261066c565b506020820151610666602085018261066c565b50505050565b610675816107e0565b82525050565b610684816107e0565b82525050565b600060208201905061069f600083018461058d565b92915050565b600060208201905081810360008301526106bf81846105d5565b905092915050565b600060208201905081810360008301526106e1818461059c565b905092915050565b60006040820190506106fe600083018461060e565b92915050565b6000606082019050610719600083018561063d565b610726604083018461067b565b9392505050565b6000604082019050610742600083018561067b565b61074f602083018461067b565b9392505050565b6000604051905081810181811067ffffffffffffffff8211171561077957600080fd5b8060405250919050565b600067ffffffffffffffff82111561079a57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156108175780820151818401526020810190506107fc565b83811115610826576000848401525b50505050565b6000601f19601f830116905091905056fea26469706673582212201e0870a955bf232901723b4ea6728c70438a172fa8fea86816395a4be1bbe7db64736f6c63430006040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE3A7FD75 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xE3A7FD75 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xEAACD81E EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0xFC26B0AB EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xFDDCC148 EQ PUSH2 0x149 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x2ED5FB83 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x9FFD85C4 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xA699FB03 EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x54C JUMP JUMPDEST PUSH2 0x168 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBA PUSH2 0x180 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP3 SWAP2 SWAP1 PUSH2 0x72D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF7 PUSH2 0x230 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x115 PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH2 0x266 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x151 PUSH2 0x304 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP3 SWAP2 SWAP1 PUSH2 0x704 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x170 PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x179 DUP3 PUSH2 0x334 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x216 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1EB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x216 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x261 PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x362 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x2FC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x5 DUP1 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x33C PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD GT PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x384 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x3EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH1 0x0 ADD MLOAD SUB SWAP1 POP PUSH1 0x60 DUP2 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3C6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD SWAP1 POP PUSH2 0x3E2 DUP5 DUP8 PUSH1 0x20 ADD MLOAD ADD DUP3 DUP6 PUSH2 0x477 JUMP JUMPDEST DUP2 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x80 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x472 JUMP JUMPDEST PUSH1 0xB8 PUSH1 0xFF AND DUP2 LT DUP1 PUSH2 0x433 JUMPI POP PUSH1 0xC0 PUSH1 0xFF AND DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x432 JUMPI POP PUSH1 0xF8 PUSH1 0xFF AND DUP2 LT JUMPDEST JUMPDEST ISZERO PUSH2 0x442 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x472 JUMP JUMPDEST PUSH1 0xC0 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0x462 JUMPI PUSH1 0x1 DUP1 PUSH1 0xB8 SUB PUSH1 0xFF AND DUP3 SUB ADD SWAP2 POP POP PUSH2 0x472 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xF8 SUB PUSH1 0xFF AND DUP3 SUB ADD SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x485 JUMPI PUSH2 0x4D9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 PUSH1 0xFF AND DUP2 LT PUSH2 0x4B5 JUMPI DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 PUSH1 0xFF AND DUP4 ADD SWAP3 POP PUSH1 0x20 PUSH1 0xFF AND DUP3 ADD SWAP2 POP PUSH1 0x20 PUSH1 0xFF AND DUP2 SUB SWAP1 POP PUSH2 0x486 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0x20 PUSH1 0xFF AND SUB PUSH2 0x100 EXP SUB SWAP1 POP DUP1 NOT DUP5 MLOAD AND DUP2 DUP5 MLOAD AND DUP2 DUP2 OR DUP6 MSTORE POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x51C PUSH2 0x517 DUP3 PUSH2 0x783 JUMP JUMPDEST PUSH2 0x756 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x543 DUP4 DUP3 DUP5 PUSH2 0x7EA JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x55E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x584 DUP5 DUP3 DUP6 ADD PUSH2 0x4F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x596 DUP2 PUSH2 0x7D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A7 DUP3 PUSH2 0x7BA JUMP JUMPDEST PUSH2 0x5B1 DUP2 DUP6 PUSH2 0x7C5 JUMP JUMPDEST SWAP4 POP PUSH2 0x5C1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x5CA DUP2 PUSH2 0x82C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E0 DUP3 PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x5EA DUP2 DUP6 PUSH2 0x7C5 JUMP JUMPDEST SWAP4 POP PUSH2 0x5FA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x603 DUP2 PUSH2 0x82C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x624 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x66C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x637 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x66C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x653 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x66C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x666 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x66C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x675 DUP2 PUSH2 0x7E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x684 DUP2 PUSH2 0x7E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x69F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x58D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6BF DUP2 DUP5 PUSH2 0x5D5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6E1 DUP2 DUP5 PUSH2 0x59C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6FE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x60E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x719 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x63D JUMP JUMPDEST PUSH2 0x726 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x67B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x742 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x67B JUMP JUMPDEST PUSH2 0x74F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x67B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x779 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x79A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x817 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7FC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x826 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E ADDMOD PUSH17 0xA955BF232901723B4EA6728C70438A172F 0xA8 INVALID 0xA8 PUSH9 0x16395A4BE1BBE7DB64 PUSH20 0x6F6C634300060400330000000000000000000000 ",
							"sourceMap": "81:8779:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;81:8779:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;1197:127:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;107:69;;;:::i;:::-;;;;;;;;;;;;;;;;929:22;;;:::i;:::-;;;;;;;;;;;;;;;;;263:47;;;:::i;:::-;;;;;;;;;;;;;;;;1336:109;;;:::i;:::-;;;;;;;;;;;;;;;;187:65;;;:::i;:::-;;;;;;;;;;;;;;;;962:24;;;:::i;:::-;;;;;;;;;;;;;;;;;1197:127;1259:14;;:::i;:::-;1297:15;1307:4;1297:9;:15::i;:::-;1290:22;;1197:127;;;:::o;107:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;929:22::-;;;;;;;;;;;;;;:::o;263:47::-;;;;:::o;1336:109::-;1381:12;1417:16;1425:7;1417:16;;;;;;;;;;;;;;;;;;;;;;;;;:7;:16::i;:::-;1410:23;;1336:109;:::o;187:65::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;962:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1457:249::-;1518:14;;:::i;:::-;1549:11;1623:4;1617;1613:15;1603:25;;1666:28;;;;;;;;1674:4;:11;1666:28;;;;1687:6;1666:28;;;1659:35;;;1457:249;;;:::o;1718:489::-;1779:12;1827:1;1816:4;:8;;;:12;1808:21;;12:1:-1;9;2:12;1808:21:0;1846:11;1860:27;1875:4;:11;;;1860:14;:27::i;:::-;1846:41;;1902:8;1924:6;1913:4;:8;;;:17;1902:28;;1960:19;1992:3;1982:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;124:4;108:14;100:6;87:42;155:4;147:6;143:17;133:27;;0:164;1982:14:0;;;;1960:36;;2013:12;2089:6;2083:4;2079:17;2068:28;;2127:40;2146:6;2132:4;:11;;;:20;2154:7;2163:3;2127:4;:40::i;:::-;2189:6;2182:13;;;;;;1718:489;;;:::o;7452:603::-;7511:4;7532:10;7608:6;7602:13;7599:1;7594:22;7585:31;;447:4;7651:26;;:5;:26;7647:396;;;7703:1;7696:8;;;;;7647:396;498:4;7728:25;;:5;:25;:83;;;;549:4;7758:25;;:5;:25;;:52;;;;;600:4;7787:23;;:5;:23;7758:52;7728:83;7724:319;;;7837:1;7830:8;;;;;7724:319;549:4;7862:24;;:5;:24;7858:185;;;7965:1;7960;498:4;7940:21;7931:31;;:5;:31;:35;7924:42;;;;;7858:185;8042:1;8037;600:4;8019:19;8010:29;;:5;:29;:33;8003:40;;;7452:603;;;;:::o;8068:785::-;8152:1;8145:3;:8;8141:21;;;8155:7;;8141:21;8230:225;642:2;8237:16;;:3;:16;8230:225;;8343:3;8337:10;8331:4;8324:24;642:2;8387:16;;;;;;642:2;8422:17;;;;;;642:2;8255:16;;;;;;8230:225;;;8556:9;8595:1;8588:3;642:2;8576:15;;;8568:3;:24;:28;8556:40;;8674:4;8670:9;8664:3;8658:10;8654:26;8747:4;8740;8734:11;8730:22;8818:7;8808:8;8805:21;8799:4;8792:35;8620:222;;;;;;;:::o;81:8779::-;;;;;;;;;;;;;;;;;;;:::o;6:440:-1:-;;107:3;100:4;92:6;88:17;84:27;74:2;;125:1;122;115:12;74:2;162:6;149:20;184:64;199:48;240:6;199:48;;;184:64;;;175:73;;268:6;261:5;254:21;304:4;296:6;292:17;337:4;330:5;326:16;372:3;363:6;358:3;354:16;351:25;348:2;;;389:1;386;379:12;348:2;399:41;433:6;428:3;423;399:41;;;67:379;;;;;;;;454:345;;567:2;555:9;546:7;542:23;538:32;535:2;;;583:1;580;573:12;535:2;646:1;635:9;631:17;618:31;669:18;661:6;658:30;655:2;;;701:1;698;691:12;655:2;721:62;775:7;766:6;755:9;751:22;721:62;;;711:72;;597:192;529:270;;;;;806:113;889:24;907:5;889:24;;;884:3;877:37;871:48;;;926:343;;1036:38;1068:5;1036:38;;;1086:70;1149:6;1144:3;1086:70;;;1079:77;;1161:52;1206:6;1201:3;1194:4;1187:5;1183:16;1161:52;;;1234:29;1256:6;1234:29;;;1229:3;1225:39;1218:46;;1016:253;;;;;;1276:335;;1382:34;1410:5;1382:34;;;1428:70;1491:6;1486:3;1428:70;;;1421:77;;1503:52;1548:6;1543:3;1536:4;1529:5;1525:16;1503:52;;;1576:29;1598:6;1576:29;;;1571:3;1567:39;1560:46;;1362:249;;;;;;1669:473;1808:4;1803:3;1799:14;1890:4;1883:5;1879:16;1873:23;1902:63;1959:4;1954:3;1950:14;1936:12;1902:63;;;1828:143;2046:4;2039:5;2035:16;2029:23;2058:63;2115:4;2110:3;2106:14;2092:12;2058:63;;;1981:146;1781:361;;;;2200:469;2335:4;2330:3;2326:14;2417:4;2410:5;2406:16;2400:23;2429:63;2486:4;2481:3;2477:14;2463:12;2429:63;;;2355:143;2573:4;2566:5;2562:16;2556:23;2585:63;2642:4;2637:3;2633:14;2619:12;2585:63;;;2508:146;2308:361;;;;2676:103;2749:24;2767:5;2749:24;;;2744:3;2737:37;2731:48;;;2786:113;2869:24;2887:5;2869:24;;;2864:3;2857:37;2851:48;;;2906:213;;3024:2;3013:9;3009:18;3001:26;;3038:71;3106:1;3095:9;3091:17;3082:6;3038:71;;;2995:124;;;;;3126:289;;3258:2;3247:9;3243:18;3235:26;;3308:9;3302:4;3298:20;3294:1;3283:9;3279:17;3272:47;3333:72;3400:4;3391:6;3333:72;;;3325:80;;3229:186;;;;;3422:297;;3558:2;3547:9;3543:18;3535:26;;3608:9;3602:4;3598:20;3594:1;3583:9;3579:17;3572:47;3633:76;3704:4;3695:6;3633:76;;;3625:84;;3529:190;;;;;3726:305;;3890:2;3879:9;3875:18;3867:26;;3904:117;4018:1;4007:9;4003:17;3994:6;3904:117;;;3861:170;;;;;4038:408;;4226:2;4215:9;4211:18;4203:26;;4240:113;4350:1;4339:9;4335:17;4326:6;4240:113;;;4364:72;4432:2;4421:9;4417:18;4408:6;4364:72;;;4197:249;;;;;;4453:324;;4599:2;4588:9;4584:18;4576:26;;4613:71;4681:1;4670:9;4666:17;4657:6;4613:71;;;4695:72;4763:2;4752:9;4748:18;4739:6;4695:72;;;4570:207;;;;;;4784:256;;4846:2;4840:9;4830:19;;4884:4;4876:6;4872:17;4983:6;4971:10;4968:22;4947:18;4935:10;4932:34;4929:62;4926:2;;;5004:1;5001;4994:12;4926:2;5024:10;5020:2;5013:22;4824:216;;;;;5047:321;;5190:18;5182:6;5179:30;5176:2;;;5222:1;5219;5212:12;5176:2;5289:4;5285:9;5278:4;5270:6;5266:17;5262:33;5254:41;;5353:4;5347;5343:15;5335:23;;5113:255;;;;5375:117;;5464:5;5458:12;5448:22;;5429:63;;;;5499:121;;5592:5;5586:12;5576:22;;5557:63;;;;5628:162;;5742:6;5737:3;5730:19;5779:4;5774:3;5770:14;5755:29;;5723:67;;;;;5798:72;;5860:5;5849:16;;5843:27;;;;5877:72;;5939:5;5928:16;;5922:27;;;;5957:145;6038:6;6033:3;6028;6015:30;6094:1;6085:6;6080:3;6076:16;6069:27;6008:94;;;;6111:268;6176:1;6183:101;6197:6;6194:1;6191:13;6183:101;;;6273:1;6268:3;6264:11;6258:18;6254:1;6249:3;6245:11;6238:39;6219:2;6216:1;6212:10;6207:15;;6183:101;;;6299:6;6296:1;6293:13;6290:2;;;6364:1;6355:6;6350:3;6346:16;6339:27;6290:2;6160:219;;;;;6387:97;;6475:2;6471:7;6466:2;6459:5;6455:14;6451:28;6441:38;;6435:49;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "432600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"data1()": "infinite",
								"data2()": "1129",
								"data3()": "infinite",
								"getDecodeData(bytes)": "infinite",
								"getEncodeData()": "infinite",
								"iterator()": "infinite",
								"rlpItem()": "infinite"
							},
							"internal": {
								"_itemLength(uint256)": "infinite",
								"_payloadOffset(uint256)": "infinite",
								"copy(uint256,uint256,uint256)": "infinite",
								"hasNext(struct demo2.Iterator memory)": "infinite",
								"next(struct demo2.Iterator memory)": "infinite",
								"numItems(struct demo2.RLPItem memory)": "infinite",
								"toAddress(struct demo2.RLPItem memory)": "infinite",
								"toBoolean(struct demo2.RLPItem memory)": "infinite",
								"toBytes(struct demo2.RLPItem memory)": "infinite",
								"toRLPItem(bytes memory)": "infinite",
								"toRlpBytes(struct demo2.RLPItem memory)": "infinite",
								"toUint(struct demo2.RLPItem memory)": "infinite",
								"toUintStrict(struct demo2.RLPItem memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "2E"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH data",
									"source": 0,
									"value": "4887836E294A2761413359597244D307BBE3F94827F6160D9E1A399E00E2D1BE"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "2E"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "2A"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH data",
									"source": 0,
									"value": "C359735A342ECE061E65AB7390D246D1E53BA5F24EEA70D6201F1D4A7B2F3475"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "2A"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 263,
									"end": 310,
									"name": "PUSH",
									"source": 0,
									"value": "4C45484F4E47564F776A6E66766A3377656838764B4A00000000000000000000"
								},
								{
									"begin": 263,
									"end": 310,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 263,
									"end": 310,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 999,
									"end": 1168,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 999,
									"end": 1168,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1049,
									"end": 1050,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1035,
									"end": 1042,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1035,
									"end": 1046,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1035,
									"end": 1046,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1035,
									"end": 1050,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1035,
									"end": 1050,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1035,
									"end": 1050,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1035,
									"end": 1050,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1082,
									"end": 1083,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1065,
									"end": 1072,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1065,
									"end": 1079,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1065,
									"end": 1079,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1065,
									"end": 1083,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1065,
									"end": 1083,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1065,
									"end": 1083,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1065,
									"end": 1083,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1114,
									"end": 1121,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1098,
									"end": 1106,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1098,
									"end": 1111,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1111,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1121,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1136,
									"end": 1144,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1136,
									"end": 1152,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1136,
									"end": 1152,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1136,
									"end": 1156,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1136,
									"end": 1156,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1136,
									"end": 1156,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1136,
									"end": 1156,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 8860,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201e0870a955bf232901723b4ea6728c70438a172fa8fea86816395a4be1bbe7db64736f6c63430006040033",
									".code": [
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "E3A7FD75"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "E3A7FD75"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "EAACD81E"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "FC26B0AB"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "FDDCC148"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "2ED5FB83"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "9FFD85C4"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "A699FB03"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1259,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1259,
											"end": 1273,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1273,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1259,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1307,
											"end": 1311,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1297,
											"end": 1312,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1312,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1297,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1324,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1393,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1425,
											"end": 1432,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1336,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 962,
											"end": 986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 962,
											"end": 986,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1457,
											"end": 1706,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1457,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1518,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1518,
											"end": 1532,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1518,
											"end": 1532,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1518,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1623,
											"end": 1627,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1617,
											"end": 1621,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1613,
											"end": 1628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1603,
											"end": 1628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1666,
											"end": 1694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1666,
											"end": 1694,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1666,
											"end": 1694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1674,
											"end": 1678,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1674,
											"end": 1685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1666,
											"end": 1694,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1659,
											"end": 1694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1659,
											"end": 1694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1659,
											"end": 1694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1706,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1457,
											"end": 1706,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1718,
											"end": 2207,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1718,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1791,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1827,
											"end": 1828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 1820,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 1824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1824,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1828,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1808,
											"end": 1829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1808,
											"end": 1829,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1808,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 1857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1875,
											"end": 1879,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1886,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1886,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1860,
											"end": 1887,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1860,
											"end": 1887,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1860,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 1887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 1887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1902,
											"end": 1910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1913,
											"end": 1917,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1913,
											"end": 1921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1913,
											"end": 1921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1913,
											"end": 1921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1913,
											"end": 1930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1902,
											"end": 1930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1902,
											"end": 1930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1979,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1992,
											"end": 1995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17,
											"end": 31,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 128,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 108,
											"end": 122,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": 100,
											"end": 106,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 87,
											"end": 129,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 155,
											"end": 159,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 143,
											"end": 160,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 133,
											"end": 160,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 133,
											"end": 160,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 164,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2013,
											"end": 2025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2079,
											"end": 2096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2146,
											"end": 2152,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2136,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2132,
											"end": 2143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2166,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2127,
											"end": 2167,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2127,
											"end": 2167,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2127,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2182,
											"end": 2195,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2182,
											"end": 2195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2182,
											"end": 2195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2182,
											"end": 2195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2182,
											"end": 2195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2182,
											"end": 2195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 2207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 2207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 2207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 2207,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7452,
											"end": 8055,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 7452,
											"end": 8055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7532,
											"end": 7542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7608,
											"end": 7614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7615,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7599,
											"end": 7600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7594,
											"end": 7616,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 7585,
											"end": 7616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7585,
											"end": 7616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 447,
											"end": 451,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7651,
											"end": 7677,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7651,
											"end": 7677,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7656,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7677,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7647,
											"end": 8043,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7647,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7647,
											"end": 8043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7703,
											"end": 7704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7696,
											"end": 7704,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7696,
											"end": 7704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7696,
											"end": 7704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7696,
											"end": 7704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 7696,
											"end": 7704,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7647,
											"end": 8043,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7647,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 498,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "B8"
										},
										{
											"begin": 7728,
											"end": 7753,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7728,
											"end": 7753,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7728,
											"end": 7733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7728,
											"end": 7753,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7728,
											"end": 7811,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7728,
											"end": 7811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 7728,
											"end": 7811,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7728,
											"end": 7811,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 553,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 7758,
											"end": 7783,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7758,
											"end": 7783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7758,
											"end": 7763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7758,
											"end": 7783,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7758,
											"end": 7783,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7758,
											"end": 7810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7758,
											"end": 7810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7758,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7758,
											"end": 7810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7758,
											"end": 7810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 600,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 7787,
											"end": 7810,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7787,
											"end": 7810,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7787,
											"end": 7792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7787,
											"end": 7810,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7758,
											"end": 7810,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7758,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7728,
											"end": 7811,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 7728,
											"end": 7811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7724,
											"end": 8043,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7724,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 7724,
											"end": 8043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7837,
											"end": 7838,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7830,
											"end": 7838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7830,
											"end": 7838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7830,
											"end": 7838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7830,
											"end": 7838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 7830,
											"end": 7838,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7724,
											"end": 8043,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 7724,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 549,
											"end": 553,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 7862,
											"end": 7886,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7862,
											"end": 7886,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7862,
											"end": 7867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7862,
											"end": 7886,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7858,
											"end": 8043,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7858,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 7858,
											"end": 8043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7965,
											"end": 7966,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7960,
											"end": 7961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 498,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "B8"
										},
										{
											"begin": 7940,
											"end": 7961,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7931,
											"end": 7962,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7931,
											"end": 7962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7931,
											"end": 7936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7931,
											"end": 7962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7931,
											"end": 7966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7924,
											"end": 7966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7924,
											"end": 7966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7924,
											"end": 7966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7924,
											"end": 7966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 7924,
											"end": 7966,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7858,
											"end": 8043,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 7858,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8043,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8037,
											"end": 8038,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 600,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 8019,
											"end": 8038,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8010,
											"end": 8039,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8010,
											"end": 8039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8010,
											"end": 8015,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8010,
											"end": 8039,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8010,
											"end": 8043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8003,
											"end": 8043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8003,
											"end": 8043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8003,
											"end": 8043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7452,
											"end": 8055,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 7452,
											"end": 8055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7452,
											"end": 8055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7452,
											"end": 8055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7452,
											"end": 8055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7452,
											"end": 8055,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8068,
											"end": 8853,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 8068,
											"end": 8853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8152,
											"end": 8153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8145,
											"end": 8148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8145,
											"end": 8153,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8141,
											"end": 8162,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8141,
											"end": 8162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 8141,
											"end": 8162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 8155,
											"end": 8162,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8141,
											"end": 8162,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 8141,
											"end": 8162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8230,
											"end": 8455,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8230,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 642,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8237,
											"end": 8253,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8237,
											"end": 8253,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8237,
											"end": 8240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8237,
											"end": 8253,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8230,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8230,
											"end": 8455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8343,
											"end": 8346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8337,
											"end": 8347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8331,
											"end": 8335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8324,
											"end": 8348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 642,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8387,
											"end": 8403,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8387,
											"end": 8403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8403,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8403,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8387,
											"end": 8403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 642,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8422,
											"end": 8439,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8422,
											"end": 8439,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8422,
											"end": 8439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8422,
											"end": 8439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8422,
											"end": 8439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8422,
											"end": 8439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 642,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8255,
											"end": 8271,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8255,
											"end": 8271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8255,
											"end": 8271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8255,
											"end": 8271,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8255,
											"end": 8271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8255,
											"end": 8271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8230,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8230,
											"end": 8455,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8230,
											"end": 8455,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8230,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8556,
											"end": 8565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8595,
											"end": 8596,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8588,
											"end": 8591,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 642,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8576,
											"end": 8591,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8576,
											"end": 8591,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8576,
											"end": 8591,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8568,
											"end": 8571,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8568,
											"end": 8592,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8568,
											"end": 8596,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8556,
											"end": 8596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8556,
											"end": 8596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8674,
											"end": 8678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8670,
											"end": 8679,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8664,
											"end": 8667,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8654,
											"end": 8680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8747,
											"end": 8751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8740,
											"end": 8744,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8745,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8730,
											"end": 8752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8818,
											"end": 8825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8808,
											"end": 8816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8805,
											"end": 8826,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8799,
											"end": 8803,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8792,
											"end": 8827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8842,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 8620,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8842,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 8860,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6,
											"end": 446,
											"name": "tag",
											"source": -1,
											"value": "78"
										},
										{
											"begin": 6,
											"end": 446,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6,
											"end": 446,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 110,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 100,
											"end": 104,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 92,
											"end": 98,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 88,
											"end": 105,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 111,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 74,
											"end": 76,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 74,
											"end": 76,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 125,
											"end": 126,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 122,
											"end": 123,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 115,
											"end": 127,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 74,
											"end": 76,
											"name": "tag",
											"source": -1,
											"value": "80"
										},
										{
											"begin": 74,
											"end": 76,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 162,
											"end": 168,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 149,
											"end": 169,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 184,
											"end": 248,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "81"
										},
										{
											"begin": 199,
											"end": 247,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "82"
										},
										{
											"begin": 240,
											"end": 246,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 199,
											"end": 247,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "83"
										},
										{
											"begin": 199,
											"end": 247,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 199,
											"end": 247,
											"name": "tag",
											"source": -1,
											"value": "82"
										},
										{
											"begin": 199,
											"end": 247,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 184,
											"end": 248,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "84"
										},
										{
											"begin": 184,
											"end": 248,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 184,
											"end": 248,
											"name": "tag",
											"source": -1,
											"value": "81"
										},
										{
											"begin": 184,
											"end": 248,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 175,
											"end": 248,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 175,
											"end": 248,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 261,
											"end": 266,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 254,
											"end": 275,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 304,
											"end": 308,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 296,
											"end": 302,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 292,
											"end": 309,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 337,
											"end": 341,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 330,
											"end": 335,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 326,
											"end": 342,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 363,
											"end": 369,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 358,
											"end": 361,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 354,
											"end": 370,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 351,
											"end": 376,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 350,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "85"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 389,
											"end": 390,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 387,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 379,
											"end": 391,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 348,
											"end": 350,
											"name": "tag",
											"source": -1,
											"value": "85"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 399,
											"end": 440,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "86"
										},
										{
											"begin": 433,
											"end": 439,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 428,
											"end": 431,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 423,
											"end": 426,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 399,
											"end": 440,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "87"
										},
										{
											"begin": 399,
											"end": 440,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 399,
											"end": 440,
											"name": "tag",
											"source": -1,
											"value": "86"
										},
										{
											"begin": 399,
											"end": 440,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 67,
											"end": 446,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 67,
											"end": 446,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 67,
											"end": 446,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 67,
											"end": 446,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 67,
											"end": 446,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 67,
											"end": 446,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 67,
											"end": 446,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 67,
											"end": 446,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 454,
											"end": 799,
											"name": "tag",
											"source": -1,
											"value": "13"
										},
										{
											"begin": 454,
											"end": 799,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 454,
											"end": 799,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 569,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 555,
											"end": 564,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 546,
											"end": 553,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 542,
											"end": 565,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 538,
											"end": 570,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 535,
											"end": 537,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 535,
											"end": 537,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "89"
										},
										{
											"begin": 535,
											"end": 537,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 583,
											"end": 584,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 580,
											"end": 581,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 573,
											"end": 585,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 535,
											"end": 537,
											"name": "tag",
											"source": -1,
											"value": "89"
										},
										{
											"begin": 535,
											"end": 537,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 646,
											"end": 647,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 644,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 631,
											"end": 648,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 618,
											"end": 649,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 669,
											"end": 687,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 661,
											"end": 667,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 658,
											"end": 688,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 655,
											"end": 657,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 655,
											"end": 657,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "90"
										},
										{
											"begin": 655,
											"end": 657,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 701,
											"end": 702,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 699,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 691,
											"end": 703,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 655,
											"end": 657,
											"name": "tag",
											"source": -1,
											"value": "90"
										},
										{
											"begin": 655,
											"end": 657,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 721,
											"end": 783,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "91"
										},
										{
											"begin": 775,
											"end": 782,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 755,
											"end": 764,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 751,
											"end": 773,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 721,
											"end": 783,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "78"
										},
										{
											"begin": 721,
											"end": 783,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 721,
											"end": 783,
											"name": "tag",
											"source": -1,
											"value": "91"
										},
										{
											"begin": 721,
											"end": 783,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 711,
											"end": 783,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 711,
											"end": 783,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 597,
											"end": 789,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 529,
											"end": 799,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 529,
											"end": 799,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 529,
											"end": 799,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 529,
											"end": 799,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 529,
											"end": 799,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 806,
											"end": 919,
											"name": "tag",
											"source": -1,
											"value": "92"
										},
										{
											"begin": 806,
											"end": 919,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 889,
											"end": 913,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "94"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 889,
											"end": 913,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "95"
										},
										{
											"begin": 889,
											"end": 913,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 889,
											"end": 913,
											"name": "tag",
											"source": -1,
											"value": "94"
										},
										{
											"begin": 889,
											"end": 913,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 884,
											"end": 887,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 877,
											"end": 914,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 926,
											"end": 1269,
											"name": "tag",
											"source": -1,
											"value": "96"
										},
										{
											"begin": 926,
											"end": 1269,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 926,
											"end": 1269,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "98"
										},
										{
											"begin": 1068,
											"end": 1073,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1036,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "99"
										},
										{
											"begin": 1036,
											"end": 1074,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1036,
											"end": 1074,
											"name": "tag",
											"source": -1,
											"value": "98"
										},
										{
											"begin": 1036,
											"end": 1074,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1086,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 1149,
											"end": 1155,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1144,
											"end": 1147,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1086,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "101"
										},
										{
											"begin": 1086,
											"end": 1156,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1086,
											"end": 1156,
											"name": "tag",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 1086,
											"end": 1156,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1079,
											"end": 1156,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 1079,
											"end": 1156,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "102"
										},
										{
											"begin": 1206,
											"end": 1212,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1201,
											"end": 1204,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1194,
											"end": 1198,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1187,
											"end": 1192,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 1183,
											"end": 1199,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "103"
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "tag",
											"source": -1,
											"value": "102"
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1234,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "104"
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1234,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "105"
										},
										{
											"begin": 1234,
											"end": 1263,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1234,
											"end": 1263,
											"name": "tag",
											"source": -1,
											"value": "104"
										},
										{
											"begin": 1234,
											"end": 1263,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1229,
											"end": 1232,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1225,
											"end": 1264,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1218,
											"end": 1264,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1218,
											"end": 1264,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1016,
											"end": 1269,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1016,
											"end": 1269,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1016,
											"end": 1269,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1016,
											"end": 1269,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1016,
											"end": 1269,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1016,
											"end": 1269,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1276,
											"end": 1611,
											"name": "tag",
											"source": -1,
											"value": "106"
										},
										{
											"begin": 1276,
											"end": 1611,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1276,
											"end": 1611,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "108"
										},
										{
											"begin": 1410,
											"end": 1415,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1382,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "109"
										},
										{
											"begin": 1382,
											"end": 1416,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1382,
											"end": 1416,
											"name": "tag",
											"source": -1,
											"value": "108"
										},
										{
											"begin": 1382,
											"end": 1416,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1428,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "110"
										},
										{
											"begin": 1491,
											"end": 1497,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1486,
											"end": 1489,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1428,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "101"
										},
										{
											"begin": 1428,
											"end": 1498,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1428,
											"end": 1498,
											"name": "tag",
											"source": -1,
											"value": "110"
										},
										{
											"begin": 1428,
											"end": 1498,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1503,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "111"
										},
										{
											"begin": 1548,
											"end": 1554,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1543,
											"end": 1546,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1536,
											"end": 1540,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1529,
											"end": 1534,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 1525,
											"end": 1541,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1503,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "103"
										},
										{
											"begin": 1503,
											"end": 1555,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1503,
											"end": 1555,
											"name": "tag",
											"source": -1,
											"value": "111"
										},
										{
											"begin": 1503,
											"end": 1555,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1576,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "112"
										},
										{
											"begin": 1598,
											"end": 1604,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1576,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "105"
										},
										{
											"begin": 1576,
											"end": 1605,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1576,
											"end": 1605,
											"name": "tag",
											"source": -1,
											"value": "112"
										},
										{
											"begin": 1576,
											"end": 1605,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1571,
											"end": 1574,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1567,
											"end": 1606,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1560,
											"end": 1606,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1560,
											"end": 1606,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1611,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1611,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1611,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1611,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1611,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1611,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1669,
											"end": 2142,
											"name": "tag",
											"source": -1,
											"value": "113"
										},
										{
											"begin": 1669,
											"end": 2142,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1808,
											"end": 1812,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 1803,
											"end": 1806,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1799,
											"end": 1813,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1890,
											"end": 1894,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1883,
											"end": 1888,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1879,
											"end": 1895,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1873,
											"end": 1896,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 1902,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "115"
										},
										{
											"begin": 1959,
											"end": 1963,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1936,
											"end": 1948,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1902,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "116"
										},
										{
											"begin": 1902,
											"end": 1965,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1902,
											"end": 1965,
											"name": "tag",
											"source": -1,
											"value": "115"
										},
										{
											"begin": 1902,
											"end": 1965,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1828,
											"end": 1971,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2046,
											"end": 2050,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2044,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2051,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2029,
											"end": 2052,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 2058,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "117"
										},
										{
											"begin": 2115,
											"end": 2119,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2113,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 2106,
											"end": 2120,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2104,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2058,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "116"
										},
										{
											"begin": 2058,
											"end": 2121,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2058,
											"end": 2121,
											"name": "tag",
											"source": -1,
											"value": "117"
										},
										{
											"begin": 2058,
											"end": 2121,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1981,
											"end": 2127,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1781,
											"end": 2142,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1781,
											"end": 2142,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1781,
											"end": 2142,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1781,
											"end": 2142,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2200,
											"end": 2669,
											"name": "tag",
											"source": -1,
											"value": "118"
										},
										{
											"begin": 2200,
											"end": 2669,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2335,
											"end": 2339,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2333,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2326,
											"end": 2340,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2417,
											"end": 2421,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2410,
											"end": 2415,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2406,
											"end": 2422,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2400,
											"end": 2423,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 2429,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "120"
										},
										{
											"begin": 2486,
											"end": 2490,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2481,
											"end": 2484,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 2477,
											"end": 2491,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2463,
											"end": 2475,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2429,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "116"
										},
										{
											"begin": 2429,
											"end": 2492,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2429,
											"end": 2492,
											"name": "tag",
											"source": -1,
											"value": "120"
										},
										{
											"begin": 2429,
											"end": 2492,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2355,
											"end": 2498,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2573,
											"end": 2577,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2566,
											"end": 2571,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2556,
											"end": 2579,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 2585,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "121"
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2637,
											"end": 2640,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 2633,
											"end": 2647,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2619,
											"end": 2631,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2585,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "116"
										},
										{
											"begin": 2585,
											"end": 2648,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2585,
											"end": 2648,
											"name": "tag",
											"source": -1,
											"value": "121"
										},
										{
											"begin": 2585,
											"end": 2648,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2508,
											"end": 2654,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2308,
											"end": 2669,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2308,
											"end": 2669,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2308,
											"end": 2669,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2308,
											"end": 2669,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2676,
											"end": 2779,
											"name": "tag",
											"source": -1,
											"value": "116"
										},
										{
											"begin": 2676,
											"end": 2779,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2749,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "123"
										},
										{
											"begin": 2767,
											"end": 2772,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2749,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "124"
										},
										{
											"begin": 2749,
											"end": 2773,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2749,
											"end": 2773,
											"name": "tag",
											"source": -1,
											"value": "123"
										},
										{
											"begin": 2749,
											"end": 2773,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2744,
											"end": 2747,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2737,
											"end": 2774,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2731,
											"end": 2779,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2731,
											"end": 2779,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2731,
											"end": 2779,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2786,
											"end": 2899,
											"name": "tag",
											"source": -1,
											"value": "125"
										},
										{
											"begin": 2786,
											"end": 2899,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2869,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "127"
										},
										{
											"begin": 2887,
											"end": 2892,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2869,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "124"
										},
										{
											"begin": 2869,
											"end": 2893,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2869,
											"end": 2893,
											"name": "tag",
											"source": -1,
											"value": "127"
										},
										{
											"begin": 2869,
											"end": 2893,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2864,
											"end": 2867,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2851,
											"end": 2899,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2851,
											"end": 2899,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2851,
											"end": 2899,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2906,
											"end": 3119,
											"name": "tag",
											"source": -1,
											"value": "28"
										},
										{
											"begin": 2906,
											"end": 3119,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2906,
											"end": 3119,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3026,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3013,
											"end": 3022,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3009,
											"end": 3027,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3001,
											"end": 3027,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3001,
											"end": 3027,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3038,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "129"
										},
										{
											"begin": 3106,
											"end": 3107,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3091,
											"end": 3108,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3082,
											"end": 3088,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3038,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "92"
										},
										{
											"begin": 3038,
											"end": 3109,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3038,
											"end": 3109,
											"name": "tag",
											"source": -1,
											"value": "129"
										},
										{
											"begin": 3038,
											"end": 3109,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2995,
											"end": 3119,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 2995,
											"end": 3119,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2995,
											"end": 3119,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2995,
											"end": 3119,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2995,
											"end": 3119,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3126,
											"end": 3415,
											"name": "tag",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3126,
											"end": 3415,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3126,
											"end": 3415,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3258,
											"end": 3260,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3243,
											"end": 3261,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3235,
											"end": 3261,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3235,
											"end": 3261,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3308,
											"end": 3317,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3302,
											"end": 3306,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3298,
											"end": 3318,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3294,
											"end": 3295,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3292,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3279,
											"end": 3296,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3272,
											"end": 3319,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3333,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "131"
										},
										{
											"begin": 3400,
											"end": 3404,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3391,
											"end": 3397,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3333,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "106"
										},
										{
											"begin": 3333,
											"end": 3405,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3333,
											"end": 3405,
											"name": "tag",
											"source": -1,
											"value": "131"
										},
										{
											"begin": 3333,
											"end": 3405,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3325,
											"end": 3405,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3325,
											"end": 3405,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3229,
											"end": 3415,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 3229,
											"end": 3415,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3229,
											"end": 3415,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3229,
											"end": 3415,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3229,
											"end": 3415,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3422,
											"end": 3719,
											"name": "tag",
											"source": -1,
											"value": "32"
										},
										{
											"begin": 3422,
											"end": 3719,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3422,
											"end": 3719,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3558,
											"end": 3560,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3547,
											"end": 3556,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3543,
											"end": 3561,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3535,
											"end": 3561,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3535,
											"end": 3561,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3608,
											"end": 3617,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3602,
											"end": 3606,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3598,
											"end": 3618,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3594,
											"end": 3595,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3579,
											"end": 3596,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3572,
											"end": 3619,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3633,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "133"
										},
										{
											"begin": 3704,
											"end": 3708,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3695,
											"end": 3701,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3633,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "96"
										},
										{
											"begin": 3633,
											"end": 3709,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3633,
											"end": 3709,
											"name": "tag",
											"source": -1,
											"value": "133"
										},
										{
											"begin": 3633,
											"end": 3709,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3625,
											"end": 3709,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3625,
											"end": 3709,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3529,
											"end": 3719,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 3529,
											"end": 3719,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3529,
											"end": 3719,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3529,
											"end": 3719,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3529,
											"end": 3719,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3726,
											"end": 4031,
											"name": "tag",
											"source": -1,
											"value": "16"
										},
										{
											"begin": 3726,
											"end": 4031,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3726,
											"end": 4031,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 3879,
											"end": 3888,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3867,
											"end": 3893,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3867,
											"end": 3893,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3904,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "135"
										},
										{
											"begin": 4018,
											"end": 4019,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4016,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 4003,
											"end": 4020,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3994,
											"end": 4000,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3904,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "113"
										},
										{
											"begin": 3904,
											"end": 4021,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3904,
											"end": 4021,
											"name": "tag",
											"source": -1,
											"value": "135"
										},
										{
											"begin": 3904,
											"end": 4021,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3861,
											"end": 4031,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 3861,
											"end": 4031,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3861,
											"end": 4031,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3861,
											"end": 4031,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3861,
											"end": 4031,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 4038,
											"end": 4446,
											"name": "tag",
											"source": -1,
											"value": "39"
										},
										{
											"begin": 4038,
											"end": 4446,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4038,
											"end": 4446,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4228,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 4215,
											"end": 4224,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4211,
											"end": 4229,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4203,
											"end": 4229,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4203,
											"end": 4229,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4240,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "137"
										},
										{
											"begin": 4350,
											"end": 4351,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4339,
											"end": 4348,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 4335,
											"end": 4352,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4326,
											"end": 4332,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 4240,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "118"
										},
										{
											"begin": 4240,
											"end": 4353,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 4240,
											"end": 4353,
											"name": "tag",
											"source": -1,
											"value": "137"
										},
										{
											"begin": 4240,
											"end": 4353,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4364,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "138"
										},
										{
											"begin": 4432,
											"end": 4434,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 4421,
											"end": 4430,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 4417,
											"end": 4435,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4408,
											"end": 4414,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 4364,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "125"
										},
										{
											"begin": 4364,
											"end": 4436,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 4364,
											"end": 4436,
											"name": "tag",
											"source": -1,
											"value": "138"
										},
										{
											"begin": 4364,
											"end": 4436,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4197,
											"end": 4446,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 4197,
											"end": 4446,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4197,
											"end": 4446,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4197,
											"end": 4446,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4197,
											"end": 4446,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4197,
											"end": 4446,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 4453,
											"end": 4777,
											"name": "tag",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 4453,
											"end": 4777,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4453,
											"end": 4777,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4599,
											"end": 4601,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 4588,
											"end": 4597,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4584,
											"end": 4602,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4576,
											"end": 4602,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4576,
											"end": 4602,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4613,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "140"
										},
										{
											"begin": 4681,
											"end": 4682,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 4679,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 4666,
											"end": 4683,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4657,
											"end": 4663,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 4613,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "125"
										},
										{
											"begin": 4613,
											"end": 4684,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 4613,
											"end": 4684,
											"name": "tag",
											"source": -1,
											"value": "140"
										},
										{
											"begin": 4613,
											"end": 4684,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4695,
											"end": 4767,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "141"
										},
										{
											"begin": 4763,
											"end": 4765,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 4752,
											"end": 4761,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4739,
											"end": 4745,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 4695,
											"end": 4767,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "125"
										},
										{
											"begin": 4695,
											"end": 4767,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 4695,
											"end": 4767,
											"name": "tag",
											"source": -1,
											"value": "141"
										},
										{
											"begin": 4695,
											"end": 4767,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4570,
											"end": 4777,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 4570,
											"end": 4777,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 4570,
											"end": 4777,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4570,
											"end": 4777,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4570,
											"end": 4777,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4570,
											"end": 4777,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 4784,
											"end": 5040,
											"name": "tag",
											"source": -1,
											"value": "84"
										},
										{
											"begin": 4784,
											"end": 5040,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4784,
											"end": 5040,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4846,
											"end": 4848,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 4840,
											"end": 4849,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 4830,
											"end": 4849,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4830,
											"end": 4849,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4884,
											"end": 4888,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4872,
											"end": 4889,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4971,
											"end": 4981,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4968,
											"end": 4990,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4947,
											"end": 4965,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4935,
											"end": 4945,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4932,
											"end": 4966,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 4929,
											"end": 4991,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 4926,
											"end": 4928,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4926,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "143"
										},
										{
											"begin": 4926,
											"end": 4928,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 5004,
											"end": 5005,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5001,
											"end": 5002,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 4994,
											"end": 5006,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4926,
											"end": 4928,
											"name": "tag",
											"source": -1,
											"value": "143"
										},
										{
											"begin": 4926,
											"end": 4928,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5024,
											"end": 5034,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5020,
											"end": 5022,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4824,
											"end": 5040,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4824,
											"end": 5040,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4824,
											"end": 5040,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4824,
											"end": 5040,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4824,
											"end": 5040,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 5047,
											"end": 5368,
											"name": "tag",
											"source": -1,
											"value": "83"
										},
										{
											"begin": 5047,
											"end": 5368,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5047,
											"end": 5368,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5190,
											"end": 5208,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5182,
											"end": 5188,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 5179,
											"end": 5209,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 5176,
											"end": 5178,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5176,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "145"
										},
										{
											"begin": 5176,
											"end": 5178,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 5222,
											"end": 5223,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5219,
											"end": 5220,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5212,
											"end": 5224,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5176,
											"end": 5178,
											"name": "tag",
											"source": -1,
											"value": "145"
										},
										{
											"begin": 5176,
											"end": 5178,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5289,
											"end": 5293,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 5285,
											"end": 5294,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5278,
											"end": 5282,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 5270,
											"end": 5276,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 5266,
											"end": 5283,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5262,
											"end": 5295,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 5254,
											"end": 5295,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5254,
											"end": 5295,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5353,
											"end": 5357,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 5347,
											"end": 5351,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5343,
											"end": 5358,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5335,
											"end": 5358,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5335,
											"end": 5358,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5113,
											"end": 5368,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 5113,
											"end": 5368,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5113,
											"end": 5368,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5113,
											"end": 5368,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 5375,
											"end": 5492,
											"name": "tag",
											"source": -1,
											"value": "109"
										},
										{
											"begin": 5375,
											"end": 5492,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5375,
											"end": 5492,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5464,
											"end": 5469,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5458,
											"end": 5470,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5470,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5470,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 5499,
											"end": 5620,
											"name": "tag",
											"source": -1,
											"value": "99"
										},
										{
											"begin": 5499,
											"end": 5620,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5499,
											"end": 5620,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5592,
											"end": 5597,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5586,
											"end": 5598,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 5576,
											"end": 5598,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5576,
											"end": 5598,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5557,
											"end": 5620,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 5557,
											"end": 5620,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5557,
											"end": 5620,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5557,
											"end": 5620,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 5628,
											"end": 5790,
											"name": "tag",
											"source": -1,
											"value": "101"
										},
										{
											"begin": 5628,
											"end": 5790,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5628,
											"end": 5790,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5742,
											"end": 5748,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 5737,
											"end": 5740,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 5730,
											"end": 5749,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5779,
											"end": 5783,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 5774,
											"end": 5777,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 5770,
											"end": 5784,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5755,
											"end": 5784,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5723,
											"end": 5790,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 5723,
											"end": 5790,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 5723,
											"end": 5790,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5723,
											"end": 5790,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5723,
											"end": 5790,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 5798,
											"end": 5870,
											"name": "tag",
											"source": -1,
											"value": "95"
										},
										{
											"begin": 5798,
											"end": 5870,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5798,
											"end": 5870,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5860,
											"end": 5865,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5849,
											"end": 5865,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5849,
											"end": 5865,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5843,
											"end": 5870,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 5843,
											"end": 5870,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5843,
											"end": 5870,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5843,
											"end": 5870,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 5877,
											"end": 5949,
											"name": "tag",
											"source": -1,
											"value": "124"
										},
										{
											"begin": 5877,
											"end": 5949,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5877,
											"end": 5949,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5939,
											"end": 5944,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5928,
											"end": 5944,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5928,
											"end": 5944,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5922,
											"end": 5949,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 5922,
											"end": 5949,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5922,
											"end": 5949,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5922,
											"end": 5949,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 5957,
											"end": 6102,
											"name": "tag",
											"source": -1,
											"value": "87"
										},
										{
											"begin": 5957,
											"end": 6102,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6038,
											"end": 6044,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 6033,
											"end": 6036,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6028,
											"end": 6031,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 6015,
											"end": 6045,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6085,
											"end": 6091,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 6080,
											"end": 6083,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 6076,
											"end": 6092,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6069,
											"end": 6096,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6102,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6102,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6102,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6102,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 6111,
											"end": 6379,
											"name": "tag",
											"source": -1,
											"value": "103"
										},
										{
											"begin": 6111,
											"end": 6379,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6176,
											"end": 6177,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6183,
											"end": 6284,
											"name": "tag",
											"source": -1,
											"value": "153"
										},
										{
											"begin": 6183,
											"end": 6284,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6197,
											"end": 6203,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 6194,
											"end": 6195,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6191,
											"end": 6204,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 6183,
											"end": 6284,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 6183,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "155"
										},
										{
											"begin": 6183,
											"end": 6284,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 6273,
											"end": 6274,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 6268,
											"end": 6271,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 6264,
											"end": 6275,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6258,
											"end": 6276,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 6254,
											"end": 6255,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6249,
											"end": 6252,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 6245,
											"end": 6256,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6238,
											"end": 6277,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6219,
											"end": 6221,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 6216,
											"end": 6217,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6212,
											"end": 6222,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6207,
											"end": 6222,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6207,
											"end": 6222,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6183,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "153"
										},
										{
											"begin": 6183,
											"end": 6284,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 6183,
											"end": 6284,
											"name": "tag",
											"source": -1,
											"value": "155"
										},
										{
											"begin": 6183,
											"end": 6284,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6299,
											"end": 6305,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 6296,
											"end": 6297,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6293,
											"end": 6306,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 6290,
											"end": 6292,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 6290,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "156"
										},
										{
											"begin": 6290,
											"end": 6292,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 6364,
											"end": 6365,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 6361,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 6350,
											"end": 6353,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 6346,
											"end": 6362,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6339,
											"end": 6366,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6290,
											"end": 6292,
											"name": "tag",
											"source": -1,
											"value": "156"
										},
										{
											"begin": 6290,
											"end": 6292,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6160,
											"end": 6379,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6160,
											"end": 6379,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6160,
											"end": 6379,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6160,
											"end": 6379,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6160,
											"end": 6379,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 6387,
											"end": 6484,
											"name": "tag",
											"source": -1,
											"value": "105"
										},
										{
											"begin": 6387,
											"end": 6484,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6387,
											"end": 6484,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6477,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 6471,
											"end": 6478,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6466,
											"end": 6468,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 6459,
											"end": 6464,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 6455,
											"end": 6469,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6451,
											"end": 6479,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 6441,
											"end": 6479,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6441,
											"end": 6479,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6435,
											"end": 6484,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 6435,
											"end": 6484,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6435,
											"end": 6484,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6435,
											"end": 6484,
											"name": "JUMP",
											"source": -1
										}
									]
								},
								"4887836E294A2761413359597244D307BBE3F94827F6160D9E1A399E00E2D1BE": "4e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f",
								"C359735A342ECE061E65AB7390D246D1E53BA5F24EEA70D6201F1D4A7B2F3475": "7364664e417364667364664c4548484a5347445348444a53484a53484a534844534a44484a4f4e47564f"
							}
						},
						"methodIdentifiers": {
							"data1()": "9ffd85c4",
							"data2()": "e3a7fd75",
							"data3()": "fc26b0ab",
							"getDecodeData(bytes)": "2ed5fb83",
							"getEncodeData()": "eaacd81e",
							"iterator()": "fddcc148",
							"rlpItem()": "a699fb03"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"data1\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data2\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data3\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"self\",\"type\":\"bytes\"}],\"name\":\"getDecodeData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"memPtr\",\"type\":\"uint256\"}],\"internalType\":\"struct demo2.RLPItem\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEncodeData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"iterator\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"memPtr\",\"type\":\"uint256\"}],\"internalType\":\"struct demo2.RLPItem\",\"name\":\"item\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nextPtr\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rlpItem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"memPtr\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/demo2.sol\":\"demo2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/demo2.sol\":{\"keccak256\":\"0xc2faa8832292c14ac5a58b34d7f2b5907ff0e365fa280627adcf12ce77062e48\",\"urls\":[\"bzz-raw://4428d2e2ce67a972de4ee5e620b812c45c5358213de51fa7cd7690ea2de85df3\",\"dweb:/ipfs/QmU4UNwBs9w8dzmSuk1KanTsmPM87dFdYuQ6RzeXKZqRYx\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "contracts/demo2.sol:37:9: Warning: Function state mutability can be restricted to pure\n        function getDecodeData(bytes memory self) public view returns(RLPItem memory) {\n        ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 1324,
					"file": "contracts/demo2.sol",
					"start": 1197
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/demo2.sol": {
				"ast": {
					"absolutePath": "contracts/demo2.sol",
					"exportedSymbols": {
						"demo2": [
							632
						]
					},
					"id": 633,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">",
								"0.4",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4:30:0"
						},
						{
							"id": 2,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "40:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 632,
							"linearizedBaseContracts": [
								632
							],
							"name": "demo2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9ffd85c4",
									"id": 5,
									"name": "data1",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 632,
									"src": "107:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 3,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "107:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "128:48:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_4887836e294a2761413359597244d307bbe3f94827f6160d9e1a399e00e2d1be",
											"typeString": "literal_string \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\""
										},
										"value": "NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc26b0ab",
									"id": 8,
									"name": "data3",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 632,
									"src": "187:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 6,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "187:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "7364664e417364667364664c4548484a5347445348444a53484a53484a534844534a44484a4f4e47564f",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:44:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c359735a342ece061e65ab7390d246d1e53ba5f24eea70d6201f1d4a7b2f3475",
											"typeString": "literal_string \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\""
										},
										"value": "sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e3a7fd75",
									"id": 11,
									"name": "data2",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 632,
									"src": "263:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 9,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "263:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4c45484f4e47564f776a6e66766a3377656838764b4a",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "286:24:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_456403c9720da4fa7d7375867b84ba5ad32318599c72d3314f61b294b0c7ff33",
											"typeString": "literal_string \"LEHONGVOwjnfvj3weh8vKJ\""
										},
										"value": "LEHONGVOwjnfvj3weh8vKJ"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 14,
									"name": "STRING_OFFSET",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 632,
									"src": "321:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 12,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "321:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783830",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "352:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "0x80"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 17,
									"name": "LIST_OFFSET",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 632,
									"src": "367:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 15,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "367:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786330",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "396:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "0xc0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 20,
									"name": "STRING_SHORT_START",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 632,
									"src": "411:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 18,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "411:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783830",
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "447:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "0x80"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 23,
									"name": "STRING_LONG_START",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 632,
									"src": "462:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 21,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "462:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786238",
										"id": 22,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "498:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_184_by_1",
											"typeString": "int_const 184"
										},
										"value": "0xb8"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 26,
									"name": "LIST_SHORT_START",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 632,
									"src": "513:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 24,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "513:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786330",
										"id": 25,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "549:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "0xc0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 29,
									"name": "LIST_LONG_START",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 632,
									"src": "564:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 27,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "564:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786638",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "600:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_248_by_1",
											"typeString": "int_const 248"
										},
										"value": "0xf8"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 32,
									"name": "WORD_SIZE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 632,
									"src": "615:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 30,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "615:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3332",
										"id": 31,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "642:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "demo2.RLPItem",
									"id": 37,
									"members": [
										{
											"constant": false,
											"id": 34,
											"name": "len",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 37,
											"src": "695:8:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 33,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "695:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 36,
											"name": "memPtr",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 37,
											"src": "718:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 35,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "718:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "RLPItem",
									"nodeType": "StructDefinition",
									"scope": 632,
									"src": "665:76:0",
									"visibility": "public"
								},
								{
									"canonicalName": "demo2.Iterator",
									"id": 42,
									"members": [
										{
											"constant": false,
											"id": 39,
											"name": "item",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 42,
											"src": "784:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
												"typeString": "struct demo2.RLPItem"
											},
											"typeName": {
												"contractScope": null,
												"id": 38,
												"name": "RLPItem",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 37,
												"src": "784:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
													"typeString": "struct demo2.RLPItem"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 41,
											"name": "nextPtr",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 42,
											"src": "849:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 40,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "849:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Iterator",
									"nodeType": "StructDefinition",
									"scope": 632,
									"src": "753:164:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a699fb03",
									"id": 44,
									"name": "rlpItem",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 632,
									"src": "929:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_RLPItem_$37_storage",
										"typeString": "struct demo2.RLPItem"
									},
									"typeName": {
										"contractScope": null,
										"id": 43,
										"name": "RLPItem",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 37,
										"src": "929:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
											"typeString": "struct demo2.RLPItem"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fddcc148",
									"id": 46,
									"name": "iterator",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 632,
									"src": "962:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Iterator_$42_storage",
										"typeString": "struct demo2.Iterator"
									},
									"typeName": {
										"contractScope": null,
										"id": 45,
										"name": "Iterator",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 42,
										"src": "962:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Iterator_$42_storage_ptr",
											"typeString": "struct demo2.Iterator"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "1020:148:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 49,
															"name": "rlpItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1035:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_storage",
																"typeString": "struct demo2.RLPItem storage ref"
															}
														},
														"id": 51,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "1035:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "36",
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1049:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "1035:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "1035:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 55,
															"name": "rlpItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1065:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_storage",
																"typeString": "struct demo2.RLPItem storage ref"
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "memPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "1065:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1082:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1065:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1065:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 61,
															"name": "iterator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "1098:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Iterator_$42_storage",
																"typeString": "struct demo2.Iterator storage ref"
															}
														},
														"id": 63,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "item",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 39,
														"src": "1098:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RLPItem_$37_storage",
															"typeString": "struct demo2.RLPItem storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 64,
														"name": "rlpItem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "1114:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RLPItem_$37_storage",
															"typeString": "struct demo2.RLPItem storage ref"
														}
													},
													"src": "1098:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage",
														"typeString": "struct demo2.RLPItem storage ref"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1098:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 67,
															"name": "iterator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "1136:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Iterator_$42_storage",
																"typeString": "struct demo2.Iterator storage ref"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "nextPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 41,
														"src": "1136:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "34",
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1155:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "1136:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "1136:20:0"
											}
										]
									},
									"documentation": null,
									"id": 74,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1010:2:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1020:0:0"
									},
									"scope": 632,
									"src": "999:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "1275:49:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 82,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "1307:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 81,
														"name": "toRLPItem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "1297:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_RLPItem_$37_memory_ptr_$",
															"typeString": "function (bytes memory) pure returns (struct demo2.RLPItem memory)"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1297:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
														"typeString": "struct demo2.RLPItem memory"
													}
												},
												"functionReturnParameters": 80,
												"id": 84,
												"nodeType": "Return",
												"src": "1290:22:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "2ed5fb83",
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDecodeData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 86,
												"src": "1220:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 75,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1220:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1219:19:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 86,
												"src": "1259:14:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 78,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "1259:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1258:16:0"
									},
									"scope": 632,
									"src": "1197:127:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1395:50:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 92,
															"name": "rlpItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1425:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_storage",
																"typeString": "struct demo2.RLPItem storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_RLPItem_$37_storage",
																"typeString": "struct demo2.RLPItem storage ref"
															}
														],
														"id": 91,
														"name": "toBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "1417:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_RLPItem_$37_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (struct demo2.RLPItem memory) pure returns (bytes memory)"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 90,
												"id": 94,
												"nodeType": "Return",
												"src": "1410:23:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "eaacd81e",
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEncodeData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 96,
												"src": "1381:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 88,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1381:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1380:14:0"
									},
									"scope": 632,
									"src": "1336:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "1534:172:0",
										"statements": [
											{
												"assignments": [
													104
												],
												"declarations": [
													{
														"constant": false,
														"id": 104,
														"name": "memPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 113,
														"src": "1549:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 103,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1549:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 105,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1549:11:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1584:59:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1603:25:0",
															"value": {
																"arguments": [
																	{
																		"name": "self",
																		"nodeType": "YulIdentifier",
																		"src": "1617:4:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1623:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1613:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1613:15:0"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1603:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 104,
														"isOffset": false,
														"isSlot": false,
														"src": "1603:6:0",
														"valueSize": 1
													},
													{
														"declaration": 98,
														"isOffset": false,
														"isSlot": false,
														"src": "1617:4:0",
														"valueSize": 1
													}
												],
												"id": 106,
												"nodeType": "InlineAssembly",
												"src": "1575:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 108,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "1674:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1674:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 110,
															"name": "memPtr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "1687:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 107,
														"name": "RLPItem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1666:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_RLPItem_$37_storage_ptr_$",
															"typeString": "type(struct demo2.RLPItem storage pointer)"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1666:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_memory",
														"typeString": "struct demo2.RLPItem memory"
													}
												},
												"functionReturnParameters": 102,
												"id": 112,
												"nodeType": "Return",
												"src": "1659:35:0"
											}
										]
									},
									"documentation": null,
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toRLPItem",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 114,
												"src": "1476:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 97,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1476:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1475:19:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 114,
												"src": "1518:14:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 100,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "1518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1517:16:0"
									},
									"scope": 632,
									"src": "1457:249:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "1793:414:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 122,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "1816:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 123,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "1816:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1827:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1816:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1808:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "1808:21:0"
											},
											{
												"assignments": [
													129
												],
												"declarations": [
													{
														"constant": false,
														"id": 129,
														"name": "offset",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 164,
														"src": "1846:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 128,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1846:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 134,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 131,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "1875:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																	"typeString": "struct demo2.RLPItem memory"
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "memPtr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "1875:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 130,
														"name": "_payloadOffset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "1860:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1860:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1846:41:0"
											},
											{
												"assignments": [
													136
												],
												"declarations": [
													{
														"constant": false,
														"id": 136,
														"name": "len",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 164,
														"src": "1902:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 135,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1902:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 141,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 137,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "1913:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "1913:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 139,
														"name": "offset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "1924:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1913:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1902:28:0"
											},
											{
												"assignments": [
													143
												],
												"declarations": [
													{
														"constant": false,
														"id": 143,
														"name": "result",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 164,
														"src": "1960:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 142,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1960:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 148,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 146,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "1992:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1982:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 144,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1986:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1982:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1960:36:0"
											},
											{
												"assignments": [
													150
												],
												"declarations": [
													{
														"constant": false,
														"id": 150,
														"name": "destPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 164,
														"src": "2013:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 149,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2013:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 151,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2013:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2049:62:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2068:28:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2083:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "result",
																		"nodeType": "YulIdentifier",
																		"src": "2089:6:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2079:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2079:17:0"
															},
															"variableNames": [
																{
																	"name": "destPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2068:7:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 150,
														"isOffset": false,
														"isSlot": false,
														"src": "2068:7:0",
														"valueSize": 1
													},
													{
														"declaration": 143,
														"isOffset": false,
														"isSlot": false,
														"src": "2089:6:0",
														"valueSize": 1
													}
												],
												"id": 152,
												"nodeType": "InlineAssembly",
												"src": "2040:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 154,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "2132:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "memPtr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 36,
																"src": "2132:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"id": 156,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "2146:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2132:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 158,
															"name": "destPtr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "2154:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 159,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "2163:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 153,
														"name": "copy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "2127:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256) pure"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2127:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "2127:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 162,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 143,
													"src": "2189:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 120,
												"id": 163,
												"nodeType": "Return",
												"src": "2182:13:0"
											}
										]
									},
									"documentation": null,
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toBytes",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 165,
												"src": "1735:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 115,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "1735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1734:21:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 165,
												"src": "1779:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1779:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1778:14:0"
									},
									"scope": 632,
									"src": "1718:489:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "2306:232:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 174,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "2337:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Iterator_$42_memory_ptr",
																		"typeString": "struct demo2.Iterator memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Iterator_$42_memory_ptr",
																		"typeString": "struct demo2.Iterator memory"
																	}
																],
																"id": 173,
																"name": "hasNext",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "2329:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_struct$_Iterator_$42_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (struct demo2.Iterator memory) pure returns (bool)"
																}
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2329:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2321:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2321:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "2321:22:0"
											},
											{
												"assignments": [
													179
												],
												"declarations": [
													{
														"constant": false,
														"id": 179,
														"name": "ptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 202,
														"src": "2360:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 178,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2360:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 182,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 180,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "2371:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Iterator_$42_memory_ptr",
															"typeString": "struct demo2.Iterator memory"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "nextPtr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 41,
													"src": "2371:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2360:23:0"
											},
											{
												"assignments": [
													184
												],
												"declarations": [
													{
														"constant": false,
														"id": 184,
														"name": "itemLength",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 202,
														"src": "2398:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 183,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2398:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 188,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 186,
															"name": "ptr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "2428:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 185,
														"name": "_itemLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "2416:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2416:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2398:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 189,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "2447:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Iterator_$42_memory_ptr",
																"typeString": "struct demo2.Iterator memory"
															}
														},
														"id": 191,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "nextPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 41,
														"src": "2447:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 192,
															"name": "ptr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "2462:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 193,
															"name": "itemLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "2468:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2462:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2447:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2447:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 198,
															"name": "itemLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "2510:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 199,
															"name": "ptr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "2522:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 197,
														"name": "RLPItem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "2502:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_RLPItem_$37_storage_ptr_$",
															"typeString": "type(struct demo2.RLPItem storage pointer)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2502:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_memory",
														"typeString": "struct demo2.RLPItem memory"
													}
												},
												"functionReturnParameters": 171,
												"id": 201,
												"nodeType": "Return",
												"src": "2495:31:0"
											}
										]
									},
									"documentation": null,
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "next",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 203,
												"src": "2245:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Iterator_$42_memory_ptr",
													"typeString": "struct demo2.Iterator"
												},
												"typeName": {
													"contractScope": null,
													"id": 166,
													"name": "Iterator",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 42,
													"src": "2245:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Iterator_$42_storage_ptr",
														"typeString": "struct demo2.Iterator"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2244:22:0"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 203,
												"src": "2290:14:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 169,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "2290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2289:16:0"
									},
									"scope": 632,
									"src": "2231:307:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "2618:117:0",
										"statements": [
											{
												"assignments": [
													211
												],
												"declarations": [
													{
														"constant": false,
														"id": 211,
														"name": "item",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 224,
														"src": "2633:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
															"typeString": "struct demo2.RLPItem"
														},
														"typeName": {
															"contractScope": null,
															"id": 210,
															"name": "RLPItem",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 37,
															"src": "2633:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
																"typeString": "struct demo2.RLPItem"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 214,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 212,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "2655:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Iterator_$42_memory_ptr",
															"typeString": "struct demo2.Iterator memory"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "item",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 39,
													"src": "2655:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_memory",
														"typeString": "struct demo2.RLPItem memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2633:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 215,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "2686:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Iterator_$42_memory_ptr",
																"typeString": "struct demo2.Iterator memory"
															}
														},
														"id": 216,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nextPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 41,
														"src": "2686:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 217,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "2701:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																	"typeString": "struct demo2.RLPItem memory"
																}
															},
															"id": 218,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "memPtr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "2701:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 219,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "2715:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																	"typeString": "struct demo2.RLPItem memory"
																}
															},
															"id": 220,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "len",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "2715:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2701:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2686:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 209,
												"id": 223,
												"nodeType": "Return",
												"src": "2679:44:0"
											}
										]
									},
									"documentation": null,
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasNext",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 225,
												"src": "2567:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Iterator_$42_memory_ptr",
													"typeString": "struct demo2.Iterator"
												},
												"typeName": {
													"contractScope": null,
													"id": 204,
													"name": "Iterator",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 42,
													"src": "2567:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Iterator_$42_storage_ptr",
														"typeString": "struct demo2.Iterator"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2566:22:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 225,
												"src": "2612:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 207,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2612:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2611:6:0"
									},
									"scope": 632,
									"src": "2550:185:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "2833:303:0",
										"statements": [
											{
												"assignments": [
													233
												],
												"declarations": [
													{
														"constant": false,
														"id": 233,
														"name": "result",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 261,
														"src": "2848:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 232,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2848:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 239,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 236,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 227,
																"src": "2880:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																	"typeString": "struct demo2.RLPItem memory"
																}
															},
															"id": 237,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "len",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "2880:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 235,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2870:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 234,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2874:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2848:41:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 240,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "2908:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2908:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2925:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2908:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 246,
												"nodeType": "IfStatement",
												"src": "2904:37:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 244,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "2935:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"functionReturnParameters": 231,
													"id": 245,
													"nodeType": "Return",
													"src": "2928:13:0"
												}
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"name": "ptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 261,
														"src": "2958:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 247,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2958:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2958:8:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2990:58:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3009:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3020:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "result",
																		"nodeType": "YulIdentifier",
																		"src": "3026:6:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3016:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3016:17:0"
															},
															"variableNames": [
																{
																	"name": "ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3009:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 248,
														"isOffset": false,
														"isSlot": false,
														"src": "3009:3:0",
														"valueSize": 1
													},
													{
														"declaration": 233,
														"isOffset": false,
														"isSlot": false,
														"src": "3026:6:0",
														"valueSize": 1
													}
												],
												"id": 250,
												"nodeType": "InlineAssembly",
												"src": "2981:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 252,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 227,
																"src": "3069:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																	"typeString": "struct demo2.RLPItem memory"
																}
															},
															"id": 253,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "memPtr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "3069:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 254,
															"name": "ptr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3082:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 255,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 227,
																"src": "3087:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																	"typeString": "struct demo2.RLPItem memory"
																}
															},
															"id": 256,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "len",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "3087:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 251,
														"name": "copy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "3064:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256) pure"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3064:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "3064:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 259,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 233,
													"src": "3118:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 231,
												"id": 260,
												"nodeType": "Return",
												"src": "3111:13:0"
											}
										]
									},
									"documentation": null,
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toRlpBytes",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 262,
												"src": "2775:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 226,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "2775:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2774:21:0"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 262,
												"src": "2819:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 229,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2819:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2818:14:0"
									},
									"scope": 632,
									"src": "2755:381:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "3217:254:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 270,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 264,
																	"src": "3240:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 271,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "3240:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3252:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3240:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3232:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3232:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "3232:22:0"
											},
											{
												"assignments": [
													277
												],
												"declarations": [
													{
														"constant": false,
														"id": 277,
														"name": "result",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 292,
														"src": "3269:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 276,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3269:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "3269:11:0"
											},
											{
												"assignments": [
													280
												],
												"declarations": [
													{
														"constant": false,
														"id": 280,
														"name": "memPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 292,
														"src": "3295:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 279,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3295:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 283,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 281,
														"name": "item",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "3309:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
															"typeString": "struct demo2.RLPItem memory"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "memPtr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 36,
													"src": "3309:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3295:25:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3344:66:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3363:32:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3378:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3387:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3381:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3381:13:0"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nodeType": "YulIdentifier",
																	"src": "3373:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3373:22:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3363:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 280,
														"isOffset": false,
														"isSlot": false,
														"src": "3387:6:0",
														"valueSize": 1
													},
													{
														"declaration": 277,
														"isOffset": false,
														"isSlot": false,
														"src": "3363:6:0",
														"valueSize": 1
													}
												],
												"id": 284,
												"nodeType": "InlineAssembly",
												"src": "3335:75:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 285,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "3433:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3443:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3433:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3455:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3433:26:0",
													"trueExpression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 288,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3447:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 268,
												"id": 291,
												"nodeType": "Return",
												"src": "3426:33:0"
											}
										]
									},
									"documentation": null,
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toBoolean",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 293,
												"src": "3167:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 263,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "3167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3166:21:0"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 293,
												"src": "3211:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3211:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3210:6:0"
									},
									"scope": 632,
									"src": "3148:323:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "3555:140:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 301,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "3623:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 302,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "3623:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3231",
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3635:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_21_by_1",
																	"typeString": "int_const 21"
																},
																"value": "21"
															},
															"src": "3623:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 300,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3615:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3615:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "3615:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 310,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "3677:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																],
																"id": 309,
																"name": "toUint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "3670:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_struct$_RLPItem_$37_memory_ptr_$returns$_t_uint256_$",
																	"typeString": "function (struct demo2.RLPItem memory) pure returns (uint256)"
																}
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3670:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3662:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 307,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3662:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3662:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 299,
												"id": 313,
												"nodeType": "Return",
												"src": "3655:28:0"
											}
										]
									},
									"documentation": null,
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 315,
												"src": "3502:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 294,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "3502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3501:21:0"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 315,
												"src": "3546:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3546:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3545:9:0"
									},
									"scope": 632,
									"src": "3483:212:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "3773:603:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 323,
																		"name": "item",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 317,
																		"src": "3796:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																			"typeString": "struct demo2.RLPItem memory"
																		}
																	},
																	"id": 324,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "3796:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3807:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3796:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 327,
																		"name": "item",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 317,
																		"src": "3812:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																			"typeString": "struct demo2.RLPItem memory"
																		}
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "3812:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3333",
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3824:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_33_by_1",
																		"typeString": "int_const 33"
																	},
																	"value": "33"
																},
																"src": "3812:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3796:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 322,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3788:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3788:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "3788:39:0"
											},
											{
												"assignments": [
													335
												],
												"declarations": [
													{
														"constant": false,
														"id": 335,
														"name": "offset",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 369,
														"src": "3844:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 334,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3844:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 340,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 337,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "3873:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																	"typeString": "struct demo2.RLPItem memory"
																}
															},
															"id": 338,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "memPtr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "3873:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 336,
														"name": "_payloadOffset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "3858:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3858:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3844:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 342,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 317,
																	"src": "3908:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 343,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "3908:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 344,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "3920:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3908:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6c656e677468206973206c657373207468616e206f6666736574",
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3928:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b0b42ce8b5dee5c853d03ff9713140c28ab451add284160f67ced4e683e6ae54",
																"typeString": "literal_string \"length is less than offset\""
															},
															"value": "length is less than offset"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b0b42ce8b5dee5c853d03ff9713140c28ab451add284160f67ced4e683e6ae54",
																"typeString": "literal_string \"length is less than offset\""
															}
														],
														"id": 341,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3900:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3900:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "3900:57:0"
											},
											{
												"assignments": [
													350
												],
												"declarations": [
													{
														"constant": false,
														"id": 350,
														"name": "len",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 369,
														"src": "3972:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 349,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3972:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 351,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "3983:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 352,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "3983:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 353,
														"name": "offset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "3994:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3983:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3972:28:0"
											},
											{
												"assignments": [
													357
												],
												"declarations": [
													{
														"constant": false,
														"id": 357,
														"name": "result",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 369,
														"src": "4017:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 356,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4017:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 358,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4017:11:0"
											},
											{
												"assignments": [
													360
												],
												"declarations": [
													{
														"constant": false,
														"id": 360,
														"name": "memPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 369,
														"src": "4043:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 359,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4043:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 365,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 361,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "4057:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "memPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "4057:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 363,
														"name": "offset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "4071:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4057:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4043:34:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4101:236:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4120:23:0",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4136:6:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4130:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4130:13:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4120:6:0"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4235:87:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4258:45:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "result",
																					"nodeType": "YulIdentifier",
																					"src": "4272:6:0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4284:3:0",
																							"type": "",
																							"value": "256"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4293:2:0",
																									"type": "",
																									"value": "32"
																								},
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "4297:3:0"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "4289:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4289:12:0"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "4280:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4280:22:0"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "4268:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4268:35:0"
																		},
																		"variableNames": [
																			{
																				"name": "result",
																				"nodeType": "YulIdentifier",
																				"src": "4258:6:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "4226:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4231:2:0",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4223:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4223:11:0"
															},
															"nodeType": "YulIf",
															"src": "4220:2:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 350,
														"isOffset": false,
														"isSlot": false,
														"src": "4226:3:0",
														"valueSize": 1
													},
													{
														"declaration": 350,
														"isOffset": false,
														"isSlot": false,
														"src": "4297:3:0",
														"valueSize": 1
													},
													{
														"declaration": 360,
														"isOffset": false,
														"isSlot": false,
														"src": "4136:6:0",
														"valueSize": 1
													},
													{
														"declaration": 357,
														"isOffset": false,
														"isSlot": false,
														"src": "4120:6:0",
														"valueSize": 1
													},
													{
														"declaration": 357,
														"isOffset": false,
														"isSlot": false,
														"src": "4258:6:0",
														"valueSize": 1
													},
													{
														"declaration": 357,
														"isOffset": false,
														"isSlot": false,
														"src": "4272:6:0",
														"valueSize": 1
													}
												],
												"id": 366,
												"nodeType": "InlineAssembly",
												"src": "4092:245:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 367,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 357,
													"src": "4358:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 321,
												"id": 368,
												"nodeType": "Return",
												"src": "4351:13:0"
											}
										]
									},
									"documentation": null,
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 370,
												"src": "3723:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 316,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "3723:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3722:21:0"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 370,
												"src": "3767:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3767:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3766:6:0"
									},
									"scope": 632,
									"src": "3707:669:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "4469:264:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 378,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "4524:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 379,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "4524:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3333",
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4536:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33_by_1",
																	"typeString": "int_const 33"
																},
																"value": "33"
															},
															"src": "4524:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 377,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4516:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4516:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "4516:23:0"
											},
											{
												"assignments": [
													385
												],
												"declarations": [
													{
														"constant": false,
														"id": 385,
														"name": "result",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 397,
														"src": "4556:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 384,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4556:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 386,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4556:11:0"
											},
											{
												"assignments": [
													388
												],
												"declarations": [
													{
														"constant": false,
														"id": 388,
														"name": "memPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 397,
														"src": "4582:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 387,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4582:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 393,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 389,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "4596:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 390,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "memPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "4596:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4610:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4596:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4582:29:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4635:57:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4654:23:0",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4670:6:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4664:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4664:13:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4654:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 388,
														"isOffset": false,
														"isSlot": false,
														"src": "4670:6:0",
														"valueSize": 1
													},
													{
														"declaration": 385,
														"isOffset": false,
														"isSlot": false,
														"src": "4654:6:0",
														"valueSize": 1
													}
												],
												"id": 394,
												"nodeType": "InlineAssembly",
												"src": "4626:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 395,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 385,
													"src": "4715:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 376,
												"id": 396,
												"nodeType": "Return",
												"src": "4708:13:0"
											}
										]
									},
									"documentation": null,
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUintStrict",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 398,
												"src": "4419:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 371,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "4419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4418:21:0"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 398,
												"src": "4463:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4463:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4462:6:0"
									},
									"scope": 632,
									"src": "4397:336:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "5369:393:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 405,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "5388:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 406,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "5388:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5400:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5388:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 411,
												"nodeType": "IfStatement",
												"src": "5384:27:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5410:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 404,
													"id": 410,
													"nodeType": "Return",
													"src": "5403:8:0"
												}
											},
											{
												"assignments": [
													413
												],
												"declarations": [
													{
														"constant": false,
														"id": 413,
														"name": "count",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 452,
														"src": "5426:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 412,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5426:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 415,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5439:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5426:14:0"
											},
											{
												"assignments": [
													417
												],
												"declarations": [
													{
														"constant": false,
														"id": 417,
														"name": "currPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 452,
														"src": "5455:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 416,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5455:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 425,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 418,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "5470:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 419,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "memPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "5470:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 421,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "5499:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 422,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "memPtr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 36,
																"src": "5499:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 420,
															"name": "_payloadOffset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "5484:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) pure returns (uint256)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:27:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5470:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5455:56:0"
											},
											{
												"assignments": [
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 427,
														"name": "endPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 452,
														"src": "5526:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 426,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5526:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 433,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 428,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "5540:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "memPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "5540:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 430,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "5554:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "5554:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5540:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5526:36:0"
											},
											{
												"body": {
													"id": 448,
													"nodeType": "Block",
													"src": "5602:122:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 437,
																	"name": "currPtr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "5621:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 438,
																		"name": "currPtr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "5631:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 440,
																				"name": "currPtr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 417,
																				"src": "5653:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 439,
																			"name": "_itemLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 531,
																			"src": "5641:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5641:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5631:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5621:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 444,
															"nodeType": "ExpressionStatement",
															"src": "5621:40:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "5701:7:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 445,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "5701:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 447,
															"nodeType": "ExpressionStatement",
															"src": "5701:7:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 434,
														"name": "currPtr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "5584:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 435,
														"name": "endPtr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "5594:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5584:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 449,
												"nodeType": "WhileStatement",
												"src": "5577:147:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 450,
													"name": "count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 413,
													"src": "5745:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 404,
												"id": 451,
												"nodeType": "Return",
												"src": "5738:12:0"
											}
										]
									},
									"documentation": null,
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "numItems",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 453,
												"src": "5320:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 399,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "5320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5319:21:0"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 453,
												"src": "5363:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5363:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5362:6:0"
									},
									"scope": 632,
									"src": "5302:460:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "5836:1552:0",
										"statements": [
											{
												"assignments": [
													461
												],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"name": "itemLen",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 530,
														"src": "5851:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 460,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5851:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 462,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "5851:12:0"
											},
											{
												"assignments": [
													464
												],
												"declarations": [
													{
														"constant": false,
														"id": 464,
														"name": "byte0",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 530,
														"src": "5878:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 463,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5878:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 465,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "5878:10:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5912:65:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5931:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5945:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5954:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5948:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5948:13:0"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nodeType": "YulIdentifier",
																	"src": "5940:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5940:22:0"
															},
															"variableNames": [
																{
																	"name": "byte0",
																	"nodeType": "YulIdentifier",
																	"src": "5931:5:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 464,
														"isOffset": false,
														"isSlot": false,
														"src": "5931:5:0",
														"valueSize": 1
													},
													{
														"declaration": 455,
														"isOffset": false,
														"isSlot": false,
														"src": "5954:6:0",
														"valueSize": 1
													}
												],
												"id": 466,
												"nodeType": "InlineAssembly",
												"src": "5903:74:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 467,
														"name": "byte0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "5997:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 468,
														"name": "STRING_SHORT_START",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "6005:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5997:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 474,
															"name": "byte0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "6079:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 475,
															"name": "STRING_LONG_START",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "6087:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "6079:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 485,
																"name": "byte0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "6189:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 486,
																"name": "LIST_SHORT_START",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "6197:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "6189:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 500,
																	"name": "byte0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "6784:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 501,
																	"name": "LIST_LONG_START",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "6792:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6784:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 523,
																"nodeType": "Block",
																"src": "6903:443:0",
																"statements": [
																	{
																		"assignments": [
																			513
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 513,
																				"name": "dataLen",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 523,
																				"src": "6922:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 512,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "6922:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 514,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "6922:12:0"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "6962:302:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "6985:31:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "byte0",
																								"nodeType": "YulIdentifier",
																								"src": "7004:5:0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7011:4:0",
																								"type": "",
																								"value": "0xf7"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "7000:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7000:16:0"
																					},
																					"variables": [
																						{
																							"name": "byteLen",
																							"nodeType": "YulTypedName",
																							"src": "6989:7:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"nodeType": "YulAssignment",
																					"src": "7038:24:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "memPtr",
																								"nodeType": "YulIdentifier",
																								"src": "7052:6:0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7060:1:0",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7048:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7048:14:0"
																					},
																					"variableNames": [
																						{
																							"name": "memPtr",
																							"nodeType": "YulIdentifier",
																							"src": "7038:6:0"
																						}
																					]
																				},
																				{
																					"nodeType": "YulAssignment",
																					"src": "7086:57:0",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "memPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7107:6:0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "7101:5:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7101:13:0"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7120:3:0",
																										"type": "",
																										"value": "256"
																									},
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "7129:2:0",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "byteLen",
																												"nodeType": "YulIdentifier",
																												"src": "7133:7:0"
																											}
																										],
																										"functionName": {
																											"name": "sub",
																											"nodeType": "YulIdentifier",
																											"src": "7125:3:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7125:16:0"
																									}
																								],
																								"functionName": {
																									"name": "exp",
																									"nodeType": "YulIdentifier",
																									"src": "7116:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7116:26:0"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "7097:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7097:46:0"
																					},
																					"variableNames": [
																						{
																							"name": "dataLen",
																							"nodeType": "YulIdentifier",
																							"src": "7086:7:0"
																						}
																					]
																				},
																				{
																					"nodeType": "YulAssignment",
																					"src": "7205:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "dataLen",
																								"nodeType": "YulIdentifier",
																								"src": "7220:7:0"
																							},
																							{
																								"arguments": [
																									{
																										"name": "byteLen",
																										"nodeType": "YulIdentifier",
																										"src": "7233:7:0"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7242:1:0",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7229:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7229:15:0"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7216:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7216:29:0"
																					},
																					"variableNames": [
																						{
																							"name": "itemLen",
																							"nodeType": "YulIdentifier",
																							"src": "7205:7:0"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 464,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7004:5:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 513,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7086:7:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 513,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7220:7:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 461,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7205:7:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 455,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7038:6:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 455,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7052:6:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 455,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7107:6:0",
																				"valueSize": 1
																			}
																		],
																		"id": 515,
																		"nodeType": "InlineAssembly",
																		"src": "6953:311:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 519,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 517,
																						"name": "itemLen",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 461,
																						"src": "7290:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 518,
																						"name": "dataLen",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 513,
																						"src": "7301:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "7290:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "6164646974696f6e206f766572666c6f77",
																					"id": 520,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7310:19:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
																						"typeString": "literal_string \"addition overflow\""
																					},
																					"value": "addition overflow"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
																						"typeString": "literal_string \"addition overflow\""
																					}
																				],
																				"id": 516,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-18,
																					-18
																				],
																				"referencedDeclaration": -18,
																				"src": "7282:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7282:48:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 522,
																		"nodeType": "ExpressionStatement",
																		"src": "7282:48:0"
																	}
																]
															},
															"id": 524,
															"nodeType": "IfStatement",
															"src": "6780:566:0",
															"trueBody": {
																"id": 511,
																"nodeType": "Block",
																"src": "6809:73:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 503,
																				"name": "itemLen",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 461,
																				"src": "6828:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 506,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 504,
																						"name": "byte0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 464,
																						"src": "6838:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 505,
																						"name": "LIST_SHORT_START",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 26,
																						"src": "6846:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "6838:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 507,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6865:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "6838:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6828:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 510,
																		"nodeType": "ExpressionStatement",
																		"src": "6828:38:0"
																	}
																]
															}
														},
														"id": 525,
														"nodeType": "IfStatement",
														"src": "6185:1161:0",
														"trueBody": {
															"id": 499,
															"nodeType": "Block",
															"src": "6215:544:0",
															"statements": [
																{
																	"assignments": [
																		489
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 489,
																			"name": "dataLen",
																			"nodeType": "VariableDeclaration",
																			"overrides": null,
																			"scope": 499,
																			"src": "6234:12:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 488,
																				"name": "uint",
																				"nodeType": "ElementaryTypeName",
																				"src": "6234:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"value": null,
																			"visibility": "internal"
																		}
																	],
																	"id": 490,
																	"initialValue": null,
																	"nodeType": "VariableDeclarationStatement",
																	"src": "6234:12:0"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "6274:403:0",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6297:31:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "byte0",
																							"nodeType": "YulIdentifier",
																							"src": "6316:5:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6323:4:0",
																							"type": "",
																							"value": "0xb7"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "6312:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6312:16:0"
																				},
																				"variables": [
																					{
																						"name": "byteLen",
																						"nodeType": "YulTypedName",
																						"src": "6301:7:0",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "6385:24:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "memPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6399:6:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6407:1:0",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6395:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6395:14:0"
																				},
																				"variableNames": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "6385:6:0"
																					}
																				]
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "6506:57:0",
																				"value": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "6527:6:0"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "6521:5:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6521:13:0"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6540:3:0",
																									"type": "",
																									"value": "256"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6549:2:0",
																											"type": "",
																											"value": "32"
																										},
																										{
																											"name": "byteLen",
																											"nodeType": "YulIdentifier",
																											"src": "6553:7:0"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nodeType": "YulIdentifier",
																										"src": "6545:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6545:16:0"
																								}
																							],
																							"functionName": {
																								"name": "exp",
																								"nodeType": "YulIdentifier",
																								"src": "6536:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6536:26:0"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "6517:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6517:46:0"
																				},
																				"variableNames": [
																					{
																						"name": "dataLen",
																						"nodeType": "YulIdentifier",
																						"src": "6506:7:0"
																					}
																				]
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "6618:40:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "dataLen",
																							"nodeType": "YulIdentifier",
																							"src": "6633:7:0"
																						},
																						{
																							"arguments": [
																								{
																									"name": "byteLen",
																									"nodeType": "YulIdentifier",
																									"src": "6646:7:0"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6655:1:0",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6642:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6642:15:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6629:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6629:29:0"
																				},
																				"variableNames": [
																					{
																						"name": "itemLen",
																						"nodeType": "YulIdentifier",
																						"src": "6618:7:0"
																					}
																				]
																			}
																		]
																	},
																	"evmVersion": "istanbul",
																	"externalReferences": [
																		{
																			"declaration": 464,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "6316:5:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 489,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "6506:7:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 489,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "6633:7:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 461,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "6618:7:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 455,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "6385:6:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 455,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "6399:6:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 455,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "6527:6:0",
																			"valueSize": 1
																		}
																	],
																	"id": 491,
																	"nodeType": "InlineAssembly",
																	"src": "6265:412:0"
																},
																{
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 495,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 493,
																					"name": "itemLen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 461,
																					"src": "6703:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 494,
																					"name": "dataLen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 489,
																					"src": "6714:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6703:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"hexValue": "6164646974696f6e206f766572666c6f77",
																				"id": 496,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6723:19:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
																					"typeString": "literal_string \"addition overflow\""
																				},
																				"value": "addition overflow"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
																					"typeString": "literal_string \"addition overflow\""
																				}
																			],
																			"id": 492,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				-18,
																				-18
																			],
																			"referencedDeclaration": -18,
																			"src": "6695:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (bool,string memory) pure"
																			}
																		},
																		"id": 497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6695:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 498,
																	"nodeType": "ExpressionStatement",
																	"src": "6695:48:0"
																}
															]
														}
													},
													"id": 526,
													"nodeType": "IfStatement",
													"src": "6075:1271:0",
													"trueBody": {
														"expression": {
															"argumentTypes": null,
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"id": 477,
																"name": "itemLen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "6123:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 478,
																		"name": "byte0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "6133:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 479,
																		"name": "STRING_SHORT_START",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 20,
																		"src": "6141:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "6133:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6162:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6133:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6123:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 484,
														"nodeType": "ExpressionStatement",
														"src": "6123:40:0"
													}
												},
												"id": 527,
												"nodeType": "IfStatement",
												"src": "5993:1353:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 470,
															"name": "itemLen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "6042:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6052:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "6042:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 473,
													"nodeType": "ExpressionStatement",
													"src": "6042:11:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 528,
													"name": "itemLen",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 461,
													"src": "7369:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 459,
												"id": 529,
												"nodeType": "Return",
												"src": "7362:14:0"
											}
										]
									},
									"documentation": null,
									"id": 531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_itemLength",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"name": "memPtr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 531,
												"src": "5795:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5795:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5794:13:0"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 531,
												"src": "5830:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5830:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5829:6:0"
									},
									"scope": 632,
									"src": "5774:1614:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 585,
										"nodeType": "Block",
										"src": "7517:538:0",
										"statements": [
											{
												"assignments": [
													539
												],
												"declarations": [
													{
														"constant": false,
														"id": 539,
														"name": "byte0",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 585,
														"src": "7532:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 538,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7532:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 540,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "7532:10:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7566:65:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7585:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7599:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7608:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7602:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7602:13:0"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nodeType": "YulIdentifier",
																	"src": "7594:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7594:22:0"
															},
															"variableNames": [
																{
																	"name": "byte0",
																	"nodeType": "YulIdentifier",
																	"src": "7585:5:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 539,
														"isOffset": false,
														"isSlot": false,
														"src": "7585:5:0",
														"valueSize": 1
													},
													{
														"declaration": 533,
														"isOffset": false,
														"isSlot": false,
														"src": "7608:6:0",
														"valueSize": 1
													}
												],
												"id": 541,
												"nodeType": "InlineAssembly",
												"src": "7557:74:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 542,
														"name": "byte0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "7651:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 543,
														"name": "STRING_SHORT_START",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "7659:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "7651:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 547,
																"name": "byte0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "7728:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 548,
																"name": "STRING_LONG_START",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "7736:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "7728:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 550,
																			"name": "byte0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 539,
																			"src": "7758:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 551,
																			"name": "LIST_SHORT_START",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 26,
																			"src": "7767:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "7758:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 553,
																			"name": "byte0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 539,
																			"src": "7787:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 554,
																			"name": "LIST_LONG_START",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 29,
																			"src": "7795:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "7787:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "7758:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 557,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7757:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "7728:83:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 561,
																"name": "byte0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "7862:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 562,
																"name": "LIST_SHORT_START",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "7870:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "7862:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"expression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 573,
																		"name": "byte0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 539,
																		"src": "8010:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 576,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 574,
																					"name": "LIST_LONG_START",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 29,
																					"src": "8019:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 575,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8037:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "8019:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 577,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8018:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "8010:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8042:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8010:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 537,
															"id": 581,
															"nodeType": "Return",
															"src": "8003:40:0"
														},
														"id": 582,
														"nodeType": "IfStatement",
														"src": "7858:185:0",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 564,
																		"name": "byte0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 539,
																		"src": "7931:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 565,
																					"name": "STRING_LONG_START",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 23,
																					"src": "7940:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 566,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7960:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "7940:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 568,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7939:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "7931:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7965:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7931:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 537,
															"id": 572,
															"nodeType": "Return",
															"src": "7924:42:0"
														}
													},
													"id": 583,
													"nodeType": "IfStatement",
													"src": "7724:319:0",
													"trueBody": {
														"expression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7837:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"functionReturnParameters": 537,
														"id": 560,
														"nodeType": "Return",
														"src": "7830:8:0"
													}
												},
												"id": 584,
												"nodeType": "IfStatement",
												"src": "7647:396:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 545,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7703:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 537,
													"id": 546,
													"nodeType": "Return",
													"src": "7696:8:0"
												}
											}
										]
									},
									"documentation": null,
									"id": 586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_payloadOffset",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"name": "memPtr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 586,
												"src": "7476:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7476:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7475:13:0"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 586,
												"src": "7511:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7511:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7510:6:0"
									},
									"scope": 632,
									"src": "7452:603:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "8126:727:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 595,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "8145:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8152:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8145:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 599,
												"nodeType": "IfStatement",
												"src": "8141:21:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 594,
													"id": 598,
													"nodeType": "Return",
													"src": "8155:7:0"
												}
											},
											{
												"body": {
													"id": 616,
													"nodeType": "Block",
													"src": "8273:182:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8301:66:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dest",
																					"nodeType": "YulIdentifier",
																					"src": "8331:4:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "8343:3:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "8337:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8337:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8324:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8324:24:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8324:24:0"
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 590,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "8331:4:0",
																	"valueSize": 1
																},
																{
																	"declaration": 588,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "8343:3:0",
																	"valueSize": 1
																}
															],
															"id": 607,
															"nodeType": "InlineAssembly",
															"src": "8292:75:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 608,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "8387:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 609,
																	"name": "WORD_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "8394:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "8387:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 611,
															"nodeType": "ExpressionStatement",
															"src": "8387:16:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 612,
																	"name": "dest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 590,
																	"src": "8422:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 613,
																	"name": "WORD_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "8430:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "8422:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 615,
															"nodeType": "ExpressionStatement",
															"src": "8422:17:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 600,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "8237:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 601,
														"name": "WORD_SIZE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "8244:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "8237:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 617,
												"initializationExpression": null,
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 603,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "8255:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"argumentTypes": null,
															"id": 604,
															"name": "WORD_SIZE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "8262:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "8255:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 606,
													"nodeType": "ExpressionStatement",
													"src": "8255:16:0"
												},
												"nodeType": "ForStatement",
												"src": "8230:225:0"
											},
											{
												"assignments": [
													619
												],
												"declarations": [
													{
														"constant": false,
														"id": 619,
														"name": "mask",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 630,
														"src": "8556:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 618,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8556:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 628,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "323536",
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8568:3:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "256"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 621,
																		"name": "WORD_SIZE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 32,
																		"src": "8576:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 622,
																		"name": "len",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 592,
																		"src": "8588:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8576:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 624,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8575:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8568:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8595:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8568:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8556:40:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8620:222:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8639:41:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8664:3:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8658:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8658:10:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "8674:4:0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8670:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8670:9:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8654:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8654:26:0"
															},
															"variables": [
																{
																	"name": "srcpart",
																	"nodeType": "YulTypedName",
																	"src": "8643:7:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8714:38:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dest",
																				"nodeType": "YulIdentifier",
																				"src": "8740:4:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8734:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8734:11:0"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "8747:4:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8730:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8730:22:0"
															},
															"variables": [
																{
																	"name": "destpart",
																	"nodeType": "YulTypedName",
																	"src": "8718:8:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dest",
																		"nodeType": "YulIdentifier",
																		"src": "8799:4:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "destpart",
																				"nodeType": "YulIdentifier",
																				"src": "8808:8:0"
																			},
																			{
																				"name": "srcpart",
																				"nodeType": "YulIdentifier",
																				"src": "8818:7:0"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "8805:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8805:21:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8792:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8792:35:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8792:35:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 590,
														"isOffset": false,
														"isSlot": false,
														"src": "8740:4:0",
														"valueSize": 1
													},
													{
														"declaration": 590,
														"isOffset": false,
														"isSlot": false,
														"src": "8799:4:0",
														"valueSize": 1
													},
													{
														"declaration": 619,
														"isOffset": false,
														"isSlot": false,
														"src": "8674:4:0",
														"valueSize": 1
													},
													{
														"declaration": 619,
														"isOffset": false,
														"isSlot": false,
														"src": "8747:4:0",
														"valueSize": 1
													},
													{
														"declaration": 588,
														"isOffset": false,
														"isSlot": false,
														"src": "8664:3:0",
														"valueSize": 1
													}
												],
												"id": 629,
												"nodeType": "InlineAssembly",
												"src": "8611:231:0"
											}
										]
									},
									"documentation": null,
									"id": 631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "copy",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"name": "src",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 631,
												"src": "8082:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8082:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"name": "dest",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 631,
												"src": "8092:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8092:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"name": "len",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 631,
												"src": "8103:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8103:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8081:31:0"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8126:0:0"
									},
									"scope": 632,
									"src": "8068:785:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 633,
							"src": "81:8779:0"
						}
					],
					"src": "4:8871:0"
				},
				"id": 0
			}
		}
	}
}