{
	"id": "02e7272bc03541f98e277fc1f1cc2de8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.4",
	"solcLongVersion": "0.6.4+commit.1dca32f3",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/demo2.sol": {
				"content": "    pragma solidity >0.4.0 <0.9.0;\r\n\r\ncontract demo2 {\r\n    bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\";\r\n    bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\";\r\n\r\n    function getData(uint _offst) public view returns(bytes memory) {\r\n        return toBinary(_offst);\r\n    }\r\n\r\n    function mergeBytes(\r\n        bytes memory _preBytes,\r\n        bytes memory _postBytes\r\n    )\r\n    internal\r\n    pure\r\n    returns (bytes memory)\r\n    {\r\n        bytes memory tempBytes;\r\n\r\n        assembly {\r\n        // Get a location of some free memory and store it in tempBytes as\r\n        // Solidity does for memory variables.\r\n            tempBytes := mload(0x40)\r\n\r\n        // Store the length of the first bytes array at the beginning of\r\n        // the memory for tempBytes.\r\n            let length := mload(_preBytes)\r\n            mstore(tempBytes, length)\r\n\r\n        // Maintain a memory counter for the current write location in the\r\n        // temp bytes array by adding the 32 bytes for the array length to\r\n        // the starting location.\r\n            let mc := add(tempBytes, 0x20)\r\n        // Stop copying when the memory counter reaches the length of the\r\n        // first bytes array.\r\n            let end := add(mc, length)\r\n\r\n            for {\r\n            // Initialize a copy counter to the start of the _preBytes data,\r\n            // 32 bytes into its memory.\r\n                let cc := add(_preBytes, 0x20)\r\n            } lt(mc, end) {\r\n            // Increase both counters by 32 bytes each iteration.\r\n                mc := add(mc, 0x20)\r\n                cc := add(cc, 0x20)\r\n            } {\r\n            // Write the _preBytes data into the tempBytes memory 32 bytes\r\n            // at a time.\r\n                mstore(mc, mload(cc))\r\n            }\r\n\r\n        // Add the length of _postBytes to the current length of tempBytes\r\n        // and store it as the new length in the first 32 bytes of the\r\n        // tempBytes memory.\r\n            length := mload(_postBytes)\r\n            mstore(tempBytes, add(length, mload(tempBytes)))\r\n\r\n        // Move the memory counter back from a multiple of 0x20 to the\r\n        // actual end of the _preBytes data.\r\n            mc := end\r\n        // Stop copying when the memory counter reaches the new combined\r\n        // length of the arrays.\r\n            end := add(mc, length)\r\n\r\n            for {\r\n                let cc := add(_postBytes, 0x20)\r\n            } lt(mc, end) {\r\n                mc := add(mc, 0x20)\r\n                cc := add(cc, 0x20)\r\n            } {\r\n                mstore(mc, mload(cc))\r\n            }\r\n\r\n        // Update the free-memory pointer by padding our last write location\r\n        // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\r\n        // next 32 byte block, then round down to the nearest multiple of\r\n        // 32. If the sum of the length of the two arrays is zero then add\r\n        // one before rounding down to leave a blank 32 bytes (the length block with 0).\r\n            mstore(0x40, and(\r\n            add(add(end, iszero(add(length, mload(_preBytes)))), 31),\r\n            not(31) // Round down to the nearest 32 bytes.\r\n            ))\r\n        }\r\n\r\n        return tempBytes;\r\n    }\r\n\r\n    function encodeLength(uint length, uint offset) internal pure returns (bytes memory) {\r\n        require(length < 256**8, \"input too long\");\r\n        bytes memory rs = new bytes(1);\r\n        if (length <= 55) {\r\n            rs[0] = byte(uint8(length + offset));\r\n            return rs;\r\n        }\r\n        bytes memory bl = toBinary(length);\r\n        rs[0] = byte(uint8(bl.length + offset + 55));\r\n        return mergeBytes(rs, bl);\r\n    }\r\n    \r\n    function toBinary(uint x) internal pure returns (bytes memory) {\r\n        bytes memory b = new bytes(32);\r\n        assembly {\r\n            mstore(add(b, 32), x)\r\n        }\r\n        uint i;\r\n        if (x & 0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000 == 0) {\r\n            i = 24;\r\n        } else if (x & 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 == 0) {\r\n            i = 16;\r\n        } else {\r\n            i = 0;\r\n        }\r\n        for (; i < 32; i++) {\r\n            if (b[i] != 0) {\r\n                break;\r\n            }\r\n        }\r\n        uint length = 32 - i;\r\n        bytes memory rs = new bytes(length);\r\n        assembly {\r\n            mstore(add(rs, length), x)\r\n            mstore(rs, length)\r\n        }\r\n        return rs;\r\n    }    \r\n} \r\n        "
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/demo2.sol": {
				"demo2": {
					"abi": [
						{
							"inputs": [],
							"name": "data1",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "data2",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_offst",
									"type": "uint256"
								}
							],
							"name": "getData",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/demo2.sol\":38:4474  contract demo2 {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/demo2.sol\":60:129  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x2e\n  dup2\n  mstore\n  0x20\n  add\n  data_4887836e294a2761413359597244d307bbe3f94827f6160d9e1a399e00e2d1be\n  0x2e\n  swap2\n  codecopy\n  0x00\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/demo2.sol\":136:183  bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\" */\n  sstore(0x01, 0x4c45484f4e47564f776a6e66766a3377656838764b4a00000000000000000000)\n    /* \"contracts/demo2.sol\":38:4474  contract demo2 {\r... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_3:\n    /* \"contracts/demo2.sol\":38:4474  contract demo2 {\r... */\n  pop\n  jump(tag_4)\ntag_2:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_6\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_5)\ntag_6:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_5\n  jumpi\n  swap2\n  dup3\n  add\ntag_7:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_8\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_7)\ntag_8:\ntag_5:\n  pop\n  swap1\n  pop\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n  swap1\n  jump\t// out\ntag_10:\n  tag_11\n  swap2\n  swap1\ntag_12:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_13\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_12)\ntag_13:\n  pop\n  swap1\n  jump\ntag_11:\n  swap1\n  jump\t// out\ntag_4:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_4887836e294a2761413359597244d307bbe3f94827f6160d9e1a399e00e2d1be 4e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f\n\nsub_0: assembly {\n        /* \"contracts/demo2.sol\":38:4474  contract demo2 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"contracts/demo2.sol\":38:4474  contract demo2 {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0178fe3f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9ffd85c4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe3a7fd75\n      eq\n      tag_5\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/demo2.sol\":192:298  function getData(uint _offst) public view returns(bytes memory) {\r... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_7:\n        /* \"contracts/demo2.sol\":192:298  function getData(uint _offst) public view returns(bytes memory) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_8\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_9:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_9)\n    tag_11:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/demo2.sol\":192:298  function getData(uint _offst) public view returns(bytes memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_12\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_12:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":60:129  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_15:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_15)\n    tag_17:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/demo2.sol\":60:129  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_18\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_18:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":136:183  bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\" */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":192:298  function getData(uint _offst) public view returns(bytes memory) {\r... */\n    tag_8:\n        /* \"contracts/demo2.sol\":242:254  bytes memory */\n      0x60\n        /* \"contracts/demo2.sol\":274:290  toBinary(_offst) */\n      tag_22\n        /* \"contracts/demo2.sol\":283:289  _offst */\n      dup3\n        /* \"contracts/demo2.sol\":274:282  toBinary */\n      tag_23\n        /* \"contracts/demo2.sol\":274:290  toBinary(_offst) */\n      jump\t// in\n    tag_22:\n        /* \"contracts/demo2.sol\":267:290  return toBinary(_offst) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":192:298  function getData(uint _offst) public view returns(bytes memory) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/demo2.sol\":60:129  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_14:\n      0x00\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_24\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_25\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_24)\n    tag_25:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_26:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_26\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_24:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/demo2.sol\":136:183  bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\" */\n    tag_20:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/demo2.sol\":3679:4467  function toBinary(uint x) internal pure returns (bytes memory) {\r... */\n    tag_23:\n        /* \"contracts/demo2.sol\":3728:3740  bytes memory */\n      0x60\n        /* \"contracts/demo2.sol\":3753:3767  bytes memory b */\n      dup1\n        /* \"contracts/demo2.sol\":3780:3782  32 */\n      0x20\n        /* \"contracts/demo2.sol\":3770:3783  new bytes(32) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_28\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:30   */\n      0x01\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:31   */\n      mul\n        /* \"--CODEGEN--\":124:128   */\n      dup1\n        /* \"--CODEGEN--\":108:122   */\n      calldatasize\n        /* \"--CODEGEN--\":100:106   */\n      dup4\n        /* \"--CODEGEN--\":87:129   */\n      calldatacopy\n        /* \"--CODEGEN--\":155:159   */\n      dup1\n        /* \"--CODEGEN--\":147:153   */\n      dup3\n        /* \"--CODEGEN--\":143:160   */\n      add\n        /* \"--CODEGEN--\":133:160   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:164   */\n      pop\n        /* \"contracts/demo2.sol\":3770:3783  new bytes(32) */\n      swap1\n      pop\n    tag_28:\n      pop\n        /* \"contracts/demo2.sol\":3753:3783  bytes memory b = new bytes(32) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":3837:3838  x */\n      dup3\n        /* \"contracts/demo2.sol\":3832:3834  32 */\n      0x20\n        /* \"contracts/demo2.sol\":3829:3830  b */\n      dup3\n        /* \"contracts/demo2.sol\":3825:3835  add(b, 32) */\n      add\n        /* \"contracts/demo2.sol\":3818:3839  mstore(add(b, 32), x) */\n      mstore\n        /* \"contracts/demo2.sol\":3860:3866  uint i */\n      0x00\n        /* \"contracts/demo2.sol\":3955:3956  0 */\n      dup1\n        /* \"contracts/demo2.sol\":3885:3951  0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000\n        /* \"contracts/demo2.sol\":3881:3882  x */\n      dup6\n        /* \"contracts/demo2.sol\":3881:3951  x & 0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000 */\n      and\n        /* \"contracts/demo2.sol\":3881:3956  x & 0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000 == 0 */\n      eq\n        /* \"contracts/demo2.sol\":3877:4149  if (x & 0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000 == 0) {\r... */\n      iszero\n      tag_29\n      jumpi\n        /* \"contracts/demo2.sol\":3977:3979  24 */\n      0x18\n        /* \"contracts/demo2.sol\":3973:3979  i = 24 */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":3877:4149  if (x & 0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000 == 0) {\r... */\n      jump(tag_30)\n    tag_29:\n        /* \"contracts/demo2.sol\":4075:4076  0 */\n      0x00\n        /* \"contracts/demo2.sol\":4005:4071  0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 */\n      0xffffffffffffffffffffffffffffffff00000000000000000000000000000000\n        /* \"contracts/demo2.sol\":4001:4002  x */\n      dup6\n        /* \"contracts/demo2.sol\":4001:4071  x & 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 */\n      and\n        /* \"contracts/demo2.sol\":4001:4076  x & 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 == 0 */\n      eq\n        /* \"contracts/demo2.sol\":3997:4149  if (x & 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 == 0) {\r... */\n      iszero\n      tag_31\n      jumpi\n        /* \"contracts/demo2.sol\":4097:4099  16 */\n      0x10\n        /* \"contracts/demo2.sol\":4093:4099  i = 16 */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":3997:4149  if (x & 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 == 0) {\r... */\n      jump(tag_32)\n    tag_31:\n        /* \"contracts/demo2.sol\":4136:4137  0 */\n      0x00\n        /* \"contracts/demo2.sol\":4132:4137  i = 0 */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":3997:4149  if (x & 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000 == 0) {\r... */\n    tag_32:\n        /* \"contracts/demo2.sol\":3877:4149  if (x & 0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000 == 0) {\r... */\n    tag_30:\n        /* \"contracts/demo2.sol\":4159:4260  for (; i < 32; i++) {\r... */\n    tag_33:\n        /* \"contracts/demo2.sol\":4170:4172  32 */\n      0x20\n        /* \"contracts/demo2.sol\":4166:4167  i */\n      dup2\n        /* \"contracts/demo2.sol\":4166:4172  i < 32 */\n      lt\n        /* \"contracts/demo2.sol\":4159:4260  for (; i < 32; i++) {\r... */\n      iszero\n      tag_34\n      jumpi\n        /* \"contracts/demo2.sol\":4206:4207  0 */\n      0x00\n        /* \"contracts/demo2.sol\":4198:4207  b[i] != 0 */\n      0xf8\n      shl\n        /* \"contracts/demo2.sol\":4198:4199  b */\n      dup3\n        /* \"contracts/demo2.sol\":4200:4201  i */\n      dup3\n        /* \"contracts/demo2.sol\":4198:4202  b[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_36\n      jumpi\n      invalid\n    tag_36:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/demo2.sol\":4198:4207  b[i] != 0 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/demo2.sol\":4194:4249  if (b[i] != 0) {\r... */\n      tag_37\n      jumpi\n        /* \"contracts/demo2.sol\":4228:4233  break */\n      jump(tag_34)\n        /* \"contracts/demo2.sol\":4194:4249  if (b[i] != 0) {\r... */\n    tag_37:\n        /* \"contracts/demo2.sol\":4174:4177  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/demo2.sol\":4159:4260  for (; i < 32; i++) {\r... */\n      jump(tag_33)\n    tag_34:\n        /* \"contracts/demo2.sol\":4270:4281  uint length */\n      0x00\n        /* \"contracts/demo2.sol\":4289:4290  i */\n      dup2\n        /* \"contracts/demo2.sol\":4284:4286  32 */\n      0x20\n        /* \"contracts/demo2.sol\":4284:4290  32 - i */\n      sub\n        /* \"contracts/demo2.sol\":4270:4290  uint length = 32 - i */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":4301:4316  bytes memory rs */\n      0x60\n        /* \"contracts/demo2.sol\":4329:4335  length */\n      dup2\n        /* \"contracts/demo2.sol\":4319:4336  new bytes(length) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_38\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:30   */\n      0x01\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:31   */\n      mul\n        /* \"--CODEGEN--\":124:128   */\n      dup1\n        /* \"--CODEGEN--\":108:122   */\n      calldatasize\n        /* \"--CODEGEN--\":100:106   */\n      dup4\n        /* \"--CODEGEN--\":87:129   */\n      calldatacopy\n        /* \"--CODEGEN--\":155:159   */\n      dup1\n        /* \"--CODEGEN--\":147:153   */\n      dup3\n        /* \"--CODEGEN--\":143:160   */\n      add\n        /* \"--CODEGEN--\":133:160   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:164   */\n      pop\n        /* \"contracts/demo2.sol\":4319:4336  new bytes(length) */\n      swap1\n      pop\n    tag_38:\n      pop\n        /* \"contracts/demo2.sol\":4301:4336  bytes memory rs = new bytes(length) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":4395:4396  x */\n      dup6\n        /* \"contracts/demo2.sol\":4386:4392  length */\n      dup3\n        /* \"contracts/demo2.sol\":4382:4384  rs */\n      dup3\n        /* \"contracts/demo2.sol\":4378:4393  add(rs, length) */\n      add\n        /* \"contracts/demo2.sol\":4371:4397  mstore(add(rs, length), x) */\n      mstore\n        /* \"contracts/demo2.sol\":4422:4428  length */\n      dup2\n        /* \"contracts/demo2.sol\":4418:4420  rs */\n      dup2\n        /* \"contracts/demo2.sol\":4411:4429  mstore(rs, length) */\n      mstore\n        /* \"contracts/demo2.sol\":4457:4459  rs */\n      dup1\n        /* \"contracts/demo2.sol\":4450:4459  return rs */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/demo2.sol\":3679:4467  function toBinary(uint x) internal pure returns (bytes memory) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a22077507df6139bcda031b759bca7cfdc19ec7e285510393b61d0e00506b82c64736f6c63430006040033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526040518060600160405280602e81526020016104f9602e913960009080519060200190610032929190610069565b507f4c45484f4e47564f776a6e66766a3377656838764b4a0000000000000000000060015534801561006357600080fd5b5061010e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100aa57805160ff19168380011785556100d8565b828001600101855582156100d8579182015b828111156100d75782518255916020019190600101906100bc565b5b5090506100e591906100e9565b5090565b61010b91905b808211156101075760008160009055506001016100ef565b5090565b90565b6103dc8061011d6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630178fe3f146100465780639ffd85c4146100ed578063e3a7fd7514610170575b600080fd5b6100726004803603602081101561005c57600080fd5b810190808035906020019092919050505061018e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100b2578082015181840152602081019050610097565b50505050905090810190601f1680156100df5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100f56101a0565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013557808201518184015260208101905061011a565b50505050905090810190601f1680156101625780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017861023e565b6040518082815260200191505060405180910390f35b606061019982610244565b9050919050565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102365780601f1061020b57610100808354040283529160200191610236565b820191906000526020600020905b81548152906001019060200180831161021957829003601f168201915b505050505081565b60015481565b60608060206040519080825280601f01601f19166020018201604052801561027b5781602001600182028036833780820191505090505b5090508260208201526000807fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000851614156102b957601890506102f3565b60007fffffffffffffffffffffffffffffffff00000000000000000000000000000000851614156102ed57601090506102f2565b600090505b5b5b602081101561035257600060f81b82828151811061030e57fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461034557610352565b80806001019150506102f4565b60008160200390506060816040519080825280601f01601f19166020018201604052801561038f5781602001600182028036833780820191505090505b50905085828201528181528094505050505091905056fea2646970667358221220a22077507df6139bcda031b759bca7cfdc19ec7e285510393b61d0e00506b82c64736f6c634300060400334e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4F9 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x32 SWAP3 SWAP2 SWAP1 PUSH2 0x69 JUMP JUMPDEST POP PUSH32 0x4C45484F4E47564F776A6E66766A3377656838764B4A00000000000000000000 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10E JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0xAA JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xD8 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xD8 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xD7 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xBC JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xE9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x10B SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x107 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xEF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3DC DUP1 PUSH2 0x11D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x178FE3F EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x9FFD85C4 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xE3A7FD75 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x72 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x18E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x97 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xDF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x135 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x162 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x23E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH2 0x199 DUP3 PUSH2 0x244 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x236 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x236 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x219 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x27B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 DUP6 AND EQ ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x18 SWAP1 POP PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 DUP6 AND EQ ISZERO PUSH2 0x2ED JUMPI PUSH1 0x10 SWAP1 POP PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x30E JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x345 JUMPI PUSH2 0x352 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 SUB SWAP1 POP PUSH1 0x60 DUP2 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x38F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP6 DUP3 DUP3 ADD MSTORE DUP2 DUP2 MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 KECCAK256 PUSH24 0x507DF6139BCDA031B759BCA7CFDC19EC7E285510393B61D0 0xE0 SDIV MOD 0xB8 0x2C PUSH5 0x736F6C6343 STOP MOD DIV STOP CALLER 0x4E COINBASE 0x4C GASLIMIT 0x48 0x48 0x4A MSTORE8 SELFBALANCE DIFFICULTY MSTORE8 DIFFICULTY SELFBALANCE 0x48 0x4A MSTORE8 DIFFICULTY 0x48 MSTORE8 SSTORE 0x48 DIFFICULTY 0x4A MSTORE8 0x48 DIFFICULTY 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 DIFFICULTY MSTORE8 0x4A DIFFICULTY 0x48 0x4A 0x4F 0x4E SELFBALANCE JUMP 0x4F ",
							"sourceMap": "38:4436:0:-:0;;;60:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;136:47;;;38:4436;5:9:-1;2:2;;;27:1;24;17:12;2:2;38:4436:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80630178fe3f146100465780639ffd85c4146100ed578063e3a7fd7514610170575b600080fd5b6100726004803603602081101561005c57600080fd5b810190808035906020019092919050505061018e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100b2578082015181840152602081019050610097565b50505050905090810190601f1680156100df5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100f56101a0565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013557808201518184015260208101905061011a565b50505050905090810190601f1680156101625780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017861023e565b6040518082815260200191505060405180910390f35b606061019982610244565b9050919050565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102365780601f1061020b57610100808354040283529160200191610236565b820191906000526020600020905b81548152906001019060200180831161021957829003601f168201915b505050505081565b60015481565b60608060206040519080825280601f01601f19166020018201604052801561027b5781602001600182028036833780820191505090505b5090508260208201526000807fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000851614156102b957601890506102f3565b60007fffffffffffffffffffffffffffffffff00000000000000000000000000000000851614156102ed57601090506102f2565b600090505b5b5b602081101561035257600060f81b82828151811061030e57fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461034557610352565b80806001019150506102f4565b60008160200390506060816040519080825280601f01601f19166020018201604052801561038f5781602001600182028036833780820191505090505b50905085828201528181528094505050505091905056fea2646970667358221220a22077507df6139bcda031b759bca7cfdc19ec7e285510393b61d0e00506b82c64736f6c63430006040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x178FE3F EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x9FFD85C4 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xE3A7FD75 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x72 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x18E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x97 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xDF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x135 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x162 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x23E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH2 0x199 DUP3 PUSH2 0x244 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x236 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x236 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x219 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x27B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 DUP6 AND EQ ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x18 SWAP1 POP PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 DUP6 AND EQ ISZERO PUSH2 0x2ED JUMPI PUSH1 0x10 SWAP1 POP PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x30E JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x345 JUMPI PUSH2 0x352 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 SUB SWAP1 POP PUSH1 0x60 DUP2 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x38F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP6 DUP3 DUP3 ADD MSTORE DUP2 DUP2 MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 KECCAK256 PUSH24 0x507DF6139BCDA031B759BCA7CFDC19EC7E285510393B61D0 0xE0 SDIV MOD 0xB8 0x2C PUSH5 0x736F6C6343 STOP MOD DIV STOP CALLER ",
							"sourceMap": "38:4436:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;38:4436:0;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;192:106:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;192:106:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;192:106:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;60:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;60:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;136:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;192:106;242:12;274:16;283:6;274:8;:16::i;:::-;267:23;;192:106;;;:::o;60:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;136:47::-;;;;:::o;3679:788::-;3728:12;3753:14;3780:2;3770:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;124:4;108:14;100:6;87:42;155:4;147:6;143:17;133:27;;0:164;3770:13:0;;;;3753:30;;3837:1;3832:2;3829:1;3825:10;3818:21;3860:6;3955:1;3885:66;3881:1;:70;:75;3877:272;;;3977:2;3973:6;;3877:272;;;4075:1;4005:66;4001:1;:70;:75;3997:152;;;4097:2;4093:6;;3997:152;;;4136:1;4132:5;;3997:152;3877:272;4159:101;4170:2;4166:1;:6;4159:101;;;4206:1;4198:9;;:1;4200;4198:4;;;;;;;;;;;;;;;;:9;;;;4194:55;;4228:5;;4194:55;4174:3;;;;;;;4159:101;;;4270:11;4289:1;4284:2;:6;4270:20;;4301:15;4329:6;4319:17;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;124:4;108:14;100:6;87:42;155:4;147:6;143:17;133:27;;0:164;4319:17:0;;;;4301:35;;4395:1;4386:6;4382:2;4378:15;4371:26;4422:6;4418:2;4411:18;4457:2;4450:9;;;;;;3679:788;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "197600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"data1()": "infinite",
								"data2()": "1027",
								"getData(uint256)": "infinite"
							},
							"internal": {
								"encodeLength(uint256,uint256)": "infinite",
								"mergeBytes(bytes memory,bytes memory)": "infinite",
								"toBinary(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "PUSH",
									"source": 0,
									"value": "2E"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "PUSH data",
									"source": 0,
									"value": "4887836E294A2761413359597244D307BBE3F94827F6160D9E1A399E00E2D1BE"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "PUSH",
									"source": 0,
									"value": "2E"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 129,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 129,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 136,
									"end": 183,
									"name": "PUSH",
									"source": 0,
									"value": "4C45484F4E47564F776A6E66766A3377656838764B4A00000000000000000000"
								},
								{
									"begin": 136,
									"end": 183,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 136,
									"end": 183,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38,
									"end": 4474,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a22077507df6139bcda031b759bca7cfdc19ec7e285510393b61d0e00506b82c64736f6c63430006040033",
									".code": [
										{
											"begin": 38,
											"end": 4474,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "PUSH",
											"source": 0,
											"value": "178FE3F"
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "PUSH",
											"source": 0,
											"value": "9FFD85C4"
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "PUSH",
											"source": 0,
											"value": "E3A7FD75"
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38,
											"end": 4474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 192,
											"end": 298,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 192,
											"end": 298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 192,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "7"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "7"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 192,
											"end": 298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 192,
											"end": 298,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 192,
											"end": 298,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 192,
											"end": 298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 298,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "9"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "11"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "9"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "11"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 192,
											"end": 298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 192,
											"end": 298,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 192,
											"end": 298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 298,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 192,
											"end": 298,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 192,
											"end": 298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 298,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 136,
											"end": 183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 136,
											"end": 183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 136,
											"end": 183,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 136,
											"end": 183,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 136,
											"end": 183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 136,
											"end": 183,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 136,
											"end": 183,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 136,
											"end": 183,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 192,
											"end": 298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 242,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 274,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 283,
											"end": 289,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 274,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 274,
											"end": 290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 274,
											"end": 290,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 274,
											"end": 290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 267,
											"end": 290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 267,
											"end": 290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 298,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60,
											"end": 129,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 136,
											"end": 183,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 136,
											"end": 183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 136,
											"end": 183,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 136,
											"end": 183,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3679,
											"end": 4467,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3679,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3728,
											"end": 3740,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3753,
											"end": 3767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17,
											"end": 31,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 128,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 108,
											"end": 122,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": 100,
											"end": 106,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 87,
											"end": 129,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 155,
											"end": 159,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 143,
											"end": 160,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 133,
											"end": 160,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 133,
											"end": 160,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 164,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3770,
											"end": 3783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3753,
											"end": 3783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3753,
											"end": 3783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3838,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3832,
											"end": 3834,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3829,
											"end": 3830,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3825,
											"end": 3835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3955,
											"end": 3956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3885,
											"end": 3951,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000"
										},
										{
											"begin": 3881,
											"end": 3882,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3881,
											"end": 3951,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3881,
											"end": 3956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 4149,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3877,
											"end": 4149,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3977,
											"end": 3979,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3973,
											"end": 3979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 3979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3877,
											"end": 4149,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 4149,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3877,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4075,
											"end": 4076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4005,
											"end": 4071,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000"
										},
										{
											"begin": 4001,
											"end": 4002,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4001,
											"end": 4071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4001,
											"end": 4076,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4149,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3997,
											"end": 4149,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4099,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4093,
											"end": 4099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3997,
											"end": 4149,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4149,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3997,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4132,
											"end": 4137,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4149,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3997,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 4149,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3877,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4159,
											"end": 4260,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4159,
											"end": 4260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4172,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4166,
											"end": 4167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4166,
											"end": 4172,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4159,
											"end": 4260,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4159,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4159,
											"end": 4260,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4206,
											"end": 4207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4198,
											"end": 4207,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 4198,
											"end": 4207,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4200,
											"end": 4201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4202,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4198,
											"end": 4202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4202,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4202,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4198,
											"end": 4202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4202,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4198,
											"end": 4202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4202,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 4198,
											"end": 4202,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4202,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 4198,
											"end": 4202,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4207,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4198,
											"end": 4207,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4207,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4207,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4194,
											"end": 4249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4249,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4194,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4174,
											"end": 4177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4174,
											"end": 4177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4174,
											"end": 4177,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4174,
											"end": 4177,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4174,
											"end": 4177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4174,
											"end": 4177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4174,
											"end": 4177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4159,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4159,
											"end": 4260,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4159,
											"end": 4260,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4159,
											"end": 4260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4281,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4289,
											"end": 4290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4284,
											"end": 4286,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4284,
											"end": 4290,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 4316,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4329,
											"end": 4335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17,
											"end": 31,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 128,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 108,
											"end": 122,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": 100,
											"end": 106,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 87,
											"end": 129,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 155,
											"end": 159,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 143,
											"end": 160,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 133,
											"end": 160,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 133,
											"end": 160,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 164,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4319,
											"end": 4336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 4336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 4336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4395,
											"end": 4396,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4384,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4393,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4371,
											"end": 4397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4422,
											"end": 4428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4457,
											"end": 4459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4459,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4450,
											"end": 4459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3679,
											"end": 4467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3679,
											"end": 4467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3679,
											"end": 4467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3679,
											"end": 4467,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								},
								"4887836E294A2761413359597244D307BBE3F94827F6160D9E1A399E00E2D1BE": "4e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f"
							}
						},
						"methodIdentifiers": {
							"data1()": "9ffd85c4",
							"data2()": "e3a7fd75",
							"getData(uint256)": "0178fe3f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"data1\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data2\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offst\",\"type\":\"uint256\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/demo2.sol\":\"demo2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/demo2.sol\":{\"keccak256\":\"0xfd8f97490004aaa46077a095f317149d8787dd4a838f9e4be2e10f39eee8ddfa\",\"urls\":[\"bzz-raw://608ef77f60f90c635c381f52c28bea2d861aed9fa6d71c5c649374e3b2bc8506\",\"dweb:/ipfs/QmabnegnFbkJT2pW8vs3EZDPcd7smQBWdS2A6evy6bHtKD\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "contracts/demo2.sol:7:5: Warning: Function state mutability can be restricted to pure\n    function getData(uint _offst) public view returns(bytes memory) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 298,
					"file": "contracts/demo2.sol",
					"start": 192
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/demo2.sol": {
				"ast": {
					"absolutePath": "contracts/demo2.sol",
					"exportedSymbols": {
						"demo2": [
							189
						]
					},
					"id": 190,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">",
								"0.4",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4:30:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "demo2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9ffd85c4",
									"id": 4,
									"name": "data1",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 189,
									"src": "60:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 2,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "60:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "81:48:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_4887836e294a2761413359597244d307bbe3f94827f6160d9e1a399e00e2d1be",
											"typeString": "literal_string \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\""
										},
										"value": "NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e3a7fd75",
									"id": 7,
									"name": "data2",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 189,
									"src": "136:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 5,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "136:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4c45484f4e47564f776a6e66766a3377656838764b4a",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "159:24:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_456403c9720da4fa7d7375867b84ba5ad32318599c72d3314f61b294b0c7ff33",
											"typeString": "literal_string \"LEHONGVOwjnfvj3weh8vKJ\""
										},
										"value": "LEHONGVOwjnfvj3weh8vKJ"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "256:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 15,
															"name": "_offst",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "283:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 14,
														"name": "toBinary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "274:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "274:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 13,
												"id": 17,
												"nodeType": "Return",
												"src": "267:23:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "0178fe3f",
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "_offst",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 19,
												"src": "209:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "209:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "208:13:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 19,
												"src": "242:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 11,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "242:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "241:14:0"
									},
									"scope": 189,
									"src": "192:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "457:2764:0",
										"statements": [
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"name": "tempBytes",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 34,
														"src": "468:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 28,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "468:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 30,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "468:22:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "512:2673:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "651:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "670:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "664:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "664:11:0"
															},
															"variableNames": [
																{
																	"name": "tempBytes",
																	"nodeType": "YulIdentifier",
																	"src": "651:9:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "803:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "_preBytes",
																		"nodeType": "YulIdentifier",
																		"src": "823:9:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "817:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "817:16:0"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "807:6:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tempBytes",
																		"nodeType": "YulIdentifier",
																		"src": "854:9:0"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "865:6:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:25:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:25:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1075:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "tempBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1089:9:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1100:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1085:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1085:20:0"
															},
															"variables": [
																{
																	"name": "mc",
																	"nodeType": "YulTypedName",
																	"src": "1079:2:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:26:0",
															"value": {
																"arguments": [
																	{
																		"name": "mc",
																		"nodeType": "YulIdentifier",
																		"src": "1240:2:0"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1244:6:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1236:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1236:15:0"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "1229:3:0",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1626:158:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "mc",
																					"nodeType": "YulIdentifier",
																					"src": "1755:2:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "cc",
																							"nodeType": "YulIdentifier",
																							"src": "1765:2:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1759:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1759:9:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:21:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:21:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "mc",
																		"nodeType": "YulIdentifier",
																		"src": "1459:2:0"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1463:3:0"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1456:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1456:11:0"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1468:157:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1554:19:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "mc",
																					"nodeType": "YulIdentifier",
																					"src": "1564:2:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1568:4:0",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1560:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1560:13:0"
																		},
																		"variableNames": [
																			{
																				"name": "mc",
																				"nodeType": "YulIdentifier",
																				"src": "1554:2:0"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1591:19:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "cc",
																					"nodeType": "YulIdentifier",
																					"src": "1601:2:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1605:4:0",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1597:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1597:13:0"
																		},
																		"variableNames": [
																			{
																				"name": "cc",
																				"nodeType": "YulIdentifier",
																				"src": "1591:2:0"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1271:184:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1410:30:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "_preBytes",
																					"nodeType": "YulIdentifier",
																					"src": "1424:9:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1435:4:0",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1420:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1420:20:0"
																		},
																		"variables": [
																			{
																				"name": "cc",
																				"nodeType": "YulTypedName",
																				"src": "1414:2:0",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1267:517:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1978:27:0",
															"value": {
																"arguments": [
																	{
																		"name": "_postBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1994:10:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1988:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1988:17:0"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1978:6:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tempBytes",
																		"nodeType": "YulIdentifier",
																		"src": "2026:9:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2041:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tempBytes",
																						"nodeType": "YulIdentifier",
																						"src": "2055:9:0"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "2049:5:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2049:16:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2037:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2037:29:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:48:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2019:48:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2201:9:0",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "2207:3:0"
															},
															"variableNames": [
																{
																	"name": "mc",
																	"nodeType": "YulIdentifier",
																	"src": "2201:2:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2332:22:0",
															"value": {
																"arguments": [
																	{
																		"name": "mc",
																		"nodeType": "YulIdentifier",
																		"src": "2343:2:0"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2347:6:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2339:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2339:15:0"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2332:3:0"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2543:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "mc",
																					"nodeType": "YulIdentifier",
																					"src": "2569:2:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "cc",
																							"nodeType": "YulIdentifier",
																							"src": "2579:2:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2573:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2573:9:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2562:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2562:21:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2562:21:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "mc",
																		"nodeType": "YulIdentifier",
																		"src": "2443:2:0"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2447:3:0"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2440:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2440:11:0"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2452:90:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2471:19:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "mc",
																					"nodeType": "YulIdentifier",
																					"src": "2481:2:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2485:4:0",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2477:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2477:13:0"
																		},
																		"variableNames": [
																			{
																				"name": "mc",
																				"nodeType": "YulIdentifier",
																				"src": "2471:2:0"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2508:19:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "cc",
																					"nodeType": "YulIdentifier",
																					"src": "2518:2:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2522:4:0",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2514:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2514:13:0"
																		},
																		"variableNames": [
																			{
																				"name": "cc",
																				"nodeType": "YulIdentifier",
																				"src": "2508:2:0"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2374:65:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2393:31:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "_postBytes",
																					"nodeType": "YulIdentifier",
																					"src": "2407:10:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2419:4:0",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2403:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2403:21:0"
																		},
																		"variables": [
																			{
																				"name": "cc",
																				"nodeType": "YulTypedName",
																				"src": "2397:2:0",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2370:228:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3017:4:0",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "end",
																								"nodeType": "YulIdentifier",
																								"src": "3049:3:0"
																							},
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "length",
																												"nodeType": "YulIdentifier",
																												"src": "3065:6:0"
																											},
																											{
																												"arguments": [
																													{
																														"name": "_preBytes",
																														"nodeType": "YulIdentifier",
																														"src": "3079:9:0"
																													}
																												],
																												"functionName": {
																													"name": "mload",
																													"nodeType": "YulIdentifier",
																													"src": "3073:5:0"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3073:16:0"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3061:3:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3061:29:0"
																									}
																								],
																								"functionName": {
																									"name": "iszero",
																									"nodeType": "YulIdentifier",
																									"src": "3054:6:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3054:37:0"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3045:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3045:47:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3094:2:0",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3041:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3041:56:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3116:2:0",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3112:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3112:7:0"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3023:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3023:150:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3010:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3010:164:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3010:164:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 23,
														"isOffset": false,
														"isSlot": false,
														"src": "1994:10:0",
														"valueSize": 1
													},
													{
														"declaration": 23,
														"isOffset": false,
														"isSlot": false,
														"src": "2407:10:0",
														"valueSize": 1
													},
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": false,
														"src": "1424:9:0",
														"valueSize": 1
													},
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:9:0",
														"valueSize": 1
													},
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": false,
														"src": "823:9:0",
														"valueSize": 1
													},
													{
														"declaration": 29,
														"isOffset": false,
														"isSlot": false,
														"src": "1089:9:0",
														"valueSize": 1
													},
													{
														"declaration": 29,
														"isOffset": false,
														"isSlot": false,
														"src": "2026:9:0",
														"valueSize": 1
													},
													{
														"declaration": 29,
														"isOffset": false,
														"isSlot": false,
														"src": "2055:9:0",
														"valueSize": 1
													},
													{
														"declaration": 29,
														"isOffset": false,
														"isSlot": false,
														"src": "651:9:0",
														"valueSize": 1
													},
													{
														"declaration": 29,
														"isOffset": false,
														"isSlot": false,
														"src": "854:9:0",
														"valueSize": 1
													}
												],
												"id": 31,
												"nodeType": "InlineAssembly",
												"src": "503:2682:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 32,
													"name": "tempBytes",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "3204:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 27,
												"id": 33,
												"nodeType": "Return",
												"src": "3197:16:0"
											}
										]
									},
									"documentation": null,
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mergeBytes",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"name": "_preBytes",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 35,
												"src": "336:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 20,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "336:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"name": "_postBytes",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 35,
												"src": "369:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 22,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "369:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "325:74:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 35,
												"src": "438:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 25,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "438:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "437:14:0"
									},
									"scope": 189,
									"src": "306:2915:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "3314:353:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 45,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "3333:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "323536",
																	"id": 46,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3342:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_256_by_1",
																		"typeString": "int_const 256"
																	},
																	"value": "256"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "38",
																	"id": 47,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3347:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "3342:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																}
															},
															"src": "3333:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "696e70757420746f6f206c6f6e67",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3350:16:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a873a7082baf03a0e4b19c621e1c72f66968b3369db2e0887e4b7655ebd5893",
																"typeString": "literal_string \"input too long\""
															},
															"value": "input too long"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a873a7082baf03a0e4b19c621e1c72f66968b3369db2e0887e4b7655ebd5893",
																"typeString": "literal_string \"input too long\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3325:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3325:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "3325:42:0"
											},
											{
												"assignments": [
													54
												],
												"declarations": [
													{
														"constant": false,
														"id": 54,
														"name": "rs",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 109,
														"src": "3378:15:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 53,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3378:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 59,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "31",
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3406:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3396:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 55,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3400:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3396:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3378:30:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 60,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "3423:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3535",
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3433:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_55_by_1",
															"typeString": "int_const 55"
														},
														"value": "55"
													},
													"src": "3423:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 80,
												"nodeType": "IfStatement",
												"src": "3419:105:0",
												"trueBody": {
													"id": 79,
													"nodeType": "Block",
													"src": "3437:87:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 63,
																		"name": "rs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 54,
																		"src": "3452:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 65,
																	"indexExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 64,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3455:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3452:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 72,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 70,
																						"name": "length",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 37,
																						"src": "3471:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 71,
																						"name": "offset",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 39,
																						"src": "3480:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3471:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 69,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3465:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 68,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "3465:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 73,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3465:22:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3460:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 66,
																			"name": "byte",
																			"nodeType": "ElementaryTypeName",
																			"src": "3460:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 74,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3460:28:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "3452:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 76,
															"nodeType": "ExpressionStatement",
															"src": "3452:36:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 77,
																"name": "rs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "3510:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 43,
															"id": 78,
															"nodeType": "Return",
															"src": "3503:9:0"
														}
													]
												}
											},
											{
												"assignments": [
													82
												],
												"declarations": [
													{
														"constant": false,
														"id": 82,
														"name": "bl",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 109,
														"src": "3534:15:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 81,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3534:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 86,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 84,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "3561:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 83,
														"name": "toBinary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "3552:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3552:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3534:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 87,
															"name": "rs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "3579:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 89,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3582:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3579:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 99,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 97,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 94,
																					"name": "bl",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 82,
																					"src": "3598:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 95,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3598:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 96,
																				"name": "offset",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 39,
																				"src": "3610:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3598:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "3535",
																			"id": 98,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3619:2:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_55_by_1",
																				"typeString": "int_const 55"
																			},
																			"value": "55"
																		},
																		"src": "3598:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3592:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 92,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "3592:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3592:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3587:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes1_$",
																"typeString": "type(bytes1)"
															},
															"typeName": {
																"id": 90,
																"name": "byte",
																"nodeType": "ElementaryTypeName",
																"src": "3587:4:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3587:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"src": "3579:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "3579:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 105,
															"name": "rs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "3652:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 106,
															"name": "bl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3656:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 104,
														"name": "mergeBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "3641:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,bytes memory) pure returns (bytes memory)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3641:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 43,
												"id": 108,
												"nodeType": "Return",
												"src": "3634:25:0"
											}
										]
									},
									"documentation": null,
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encodeLength",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"name": "length",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 110,
												"src": "3251:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3251:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"name": "offset",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 110,
												"src": "3264:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3264:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3250:26:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 110,
												"src": "3300:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 41,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3300:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3299:14:0"
									},
									"scope": 189,
									"src": "3229:438:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "3742:725:0",
										"statements": [
											{
												"assignments": [
													118
												],
												"declarations": [
													{
														"constant": false,
														"id": 118,
														"name": "b",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 187,
														"src": "3753:14:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 117,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3753:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 123,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3332",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3780:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3770:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 119,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3774:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3770:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3753:30:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3803:47:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "b",
																				"nodeType": "YulIdentifier",
																				"src": "3829:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3832:2:0",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3825:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3825:10:0"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3837:1:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3818:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3818:21:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3818:21:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 118,
														"isOffset": false,
														"isSlot": false,
														"src": "3829:1:0",
														"valueSize": 1
													},
													{
														"declaration": 112,
														"isOffset": false,
														"isSlot": false,
														"src": "3837:1:0",
														"valueSize": 1
													}
												],
												"id": 124,
												"nodeType": "InlineAssembly",
												"src": "3794:56:0"
											},
											{
												"assignments": [
													126
												],
												"declarations": [
													{
														"constant": false,
														"id": 126,
														"name": "i",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 187,
														"src": "3860:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 125,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3860:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 127,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "3860:6:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 128,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "3881:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "307866666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666630303030303030303030303030303030",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3885:66:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039439137263839420088320_by_1",
																"typeString": "int_const 1157...(70 digits omitted)...8320"
															},
															"value": "0xffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000"
														},
														"src": "3881:70:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3955:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3881:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 138,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "4001:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "307866666666666666666666666666666666666666666666666666666666666666663030303030303030303030303030303030303030303030303030303030303030",
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4005:66:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_115792089237316195423570985008687907852929702298719625575994209400481361428480_by_1",
																	"typeString": "int_const 1157...(70 digits omitted)...8480"
																},
																"value": "0xffffffffffffffffffffffffffffffff00000000000000000000000000000000"
															},
															"src": "4001:70:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4075:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4001:75:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 152,
														"nodeType": "Block",
														"src": "4117:32:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 148,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 126,
																		"src": "4132:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4136:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4132:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 151,
																"nodeType": "ExpressionStatement",
																"src": "4132:5:0"
															}
														]
													},
													"id": 153,
													"nodeType": "IfStatement",
													"src": "3997:152:0",
													"trueBody": {
														"id": 147,
														"nodeType": "Block",
														"src": "4078:33:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 143,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 126,
																		"src": "4093:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "3136",
																		"id": 144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4097:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	"src": "4093:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 146,
																"nodeType": "ExpressionStatement",
																"src": "4093:6:0"
															}
														]
													}
												},
												"id": 154,
												"nodeType": "IfStatement",
												"src": "3877:272:0",
												"trueBody": {
													"id": 137,
													"nodeType": "Block",
													"src": "3958:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 133,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 126,
																	"src": "3973:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3234",
																	"id": 134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3977:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_24_by_1",
																		"typeString": "int_const 24"
																	},
																	"value": "24"
																},
																"src": "3973:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 136,
															"nodeType": "ExpressionStatement",
															"src": "3973:6:0"
														}
													]
												}
											},
											{
												"body": {
													"id": 169,
													"nodeType": "Block",
													"src": "4179:81:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																},
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 161,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 118,
																		"src": "4198:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 163,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 162,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 126,
																		"src": "4200:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4198:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4206:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4198:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 168,
															"nodeType": "IfStatement",
															"src": "4194:55:0",
															"trueBody": {
																"id": 167,
																"nodeType": "Block",
																"src": "4209:40:0",
																"statements": [
																	{
																		"id": 166,
																		"nodeType": "Break",
																		"src": "4228:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 155,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "4166:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4170:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "4166:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 170,
												"initializationExpression": null,
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4174:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 158,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4174:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 160,
													"nodeType": "ExpressionStatement",
													"src": "4174:3:0"
												},
												"nodeType": "ForStatement",
												"src": "4159:101:0"
											},
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"name": "length",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 187,
														"src": "4270:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 171,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4270:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 176,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4284:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 174,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "4289:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4284:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4270:20:0"
											},
											{
												"assignments": [
													178
												],
												"declarations": [
													{
														"constant": false,
														"id": 178,
														"name": "rs",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 187,
														"src": "4301:15:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 177,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4301:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 183,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 181,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "4329:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4319:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 179,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4323:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4319:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4301:35:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4356:84:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rs",
																				"nodeType": "YulIdentifier",
																				"src": "4382:2:0"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4386:6:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4378:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4378:15:0"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4395:1:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4371:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4371:26:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4371:26:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "rs",
																		"nodeType": "YulIdentifier",
																		"src": "4418:2:0"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4422:6:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4411:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4411:18:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4411:18:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 172,
														"isOffset": false,
														"isSlot": false,
														"src": "4386:6:0",
														"valueSize": 1
													},
													{
														"declaration": 172,
														"isOffset": false,
														"isSlot": false,
														"src": "4422:6:0",
														"valueSize": 1
													},
													{
														"declaration": 178,
														"isOffset": false,
														"isSlot": false,
														"src": "4382:2:0",
														"valueSize": 1
													},
													{
														"declaration": 178,
														"isOffset": false,
														"isSlot": false,
														"src": "4418:2:0",
														"valueSize": 1
													},
													{
														"declaration": 112,
														"isOffset": false,
														"isSlot": false,
														"src": "4395:1:0",
														"valueSize": 1
													}
												],
												"id": 184,
												"nodeType": "InlineAssembly",
												"src": "4347:93:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 185,
													"name": "rs",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 178,
													"src": "4457:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 116,
												"id": 186,
												"nodeType": "Return",
												"src": "4450:9:0"
											}
										]
									},
									"documentation": null,
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toBinary",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 188,
												"src": "3697:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3697:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3696:8:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 188,
												"src": "3728:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3728:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3727:14:0"
									},
									"scope": 189,
									"src": "3679:788:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 190,
							"src": "38:4436:0"
						}
					],
					"src": "4:4481:0"
				},
				"id": 0
			}
		}
	}
}