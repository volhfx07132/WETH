{
	"id": "c41b07c7d422ac69f6c27b573d56ca09",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.4",
	"solcLongVersion": "0.6.4+commit.1dca32f3",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/demo2.sol": {
				"content": "    pragma solidity >0.4.0 <0.9.0;\r\n    pragma experimental ABIEncoderV2;\r\n\r\n    contract demo2 {\r\n        bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\";\r\n        bytes public data3 = \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\";\r\n        bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\";\r\n        uint8 constant STRING_OFFSET = 0x80;\r\n        uint8 constant LIST_OFFSET = 0xc0;\r\n        uint8 constant STRING_SHORT_START = 0x80;\r\n        uint8 constant STRING_LONG_START  = 0xb8;\r\n        uint8 constant LIST_SHORT_START   = 0xc0;\r\n        uint8 constant LIST_LONG_START    = 0xf8;\r\n        uint8 constant WORD_SIZE = 32;\r\n        \r\n        struct RLPItem {\r\n            uint len;\r\n            uint memPtr;\r\n        }\r\n\r\n        struct Iterator {\r\n            RLPItem item;   // Item that's being iterated over.\r\n            uint nextPtr;   // Position of the next item in the list.\r\n        }\r\n\r\n        RLPItem public rlpItem;\r\n\r\n        constructor(uint _len, uint _menPtr) public {\r\n            rlpItem.len = _len;\r\n            rlpItem.memPtr = _menPtr;\r\n        }\r\n        \r\n\r\n        function getData() public view returns(uint) {\r\n            return toUintStrict(rlpItem);\r\n        }\r\n         \r\n        function toUintStrict(RLPItem memory item) internal pure returns (uint) {\r\n            // one byte prefix\r\n            require(item.len == 33);\r\n\r\n            uint result;\r\n            uint memPtr = item.memPtr + 1;\r\n            assembly {\r\n                result := mload(memPtr)\r\n            }\r\n\r\n            return result;\r\n        }\r\n        \r\n\r\n        function toBytes(RLPItem memory item) internal pure returns (bytes memory) {\r\n            require(item.len > 0);\r\n\r\n            uint offset = _payloadOffset(item.memPtr);\r\n            uint len = item.len - offset; // data length\r\n            bytes memory result = new bytes(len);\r\n\r\n            uint destPtr;\r\n            assembly {\r\n                destPtr := add(0x20, result)\r\n            }\r\n\r\n            copy(item.memPtr + offset, destPtr, len);\r\n            return result;\r\n        }\r\n\r\n        \r\n        function numItems(RLPItem memory item) private pure returns (uint) {\r\n            if (item.len == 0) return 0;\r\n            uint count = 0;\r\n            uint currPtr = item.memPtr + _payloadOffset(item.memPtr);\r\n            uint endPtr = item.memPtr + item.len;\r\n            while (currPtr < endPtr) {\r\n                currPtr = currPtr + _itemLength(currPtr); // skip over an item\r\n                count++;\r\n            }\r\n            return count;\r\n        }\r\n\r\n        function _itemLength(uint memPtr) private pure returns (uint) {\r\n            uint itemLen;\r\n            uint byte0;\r\n            assembly {\r\n                byte0 := byte(0, mload(memPtr))\r\n            }\r\n\r\n            if (byte0 < STRING_SHORT_START)\r\n                itemLen = 1;\r\n\r\n            else if (byte0 < STRING_LONG_START)\r\n                itemLen = byte0 - STRING_SHORT_START + 1;\r\n\r\n            else if (byte0 < LIST_SHORT_START) {\r\n                uint dataLen;\r\n                assembly {\r\n                    let byteLen := sub(byte0, 0xb7) // # of bytes the actual length is\r\n                    memPtr := add(memPtr, 1) // skip over the first byte\r\n\r\n                    /* 32 byte word size */\r\n                    dataLen := div(mload(memPtr), exp(256, sub(32, byteLen))) // right shifting to get the len\r\n                    itemLen := add(dataLen, add(byteLen, 1))\r\n                }\r\n                require(itemLen >= dataLen, \"addition overflow\");\r\n            }\r\n\r\n            else if (byte0 < LIST_LONG_START) {\r\n                itemLen = byte0 - LIST_SHORT_START + 1;\r\n            }\r\n\r\n            else {\r\n                uint dataLen;\r\n                assembly {\r\n                    let byteLen := sub(byte0, 0xf7)\r\n                    memPtr := add(memPtr, 1)\r\n\r\n                    dataLen := div(mload(memPtr), exp(256, sub(32, byteLen))) // right shifting to the correct length\r\n                    itemLen := add(dataLen, add(byteLen, 1))\r\n                }\r\n                require(itemLen >= dataLen, \"addition overflow\");\r\n            }\r\n\r\n            return itemLen;\r\n        }\r\n\r\n         // @return number of bytes until the data\r\n        function _payloadOffset(uint memPtr) private pure returns (uint) {\r\n            uint byte0;\r\n            assembly {\r\n                byte0 := byte(0, mload(memPtr))\r\n            }\r\n\r\n            if (byte0 < STRING_SHORT_START)\r\n                return 0;\r\n            else if (byte0 < STRING_LONG_START || (byte0 >= LIST_SHORT_START && byte0 < LIST_LONG_START))\r\n                return 1;\r\n            else if (byte0 < LIST_SHORT_START)  // being explicit\r\n                return byte0 - (STRING_LONG_START - 1) + 1;\r\n            else\r\n                return byte0 - (LIST_LONG_START - 1) + 1;\r\n        } \r\n\r\n        function copy(uint src, uint dest, uint len) private pure {\r\n            if (len == 0) return;\r\n\r\n            // copy as many word sizes as possible\r\n            for (; len >= WORD_SIZE; len -= WORD_SIZE) {\r\n                assembly {\r\n                    mstore(dest, mload(src))\r\n                }\r\n\r\n                src += WORD_SIZE;\r\n                dest += WORD_SIZE;\r\n            }\r\n\r\n            // left over bytes. Mask is used to remove unwanted bytes from the word\r\n            uint mask = 256 ** (WORD_SIZE - len) - 1;\r\n            assembly {\r\n                let srcpart := and(mload(src), not(mask)) // zero out src\r\n                let destpart := and(mload(dest), mask) // retrieve the bytes\r\n                mstore(dest, or(destpart, srcpart))\r\n            }\r\n        }\r\n    } \r\n            "
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/demo2.sol": {
				"demo2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_len",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_menPtr",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "data1",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "data2",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "data3",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rlpItem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "len",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "memPtr",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/demo2.sol\":81:5662  contract demo2 {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/demo2.sol\":107:176  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x2e\n  dup2\n  mstore\n  0x20\n  add\n  data_4887836e294a2761413359597244d307bbe3f94827f6160d9e1a399e00e2d1be\n  0x2e\n  swap2\n  codecopy\n  0x00\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/demo2.sol\":187:252  bytes public data3 = \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\" */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x2a\n  dup2\n  mstore\n  0x20\n  add\n  data_c359735a342ece061e65ab7390d246d1e53ba5f24eea70d6201f1d4a7b2f3475\n  0x2a\n  swap2\n  codecopy\n  0x01\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_3\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_3:\n  pop\n    /* \"contracts/demo2.sol\":263:310  bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\" */\n  sstore(0x02, 0x4c45484f4e47564f776a6e66766a3377656838764b4a00000000000000000000)\n    /* \"contracts/demo2.sol\":964:1092  constructor(uint _len, uint _menPtr) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_4:\n    /* \"contracts/demo2.sol\":964:1092  constructor(uint _len, uint _menPtr) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_5\n  swap2\n  swap1\n  jump(tag_6)\ntag_5:\n    /* \"contracts/demo2.sol\":1037:1041  _len */\n  dup2\n    /* \"contracts/demo2.sol\":1023:1030  rlpItem */\n  0x03\n    /* \"contracts/demo2.sol\":1023:1034  rlpItem.len */\n  0x00\n  add\n    /* \"contracts/demo2.sol\":1023:1041  rlpItem.len = _len */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/demo2.sol\":1073:1080  _menPtr */\n  dup1\n    /* \"contracts/demo2.sol\":1056:1063  rlpItem */\n  0x03\n    /* \"contracts/demo2.sol\":1056:1070  rlpItem.memPtr */\n  0x01\n  add\n    /* \"contracts/demo2.sol\":1056:1080  rlpItem.memPtr = _menPtr */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/demo2.sol\":964:1092  constructor(uint _len, uint _menPtr) public {\r... */\n  pop\n  pop\n    /* \"contracts/demo2.sol\":81:5662  contract demo2 {\r... */\n  jump(tag_9)\ntag_2:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_11\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_10)\ntag_11:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_10\n  jumpi\n  swap2\n  dup3\n  add\ntag_12:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_13\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_12)\ntag_13:\ntag_10:\n  pop\n  swap1\n  pop\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  pop\n  swap1\n  jump\t// out\ntag_15:\n  tag_16\n  swap2\n  swap1\ntag_17:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_18\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_17)\ntag_18:\n  pop\n  swap1\n  jump\ntag_16:\n  swap1\n  jump\t// out\n    /* \"--CODEGEN--\":5:139   */\ntag_20:\n  0x00\n    /* \"--CODEGEN--\":89:95   */\n  dup2\n    /* \"--CODEGEN--\":83:96   */\n  mload\n    /* \"--CODEGEN--\":74:96   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":101:134   */\n  tag_22\n    /* \"--CODEGEN--\":128:133   */\n  dup2\n    /* \"--CODEGEN--\":101:134   */\n  jump(tag_23)\ntag_22:\n    /* \"--CODEGEN--\":68:139   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\n    /* \"--CODEGEN--\":146:545   */\ntag_6:\n  0x00\n  dup1\n    /* \"--CODEGEN--\":278:280   */\n  0x40\n    /* \"--CODEGEN--\":266:275   */\n  dup4\n    /* \"--CODEGEN--\":257:264   */\n  dup6\n    /* \"--CODEGEN--\":253:276   */\n  sub\n    /* \"--CODEGEN--\":249:281   */\n  slt\n    /* \"--CODEGEN--\":246:248   */\n  iszero\n  tag_25\n  jumpi\n    /* \"--CODEGEN--\":294:295   */\n  0x00\n    /* \"--CODEGEN--\":291:292   */\n  dup1\n    /* \"--CODEGEN--\":284:296   */\n  revert\n    /* \"--CODEGEN--\":246:248   */\ntag_25:\n    /* \"--CODEGEN--\":329:330   */\n  0x00\n    /* \"--CODEGEN--\":346:410   */\n  tag_26\n    /* \"--CODEGEN--\":402:409   */\n  dup6\n    /* \"--CODEGEN--\":393:399   */\n  dup3\n    /* \"--CODEGEN--\":382:391   */\n  dup7\n    /* \"--CODEGEN--\":378:400   */\n  add\n    /* \"--CODEGEN--\":346:410   */\n  jump(tag_20)\ntag_26:\n    /* \"--CODEGEN--\":336:410   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":308:416   */\n  pop\n    /* \"--CODEGEN--\":447:449   */\n  0x20\n    /* \"--CODEGEN--\":465:529   */\n  tag_27\n    /* \"--CODEGEN--\":521:528   */\n  dup6\n    /* \"--CODEGEN--\":512:518   */\n  dup3\n    /* \"--CODEGEN--\":501:510   */\n  dup7\n    /* \"--CODEGEN--\":497:519   */\n  add\n    /* \"--CODEGEN--\":465:529   */\n  jump(tag_20)\ntag_27:\n    /* \"--CODEGEN--\":455:529   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":426:535   */\n  pop\n    /* \"--CODEGEN--\":240:545   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\n    /* \"--CODEGEN--\":552:624   */\ntag_28:\n  0x00\n    /* \"--CODEGEN--\":614:619   */\n  dup2\n    /* \"--CODEGEN--\":603:619   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":597:624   */\n  swap2\n  swap1\n  pop\n  jump\n    /* \"--CODEGEN--\":631:748   */\ntag_23:\n    /* \"--CODEGEN--\":700:724   */\n  tag_31\n    /* \"--CODEGEN--\":718:723   */\n  dup2\n    /* \"--CODEGEN--\":700:724   */\n  jump(tag_28)\ntag_31:\n    /* \"--CODEGEN--\":693:698   */\n  dup2\n    /* \"--CODEGEN--\":690:725   */\n  eq\n    /* \"--CODEGEN--\":680:682   */\n  tag_32\n  jumpi\n    /* \"--CODEGEN--\":739:740   */\n  0x00\n    /* \"--CODEGEN--\":736:737   */\n  dup1\n    /* \"--CODEGEN--\":729:741   */\n  revert\n    /* \"--CODEGEN--\":680:682   */\ntag_32:\n    /* \"--CODEGEN--\":674:748   */\n  pop\n  jump\n    /* \"contracts/demo2.sol\":81:5662  contract demo2 {\r... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_4887836e294a2761413359597244d307bbe3f94827f6160d9e1a399e00e2d1be 4e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f\ndata_c359735a342ece061e65ab7390d246d1e53ba5f24eea70d6201f1d4a7b2f3475 7364664e417364667364664c4548484a5347445348444a53484a53484a534844534a44484a4f4e47564f\n\nsub_0: assembly {\n        /* \"contracts/demo2.sol\":81:5662  contract demo2 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"contracts/demo2.sol\":81:5662  contract demo2 {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3bc5de30\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9ffd85c4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa699fb03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xe3a7fd75\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfc26b0ab\n      eq\n      tag_7\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/demo2.sol\":1114:1214  function getData() public view returns(uint) {\r... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      jump(tag_11)\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":107:176  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      jump(tag_15)\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":929:951  RLPItem public rlpItem */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap3\n      swap2\n      swap1\n      jump(tag_19)\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":263:310  bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\" */\n    tag_6:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      jump(tag_23)\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":187:252  bytes public data3 = \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_7:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      jump(tag_15)\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":1114:1214  function getData() public view returns(uint) {\r... */\n    tag_9:\n        /* \"contracts/demo2.sol\":1153:1157  uint */\n      0x00\n        /* \"contracts/demo2.sol\":1181:1202  toUintStrict(rlpItem) */\n      tag_28\n        /* \"contracts/demo2.sol\":1194:1201  rlpItem */\n      0x03\n        /* \"contracts/demo2.sol\":1181:1202  toUintStrict(rlpItem) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/demo2.sol\":1181:1193  toUintStrict */\n      tag_29\n        /* \"contracts/demo2.sol\":1181:1202  toUintStrict(rlpItem) */\n      jump\t// in\n    tag_28:\n        /* \"contracts/demo2.sol\":1174:1202  return toUintStrict(rlpItem) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":1114:1214  function getData() public view returns(uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/demo2.sol\":107:176  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_13:\n      0x00\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_30\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_31\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_30)\n    tag_31:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_32:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_32\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/demo2.sol\":929:951  RLPItem public rlpItem */\n    tag_17:\n      0x03\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/demo2.sol\":263:310  bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\" */\n    tag_21:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/demo2.sol\":187:252  bytes public data3 = \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_25:\n      0x01\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_33\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_34\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_33)\n    tag_34:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_35:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_35\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_33:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/demo2.sol\":1235:1571  function toUintStrict(RLPItem memory item) internal pure returns (uint) {\r... */\n    tag_29:\n        /* \"contracts/demo2.sol\":1301:1305  uint */\n      0x00\n        /* \"contracts/demo2.sol\":1374:1376  33 */\n      0x21\n        /* \"contracts/demo2.sol\":1362:1366  item */\n      dup3\n        /* \"contracts/demo2.sol\":1362:1370  item.len */\n      0x00\n      add\n      mload\n        /* \"contracts/demo2.sol\":1362:1376  item.len == 33 */\n      eq\n        /* \"contracts/demo2.sol\":1354:1377  require(item.len == 33) */\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/demo2.sol\":1354:1377  require(item.len == 33) */\n    tag_37:\n        /* \"contracts/demo2.sol\":1394:1405  uint result */\n      0x00\n        /* \"contracts/demo2.sol\":1420:1431  uint memPtr */\n      dup1\n        /* \"contracts/demo2.sol\":1448:1449  1 */\n      0x01\n        /* \"contracts/demo2.sol\":1434:1438  item */\n      dup5\n        /* \"contracts/demo2.sol\":1434:1445  item.memPtr */\n      0x20\n      add\n      mload\n        /* \"contracts/demo2.sol\":1434:1449  item.memPtr + 1 */\n      add\n        /* \"contracts/demo2.sol\":1420:1449  uint memPtr = item.memPtr + 1 */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":1508:1514  memPtr */\n      dup1\n        /* \"contracts/demo2.sol\":1502:1515  mload(memPtr) */\n      mload\n        /* \"contracts/demo2.sol\":1492:1515  result := mload(memPtr) */\n      swap2\n      pop\n        /* \"contracts/demo2.sol\":1553:1559  result */\n      dup2\n        /* \"contracts/demo2.sol\":1546:1559  return result */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/demo2.sol\":1235:1571  function toUintStrict(RLPItem memory item) internal pure returns (uint) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":5:118   */\n    tag_39:\n        /* \"--CODEGEN--\":88:112   */\n      tag_41\n        /* \"--CODEGEN--\":106:111   */\n      dup2\n        /* \"--CODEGEN--\":88:112   */\n      jump(tag_42)\n    tag_41:\n        /* \"--CODEGEN--\":83:86   */\n      dup3\n        /* \"--CODEGEN--\":76:113   */\n      mstore\n        /* \"--CODEGEN--\":70:118   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":125:460   */\n    tag_43:\n      0x00\n        /* \"--CODEGEN--\":231:265   */\n      tag_45\n        /* \"--CODEGEN--\":259:264   */\n      dup3\n        /* \"--CODEGEN--\":231:265   */\n      jump(tag_46)\n    tag_45:\n        /* \"--CODEGEN--\":277:347   */\n      tag_47\n        /* \"--CODEGEN--\":340:346   */\n      dup2\n        /* \"--CODEGEN--\":335:338   */\n      dup6\n        /* \"--CODEGEN--\":277:347   */\n      jump(tag_48)\n    tag_47:\n        /* \"--CODEGEN--\":270:347   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":352:404   */\n      tag_49\n        /* \"--CODEGEN--\":397:403   */\n      dup2\n        /* \"--CODEGEN--\":392:395   */\n      dup6\n        /* \"--CODEGEN--\":385:389   */\n      0x20\n        /* \"--CODEGEN--\":378:383   */\n      dup7\n        /* \"--CODEGEN--\":374:390   */\n      add\n        /* \"--CODEGEN--\":352:404   */\n      jump(tag_50)\n    tag_49:\n        /* \"--CODEGEN--\":425:454   */\n      tag_51\n        /* \"--CODEGEN--\":447:453   */\n      dup2\n        /* \"--CODEGEN--\":425:454   */\n      jump(tag_52)\n    tag_51:\n        /* \"--CODEGEN--\":420:423   */\n      dup5\n        /* \"--CODEGEN--\":416:455   */\n      add\n        /* \"--CODEGEN--\":409:455   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":211:460   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":467:580   */\n    tag_53:\n        /* \"--CODEGEN--\":550:574   */\n      tag_55\n        /* \"--CODEGEN--\":568:573   */\n      dup2\n        /* \"--CODEGEN--\":550:574   */\n      jump(tag_56)\n    tag_55:\n        /* \"--CODEGEN--\":545:548   */\n      dup3\n        /* \"--CODEGEN--\":538:575   */\n      mstore\n        /* \"--CODEGEN--\":532:580   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":587:800   */\n    tag_23:\n      0x00\n        /* \"--CODEGEN--\":705:707   */\n      0x20\n        /* \"--CODEGEN--\":694:703   */\n      dup3\n        /* \"--CODEGEN--\":690:708   */\n      add\n        /* \"--CODEGEN--\":682:708   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":719:790   */\n      tag_58\n        /* \"--CODEGEN--\":787:788   */\n      0x00\n        /* \"--CODEGEN--\":776:785   */\n      dup4\n        /* \"--CODEGEN--\":772:789   */\n      add\n        /* \"--CODEGEN--\":763:769   */\n      dup5\n        /* \"--CODEGEN--\":719:790   */\n      jump(tag_39)\n    tag_58:\n        /* \"--CODEGEN--\":676:800   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":807:1096   */\n    tag_15:\n      0x00\n        /* \"--CODEGEN--\":939:941   */\n      0x20\n        /* \"--CODEGEN--\":928:937   */\n      dup3\n        /* \"--CODEGEN--\":924:942   */\n      add\n        /* \"--CODEGEN--\":916:942   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":989:998   */\n      dup2\n        /* \"--CODEGEN--\":983:987   */\n      dup2\n        /* \"--CODEGEN--\":979:999   */\n      sub\n        /* \"--CODEGEN--\":975:976   */\n      0x00\n        /* \"--CODEGEN--\":964:973   */\n      dup4\n        /* \"--CODEGEN--\":960:977   */\n      add\n        /* \"--CODEGEN--\":953:1000   */\n      mstore\n        /* \"--CODEGEN--\":1014:1086   */\n      tag_60\n        /* \"--CODEGEN--\":1081:1085   */\n      dup2\n        /* \"--CODEGEN--\":1072:1078   */\n      dup5\n        /* \"--CODEGEN--\":1014:1086   */\n      jump(tag_43)\n    tag_60:\n        /* \"--CODEGEN--\":1006:1086   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":910:1096   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1103:1316   */\n    tag_11:\n      0x00\n        /* \"--CODEGEN--\":1221:1223   */\n      0x20\n        /* \"--CODEGEN--\":1210:1219   */\n      dup3\n        /* \"--CODEGEN--\":1206:1224   */\n      add\n        /* \"--CODEGEN--\":1198:1224   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1235:1306   */\n      tag_62\n        /* \"--CODEGEN--\":1303:1304   */\n      0x00\n        /* \"--CODEGEN--\":1292:1301   */\n      dup4\n        /* \"--CODEGEN--\":1288:1305   */\n      add\n        /* \"--CODEGEN--\":1279:1285   */\n      dup5\n        /* \"--CODEGEN--\":1235:1306   */\n      jump(tag_53)\n    tag_62:\n        /* \"--CODEGEN--\":1192:1316   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1323:1647   */\n    tag_19:\n      0x00\n        /* \"--CODEGEN--\":1469:1471   */\n      0x40\n        /* \"--CODEGEN--\":1458:1467   */\n      dup3\n        /* \"--CODEGEN--\":1454:1472   */\n      add\n        /* \"--CODEGEN--\":1446:1472   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1483:1554   */\n      tag_64\n        /* \"--CODEGEN--\":1551:1552   */\n      0x00\n        /* \"--CODEGEN--\":1540:1549   */\n      dup4\n        /* \"--CODEGEN--\":1536:1553   */\n      add\n        /* \"--CODEGEN--\":1527:1533   */\n      dup6\n        /* \"--CODEGEN--\":1483:1554   */\n      jump(tag_53)\n    tag_64:\n        /* \"--CODEGEN--\":1565:1637   */\n      tag_65\n        /* \"--CODEGEN--\":1633:1635   */\n      0x20\n        /* \"--CODEGEN--\":1622:1631   */\n      dup4\n        /* \"--CODEGEN--\":1618:1636   */\n      add\n        /* \"--CODEGEN--\":1609:1615   */\n      dup5\n        /* \"--CODEGEN--\":1565:1637   */\n      jump(tag_53)\n    tag_65:\n        /* \"--CODEGEN--\":1440:1647   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1654:1771   */\n    tag_46:\n      0x00\n        /* \"--CODEGEN--\":1743:1748   */\n      dup2\n        /* \"--CODEGEN--\":1737:1749   */\n      mload\n        /* \"--CODEGEN--\":1727:1749   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1708:1771   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":1779:1941   */\n    tag_48:\n      0x00\n        /* \"--CODEGEN--\":1893:1899   */\n      dup3\n        /* \"--CODEGEN--\":1888:1891   */\n      dup3\n        /* \"--CODEGEN--\":1881:1900   */\n      mstore\n        /* \"--CODEGEN--\":1930:1934   */\n      0x20\n        /* \"--CODEGEN--\":1925:1928   */\n      dup3\n        /* \"--CODEGEN--\":1921:1935   */\n      add\n        /* \"--CODEGEN--\":1906:1935   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1874:1941   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1949:2021   */\n    tag_42:\n      0x00\n        /* \"--CODEGEN--\":2011:2016   */\n      dup2\n        /* \"--CODEGEN--\":2000:2016   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1994:2021   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":2028:2100   */\n    tag_56:\n      0x00\n        /* \"--CODEGEN--\":2090:2095   */\n      dup2\n        /* \"--CODEGEN--\":2079:2095   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":2073:2100   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":2108:2376   */\n    tag_50:\n        /* \"--CODEGEN--\":2173:2174   */\n      0x00\n        /* \"--CODEGEN--\":2180:2281   */\n    tag_71:\n        /* \"--CODEGEN--\":2194:2200   */\n      dup4\n        /* \"--CODEGEN--\":2191:2192   */\n      dup2\n        /* \"--CODEGEN--\":2188:2201   */\n      lt\n        /* \"--CODEGEN--\":2180:2281   */\n      iszero\n      tag_73\n      jumpi\n        /* \"--CODEGEN--\":2270:2271   */\n      dup1\n        /* \"--CODEGEN--\":2265:2268   */\n      dup3\n        /* \"--CODEGEN--\":2261:2272   */\n      add\n        /* \"--CODEGEN--\":2255:2273   */\n      mload\n        /* \"--CODEGEN--\":2251:2252   */\n      dup2\n        /* \"--CODEGEN--\":2246:2249   */\n      dup5\n        /* \"--CODEGEN--\":2242:2253   */\n      add\n        /* \"--CODEGEN--\":2235:2274   */\n      mstore\n        /* \"--CODEGEN--\":2216:2218   */\n      0x20\n        /* \"--CODEGEN--\":2213:2214   */\n      dup2\n        /* \"--CODEGEN--\":2209:2219   */\n      add\n        /* \"--CODEGEN--\":2204:2219   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":2180:2281   */\n      jump(tag_71)\n    tag_73:\n        /* \"--CODEGEN--\":2296:2302   */\n      dup4\n        /* \"--CODEGEN--\":2293:2294   */\n      dup2\n        /* \"--CODEGEN--\":2290:2303   */\n      gt\n        /* \"--CODEGEN--\":2287:2289   */\n      iszero\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":2361:2362   */\n      0x00\n        /* \"--CODEGEN--\":2352:2358   */\n      dup5\n        /* \"--CODEGEN--\":2347:2350   */\n      dup5\n        /* \"--CODEGEN--\":2343:2359   */\n      add\n        /* \"--CODEGEN--\":2336:2363   */\n      mstore\n        /* \"--CODEGEN--\":2287:2289   */\n    tag_74:\n        /* \"--CODEGEN--\":2157:2376   */\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":2384:2481   */\n    tag_52:\n      0x00\n        /* \"--CODEGEN--\":2472:2474   */\n      0x1f\n        /* \"--CODEGEN--\":2468:2475   */\n      not\n        /* \"--CODEGEN--\":2463:2465   */\n      0x1f\n        /* \"--CODEGEN--\":2456:2461   */\n      dup4\n        /* \"--CODEGEN--\":2452:2466   */\n      add\n        /* \"--CODEGEN--\":2448:2476   */\n      and\n        /* \"--CODEGEN--\":2438:2476   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":2432:2481   */\n      swap2\n      swap1\n      pop\n      jump\n\n    auxdata: 0xa2646970667358221220dcd22b3fe76d481e8b450fb0ee109b33af8ddb3cb8827fe96346aceff81f7acb64736f6c63430006040033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526040518060600160405280602e815260200161061c602e9139600090805190602001906100329291906100cf565b506040518060600160405280602a815260200161064a602a9139600190805190602001906100619291906100cf565b507f4c45484f4e47564f776a6e66766a3377656838764b4a0000000000000000000060025534801561009257600080fd5b5060405161067438038061067483398181016040528101906100b49190610189565b816003600001819055508060036001018190555050506101e6565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061011057805160ff191683800117855561013e565b8280016001018555821561013e579182015b8281111561013d578251825591602001919060010190610122565b5b50905061014b919061014f565b5090565b61017191905b8082111561016d576000816000905550600101610155565b5090565b90565b600081519050610183816101cf565b92915050565b6000806040838503121561019c57600080fd5b60006101aa85828601610174565b92505060206101bb85828601610174565b9150509250929050565b6000819050919050565b6101d8816101c5565b81146101e357600080fd5b50565b610427806101f56000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633bc5de301461005c5780639ffd85c41461007a578063a699fb0314610098578063e3a7fd75146100b7578063fc26b0ab146100d5575b600080fd5b6100646100f3565b6040516100719190610339565b60405180910390f35b610082610123565b60405161008f9190610317565b60405180910390f35b6100a06101c1565b6040516100ae929190610354565b60405180910390f35b6100bf6101d3565b6040516100cc91906102fc565b60405180910390f35b6100dd6101d9565b6040516100ea9190610317565b60405180910390f35b600061011e600360405180604001604052908160008201548152602001600182015481525050610277565b905090565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101b95780601f1061018e576101008083540402835291602001916101b9565b820191906000526020600020905b81548152906001019060200180831161019c57829003601f168201915b505050505081565b60038060000154908060010154905082565b60025481565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561026f5780601f106102445761010080835404028352916020019161026f565b820191906000526020600020905b81548152906001019060200180831161025257829003601f168201915b505050505081565b6000602182600001511461028a57600080fd5b60008060018460200151019050805191508192505050919050565b6102ae81610399565b82525050565b60006102bf8261037d565b6102c98185610388565b93506102d98185602086016103ad565b6102e2816103e0565b840191505092915050565b6102f6816103a3565b82525050565b600060208201905061031160008301846102a5565b92915050565b6000602082019050818103600083015261033181846102b4565b905092915050565b600060208201905061034e60008301846102ed565b92915050565b600060408201905061036960008301856102ed565b61037660208301846102ed565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b6000819050919050565b60005b838110156103cb5780820151818401526020810190506103b0565b838111156103da576000848401525b50505050565b6000601f19601f830116905091905056fea2646970667358221220dcd22b3fe76d481e8b450fb0ee109b33af8ddb3cb8827fe96346aceff81f7acb64736f6c634300060400334e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f7364664e417364667364664c4548484a5347445348444a53484a53484a534844534a44484a4f4e47564f",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x61C PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x32 SWAP3 SWAP2 SWAP1 PUSH2 0xCF JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x64A PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x61 SWAP3 SWAP2 SWAP1 PUSH2 0xCF JUMP JUMPDEST POP PUSH32 0x4C45484F4E47564F776A6E66766A3377656838764B4A00000000000000000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x674 CODESIZE SUB DUP1 PUSH2 0x674 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x189 JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1E6 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x110 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x13E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x13E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x13D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x122 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x14F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x171 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x155 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x183 DUP2 PUSH2 0x1CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1AA DUP6 DUP3 DUP7 ADD PUSH2 0x174 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BB DUP6 DUP3 DUP7 ADD PUSH2 0x174 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D8 DUP2 PUSH2 0x1C5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x427 DUP1 PUSH2 0x1F5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3BC5DE30 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x9FFD85C4 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xA699FB03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0xE3A7FD75 EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0xFC26B0AB EQ PUSH2 0xD5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0x123 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAE SWAP3 SWAP2 SWAP1 PUSH2 0x354 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBF PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCC SWAP2 SWAP1 PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDD PUSH2 0x1D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP2 SWAP1 PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x11E PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x277 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x26F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x244 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x26F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x252 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x21 DUP3 PUSH1 0x0 ADD MLOAD EQ PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP5 PUSH1 0x20 ADD MLOAD ADD SWAP1 POP DUP1 MLOAD SWAP2 POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AE DUP2 PUSH2 0x399 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BF DUP3 PUSH2 0x37D JUMP JUMPDEST PUSH2 0x2C9 DUP2 DUP6 PUSH2 0x388 JUMP JUMPDEST SWAP4 POP PUSH2 0x2D9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3AD JUMP JUMPDEST PUSH2 0x2E2 DUP2 PUSH2 0x3E0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F6 DUP2 PUSH2 0x3A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x311 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x331 DUP2 DUP5 PUSH2 0x2B4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x369 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2ED JUMP JUMPDEST PUSH2 0x376 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2ED JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3CB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3B0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3DA JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xD2 0x2B EXTCODEHASH 0xE7 PUSH14 0x481E8B450FB0EE109B33AF8DDB3C 0xB8 DUP3 PUSH32 0xE96346ACEFF81F7ACB64736F6C634300060400334E414C4548484A5347445344 SELFBALANCE 0x48 0x4A MSTORE8 DIFFICULTY 0x48 MSTORE8 SSTORE 0x48 DIFFICULTY 0x4A MSTORE8 0x48 DIFFICULTY 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 DIFFICULTY MSTORE8 0x4A DIFFICULTY 0x48 0x4A 0x4F 0x4E SELFBALANCE JUMP 0x4F PUSH20 0x64664E417364667364664C4548484A5347445348 DIFFICULTY 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 DIFFICULTY MSTORE8 0x4A DIFFICULTY 0x48 0x4A 0x4F 0x4E SELFBALANCE JUMP 0x4F ",
							"sourceMap": "81:5581:0:-:0;;;107:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;187:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;263:47;;;964:128;5:9:-1;2:2;;;27:1;24;17:12;2:2;964:128:0;;;;;;;;;;;;;;;;;;;;;;;;1037:4;1023:7;:11;;:18;;;;1073:7;1056;:14;;:24;;;;964:128;;81:5581;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;146:399;;;278:2;266:9;257:7;253:23;249:32;246:2;;;294:1;291;284:12;246:2;329:1;346:64;402:7;393:6;382:9;378:22;346:64;;;336:74;;308:108;447:2;465:64;521:7;512:6;501:9;497:22;465:64;;;455:74;;426:109;240:305;;;;;;552:72;;614:5;603:16;;597:27;;;;631:117;700:24;718:5;700:24;;;693:5;690:35;680:2;;739:1;736;729:12;680:2;674:74;;81:5581:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80633bc5de301461005c5780639ffd85c41461007a578063a699fb0314610098578063e3a7fd75146100b7578063fc26b0ab146100d5575b600080fd5b6100646100f3565b6040516100719190610339565b60405180910390f35b610082610123565b60405161008f9190610317565b60405180910390f35b6100a06101c1565b6040516100ae929190610354565b60405180910390f35b6100bf6101d3565b6040516100cc91906102fc565b60405180910390f35b6100dd6101d9565b6040516100ea9190610317565b60405180910390f35b600061011e600360405180604001604052908160008201548152602001600182015481525050610277565b905090565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101b95780601f1061018e576101008083540402835291602001916101b9565b820191906000526020600020905b81548152906001019060200180831161019c57829003601f168201915b505050505081565b60038060000154908060010154905082565b60025481565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561026f5780601f106102445761010080835404028352916020019161026f565b820191906000526020600020905b81548152906001019060200180831161025257829003601f168201915b505050505081565b6000602182600001511461028a57600080fd5b60008060018460200151019050805191508192505050919050565b6102ae81610399565b82525050565b60006102bf8261037d565b6102c98185610388565b93506102d98185602086016103ad565b6102e2816103e0565b840191505092915050565b6102f6816103a3565b82525050565b600060208201905061031160008301846102a5565b92915050565b6000602082019050818103600083015261033181846102b4565b905092915050565b600060208201905061034e60008301846102ed565b92915050565b600060408201905061036960008301856102ed565b61037660208301846102ed565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b6000819050919050565b60005b838110156103cb5780820151818401526020810190506103b0565b838111156103da576000848401525b50505050565b6000601f19601f830116905091905056fea2646970667358221220dcd22b3fe76d481e8b450fb0ee109b33af8ddb3cb8827fe96346aceff81f7acb64736f6c63430006040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3BC5DE30 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x9FFD85C4 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xA699FB03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0xE3A7FD75 EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0xFC26B0AB EQ PUSH2 0xD5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0x123 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAE SWAP3 SWAP2 SWAP1 PUSH2 0x354 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBF PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCC SWAP2 SWAP1 PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDD PUSH2 0x1D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP2 SWAP1 PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x11E PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x277 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x26F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x244 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x26F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x252 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x21 DUP3 PUSH1 0x0 ADD MLOAD EQ PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP5 PUSH1 0x20 ADD MLOAD ADD SWAP1 POP DUP1 MLOAD SWAP2 POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AE DUP2 PUSH2 0x399 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BF DUP3 PUSH2 0x37D JUMP JUMPDEST PUSH2 0x2C9 DUP2 DUP6 PUSH2 0x388 JUMP JUMPDEST SWAP4 POP PUSH2 0x2D9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3AD JUMP JUMPDEST PUSH2 0x2E2 DUP2 PUSH2 0x3E0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F6 DUP2 PUSH2 0x3A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x311 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x331 DUP2 DUP5 PUSH2 0x2B4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x369 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2ED JUMP JUMPDEST PUSH2 0x376 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2ED JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3CB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3B0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3DA JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xD2 0x2B EXTCODEHASH 0xE7 PUSH14 0x481E8B450FB0EE109B33AF8DDB3C 0xB8 DUP3 PUSH32 0xE96346ACEFF81F7ACB64736F6C63430006040033000000000000000000000000 ",
							"sourceMap": "81:5581:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;81:5581:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;1114:100:0;;;:::i;:::-;;;;;;;;;;;;;;;;107:69;;;:::i;:::-;;;;;;;;;;;;;;;;929:22;;;:::i;:::-;;;;;;;;;;;;;;;;;263:47;;;:::i;:::-;;;;;;;;;;;;;;;;187:65;;;:::i;:::-;;;;;;;;;;;;;;;;1114:100;1153:4;1181:21;1194:7;1181:21;;;;;;;;;;;;;;;;;;;;;;;;;:12;:21::i;:::-;1174:28;;1114:100;:::o;107:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;929:22::-;;;;;;;;;;;;;;:::o;263:47::-;;;;:::o;187:65::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1235:336::-;1301:4;1374:2;1362:4;:8;;;:14;1354:23;;12:1:-1;9;2:12;1354:23:0;1394:11;1420;1448:1;1434:4;:11;;;:15;1420:29;;1508:6;1502:13;1492:23;;1553:6;1546:13;;;;1235:336;;;:::o;5:113:-1:-;88:24;106:5;88:24;;;83:3;76:37;70:48;;;125:335;;231:34;259:5;231:34;;;277:70;340:6;335:3;277:70;;;270:77;;352:52;397:6;392:3;385:4;378:5;374:16;352:52;;;425:29;447:6;425:29;;;420:3;416:39;409:46;;211:249;;;;;;467:113;550:24;568:5;550:24;;;545:3;538:37;532:48;;;587:213;;705:2;694:9;690:18;682:26;;719:71;787:1;776:9;772:17;763:6;719:71;;;676:124;;;;;807:289;;939:2;928:9;924:18;916:26;;989:9;983:4;979:20;975:1;964:9;960:17;953:47;1014:72;1081:4;1072:6;1014:72;;;1006:80;;910:186;;;;;1103:213;;1221:2;1210:9;1206:18;1198:26;;1235:71;1303:1;1292:9;1288:17;1279:6;1235:71;;;1192:124;;;;;1323:324;;1469:2;1458:9;1454:18;1446:26;;1483:71;1551:1;1540:9;1536:17;1527:6;1483:71;;;1565:72;1633:2;1622:9;1618:18;1609:6;1565:72;;;1440:207;;;;;;1654:117;;1743:5;1737:12;1727:22;;1708:63;;;;1779:162;;1893:6;1888:3;1881:19;1930:4;1925:3;1921:14;1906:29;;1874:67;;;;;1949:72;;2011:5;2000:16;;1994:27;;;;2028:72;;2090:5;2079:16;;2073:27;;;;2108:268;2173:1;2180:101;2194:6;2191:1;2188:13;2180:101;;;2270:1;2265:3;2261:11;2255:18;2251:1;2246:3;2242:11;2235:39;2216:2;2213:1;2209:10;2204:15;;2180:101;;;2296:6;2293:1;2290:13;2287:2;;;2361:1;2352:6;2347:3;2343:16;2336:27;2287:2;2157:219;;;;;2384:97;;2472:2;2468:7;2463:2;2456:5;2452:14;2448:28;2438:38;;2432:49;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "212600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"data1()": "infinite",
								"data2()": "1173",
								"data3()": "infinite",
								"getData()": "infinite",
								"rlpItem()": "infinite"
							},
							"internal": {
								"_itemLength(uint256)": "infinite",
								"_payloadOffset(uint256)": "infinite",
								"copy(uint256,uint256,uint256)": "infinite",
								"numItems(struct demo2.RLPItem memory)": "infinite",
								"toBytes(struct demo2.RLPItem memory)": "infinite",
								"toUintStrict(struct demo2.RLPItem memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "2E"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH data",
									"source": 0,
									"value": "4887836E294A2761413359597244D307BBE3F94827F6160D9E1A399E00E2D1BE"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "2E"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "2A"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH data",
									"source": 0,
									"value": "C359735A342ECE061E65AB7390D246D1E53BA5F24EEA70D6201F1D4A7B2F3475"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "2A"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 263,
									"end": 310,
									"name": "PUSH",
									"source": 0,
									"value": "4C45484F4E47564F776A6E66766A3377656838764B4A00000000000000000000"
								},
								{
									"begin": 263,
									"end": 310,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 263,
									"end": 310,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1037,
									"end": 1041,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1030,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1023,
									"end": 1034,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1023,
									"end": 1034,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1041,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1041,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1041,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1041,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1073,
									"end": 1080,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1056,
									"end": 1063,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1056,
									"end": 1070,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1056,
									"end": 1070,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1056,
									"end": 1080,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1056,
									"end": 1080,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1056,
									"end": 1080,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1056,
									"end": 1080,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 964,
									"end": 1092,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 5,
									"end": 139,
									"name": "tag",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 5,
									"end": 139,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 5,
									"end": 139,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 89,
									"end": 95,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 83,
									"end": 96,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 74,
									"end": 96,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 74,
									"end": 96,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 101,
									"end": 134,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "22"
								},
								{
									"begin": 128,
									"end": 133,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 101,
									"end": 134,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "23"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 101,
									"end": 134,
									"name": "tag",
									"source": -1,
									"value": "22"
								},
								{
									"begin": 101,
									"end": 134,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 68,
									"end": 139,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 68,
									"end": 139,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 68,
									"end": 139,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 68,
									"end": 139,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 68,
									"end": 139,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 545,
									"name": "tag",
									"source": -1,
									"value": "6"
								},
								{
									"begin": 146,
									"end": 545,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 146,
									"end": 545,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 545,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 278,
									"end": 280,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 266,
									"end": 275,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 257,
									"end": 264,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 253,
									"end": 276,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 249,
									"end": 281,
									"name": "SLT",
									"source": -1
								},
								{
									"begin": 246,
									"end": 248,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 246,
									"end": 248,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "25"
								},
								{
									"begin": 246,
									"end": 248,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 294,
									"end": 295,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 292,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 284,
									"end": 296,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 246,
									"end": 248,
									"name": "tag",
									"source": -1,
									"value": "25"
								},
								{
									"begin": 246,
									"end": 248,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 329,
									"end": 330,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 346,
									"end": 410,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "26"
								},
								{
									"begin": 402,
									"end": 409,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 393,
									"end": 399,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 382,
									"end": 391,
									"name": "DUP7",
									"source": -1
								},
								{
									"begin": 378,
									"end": 400,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 346,
									"end": 410,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 346,
									"end": 410,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 346,
									"end": 410,
									"name": "tag",
									"source": -1,
									"value": "26"
								},
								{
									"begin": 346,
									"end": 410,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 336,
									"end": 410,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 336,
									"end": 410,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 308,
									"end": 416,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 447,
									"end": 449,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 465,
									"end": 529,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "27"
								},
								{
									"begin": 521,
									"end": 528,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 512,
									"end": 518,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 501,
									"end": 510,
									"name": "DUP7",
									"source": -1
								},
								{
									"begin": 497,
									"end": 519,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 465,
									"end": 529,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 465,
									"end": 529,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 465,
									"end": 529,
									"name": "tag",
									"source": -1,
									"value": "27"
								},
								{
									"begin": 465,
									"end": 529,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 455,
									"end": 529,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 455,
									"end": 529,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 426,
									"end": 535,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 240,
									"end": 545,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 240,
									"end": 545,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 240,
									"end": 545,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 240,
									"end": 545,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 240,
									"end": 545,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 240,
									"end": 545,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 552,
									"end": 624,
									"name": "tag",
									"source": -1,
									"value": "28"
								},
								{
									"begin": 552,
									"end": 624,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 552,
									"end": 624,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 614,
									"end": 619,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 603,
									"end": 619,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 603,
									"end": 619,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 597,
									"end": 624,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 597,
									"end": 624,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 597,
									"end": 624,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 597,
									"end": 624,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 631,
									"end": 748,
									"name": "tag",
									"source": -1,
									"value": "23"
								},
								{
									"begin": 631,
									"end": 748,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 700,
									"end": 724,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "31"
								},
								{
									"begin": 718,
									"end": 723,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 700,
									"end": 724,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "28"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 700,
									"end": 724,
									"name": "tag",
									"source": -1,
									"value": "31"
								},
								{
									"begin": 700,
									"end": 724,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 693,
									"end": 698,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 690,
									"end": 725,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 680,
									"end": 682,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "32"
								},
								{
									"begin": 680,
									"end": 682,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 739,
									"end": 740,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 737,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 729,
									"end": 741,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 680,
									"end": 682,
									"name": "tag",
									"source": -1,
									"value": "32"
								},
								{
									"begin": 680,
									"end": 682,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 674,
									"end": 748,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 674,
									"end": 748,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 5662,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dcd22b3fe76d481e8b450fb0ee109b33af8ddb3cb8827fe96346aceff81f7acb64736f6c63430006040033",
									".code": [
										{
											"begin": 81,
											"end": 5662,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "PUSH",
											"source": 0,
											"value": "3BC5DE30"
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "PUSH",
											"source": 0,
											"value": "9FFD85C4"
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "PUSH",
											"source": 0,
											"value": "A699FB03"
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "PUSH",
											"source": 0,
											"value": "E3A7FD75"
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "PUSH",
											"source": 0,
											"value": "FC26B0AB"
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 81,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1153,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1181,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1214,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 929,
											"end": 951,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1235,
											"end": 1571,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1235,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1376,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1362,
											"end": 1366,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1420,
											"end": 1431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1434,
											"end": 1438,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1434,
											"end": 1445,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1445,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1508,
											"end": 1514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1515,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1492,
											"end": 1515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1235,
											"end": 1571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1235,
											"end": 1571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1235,
											"end": 1571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1235,
											"end": 1571,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5,
											"end": 118,
											"name": "tag",
											"source": -1,
											"value": "39"
										},
										{
											"begin": 5,
											"end": 118,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 88,
											"end": 112,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "41"
										},
										{
											"begin": 106,
											"end": 111,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 88,
											"end": 112,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "42"
										},
										{
											"begin": 88,
											"end": 112,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 112,
											"name": "tag",
											"source": -1,
											"value": "41"
										},
										{
											"begin": 88,
											"end": 112,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 83,
											"end": 86,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 76,
											"end": 113,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 70,
											"end": 118,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 70,
											"end": 118,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 70,
											"end": 118,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 125,
											"end": 460,
											"name": "tag",
											"source": -1,
											"value": "43"
										},
										{
											"begin": 125,
											"end": 460,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 125,
											"end": 460,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 265,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "45"
										},
										{
											"begin": 259,
											"end": 264,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 231,
											"end": 265,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "46"
										},
										{
											"begin": 231,
											"end": 265,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 231,
											"end": 265,
											"name": "tag",
											"source": -1,
											"value": "45"
										},
										{
											"begin": 231,
											"end": 265,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 277,
											"end": 347,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "47"
										},
										{
											"begin": 340,
											"end": 346,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 335,
											"end": 338,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 277,
											"end": 347,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "48"
										},
										{
											"begin": 277,
											"end": 347,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 277,
											"end": 347,
											"name": "tag",
											"source": -1,
											"value": "47"
										},
										{
											"begin": 277,
											"end": 347,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 270,
											"end": 347,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 270,
											"end": 347,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 352,
											"end": 404,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "49"
										},
										{
											"begin": 397,
											"end": 403,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 392,
											"end": 395,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 385,
											"end": 389,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 378,
											"end": 383,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 374,
											"end": 390,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 352,
											"end": 404,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "50"
										},
										{
											"begin": 352,
											"end": 404,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 352,
											"end": 404,
											"name": "tag",
											"source": -1,
											"value": "49"
										},
										{
											"begin": 352,
											"end": 404,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 425,
											"end": 454,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "51"
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 425,
											"end": 454,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "52"
										},
										{
											"begin": 425,
											"end": 454,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 425,
											"end": 454,
											"name": "tag",
											"source": -1,
											"value": "51"
										},
										{
											"begin": 425,
											"end": 454,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 420,
											"end": 423,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 416,
											"end": 455,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 409,
											"end": 455,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 409,
											"end": 455,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 211,
											"end": 460,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 211,
											"end": 460,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 211,
											"end": 460,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 211,
											"end": 460,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 211,
											"end": 460,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 211,
											"end": 460,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 467,
											"end": 580,
											"name": "tag",
											"source": -1,
											"value": "53"
										},
										{
											"begin": 467,
											"end": 580,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 550,
											"end": 574,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "55"
										},
										{
											"begin": 568,
											"end": 573,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 550,
											"end": 574,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "56"
										},
										{
											"begin": 550,
											"end": 574,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 550,
											"end": 574,
											"name": "tag",
											"source": -1,
											"value": "55"
										},
										{
											"begin": 550,
											"end": 574,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 545,
											"end": 548,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 538,
											"end": 575,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 532,
											"end": 580,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 532,
											"end": 580,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 532,
											"end": 580,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 587,
											"end": 800,
											"name": "tag",
											"source": -1,
											"value": "23"
										},
										{
											"begin": 587,
											"end": 800,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 587,
											"end": 800,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 707,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 694,
											"end": 703,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 690,
											"end": 708,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 682,
											"end": 708,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 682,
											"end": 708,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 719,
											"end": 790,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "58"
										},
										{
											"begin": 787,
											"end": 788,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 785,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 772,
											"end": 789,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 763,
											"end": 769,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 719,
											"end": 790,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "39"
										},
										{
											"begin": 719,
											"end": 790,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 719,
											"end": 790,
											"name": "tag",
											"source": -1,
											"value": "58"
										},
										{
											"begin": 719,
											"end": 790,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 676,
											"end": 800,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 676,
											"end": 800,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 676,
											"end": 800,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 676,
											"end": 800,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 676,
											"end": 800,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 807,
											"end": 1096,
											"name": "tag",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 807,
											"end": 1096,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 807,
											"end": 1096,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 941,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 928,
											"end": 937,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 924,
											"end": 942,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 916,
											"end": 942,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 916,
											"end": 942,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 989,
											"end": 998,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 983,
											"end": 987,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 979,
											"end": 999,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 975,
											"end": 976,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 973,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 960,
											"end": 977,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 953,
											"end": 1000,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1014,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 1081,
											"end": 1085,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1014,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "43"
										},
										{
											"begin": 1014,
											"end": 1086,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1014,
											"end": 1086,
											"name": "tag",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 1014,
											"end": 1086,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1006,
											"end": 1086,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1006,
											"end": 1086,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 910,
											"end": 1096,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 910,
											"end": 1096,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 910,
											"end": 1096,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 910,
											"end": 1096,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 910,
											"end": 1096,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1103,
											"end": 1316,
											"name": "tag",
											"source": -1,
											"value": "11"
										},
										{
											"begin": 1103,
											"end": 1316,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1103,
											"end": 1316,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1221,
											"end": 1223,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1219,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1206,
											"end": 1224,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1198,
											"end": 1224,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1198,
											"end": 1224,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "62"
										},
										{
											"begin": 1303,
											"end": 1304,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1301,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1279,
											"end": 1285,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "53"
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "tag",
											"source": -1,
											"value": "62"
										},
										{
											"begin": 1235,
											"end": 1306,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1192,
											"end": 1316,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1192,
											"end": 1316,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1192,
											"end": 1316,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1192,
											"end": 1316,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1192,
											"end": 1316,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1323,
											"end": 1647,
											"name": "tag",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 1323,
											"end": 1647,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1323,
											"end": 1647,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1471,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 1458,
											"end": 1467,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1446,
											"end": 1472,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1446,
											"end": 1472,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1483,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "64"
										},
										{
											"begin": 1551,
											"end": 1552,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1536,
											"end": 1553,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1527,
											"end": 1533,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1483,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "53"
										},
										{
											"begin": 1483,
											"end": 1554,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1483,
											"end": 1554,
											"name": "tag",
											"source": -1,
											"value": "64"
										},
										{
											"begin": 1483,
											"end": 1554,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1565,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "65"
										},
										{
											"begin": 1633,
											"end": 1635,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1622,
											"end": 1631,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1618,
											"end": 1636,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1609,
											"end": 1615,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1565,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "53"
										},
										{
											"begin": 1565,
											"end": 1637,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1565,
											"end": 1637,
											"name": "tag",
											"source": -1,
											"value": "65"
										},
										{
											"begin": 1565,
											"end": 1637,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1440,
											"end": 1647,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 1440,
											"end": 1647,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1440,
											"end": 1647,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1440,
											"end": 1647,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1440,
											"end": 1647,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1440,
											"end": 1647,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "tag",
											"source": -1,
											"value": "46"
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1743,
											"end": 1748,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1737,
											"end": 1749,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 1727,
											"end": 1749,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1727,
											"end": 1749,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1708,
											"end": 1771,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1708,
											"end": 1771,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1708,
											"end": 1771,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1708,
											"end": 1771,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1779,
											"end": 1941,
											"name": "tag",
											"source": -1,
											"value": "48"
										},
										{
											"begin": 1779,
											"end": 1941,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1779,
											"end": 1941,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1899,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1888,
											"end": 1891,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1881,
											"end": 1900,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1930,
											"end": 1934,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1925,
											"end": 1928,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1921,
											"end": 1935,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1906,
											"end": 1935,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1906,
											"end": 1935,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1874,
											"end": 1941,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1874,
											"end": 1941,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1874,
											"end": 1941,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1874,
											"end": 1941,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1874,
											"end": 1941,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2021,
											"name": "tag",
											"source": -1,
											"value": "42"
										},
										{
											"begin": 1949,
											"end": 2021,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2021,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2016,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2000,
											"end": 2016,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2000,
											"end": 2016,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1994,
											"end": 2021,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1994,
											"end": 2021,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1994,
											"end": 2021,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1994,
											"end": 2021,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2100,
											"name": "tag",
											"source": -1,
											"value": "56"
										},
										{
											"begin": 2028,
											"end": 2100,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2100,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2090,
											"end": 2095,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2079,
											"end": 2095,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2079,
											"end": 2095,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2073,
											"end": 2100,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2073,
											"end": 2100,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2073,
											"end": 2100,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2073,
											"end": 2100,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2108,
											"end": 2376,
											"name": "tag",
											"source": -1,
											"value": "50"
										},
										{
											"begin": 2108,
											"end": 2376,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2173,
											"end": 2174,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2281,
											"name": "tag",
											"source": -1,
											"value": "71"
										},
										{
											"begin": 2180,
											"end": 2281,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2194,
											"end": 2200,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2191,
											"end": 2192,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2188,
											"end": 2201,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 2180,
											"end": 2281,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2180,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "73"
										},
										{
											"begin": 2180,
											"end": 2281,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 2270,
											"end": 2271,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2265,
											"end": 2268,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2261,
											"end": 2272,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 2251,
											"end": 2252,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2242,
											"end": 2253,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2235,
											"end": 2274,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2216,
											"end": 2218,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2213,
											"end": 2214,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2209,
											"end": 2219,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2204,
											"end": 2219,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2204,
											"end": 2219,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2180,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "71"
										},
										{
											"begin": 2180,
											"end": 2281,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2180,
											"end": 2281,
											"name": "tag",
											"source": -1,
											"value": "73"
										},
										{
											"begin": 2180,
											"end": 2281,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2293,
											"end": 2294,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2290,
											"end": 2303,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 2287,
											"end": 2289,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2287,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "74"
										},
										{
											"begin": 2287,
											"end": 2289,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 2361,
											"end": 2362,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2347,
											"end": 2350,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2336,
											"end": 2363,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2287,
											"end": 2289,
											"name": "tag",
											"source": -1,
											"value": "74"
										},
										{
											"begin": 2287,
											"end": 2289,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2157,
											"end": 2376,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2157,
											"end": 2376,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2157,
											"end": 2376,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2157,
											"end": 2376,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2157,
											"end": 2376,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2384,
											"end": 2481,
											"name": "tag",
											"source": -1,
											"value": "52"
										},
										{
											"begin": 2384,
											"end": 2481,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2384,
											"end": 2481,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2474,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2463,
											"end": 2465,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 2456,
											"end": 2461,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2452,
											"end": 2466,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2448,
											"end": 2476,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 2438,
											"end": 2476,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2438,
											"end": 2476,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2432,
											"end": 2481,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2432,
											"end": 2481,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2432,
											"end": 2481,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2432,
											"end": 2481,
											"name": "JUMP",
											"source": -1
										}
									]
								},
								"4887836E294A2761413359597244D307BBE3F94827F6160D9E1A399E00E2D1BE": "4e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f",
								"C359735A342ECE061E65AB7390D246D1E53BA5F24EEA70D6201F1D4A7B2F3475": "7364664e417364667364664c4548484a5347445348444a53484a53484a534844534a44484a4f4e47564f"
							}
						},
						"methodIdentifiers": {
							"data1()": "9ffd85c4",
							"data2()": "e3a7fd75",
							"data3()": "fc26b0ab",
							"getData()": "3bc5de30",
							"rlpItem()": "a699fb03"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_len\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_menPtr\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"data1\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data2\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data3\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rlpItem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"memPtr\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/demo2.sol\":\"demo2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/demo2.sol\":{\"keccak256\":\"0x373f3a13fd98aa4a4a72f54f46840c675471d037ee57e8a699ed757b4457a6ac\",\"urls\":[\"bzz-raw://7a91a0b754c2abed058ca688965ab0042f8f036443790d5362b4246a0562031f\",\"dweb:/ipfs/QmUJMqcVH9A3oM4F1ApmheyyiRKefAjvTmixYGDvsdiiQp\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/demo2.sol": {
				"ast": {
					"absolutePath": "contracts/demo2.sol",
					"exportedSymbols": {
						"demo2": [
							387
						]
					},
					"id": 388,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">",
								"0.4",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4:30:0"
						},
						{
							"id": 2,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "40:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 387,
							"linearizedBaseContracts": [
								387
							],
							"name": "demo2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9ffd85c4",
									"id": 5,
									"name": "data1",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 387,
									"src": "107:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 3,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "107:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "128:48:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_4887836e294a2761413359597244d307bbe3f94827f6160d9e1a399e00e2d1be",
											"typeString": "literal_string \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\""
										},
										"value": "NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc26b0ab",
									"id": 8,
									"name": "data3",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 387,
									"src": "187:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 6,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "187:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "7364664e417364667364664c4548484a5347445348444a53484a53484a534844534a44484a4f4e47564f",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:44:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c359735a342ece061e65ab7390d246d1e53ba5f24eea70d6201f1d4a7b2f3475",
											"typeString": "literal_string \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\""
										},
										"value": "sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e3a7fd75",
									"id": 11,
									"name": "data2",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 387,
									"src": "263:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 9,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "263:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4c45484f4e47564f776a6e66766a3377656838764b4a",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "286:24:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_456403c9720da4fa7d7375867b84ba5ad32318599c72d3314f61b294b0c7ff33",
											"typeString": "literal_string \"LEHONGVOwjnfvj3weh8vKJ\""
										},
										"value": "LEHONGVOwjnfvj3weh8vKJ"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 14,
									"name": "STRING_OFFSET",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 387,
									"src": "321:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 12,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "321:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783830",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "352:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "0x80"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 17,
									"name": "LIST_OFFSET",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 387,
									"src": "367:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 15,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "367:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786330",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "396:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "0xc0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 20,
									"name": "STRING_SHORT_START",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 387,
									"src": "411:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 18,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "411:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783830",
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "447:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "0x80"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 23,
									"name": "STRING_LONG_START",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 387,
									"src": "462:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 21,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "462:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786238",
										"id": 22,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "498:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_184_by_1",
											"typeString": "int_const 184"
										},
										"value": "0xb8"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 26,
									"name": "LIST_SHORT_START",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 387,
									"src": "513:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 24,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "513:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786330",
										"id": 25,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "549:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "0xc0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 29,
									"name": "LIST_LONG_START",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 387,
									"src": "564:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 27,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "564:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786638",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "600:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_248_by_1",
											"typeString": "int_const 248"
										},
										"value": "0xf8"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 32,
									"name": "WORD_SIZE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 387,
									"src": "615:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 30,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "615:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3332",
										"id": 31,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "642:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "demo2.RLPItem",
									"id": 37,
									"members": [
										{
											"constant": false,
											"id": 34,
											"name": "len",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 37,
											"src": "695:8:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 33,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "695:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 36,
											"name": "memPtr",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 37,
											"src": "718:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 35,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "718:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "RLPItem",
									"nodeType": "StructDefinition",
									"scope": 387,
									"src": "665:76:0",
									"visibility": "public"
								},
								{
									"canonicalName": "demo2.Iterator",
									"id": 42,
									"members": [
										{
											"constant": false,
											"id": 39,
											"name": "item",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 42,
											"src": "784:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
												"typeString": "struct demo2.RLPItem"
											},
											"typeName": {
												"contractScope": null,
												"id": 38,
												"name": "RLPItem",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 37,
												"src": "784:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
													"typeString": "struct demo2.RLPItem"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 41,
											"name": "nextPtr",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 42,
											"src": "849:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 40,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "849:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Iterator",
									"nodeType": "StructDefinition",
									"scope": 387,
									"src": "753:164:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a699fb03",
									"id": 44,
									"name": "rlpItem",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 387,
									"src": "929:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_RLPItem_$37_storage",
										"typeString": "struct demo2.RLPItem"
									},
									"typeName": {
										"contractScope": null,
										"id": 43,
										"name": "RLPItem",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 37,
										"src": "929:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
											"typeString": "struct demo2.RLPItem"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "1008:84:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 51,
															"name": "rlpItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1023:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_storage",
																"typeString": "struct demo2.RLPItem storage ref"
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "1023:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 54,
														"name": "_len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "1037:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1023:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "1023:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 57,
															"name": "rlpItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1056:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_storage",
																"typeString": "struct demo2.RLPItem storage ref"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "memPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "1056:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 60,
														"name": "_menPtr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "1073:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1056:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "1056:24:0"
											}
										]
									},
									"documentation": null,
									"id": 64,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"name": "_len",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 64,
												"src": "976:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "976:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"name": "_menPtr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 64,
												"src": "987:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "987:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "975:25:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:0:0"
									},
									"scope": 387,
									"src": "964:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "1159:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 70,
															"name": "rlpItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1194:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_storage",
																"typeString": "struct demo2.RLPItem storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_RLPItem_$37_storage",
																"typeString": "struct demo2.RLPItem storage ref"
															}
														],
														"id": 69,
														"name": "toUintStrict",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "1181:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_RLPItem_$37_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct demo2.RLPItem memory) pure returns (uint256)"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1181:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 68,
												"id": 72,
												"nodeType": "Return",
												"src": "1174:28:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "3bc5de30",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1130:2:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "1153:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1153:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1152:6:0"
									},
									"scope": 387,
									"src": "1114:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "1307:264:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 82,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 76,
																	"src": "1362:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 83,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "1362:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3333",
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1374:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33_by_1",
																	"typeString": "int_const 33"
																},
																"value": "33"
															},
															"src": "1362:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 81,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1354:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1354:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "1354:23:0"
											},
											{
												"assignments": [
													89
												],
												"declarations": [
													{
														"constant": false,
														"id": 89,
														"name": "result",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 101,
														"src": "1394:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 88,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1394:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 90,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1394:11:0"
											},
											{
												"assignments": [
													92
												],
												"declarations": [
													{
														"constant": false,
														"id": 92,
														"name": "memPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 101,
														"src": "1420:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 91,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1420:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 97,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 93,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "1434:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 94,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "memPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "1434:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1448:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1434:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1420:29:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1473:57:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1492:23:0",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1508:6:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1502:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1502:13:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1492:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 92,
														"isOffset": false,
														"isSlot": false,
														"src": "1508:6:0",
														"valueSize": 1
													},
													{
														"declaration": 89,
														"isOffset": false,
														"isSlot": false,
														"src": "1492:6:0",
														"valueSize": 1
													}
												],
												"id": 98,
												"nodeType": "InlineAssembly",
												"src": "1464:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 99,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 89,
													"src": "1553:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 100,
												"nodeType": "Return",
												"src": "1546:13:0"
											}
										]
									},
									"documentation": null,
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUintStrict",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 102,
												"src": "1257:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 75,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "1257:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1256:21:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 102,
												"src": "1301:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1301:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1300:6:0"
									},
									"scope": 387,
									"src": "1235:336:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "1668:414:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 110,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "1691:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 111,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "1691:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1702:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1691:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 109,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1683:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1683:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1683:21:0"
											},
											{
												"assignments": [
													117
												],
												"declarations": [
													{
														"constant": false,
														"id": 117,
														"name": "offset",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 152,
														"src": "1721:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 116,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1721:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 122,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 119,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "1750:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																	"typeString": "struct demo2.RLPItem memory"
																}
															},
															"id": 120,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "memPtr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "1750:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 118,
														"name": "_payloadOffset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "1735:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1735:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1721:41:0"
											},
											{
												"assignments": [
													124
												],
												"declarations": [
													{
														"constant": false,
														"id": 124,
														"name": "len",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 152,
														"src": "1777:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 123,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1777:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 129,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 125,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "1788:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "1788:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 127,
														"name": "offset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "1799:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1788:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1777:28:0"
											},
											{
												"assignments": [
													131
												],
												"declarations": [
													{
														"constant": false,
														"id": 131,
														"name": "result",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 152,
														"src": "1835:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 130,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1835:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 136,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 134,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "1867:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1857:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 132,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1861:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1857:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1835:36:0"
											},
											{
												"assignments": [
													138
												],
												"declarations": [
													{
														"constant": false,
														"id": 138,
														"name": "destPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 152,
														"src": "1888:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 137,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1888:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 139,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1888:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1924:62:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1943:28:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1958:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "result",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1954:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1954:17:0"
															},
															"variableNames": [
																{
																	"name": "destPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1943:7:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 138,
														"isOffset": false,
														"isSlot": false,
														"src": "1943:7:0",
														"valueSize": 1
													},
													{
														"declaration": 131,
														"isOffset": false,
														"isSlot": false,
														"src": "1964:6:0",
														"valueSize": 1
													}
												],
												"id": 140,
												"nodeType": "InlineAssembly",
												"src": "1915:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 142,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "2007:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 143,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "memPtr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 36,
																"src": "2007:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"id": 144,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "2021:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2007:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 146,
															"name": "destPtr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "2029:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 147,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "2038:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 141,
														"name": "copy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "2002:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256) pure"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2002:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "2002:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 150,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 131,
													"src": "2064:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 108,
												"id": 151,
												"nodeType": "Return",
												"src": "2057:13:0"
											}
										]
									},
									"documentation": null,
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toBytes",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 153,
												"src": "1610:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 103,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "1610:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1609:21:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 153,
												"src": "1654:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 106,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1654:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1653:14:0"
									},
									"scope": 387,
									"src": "1593:489:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "2171:393:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 160,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "2190:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 161,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "2190:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2202:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2190:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 166,
												"nodeType": "IfStatement",
												"src": "2186:27:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 164,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2212:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 159,
													"id": 165,
													"nodeType": "Return",
													"src": "2205:8:0"
												}
											},
											{
												"assignments": [
													168
												],
												"declarations": [
													{
														"constant": false,
														"id": 168,
														"name": "count",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 207,
														"src": "2228:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 167,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2228:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 170,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2241:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2228:14:0"
											},
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"name": "currPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 207,
														"src": "2257:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 171,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2257:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 173,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "2272:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 174,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "memPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "2272:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 176,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 155,
																	"src": "2301:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																		"typeString": "struct demo2.RLPItem memory"
																	}
																},
																"id": 177,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "memPtr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 36,
																"src": "2301:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 175,
															"name": "_payloadOffset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "2286:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) pure returns (uint256)"
															}
														},
														"id": 178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2286:27:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2272:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2257:56:0"
											},
											{
												"assignments": [
													182
												],
												"declarations": [
													{
														"constant": false,
														"id": 182,
														"name": "endPtr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 207,
														"src": "2328:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 181,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2328:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 188,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 183,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "2342:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 184,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "memPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "2342:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 185,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "2356:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
																"typeString": "struct demo2.RLPItem memory"
															}
														},
														"id": 186,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "2356:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2342:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2328:36:0"
											},
											{
												"body": {
													"id": 203,
													"nodeType": "Block",
													"src": "2404:122:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 192,
																	"name": "currPtr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 172,
																	"src": "2423:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 193,
																		"name": "currPtr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 172,
																		"src": "2433:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 195,
																				"name": "currPtr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 172,
																				"src": "2455:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 194,
																			"name": "_itemLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 286,
																			"src": "2443:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2443:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2433:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2423:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 199,
															"nodeType": "ExpressionStatement",
															"src": "2423:40:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "2503:7:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 200,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "2503:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 202,
															"nodeType": "ExpressionStatement",
															"src": "2503:7:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 189,
														"name": "currPtr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "2386:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "endPtr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "2396:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2386:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 204,
												"nodeType": "WhileStatement",
												"src": "2379:147:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 205,
													"name": "count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 168,
													"src": "2547:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 159,
												"id": 206,
												"nodeType": "Return",
												"src": "2540:12:0"
											}
										]
									},
									"documentation": null,
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "numItems",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"name": "item",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 208,
												"src": "2122:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$37_memory_ptr",
													"typeString": "struct demo2.RLPItem"
												},
												"typeName": {
													"contractScope": null,
													"id": 154,
													"name": "RLPItem",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 37,
													"src": "2122:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$37_storage_ptr",
														"typeString": "struct demo2.RLPItem"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2121:21:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 208,
												"src": "2165:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2165:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2164:6:0"
									},
									"scope": 387,
									"src": "2104:460:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "2638:1552:0",
										"statements": [
											{
												"assignments": [
													216
												],
												"declarations": [
													{
														"constant": false,
														"id": 216,
														"name": "itemLen",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 285,
														"src": "2653:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 215,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2653:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 217,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2653:12:0"
											},
											{
												"assignments": [
													219
												],
												"declarations": [
													{
														"constant": false,
														"id": 219,
														"name": "byte0",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 285,
														"src": "2680:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 218,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2680:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 220,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2680:10:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2714:65:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2733:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2747:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2756:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2750:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2750:13:0"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nodeType": "YulIdentifier",
																	"src": "2742:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2742:22:0"
															},
															"variableNames": [
																{
																	"name": "byte0",
																	"nodeType": "YulIdentifier",
																	"src": "2733:5:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 219,
														"isOffset": false,
														"isSlot": false,
														"src": "2733:5:0",
														"valueSize": 1
													},
													{
														"declaration": 210,
														"isOffset": false,
														"isSlot": false,
														"src": "2756:6:0",
														"valueSize": 1
													}
												],
												"id": 221,
												"nodeType": "InlineAssembly",
												"src": "2705:74:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 222,
														"name": "byte0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "2799:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 223,
														"name": "STRING_SHORT_START",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "2807:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2799:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 229,
															"name": "byte0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "2881:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 230,
															"name": "STRING_LONG_START",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2889:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "2881:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 240,
																"name": "byte0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "2991:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 241,
																"name": "LIST_SHORT_START",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2999:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "2991:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 255,
																	"name": "byte0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "3586:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 256,
																	"name": "LIST_LONG_START",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "3594:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "3586:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 278,
																"nodeType": "Block",
																"src": "3705:443:0",
																"statements": [
																	{
																		"assignments": [
																			268
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 268,
																				"name": "dataLen",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 278,
																				"src": "3724:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 267,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "3724:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 269,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3724:12:0"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "3764:302:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "3787:31:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "byte0",
																								"nodeType": "YulIdentifier",
																								"src": "3806:5:0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3813:4:0",
																								"type": "",
																								"value": "0xf7"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "3802:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3802:16:0"
																					},
																					"variables": [
																						{
																							"name": "byteLen",
																							"nodeType": "YulTypedName",
																							"src": "3791:7:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"nodeType": "YulAssignment",
																					"src": "3840:24:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "memPtr",
																								"nodeType": "YulIdentifier",
																								"src": "3854:6:0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3862:1:0",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3850:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3850:14:0"
																					},
																					"variableNames": [
																						{
																							"name": "memPtr",
																							"nodeType": "YulIdentifier",
																							"src": "3840:6:0"
																						}
																					]
																				},
																				{
																					"nodeType": "YulAssignment",
																					"src": "3888:57:0",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "memPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3909:6:0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3903:5:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3903:13:0"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3922:3:0",
																										"type": "",
																										"value": "256"
																									},
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "3931:2:0",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "byteLen",
																												"nodeType": "YulIdentifier",
																												"src": "3935:7:0"
																											}
																										],
																										"functionName": {
																											"name": "sub",
																											"nodeType": "YulIdentifier",
																											"src": "3927:3:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3927:16:0"
																									}
																								],
																								"functionName": {
																									"name": "exp",
																									"nodeType": "YulIdentifier",
																									"src": "3918:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3918:26:0"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "3899:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3899:46:0"
																					},
																					"variableNames": [
																						{
																							"name": "dataLen",
																							"nodeType": "YulIdentifier",
																							"src": "3888:7:0"
																						}
																					]
																				},
																				{
																					"nodeType": "YulAssignment",
																					"src": "4007:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "dataLen",
																								"nodeType": "YulIdentifier",
																								"src": "4022:7:0"
																							},
																							{
																								"arguments": [
																									{
																										"name": "byteLen",
																										"nodeType": "YulIdentifier",
																										"src": "4035:7:0"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4044:1:0",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4031:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4031:15:0"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4018:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4018:29:0"
																					},
																					"variableNames": [
																						{
																							"name": "itemLen",
																							"nodeType": "YulIdentifier",
																							"src": "4007:7:0"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 219,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3806:5:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 268,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3888:7:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 268,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "4022:7:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 216,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "4007:7:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 210,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3840:6:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 210,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3854:6:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 210,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3909:6:0",
																				"valueSize": 1
																			}
																		],
																		"id": 270,
																		"nodeType": "InlineAssembly",
																		"src": "3755:311:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 274,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 272,
																						"name": "itemLen",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 216,
																						"src": "4092:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 273,
																						"name": "dataLen",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 268,
																						"src": "4103:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "4092:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "6164646974696f6e206f766572666c6f77",
																					"id": 275,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4112:19:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
																						"typeString": "literal_string \"addition overflow\""
																					},
																					"value": "addition overflow"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
																						"typeString": "literal_string \"addition overflow\""
																					}
																				],
																				"id": 271,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-18,
																					-18
																				],
																				"referencedDeclaration": -18,
																				"src": "4084:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4084:48:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 277,
																		"nodeType": "ExpressionStatement",
																		"src": "4084:48:0"
																	}
																]
															},
															"id": 279,
															"nodeType": "IfStatement",
															"src": "3582:566:0",
															"trueBody": {
																"id": 266,
																"nodeType": "Block",
																"src": "3611:73:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 258,
																				"name": "itemLen",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 216,
																				"src": "3630:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 263,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 261,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 259,
																						"name": "byte0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 219,
																						"src": "3640:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 260,
																						"name": "LIST_SHORT_START",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 26,
																						"src": "3648:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "3640:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 262,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3667:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "3640:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3630:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 265,
																		"nodeType": "ExpressionStatement",
																		"src": "3630:38:0"
																	}
																]
															}
														},
														"id": 280,
														"nodeType": "IfStatement",
														"src": "2987:1161:0",
														"trueBody": {
															"id": 254,
															"nodeType": "Block",
															"src": "3017:544:0",
															"statements": [
																{
																	"assignments": [
																		244
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 244,
																			"name": "dataLen",
																			"nodeType": "VariableDeclaration",
																			"overrides": null,
																			"scope": 254,
																			"src": "3036:12:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 243,
																				"name": "uint",
																				"nodeType": "ElementaryTypeName",
																				"src": "3036:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"value": null,
																			"visibility": "internal"
																		}
																	],
																	"id": 245,
																	"initialValue": null,
																	"nodeType": "VariableDeclarationStatement",
																	"src": "3036:12:0"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "3076:403:0",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3099:31:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "byte0",
																							"nodeType": "YulIdentifier",
																							"src": "3118:5:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3125:4:0",
																							"type": "",
																							"value": "0xb7"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "3114:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3114:16:0"
																				},
																				"variables": [
																					{
																						"name": "byteLen",
																						"nodeType": "YulTypedName",
																						"src": "3103:7:0",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "3187:24:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "memPtr",
																							"nodeType": "YulIdentifier",
																							"src": "3201:6:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3209:1:0",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3197:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3197:14:0"
																				},
																				"variableNames": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3187:6:0"
																					}
																				]
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "3308:57:0",
																				"value": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3329:6:0"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "3323:5:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3323:13:0"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3342:3:0",
																									"type": "",
																									"value": "256"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3351:2:0",
																											"type": "",
																											"value": "32"
																										},
																										{
																											"name": "byteLen",
																											"nodeType": "YulIdentifier",
																											"src": "3355:7:0"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nodeType": "YulIdentifier",
																										"src": "3347:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3347:16:0"
																								}
																							],
																							"functionName": {
																								"name": "exp",
																								"nodeType": "YulIdentifier",
																								"src": "3338:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3338:26:0"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "3319:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3319:46:0"
																				},
																				"variableNames": [
																					{
																						"name": "dataLen",
																						"nodeType": "YulIdentifier",
																						"src": "3308:7:0"
																					}
																				]
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "3420:40:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "dataLen",
																							"nodeType": "YulIdentifier",
																							"src": "3435:7:0"
																						},
																						{
																							"arguments": [
																								{
																									"name": "byteLen",
																									"nodeType": "YulIdentifier",
																									"src": "3448:7:0"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3457:1:0",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3444:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3444:15:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3431:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3431:29:0"
																				},
																				"variableNames": [
																					{
																						"name": "itemLen",
																						"nodeType": "YulIdentifier",
																						"src": "3420:7:0"
																					}
																				]
																			}
																		]
																	},
																	"evmVersion": "istanbul",
																	"externalReferences": [
																		{
																			"declaration": 219,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "3118:5:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 244,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "3308:7:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 244,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "3435:7:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 216,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "3420:7:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 210,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "3187:6:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 210,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "3201:6:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 210,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "3329:6:0",
																			"valueSize": 1
																		}
																	],
																	"id": 246,
																	"nodeType": "InlineAssembly",
																	"src": "3067:412:0"
																},
																{
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 250,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 248,
																					"name": "itemLen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 216,
																					"src": "3505:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 249,
																					"name": "dataLen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 244,
																					"src": "3516:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3505:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"hexValue": "6164646974696f6e206f766572666c6f77",
																				"id": 251,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3525:19:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
																					"typeString": "literal_string \"addition overflow\""
																				},
																				"value": "addition overflow"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
																					"typeString": "literal_string \"addition overflow\""
																				}
																			],
																			"id": 247,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				-18,
																				-18
																			],
																			"referencedDeclaration": -18,
																			"src": "3497:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (bool,string memory) pure"
																			}
																		},
																		"id": 252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3497:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 253,
																	"nodeType": "ExpressionStatement",
																	"src": "3497:48:0"
																}
															]
														}
													},
													"id": 281,
													"nodeType": "IfStatement",
													"src": "2877:1271:0",
													"trueBody": {
														"expression": {
															"argumentTypes": null,
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"id": 232,
																"name": "itemLen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "2925:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 233,
																		"name": "byte0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 219,
																		"src": "2935:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 234,
																		"name": "STRING_SHORT_START",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 20,
																		"src": "2943:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "2935:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2964:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2935:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2925:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 239,
														"nodeType": "ExpressionStatement",
														"src": "2925:40:0"
													}
												},
												"id": 282,
												"nodeType": "IfStatement",
												"src": "2795:1353:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 225,
															"name": "itemLen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "2844:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2854:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2844:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 228,
													"nodeType": "ExpressionStatement",
													"src": "2844:11:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 283,
													"name": "itemLen",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 216,
													"src": "4171:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 284,
												"nodeType": "Return",
												"src": "4164:14:0"
											}
										]
									},
									"documentation": null,
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_itemLength",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"name": "memPtr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 286,
												"src": "2597:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2597:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2596:13:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 286,
												"src": "2632:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2632:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2631:6:0"
									},
									"scope": 387,
									"src": "2576:1614:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "4319:538:0",
										"statements": [
											{
												"assignments": [
													294
												],
												"declarations": [
													{
														"constant": false,
														"id": 294,
														"name": "byte0",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 340,
														"src": "4334:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 293,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4334:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 295,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4334:10:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4368:65:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4387:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4401:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4410:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4404:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4404:13:0"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nodeType": "YulIdentifier",
																	"src": "4396:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4396:22:0"
															},
															"variableNames": [
																{
																	"name": "byte0",
																	"nodeType": "YulIdentifier",
																	"src": "4387:5:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 294,
														"isOffset": false,
														"isSlot": false,
														"src": "4387:5:0",
														"valueSize": 1
													},
													{
														"declaration": 288,
														"isOffset": false,
														"isSlot": false,
														"src": "4410:6:0",
														"valueSize": 1
													}
												],
												"id": 296,
												"nodeType": "InlineAssembly",
												"src": "4359:74:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 297,
														"name": "byte0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4453:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 298,
														"name": "STRING_SHORT_START",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "4461:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4453:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 302,
																"name": "byte0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "4530:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 303,
																"name": "STRING_LONG_START",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "4538:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "4530:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 305,
																			"name": "byte0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 294,
																			"src": "4560:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 306,
																			"name": "LIST_SHORT_START",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 26,
																			"src": "4569:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "4560:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 308,
																			"name": "byte0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 294,
																			"src": "4589:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 309,
																			"name": "LIST_LONG_START",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 29,
																			"src": "4597:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "4589:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "4560:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 312,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4559:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "4530:83:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 316,
																"name": "byte0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "4664:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 317,
																"name": "LIST_SHORT_START",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "4672:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "4664:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"expression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 328,
																		"name": "byte0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 294,
																		"src": "4812:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 331,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 329,
																					"name": "LIST_LONG_START",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 29,
																					"src": "4821:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 330,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4839:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "4821:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 332,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4820:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "4812:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4844:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4812:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 292,
															"id": 336,
															"nodeType": "Return",
															"src": "4805:40:0"
														},
														"id": 337,
														"nodeType": "IfStatement",
														"src": "4660:185:0",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 319,
																		"name": "byte0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 294,
																		"src": "4733:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 320,
																					"name": "STRING_LONG_START",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 23,
																					"src": "4742:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 321,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4762:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "4742:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 323,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4741:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "4733:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4767:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4733:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 292,
															"id": 327,
															"nodeType": "Return",
															"src": "4726:42:0"
														}
													},
													"id": 338,
													"nodeType": "IfStatement",
													"src": "4526:319:0",
													"trueBody": {
														"expression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4639:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"functionReturnParameters": 292,
														"id": 315,
														"nodeType": "Return",
														"src": "4632:8:0"
													}
												},
												"id": 339,
												"nodeType": "IfStatement",
												"src": "4449:396:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4505:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 292,
													"id": 301,
													"nodeType": "Return",
													"src": "4498:8:0"
												}
											}
										]
									},
									"documentation": null,
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_payloadOffset",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"name": "memPtr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 341,
												"src": "4278:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4278:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4277:13:0"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 341,
												"src": "4313:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4313:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4312:6:0"
									},
									"scope": 387,
									"src": "4254:603:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "4928:727:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 350,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "4947:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 351,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4954:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4947:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 354,
												"nodeType": "IfStatement",
												"src": "4943:21:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 349,
													"id": 353,
													"nodeType": "Return",
													"src": "4957:7:0"
												}
											},
											{
												"body": {
													"id": 371,
													"nodeType": "Block",
													"src": "5075:182:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "5103:66:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dest",
																					"nodeType": "YulIdentifier",
																					"src": "5133:4:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5145:3:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5139:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5139:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5126:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5126:24:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5126:24:0"
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 345,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5133:4:0",
																	"valueSize": 1
																},
																{
																	"declaration": 343,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5145:3:0",
																	"valueSize": 1
																}
															],
															"id": 362,
															"nodeType": "InlineAssembly",
															"src": "5094:75:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 363,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "5189:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 364,
																	"name": "WORD_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "5196:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "5189:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 366,
															"nodeType": "ExpressionStatement",
															"src": "5189:16:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 367,
																	"name": "dest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "5224:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 368,
																	"name": "WORD_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "5232:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "5224:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 370,
															"nodeType": "ExpressionStatement",
															"src": "5224:17:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 355,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "5039:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 356,
														"name": "WORD_SIZE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "5046:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5039:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 372,
												"initializationExpression": null,
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 358,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "5057:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"argumentTypes": null,
															"id": 359,
															"name": "WORD_SIZE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "5064:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "5057:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 361,
													"nodeType": "ExpressionStatement",
													"src": "5057:16:0"
												},
												"nodeType": "ForStatement",
												"src": "5032:225:0"
											},
											{
												"assignments": [
													374
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"name": "mask",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 385,
														"src": "5358:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 373,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5358:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 383,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "323536",
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5370:3:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "256"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 376,
																		"name": "WORD_SIZE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 32,
																		"src": "5378:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 377,
																		"name": "len",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "5390:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5378:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 379,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5377:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5370:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5397:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5370:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5358:40:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5422:222:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5441:41:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5466:3:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5460:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:10:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "5476:4:0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5472:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5472:9:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5456:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5456:26:0"
															},
															"variables": [
																{
																	"name": "srcpart",
																	"nodeType": "YulTypedName",
																	"src": "5445:7:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5516:38:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dest",
																				"nodeType": "YulIdentifier",
																				"src": "5542:4:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5536:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5536:11:0"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "5549:4:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5532:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5532:22:0"
															},
															"variables": [
																{
																	"name": "destpart",
																	"nodeType": "YulTypedName",
																	"src": "5520:8:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dest",
																		"nodeType": "YulIdentifier",
																		"src": "5601:4:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "destpart",
																				"nodeType": "YulIdentifier",
																				"src": "5610:8:0"
																			},
																			{
																				"name": "srcpart",
																				"nodeType": "YulIdentifier",
																				"src": "5620:7:0"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "5607:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5607:21:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5594:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5594:35:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5594:35:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 345,
														"isOffset": false,
														"isSlot": false,
														"src": "5542:4:0",
														"valueSize": 1
													},
													{
														"declaration": 345,
														"isOffset": false,
														"isSlot": false,
														"src": "5601:4:0",
														"valueSize": 1
													},
													{
														"declaration": 374,
														"isOffset": false,
														"isSlot": false,
														"src": "5476:4:0",
														"valueSize": 1
													},
													{
														"declaration": 374,
														"isOffset": false,
														"isSlot": false,
														"src": "5549:4:0",
														"valueSize": 1
													},
													{
														"declaration": 343,
														"isOffset": false,
														"isSlot": false,
														"src": "5466:3:0",
														"valueSize": 1
													}
												],
												"id": 384,
												"nodeType": "InlineAssembly",
												"src": "5413:231:0"
											}
										]
									},
									"documentation": null,
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "copy",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"name": "src",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 386,
												"src": "4884:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4884:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"name": "dest",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 386,
												"src": "4894:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4894:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"name": "len",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 386,
												"src": "4905:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4905:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4883:31:0"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4928:0:0"
									},
									"scope": 387,
									"src": "4870:785:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 388,
							"src": "81:5581:0"
						}
					],
					"src": "4:5673:0"
				},
				"id": 0
			}
		}
	}
}