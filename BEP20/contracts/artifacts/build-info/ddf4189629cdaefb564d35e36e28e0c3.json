{
	"id": "ddf4189629cdaefb564d35e36e28e0c3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.4",
	"solcLongVersion": "0.6.4+commit.1dca32f3",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/demo2.sol": {
				"content": "    pragma solidity >0.4.0 <0.9.0;\r\n    pragma experimental ABIEncoderV2;\r\n\r\n    contract demo2 {\r\n        bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\";\r\n        bytes public data3 = \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\";\r\n        bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\";\r\n        uint8 constant STRING_OFFSET = 0x80;\r\n        uint8 constant LIST_OFFSET = 0xc0;\r\n        uint8 constant STRING_SHORT_START = 0x80;\r\n        uint8 constant STRING_LONG_START  = 0xb8;\r\n        uint8 constant LIST_SHORT_START   = 0xc0;\r\n        uint8 constant LIST_LONG_START    = 0xf8;\r\n        uint8 constant WORD_SIZE = 32;\r\n        \r\n        function getData(uint memPtr) public view returns(uint) {\r\n            return _payloadOffset(memPtr);\r\n        }\r\n\r\n\r\n\r\n          function _itemLength(uint memPtr) private pure returns (uint) {\r\n            uint itemLen;\r\n            uint byte0;\r\n            assembly {\r\n                byte0 := byte(0, mload(memPtr))\r\n            }\r\n\r\n            if (byte0 < STRING_SHORT_START)\r\n                itemLen = 1;\r\n\r\n            else if (byte0 < STRING_LONG_START)\r\n                itemLen = byte0 - STRING_SHORT_START + 1;\r\n\r\n            else if (byte0 < LIST_SHORT_START) {\r\n                uint dataLen;\r\n                assembly {\r\n                    let byteLen := sub(byte0, 0xb7) // # of bytes the actual length is\r\n                    memPtr := add(memPtr, 1) // skip over the first byte\r\n\r\n                    /* 32 byte word size */\r\n                    dataLen := div(mload(memPtr), exp(256, sub(32, byteLen))) // right shifting to get the len\r\n                    itemLen := add(dataLen, add(byteLen, 1))\r\n                }\r\n                require(itemLen >= dataLen, \"addition overflow\");\r\n            }\r\n\r\n            else if (byte0 < LIST_LONG_START) {\r\n                itemLen = byte0 - LIST_SHORT_START + 1;\r\n            }\r\n\r\n            else {\r\n                uint dataLen;\r\n                assembly {\r\n                    let byteLen := sub(byte0, 0xf7)\r\n                    memPtr := add(memPtr, 1)\r\n\r\n                    dataLen := div(mload(memPtr), exp(256, sub(32, byteLen))) // right shifting to the correct length\r\n                    itemLen := add(dataLen, add(byteLen, 1))\r\n                }\r\n                require(itemLen >= dataLen, \"addition overflow\");\r\n            }\r\n\r\n            return itemLen;\r\n        }\r\n\r\n         // @return number of bytes until the data\r\n        function _payloadOffset(uint memPtr) private pure returns (uint) {\r\n            uint byte0;\r\n            assembly {\r\n                byte0 := byte(0, mload(memPtr))\r\n            }\r\n\r\n            if (byte0 < STRING_SHORT_START)\r\n                return 0;\r\n            else if (byte0 < STRING_LONG_START || (byte0 >= LIST_SHORT_START && byte0 < LIST_LONG_START))\r\n                return 1;\r\n            else if (byte0 < LIST_SHORT_START)  // being explicit\r\n                return byte0 - (STRING_LONG_START - 1) + 1;\r\n            else\r\n                return byte0 - (LIST_LONG_START - 1) + 1;\r\n        } \r\n\r\n        function copy(uint src, uint dest, uint len) private pure {\r\n            if (len == 0) return;\r\n\r\n            // copy as many word sizes as possible\r\n            for (; len >= WORD_SIZE; len -= WORD_SIZE) {\r\n                assembly {\r\n                    mstore(dest, mload(src))\r\n                }\r\n\r\n                src += WORD_SIZE;\r\n                dest += WORD_SIZE;\r\n            }\r\n\r\n            // left over bytes. Mask is used to remove unwanted bytes from the word\r\n            uint mask = 256 ** (WORD_SIZE - len) - 1;\r\n            assembly {\r\n                let srcpart := and(mload(src), not(mask)) // zero out src\r\n                let destpart := and(mload(dest), mask) // retrieve the bytes\r\n                mstore(dest, or(destpart, srcpart))\r\n            }\r\n        }\r\n    } \r\n            "
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/demo2.sol": {
				"demo2": {
					"abi": [
						{
							"inputs": [],
							"name": "data1",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "data2",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "data3",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "memPtr",
									"type": "uint256"
								}
							],
							"name": "getData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/demo2.sol\":81:3881  contract demo2 {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/demo2.sol\":107:176  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x2e\n  dup2\n  mstore\n  0x20\n  add\n  data_4887836e294a2761413359597244d307bbe3f94827f6160d9e1a399e00e2d1be\n  0x2e\n  swap2\n  codecopy\n  0x00\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/demo2.sol\":187:252  bytes public data3 = \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\" */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x2a\n  dup2\n  mstore\n  0x20\n  add\n  data_c359735a342ece061e65ab7390d246d1e53ba5f24eea70d6201f1d4a7b2f3475\n  0x2a\n  swap2\n  codecopy\n  0x01\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_3\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_3:\n  pop\n    /* \"contracts/demo2.sol\":263:310  bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\" */\n  sstore(0x02, 0x4c45484f4e47564f776a6e66766a3377656838764b4a00000000000000000000)\n    /* \"contracts/demo2.sol\":81:3881  contract demo2 {\r... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_4:\n    /* \"contracts/demo2.sol\":81:3881  contract demo2 {\r... */\n  pop\n  jump(tag_5)\ntag_2:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_7\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_6)\ntag_7:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_6\n  jumpi\n  swap2\n  dup3\n  add\ntag_8:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_9\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_8)\ntag_9:\ntag_6:\n  pop\n  swap1\n  pop\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n  swap1\n  jump\t// out\ntag_11:\n  tag_12\n  swap2\n  swap1\ntag_13:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_14\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_13)\ntag_14:\n  pop\n  swap1\n  jump\ntag_12:\n  swap1\n  jump\t// out\ntag_5:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_4887836e294a2761413359597244d307bbe3f94827f6160d9e1a399e00e2d1be 4e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f\ndata_c359735a342ece061e65ab7390d246d1e53ba5f24eea70d6201f1d4a7b2f3475 7364664e417364667364664c4548484a5347445348444a53484a53484a534844534a44484a4f4e47564f\n\nsub_0: assembly {\n        /* \"contracts/demo2.sol\":81:3881  contract demo2 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"contracts/demo2.sol\":81:3881  contract demo2 {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0178fe3f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9ffd85c4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe3a7fd75\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xfc26b0ab\n      eq\n      tag_6\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/demo2.sol\":665:777  function getData(uint memPtr) public view returns(uint) {\r... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      jump(tag_9)\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      jump(tag_12)\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":107:176  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      jump(tag_16)\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":263:310  bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\" */\n    tag_5:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      jump(tag_20)\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":187:252  bytes public data3 = \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_6:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      jump(tag_16)\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo2.sol\":665:777  function getData(uint memPtr) public view returns(uint) {\r... */\n    tag_10:\n        /* \"contracts/demo2.sol\":715:719  uint */\n      0x00\n        /* \"contracts/demo2.sol\":743:765  _payloadOffset(memPtr) */\n      tag_25\n        /* \"contracts/demo2.sol\":758:764  memPtr */\n      dup3\n        /* \"contracts/demo2.sol\":743:757  _payloadOffset */\n      tag_26\n        /* \"contracts/demo2.sol\":743:765  _payloadOffset(memPtr) */\n      jump\t// in\n    tag_25:\n        /* \"contracts/demo2.sol\":736:765  return _payloadOffset(memPtr) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":665:777  function getData(uint memPtr) public view returns(uint) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/demo2.sol\":107:176  bytes public data1 = \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_14:\n      0x00\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_27\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_28\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_27)\n    tag_28:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_29:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_29\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_27:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/demo2.sol\":263:310  bytes32 public data2 = \"LEHONGVOwjnfvj3weh8vKJ\" */\n    tag_18:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/demo2.sol\":187:252  bytes public data3 = \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\" */\n    tag_22:\n      0x01\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_30\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_31\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_30)\n    tag_31:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_32:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_32\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/demo2.sol\":2473:3076  function _payloadOffset(uint memPtr) private pure returns (uint) {\r... */\n    tag_26:\n        /* \"contracts/demo2.sol\":2532:2536  uint */\n      0x00\n        /* \"contracts/demo2.sol\":2553:2563  uint byte0 */\n      dup1\n        /* \"contracts/demo2.sol\":2629:2635  memPtr */\n      dup3\n        /* \"contracts/demo2.sol\":2623:2636  mload(memPtr) */\n      mload\n        /* \"contracts/demo2.sol\":2620:2621  0 */\n      0x00\n        /* \"contracts/demo2.sol\":2615:2637  byte(0, mload(memPtr)) */\n      byte\n        /* \"contracts/demo2.sol\":2606:2637  byte0 := byte(0, mload(memPtr)) */\n      swap1\n      pop\n        /* \"contracts/demo2.sol\":447:451  0x80 */\n      0x80\n        /* \"contracts/demo2.sol\":2672:2698  byte0 < STRING_SHORT_START */\n      0xff\n      and\n        /* \"contracts/demo2.sol\":2672:2677  byte0 */\n      dup2\n        /* \"contracts/demo2.sol\":2672:2698  byte0 < STRING_SHORT_START */\n      lt\n        /* \"contracts/demo2.sol\":2668:3064  if (byte0 < STRING_SHORT_START)\r... */\n      iszero\n      tag_34\n      jumpi\n        /* \"contracts/demo2.sol\":2724:2725  0 */\n      0x00\n        /* \"contracts/demo2.sol\":2717:2725  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_33)\n        /* \"contracts/demo2.sol\":2668:3064  if (byte0 < STRING_SHORT_START)\r... */\n    tag_34:\n        /* \"contracts/demo2.sol\":498:502  0xb8 */\n      0xb8\n        /* \"contracts/demo2.sol\":2749:2774  byte0 < STRING_LONG_START */\n      0xff\n      and\n        /* \"contracts/demo2.sol\":2749:2754  byte0 */\n      dup2\n        /* \"contracts/demo2.sol\":2749:2774  byte0 < STRING_LONG_START */\n      lt\n        /* \"contracts/demo2.sol\":2749:2832  byte0 < STRING_LONG_START || (byte0 >= LIST_SHORT_START && byte0 < LIST_LONG_START) */\n      dup1\n      tag_36\n      jumpi\n      pop\n        /* \"contracts/demo2.sol\":549:553  0xc0 */\n      0xc0\n        /* \"contracts/demo2.sol\":2779:2804  byte0 >= LIST_SHORT_START */\n      0xff\n      and\n        /* \"contracts/demo2.sol\":2779:2784  byte0 */\n      dup2\n        /* \"contracts/demo2.sol\":2779:2804  byte0 >= LIST_SHORT_START */\n      lt\n      iszero\n        /* \"contracts/demo2.sol\":2779:2831  byte0 >= LIST_SHORT_START && byte0 < LIST_LONG_START */\n      dup1\n      iszero\n      tag_37\n      jumpi\n      pop\n        /* \"contracts/demo2.sol\":600:604  0xf8 */\n      0xf8\n        /* \"contracts/demo2.sol\":2808:2831  byte0 < LIST_LONG_START */\n      0xff\n      and\n        /* \"contracts/demo2.sol\":2808:2813  byte0 */\n      dup2\n        /* \"contracts/demo2.sol\":2808:2831  byte0 < LIST_LONG_START */\n      lt\n        /* \"contracts/demo2.sol\":2779:2831  byte0 >= LIST_SHORT_START && byte0 < LIST_LONG_START */\n    tag_37:\n        /* \"contracts/demo2.sol\":2749:2832  byte0 < STRING_LONG_START || (byte0 >= LIST_SHORT_START && byte0 < LIST_LONG_START) */\n    tag_36:\n        /* \"contracts/demo2.sol\":2745:3064  if (byte0 < STRING_LONG_START || (byte0 >= LIST_SHORT_START && byte0 < LIST_LONG_START))\r... */\n      iszero\n      tag_38\n      jumpi\n        /* \"contracts/demo2.sol\":2858:2859  1 */\n      0x01\n        /* \"contracts/demo2.sol\":2851:2859  return 1 */\n      swap2\n      pop\n      pop\n      jump(tag_33)\n        /* \"contracts/demo2.sol\":2745:3064  if (byte0 < STRING_LONG_START || (byte0 >= LIST_SHORT_START && byte0 < LIST_LONG_START))\r... */\n    tag_38:\n        /* \"contracts/demo2.sol\":549:553  0xc0 */\n      0xc0\n        /* \"contracts/demo2.sol\":2883:2907  byte0 < LIST_SHORT_START */\n      0xff\n      and\n        /* \"contracts/demo2.sol\":2883:2888  byte0 */\n      dup2\n        /* \"contracts/demo2.sol\":2883:2907  byte0 < LIST_SHORT_START */\n      lt\n        /* \"contracts/demo2.sol\":2879:3064  if (byte0 < LIST_SHORT_START)  // being explicit\r... */\n      iszero\n      tag_40\n      jumpi\n        /* \"contracts/demo2.sol\":2986:2987  1 */\n      0x01\n        /* \"contracts/demo2.sol\":2981:2982  1 */\n      dup1\n        /* \"contracts/demo2.sol\":498:502  0xb8 */\n      0xb8\n        /* \"contracts/demo2.sol\":2961:2982  STRING_LONG_START - 1 */\n      sub\n        /* \"contracts/demo2.sol\":2952:2983  byte0 - (STRING_LONG_START - 1) */\n      0xff\n      and\n        /* \"contracts/demo2.sol\":2952:2957  byte0 */\n      dup3\n        /* \"contracts/demo2.sol\":2952:2983  byte0 - (STRING_LONG_START - 1) */\n      sub\n        /* \"contracts/demo2.sol\":2952:2987  byte0 - (STRING_LONG_START - 1) + 1 */\n      add\n        /* \"contracts/demo2.sol\":2945:2987  return byte0 - (STRING_LONG_START - 1) + 1 */\n      swap2\n      pop\n      pop\n      jump(tag_33)\n        /* \"contracts/demo2.sol\":2879:3064  if (byte0 < LIST_SHORT_START)  // being explicit\r... */\n    tag_40:\n        /* \"contracts/demo2.sol\":3063:3064  1 */\n      0x01\n        /* \"contracts/demo2.sol\":3058:3059  1 */\n      dup1\n        /* \"contracts/demo2.sol\":600:604  0xf8 */\n      0xf8\n        /* \"contracts/demo2.sol\":3040:3059  LIST_LONG_START - 1 */\n      sub\n        /* \"contracts/demo2.sol\":3031:3060  byte0 - (LIST_LONG_START - 1) */\n      0xff\n      and\n        /* \"contracts/demo2.sol\":3031:3036  byte0 */\n      dup3\n        /* \"contracts/demo2.sol\":3031:3060  byte0 - (LIST_LONG_START - 1) */\n      sub\n        /* \"contracts/demo2.sol\":3031:3064  byte0 - (LIST_LONG_START - 1) + 1 */\n      add\n        /* \"contracts/demo2.sol\":3024:3064  return byte0 - (LIST_LONG_START - 1) + 1 */\n      swap2\n      pop\n      pop\n        /* \"contracts/demo2.sol\":2473:3076  function _payloadOffset(uint memPtr) private pure returns (uint) {\r... */\n    tag_33:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":5:135   */\n    tag_43:\n      0x00\n        /* \"--CODEGEN--\":85:91   */\n      dup2\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":63:92   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":97:130   */\n      tag_45\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      jump(tag_46)\n    tag_45:\n        /* \"--CODEGEN--\":57:135   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":142:383   */\n    tag_9:\n      0x00\n        /* \"--CODEGEN--\":246:248   */\n      0x20\n        /* \"--CODEGEN--\":234:243   */\n      dup3\n        /* \"--CODEGEN--\":225:232   */\n      dup5\n        /* \"--CODEGEN--\":221:244   */\n      sub\n        /* \"--CODEGEN--\":217:249   */\n      slt\n        /* \"--CODEGEN--\":214:216   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":262:263   */\n      0x00\n        /* \"--CODEGEN--\":259:260   */\n      dup1\n        /* \"--CODEGEN--\":252:264   */\n      revert\n        /* \"--CODEGEN--\":214:216   */\n    tag_48:\n        /* \"--CODEGEN--\":297:298   */\n      0x00\n        /* \"--CODEGEN--\":314:367   */\n      tag_49\n        /* \"--CODEGEN--\":359:366   */\n      dup5\n        /* \"--CODEGEN--\":350:356   */\n      dup3\n        /* \"--CODEGEN--\":339:348   */\n      dup6\n        /* \"--CODEGEN--\":335:357   */\n      add\n        /* \"--CODEGEN--\":314:367   */\n      jump(tag_43)\n    tag_49:\n        /* \"--CODEGEN--\":304:367   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":276:373   */\n      pop\n        /* \"--CODEGEN--\":208:383   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":390:503   */\n    tag_50:\n        /* \"--CODEGEN--\":473:497   */\n      tag_52\n        /* \"--CODEGEN--\":491:496   */\n      dup2\n        /* \"--CODEGEN--\":473:497   */\n      jump(tag_53)\n    tag_52:\n        /* \"--CODEGEN--\":468:471   */\n      dup3\n        /* \"--CODEGEN--\":461:498   */\n      mstore\n        /* \"--CODEGEN--\":455:503   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":510:845   */\n    tag_54:\n      0x00\n        /* \"--CODEGEN--\":616:650   */\n      tag_56\n        /* \"--CODEGEN--\":644:649   */\n      dup3\n        /* \"--CODEGEN--\":616:650   */\n      jump(tag_57)\n    tag_56:\n        /* \"--CODEGEN--\":662:732   */\n      tag_58\n        /* \"--CODEGEN--\":725:731   */\n      dup2\n        /* \"--CODEGEN--\":720:723   */\n      dup6\n        /* \"--CODEGEN--\":662:732   */\n      jump(tag_59)\n    tag_58:\n        /* \"--CODEGEN--\":655:732   */\n      swap4\n      pop\n        /* \"--CODEGEN--\":737:789   */\n      tag_60\n        /* \"--CODEGEN--\":782:788   */\n      dup2\n        /* \"--CODEGEN--\":777:780   */\n      dup6\n        /* \"--CODEGEN--\":770:774   */\n      0x20\n        /* \"--CODEGEN--\":763:768   */\n      dup7\n        /* \"--CODEGEN--\":759:775   */\n      add\n        /* \"--CODEGEN--\":737:789   */\n      jump(tag_61)\n    tag_60:\n        /* \"--CODEGEN--\":810:839   */\n      tag_62\n        /* \"--CODEGEN--\":832:838   */\n      dup2\n        /* \"--CODEGEN--\":810:839   */\n      jump(tag_63)\n    tag_62:\n        /* \"--CODEGEN--\":805:808   */\n      dup5\n        /* \"--CODEGEN--\":801:840   */\n      add\n        /* \"--CODEGEN--\":794:840   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":596:845   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":852:965   */\n    tag_64:\n        /* \"--CODEGEN--\":935:959   */\n      tag_66\n        /* \"--CODEGEN--\":953:958   */\n      dup2\n        /* \"--CODEGEN--\":935:959   */\n      jump(tag_67)\n    tag_66:\n        /* \"--CODEGEN--\":930:933   */\n      dup3\n        /* \"--CODEGEN--\":923:960   */\n      mstore\n        /* \"--CODEGEN--\":917:965   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":972:1185   */\n    tag_20:\n      0x00\n        /* \"--CODEGEN--\":1090:1092   */\n      0x20\n        /* \"--CODEGEN--\":1079:1088   */\n      dup3\n        /* \"--CODEGEN--\":1075:1093   */\n      add\n        /* \"--CODEGEN--\":1067:1093   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1104:1175   */\n      tag_69\n        /* \"--CODEGEN--\":1172:1173   */\n      0x00\n        /* \"--CODEGEN--\":1161:1170   */\n      dup4\n        /* \"--CODEGEN--\":1157:1174   */\n      add\n        /* \"--CODEGEN--\":1148:1154   */\n      dup5\n        /* \"--CODEGEN--\":1104:1175   */\n      jump(tag_50)\n    tag_69:\n        /* \"--CODEGEN--\":1061:1185   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1192:1481   */\n    tag_16:\n      0x00\n        /* \"--CODEGEN--\":1324:1326   */\n      0x20\n        /* \"--CODEGEN--\":1313:1322   */\n      dup3\n        /* \"--CODEGEN--\":1309:1327   */\n      add\n        /* \"--CODEGEN--\":1301:1327   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1374:1383   */\n      dup2\n        /* \"--CODEGEN--\":1368:1372   */\n      dup2\n        /* \"--CODEGEN--\":1364:1384   */\n      sub\n        /* \"--CODEGEN--\":1360:1361   */\n      0x00\n        /* \"--CODEGEN--\":1349:1358   */\n      dup4\n        /* \"--CODEGEN--\":1345:1362   */\n      add\n        /* \"--CODEGEN--\":1338:1385   */\n      mstore\n        /* \"--CODEGEN--\":1399:1471   */\n      tag_71\n        /* \"--CODEGEN--\":1466:1470   */\n      dup2\n        /* \"--CODEGEN--\":1457:1463   */\n      dup5\n        /* \"--CODEGEN--\":1399:1471   */\n      jump(tag_54)\n    tag_71:\n        /* \"--CODEGEN--\":1391:1471   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1295:1481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1488:1701   */\n    tag_12:\n      0x00\n        /* \"--CODEGEN--\":1606:1608   */\n      0x20\n        /* \"--CODEGEN--\":1595:1604   */\n      dup3\n        /* \"--CODEGEN--\":1591:1609   */\n      add\n        /* \"--CODEGEN--\":1583:1609   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1620:1691   */\n      tag_73\n        /* \"--CODEGEN--\":1688:1689   */\n      0x00\n        /* \"--CODEGEN--\":1677:1686   */\n      dup4\n        /* \"--CODEGEN--\":1673:1690   */\n      add\n        /* \"--CODEGEN--\":1664:1670   */\n      dup5\n        /* \"--CODEGEN--\":1620:1691   */\n      jump(tag_64)\n    tag_73:\n        /* \"--CODEGEN--\":1577:1701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1708:1825   */\n    tag_57:\n      0x00\n        /* \"--CODEGEN--\":1797:1802   */\n      dup2\n        /* \"--CODEGEN--\":1791:1803   */\n      mload\n        /* \"--CODEGEN--\":1781:1803   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1762:1825   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":1833:1995   */\n    tag_59:\n      0x00\n        /* \"--CODEGEN--\":1947:1953   */\n      dup3\n        /* \"--CODEGEN--\":1942:1945   */\n      dup3\n        /* \"--CODEGEN--\":1935:1954   */\n      mstore\n        /* \"--CODEGEN--\":1984:1988   */\n      0x20\n        /* \"--CODEGEN--\":1979:1982   */\n      dup3\n        /* \"--CODEGEN--\":1975:1989   */\n      add\n        /* \"--CODEGEN--\":1960:1989   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1928:1995   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":2003:2075   */\n    tag_53:\n      0x00\n        /* \"--CODEGEN--\":2065:2070   */\n      dup2\n        /* \"--CODEGEN--\":2054:2070   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":2048:2075   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":2082:2154   */\n    tag_67:\n      0x00\n        /* \"--CODEGEN--\":2144:2149   */\n      dup2\n        /* \"--CODEGEN--\":2133:2149   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":2127:2154   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":2162:2430   */\n    tag_61:\n        /* \"--CODEGEN--\":2227:2228   */\n      0x00\n        /* \"--CODEGEN--\":2234:2335   */\n    tag_79:\n        /* \"--CODEGEN--\":2248:2254   */\n      dup4\n        /* \"--CODEGEN--\":2245:2246   */\n      dup2\n        /* \"--CODEGEN--\":2242:2255   */\n      lt\n        /* \"--CODEGEN--\":2234:2335   */\n      iszero\n      tag_81\n      jumpi\n        /* \"--CODEGEN--\":2324:2325   */\n      dup1\n        /* \"--CODEGEN--\":2319:2322   */\n      dup3\n        /* \"--CODEGEN--\":2315:2326   */\n      add\n        /* \"--CODEGEN--\":2309:2327   */\n      mload\n        /* \"--CODEGEN--\":2305:2306   */\n      dup2\n        /* \"--CODEGEN--\":2300:2303   */\n      dup5\n        /* \"--CODEGEN--\":2296:2307   */\n      add\n        /* \"--CODEGEN--\":2289:2328   */\n      mstore\n        /* \"--CODEGEN--\":2270:2272   */\n      0x20\n        /* \"--CODEGEN--\":2267:2268   */\n      dup2\n        /* \"--CODEGEN--\":2263:2273   */\n      add\n        /* \"--CODEGEN--\":2258:2273   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":2234:2335   */\n      jump(tag_79)\n    tag_81:\n        /* \"--CODEGEN--\":2350:2356   */\n      dup4\n        /* \"--CODEGEN--\":2347:2348   */\n      dup2\n        /* \"--CODEGEN--\":2344:2357   */\n      gt\n        /* \"--CODEGEN--\":2341:2343   */\n      iszero\n      tag_82\n      jumpi\n        /* \"--CODEGEN--\":2415:2416   */\n      0x00\n        /* \"--CODEGEN--\":2406:2412   */\n      dup5\n        /* \"--CODEGEN--\":2401:2404   */\n      dup5\n        /* \"--CODEGEN--\":2397:2413   */\n      add\n        /* \"--CODEGEN--\":2390:2417   */\n      mstore\n        /* \"--CODEGEN--\":2341:2343   */\n    tag_82:\n        /* \"--CODEGEN--\":2211:2430   */\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":2438:2535   */\n    tag_63:\n      0x00\n        /* \"--CODEGEN--\":2526:2528   */\n      0x1f\n        /* \"--CODEGEN--\":2522:2529   */\n      not\n        /* \"--CODEGEN--\":2517:2519   */\n      0x1f\n        /* \"--CODEGEN--\":2510:2515   */\n      dup4\n        /* \"--CODEGEN--\":2506:2520   */\n      add\n        /* \"--CODEGEN--\":2502:2530   */\n      and\n        /* \"--CODEGEN--\":2492:2530   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":2486:2535   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":2543:2660   */\n    tag_46:\n        /* \"--CODEGEN--\":2612:2636   */\n      tag_85\n        /* \"--CODEGEN--\":2630:2635   */\n      dup2\n        /* \"--CODEGEN--\":2612:2636   */\n      jump(tag_67)\n    tag_85:\n        /* \"--CODEGEN--\":2605:2610   */\n      dup2\n        /* \"--CODEGEN--\":2602:2637   */\n      eq\n        /* \"--CODEGEN--\":2592:2594   */\n      tag_86\n      jumpi\n        /* \"--CODEGEN--\":2651:2652   */\n      0x00\n        /* \"--CODEGEN--\":2648:2649   */\n      dup1\n        /* \"--CODEGEN--\":2641:2653   */\n      revert\n        /* \"--CODEGEN--\":2592:2594   */\n    tag_86:\n        /* \"--CODEGEN--\":2586:2660   */\n      pop\n      jump\n\n    auxdata: 0xa2646970667358221220e3702a54a474b68c1d89b01cf388d4a48466ae5e443fcf86867f5eb66764f26364736f6c63430006040033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526040518060600160405280602e81526020016105b2602e913960009080519060200190610032929190610098565b506040518060600160405280602a81526020016105e0602a913960019080519060200190610061929190610098565b507f4c45484f4e47564f776a6e66766a3377656838764b4a0000000000000000000060025534801561009257600080fd5b5061013d565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100d957805160ff1916838001178555610107565b82800160010185558215610107579182015b828111156101065782518255916020019190600101906100eb565b5b5090506101149190610118565b5090565b61013a91905b8082111561013657600081600090555060010161011e565b5090565b90565b6104668061014c6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630178fe3f146100515780639ffd85c414610081578063e3a7fd751461009f578063fc26b0ab146100bd575b600080fd5b61006b600480360381019061006691906102cd565b6100db565b604051610078919061038a565b60405180910390f35b6100896100ed565b6040516100969190610368565b60405180910390f35b6100a761018b565b6040516100b4919061034d565b60405180910390f35b6100c5610191565b6040516100d29190610368565b60405180910390f35b60006100e68261022f565b9050919050565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101835780601f1061015857610100808354040283529160200191610183565b820191906000526020600020905b81548152906001019060200180831161016657829003601f168201915b505050505081565b60025481565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102275780601f106101fc57610100808354040283529160200191610227565b820191906000526020600020905b81548152906001019060200180831161020a57829003601f168201915b505050505081565b600080825160001a9050608060ff1681101561024f5760009150506102b3565b60b860ff16811080610274575060c060ff168110158015610273575060f860ff1681105b5b156102835760019150506102b3565b60c060ff168110156102a35760018060b80360ff168203019150506102b3565b60018060f80360ff168203019150505b919050565b6000813590506102c781610419565b92915050565b6000602082840312156102df57600080fd5b60006102ed848285016102b8565b91505092915050565b6102ff816103c1565b82525050565b6000610310826103a5565b61031a81856103b0565b935061032a8185602086016103d5565b61033381610408565b840191505092915050565b610347816103cb565b82525050565b600060208201905061036260008301846102f6565b92915050565b600060208201905081810360008301526103828184610305565b905092915050565b600060208201905061039f600083018461033e565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b6000819050919050565b60005b838110156103f35780820151818401526020810190506103d8565b83811115610402576000848401525b50505050565b6000601f19601f8301169050919050565b610422816103cb565b811461042d57600080fd5b5056fea2646970667358221220e3702a54a474b68c1d89b01cf388d4a48466ae5e443fcf86867f5eb66764f26364736f6c634300060400334e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f7364664e417364667364664c4548484a5347445348444a53484a53484a534844534a44484a4f4e47564f",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5B2 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x32 SWAP3 SWAP2 SWAP1 PUSH2 0x98 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5E0 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x61 SWAP3 SWAP2 SWAP1 PUSH2 0x98 JUMP JUMPDEST POP PUSH32 0x4C45484F4E47564F776A6E66766A3377656838764B4A00000000000000000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13D JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0xD9 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x107 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x107 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x106 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xEB JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x118 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x13A SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x11E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x466 DUP1 PUSH2 0x14C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x178FE3F EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x9FFD85C4 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xE3A7FD75 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xFC26B0AB EQ PUSH2 0xBD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x2CD JUMP JUMPDEST PUSH2 0xDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0xED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA7 PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0x191 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0xE6 DUP3 PUSH2 0x22F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x183 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x158 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x183 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x166 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x227 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x227 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x80 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0xB8 PUSH1 0xFF AND DUP2 LT DUP1 PUSH2 0x274 JUMPI POP PUSH1 0xC0 PUSH1 0xFF AND DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x273 JUMPI POP PUSH1 0xF8 PUSH1 0xFF AND DUP2 LT JUMPDEST JUMPDEST ISZERO PUSH2 0x283 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0xC0 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x1 DUP1 PUSH1 0xB8 SUB PUSH1 0xFF AND DUP3 SUB ADD SWAP2 POP POP PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xF8 SUB PUSH1 0xFF AND DUP3 SUB ADD SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C7 DUP2 PUSH2 0x419 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2ED DUP5 DUP3 DUP6 ADD PUSH2 0x2B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2FF DUP2 PUSH2 0x3C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x310 DUP3 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x31A DUP2 DUP6 PUSH2 0x3B0 JUMP JUMPDEST SWAP4 POP PUSH2 0x32A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x333 DUP2 PUSH2 0x408 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x347 DUP2 PUSH2 0x3CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x362 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x382 DUP2 DUP5 PUSH2 0x305 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x39F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3D8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x422 DUP2 PUSH2 0x3CB JUMP JUMPDEST DUP2 EQ PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 PUSH17 0x2A54A474B68C1D89B01CF388D4A48466AE 0x5E DIFFICULTY EXTCODEHASH 0xCF DUP7 DUP7 PUSH32 0x5EB66764F26364736F6C634300060400334E414C4548484A534744534447484A MSTORE8 DIFFICULTY 0x48 MSTORE8 SSTORE 0x48 DIFFICULTY 0x4A MSTORE8 0x48 DIFFICULTY 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 DIFFICULTY MSTORE8 0x4A DIFFICULTY 0x48 0x4A 0x4F 0x4E SELFBALANCE JUMP 0x4F PUSH20 0x64664E417364667364664C4548484A5347445348 DIFFICULTY 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 0x4A MSTORE8 0x48 DIFFICULTY MSTORE8 0x4A DIFFICULTY 0x48 0x4A 0x4F 0x4E SELFBALANCE JUMP 0x4F ",
							"sourceMap": "81:3800:0:-:0;;;107:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;187:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;263:47;;;81:3800;5:9:-1;2:2;;;27:1;24;17:12;2:2;81:3800:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80630178fe3f146100515780639ffd85c414610081578063e3a7fd751461009f578063fc26b0ab146100bd575b600080fd5b61006b600480360381019061006691906102cd565b6100db565b604051610078919061038a565b60405180910390f35b6100896100ed565b6040516100969190610368565b60405180910390f35b6100a761018b565b6040516100b4919061034d565b60405180910390f35b6100c5610191565b6040516100d29190610368565b60405180910390f35b60006100e68261022f565b9050919050565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101835780601f1061015857610100808354040283529160200191610183565b820191906000526020600020905b81548152906001019060200180831161016657829003601f168201915b505050505081565b60025481565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102275780601f106101fc57610100808354040283529160200191610227565b820191906000526020600020905b81548152906001019060200180831161020a57829003601f168201915b505050505081565b600080825160001a9050608060ff1681101561024f5760009150506102b3565b60b860ff16811080610274575060c060ff168110158015610273575060f860ff1681105b5b156102835760019150506102b3565b60c060ff168110156102a35760018060b80360ff168203019150506102b3565b60018060f80360ff168203019150505b919050565b6000813590506102c781610419565b92915050565b6000602082840312156102df57600080fd5b60006102ed848285016102b8565b91505092915050565b6102ff816103c1565b82525050565b6000610310826103a5565b61031a81856103b0565b935061032a8185602086016103d5565b61033381610408565b840191505092915050565b610347816103cb565b82525050565b600060208201905061036260008301846102f6565b92915050565b600060208201905081810360008301526103828184610305565b905092915050565b600060208201905061039f600083018461033e565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b6000819050919050565b60005b838110156103f35780820151818401526020810190506103d8565b83811115610402576000848401525b50505050565b6000601f19601f8301169050919050565b610422816103cb565b811461042d57600080fd5b5056fea2646970667358221220e3702a54a474b68c1d89b01cf388d4a48466ae5e443fcf86867f5eb66764f26364736f6c63430006040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x178FE3F EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x9FFD85C4 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xE3A7FD75 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xFC26B0AB EQ PUSH2 0xBD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x2CD JUMP JUMPDEST PUSH2 0xDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0xED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA7 PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0x191 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0xE6 DUP3 PUSH2 0x22F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x183 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x158 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x183 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x166 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x227 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x227 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x80 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0xB8 PUSH1 0xFF AND DUP2 LT DUP1 PUSH2 0x274 JUMPI POP PUSH1 0xC0 PUSH1 0xFF AND DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x273 JUMPI POP PUSH1 0xF8 PUSH1 0xFF AND DUP2 LT JUMPDEST JUMPDEST ISZERO PUSH2 0x283 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0xC0 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x1 DUP1 PUSH1 0xB8 SUB PUSH1 0xFF AND DUP3 SUB ADD SWAP2 POP POP PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xF8 SUB PUSH1 0xFF AND DUP3 SUB ADD SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C7 DUP2 PUSH2 0x419 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2ED DUP5 DUP3 DUP6 ADD PUSH2 0x2B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2FF DUP2 PUSH2 0x3C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x310 DUP3 PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x31A DUP2 DUP6 PUSH2 0x3B0 JUMP JUMPDEST SWAP4 POP PUSH2 0x32A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x333 DUP2 PUSH2 0x408 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x347 DUP2 PUSH2 0x3CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x362 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x382 DUP2 DUP5 PUSH2 0x305 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x39F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3D8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x422 DUP2 PUSH2 0x3CB JUMP JUMPDEST DUP2 EQ PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 PUSH17 0x2A54A474B68C1D89B01CF388D4A48466AE 0x5E DIFFICULTY EXTCODEHASH 0xCF DUP7 DUP7 PUSH32 0x5EB66764F26364736F6C63430006040033000000000000000000000000000000 ",
							"sourceMap": "81:3800:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;81:3800:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;665:112:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;107:69;;;:::i;:::-;;;;;;;;;;;;;;;;263:47;;;:::i;:::-;;;;;;;;;;;;;;;;187:65;;;:::i;:::-;;;;;;;;;;;;;;;;665:112;715:4;743:22;758:6;743:14;:22::i;:::-;736:29;;665:112;;;:::o;107:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;263:47::-;;;;:::o;187:65::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2473:603::-;2532:4;2553:10;2629:6;2623:13;2620:1;2615:22;2606:31;;447:4;2672:26;;:5;:26;2668:396;;;2724:1;2717:8;;;;;2668:396;498:4;2749:25;;:5;:25;:83;;;;549:4;2779:25;;:5;:25;;:52;;;;;600:4;2808:23;;:5;:23;2779:52;2749:83;2745:319;;;2858:1;2851:8;;;;;2745:319;549:4;2883:24;;:5;:24;2879:185;;;2986:1;2981;498:4;2961:21;2952:31;;:5;:31;:35;2945:42;;;;;2879:185;3063:1;3058;600:4;3040:19;3031:29;;:5;:29;:33;3024:40;;;2473:603;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:241;;246:2;234:9;225:7;221:23;217:32;214:2;;;262:1;259;252:12;214:2;297:1;314:53;359:7;350:6;339:9;335:22;314:53;;;304:63;;276:97;208:175;;;;;390:113;473:24;491:5;473:24;;;468:3;461:37;455:48;;;510:335;;616:34;644:5;616:34;;;662:70;725:6;720:3;662:70;;;655:77;;737:52;782:6;777:3;770:4;763:5;759:16;737:52;;;810:29;832:6;810:29;;;805:3;801:39;794:46;;596:249;;;;;;852:113;935:24;953:5;935:24;;;930:3;923:37;917:48;;;972:213;;1090:2;1079:9;1075:18;1067:26;;1104:71;1172:1;1161:9;1157:17;1148:6;1104:71;;;1061:124;;;;;1192:289;;1324:2;1313:9;1309:18;1301:26;;1374:9;1368:4;1364:20;1360:1;1349:9;1345:17;1338:47;1399:72;1466:4;1457:6;1399:72;;;1391:80;;1295:186;;;;;1488:213;;1606:2;1595:9;1591:18;1583:26;;1620:71;1688:1;1677:9;1673:17;1664:6;1620:71;;;1577:124;;;;;1708:117;;1797:5;1791:12;1781:22;;1762:63;;;;1833:162;;1947:6;1942:3;1935:19;1984:4;1979:3;1975:14;1960:29;;1928:67;;;;;2003:72;;2065:5;2054:16;;2048:27;;;;2082:72;;2144:5;2133:16;;2127:27;;;;2162:268;2227:1;2234:101;2248:6;2245:1;2242:13;2234:101;;;2324:1;2319:3;2315:11;2309:18;2305:1;2300:3;2296:11;2289:39;2270:2;2267:1;2263:10;2258:15;;2234:101;;;2350:6;2347:1;2344:13;2341:2;;;2415:1;2406:6;2401:3;2397:16;2390:27;2341:2;2211:219;;;;;2438:97;;2526:2;2522:7;2517:2;2510:5;2506:14;2502:28;2492:38;;2486:49;;;;2543:117;2612:24;2630:5;2612:24;;;2605:5;2602:35;2592:2;;2651:1;2648;2641:12;2592:2;2586:74;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "225200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"data1()": "infinite",
								"data2()": "1151",
								"data3()": "infinite",
								"getData(uint256)": "infinite"
							},
							"internal": {
								"_itemLength(uint256)": "infinite",
								"_payloadOffset(uint256)": "infinite",
								"copy(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "2E"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH data",
									"source": 0,
									"value": "4887836E294A2761413359597244D307BBE3F94827F6160D9E1A399E00E2D1BE"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "2E"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 176,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 107,
									"end": 176,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "2A"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH data",
									"source": 0,
									"value": "C359735A342ECE061E65AB7390D246D1E53BA5F24EEA70D6201F1D4A7B2F3475"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "2A"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 187,
									"end": 252,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 187,
									"end": 252,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 263,
									"end": 310,
									"name": "PUSH",
									"source": 0,
									"value": "4C45484F4E47564F776A6E66766A3377656838764B4A00000000000000000000"
								},
								{
									"begin": 263,
									"end": 310,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 263,
									"end": 310,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 3881,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e3702a54a474b68c1d89b01cf388d4a48466ae5e443fcf86867f5eb66764f26364736f6c63430006040033",
									".code": [
										{
											"begin": 81,
											"end": 3881,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "PUSH",
											"source": 0,
											"value": "178FE3F"
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "PUSH",
											"source": 0,
											"value": "9FFD85C4"
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "PUSH",
											"source": 0,
											"value": "E3A7FD75"
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "PUSH",
											"source": 0,
											"value": "FC26B0AB"
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 81,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 665,
											"end": 777,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 665,
											"end": 777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 665,
											"end": 777,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 665,
											"end": 777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 665,
											"end": 777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 665,
											"end": 777,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 665,
											"end": 777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 665,
											"end": 777,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 665,
											"end": 777,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 665,
											"end": 777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 777,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 665,
											"end": 777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 665,
											"end": 777,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 665,
											"end": 777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 777,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 665,
											"end": 777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 715,
											"end": 719,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 743,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 758,
											"end": 764,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 743,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 743,
											"end": 765,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 765,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 743,
											"end": 765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 736,
											"end": 765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 777,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 107,
											"end": 176,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 263,
											"end": 310,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 310,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 187,
											"end": 252,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2473,
											"end": 3076,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2473,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2636,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2637,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 447,
											"end": 451,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2672,
											"end": 2698,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2672,
											"end": 2698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2677,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2698,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 3064,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2668,
											"end": 3064,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2725,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2717,
											"end": 2725,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 3064,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2668,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 498,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "B8"
										},
										{
											"begin": 2749,
											"end": 2774,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2749,
											"end": 2774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2774,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2749,
											"end": 2832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 553,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 2779,
											"end": 2804,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2779,
											"end": 2804,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2804,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2804,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2831,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2779,
											"end": 2831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 600,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 2808,
											"end": 2831,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2808,
											"end": 2831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2808,
											"end": 2831,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2831,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2779,
											"end": 2831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2832,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2749,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2745,
											"end": 3064,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2745,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2745,
											"end": 3064,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2859,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2851,
											"end": 2859,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2851,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2851,
											"end": 2859,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2745,
											"end": 3064,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2745,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 549,
											"end": 553,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 2883,
											"end": 2907,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2883,
											"end": 2907,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2907,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3064,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 3064,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2986,
											"end": 2987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2981,
											"end": 2982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 498,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "B8"
										},
										{
											"begin": 2961,
											"end": 2982,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2952,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2952,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2952,
											"end": 2957,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2952,
											"end": 2983,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2952,
											"end": 2987,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2945,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2945,
											"end": 2987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3064,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3063,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3058,
											"end": 3059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 600,
											"end": 604,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 3040,
											"end": 3059,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3060,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3031,
											"end": 3060,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3060,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3024,
											"end": 3064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3024,
											"end": 3064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3024,
											"end": 3064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 3076,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2473,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 3076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 3076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 3076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 3076,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5,
											"end": 135,
											"name": "tag",
											"source": -1,
											"value": "43"
										},
										{
											"begin": 5,
											"end": 135,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5,
											"end": 135,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 63,
											"end": 92,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 63,
											"end": 92,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "45"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "46"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "45"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 57,
											"end": 135,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 57,
											"end": 135,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 57,
											"end": 135,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57,
											"end": 135,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57,
											"end": 135,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 142,
											"end": 383,
											"name": "tag",
											"source": -1,
											"value": "9"
										},
										{
											"begin": 142,
											"end": 383,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 142,
											"end": 383,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 248,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 234,
											"end": 243,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 225,
											"end": 232,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 221,
											"end": 244,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 217,
											"end": 249,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 214,
											"end": 216,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 214,
											"end": 216,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "48"
										},
										{
											"begin": 214,
											"end": 216,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 262,
											"end": 263,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 259,
											"end": 260,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 252,
											"end": 264,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 214,
											"end": 216,
											"name": "tag",
											"source": -1,
											"value": "48"
										},
										{
											"begin": 214,
											"end": 216,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 297,
											"end": 298,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 367,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "49"
										},
										{
											"begin": 359,
											"end": 366,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 350,
											"end": 356,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 339,
											"end": 348,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 335,
											"end": 357,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 314,
											"end": 367,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "43"
										},
										{
											"begin": 314,
											"end": 367,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 314,
											"end": 367,
											"name": "tag",
											"source": -1,
											"value": "49"
										},
										{
											"begin": 314,
											"end": 367,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 304,
											"end": 367,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 304,
											"end": 367,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 276,
											"end": 373,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 208,
											"end": 383,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 208,
											"end": 383,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 208,
											"end": 383,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 208,
											"end": 383,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 208,
											"end": 383,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 390,
											"end": 503,
											"name": "tag",
											"source": -1,
											"value": "50"
										},
										{
											"begin": 390,
											"end": 503,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 473,
											"end": 497,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "52"
										},
										{
											"begin": 491,
											"end": 496,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 473,
											"end": 497,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "53"
										},
										{
											"begin": 473,
											"end": 497,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 473,
											"end": 497,
											"name": "tag",
											"source": -1,
											"value": "52"
										},
										{
											"begin": 473,
											"end": 497,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 468,
											"end": 471,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 461,
											"end": 498,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 455,
											"end": 503,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 455,
											"end": 503,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 455,
											"end": 503,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 510,
											"end": 845,
											"name": "tag",
											"source": -1,
											"value": "54"
										},
										{
											"begin": 510,
											"end": 845,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 510,
											"end": 845,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 650,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "56"
										},
										{
											"begin": 644,
											"end": 649,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 616,
											"end": 650,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "57"
										},
										{
											"begin": 616,
											"end": 650,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 616,
											"end": 650,
											"name": "tag",
											"source": -1,
											"value": "56"
										},
										{
											"begin": 616,
											"end": 650,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 662,
											"end": 732,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "58"
										},
										{
											"begin": 725,
											"end": 731,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 720,
											"end": 723,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 662,
											"end": 732,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "59"
										},
										{
											"begin": 662,
											"end": 732,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 662,
											"end": 732,
											"name": "tag",
											"source": -1,
											"value": "58"
										},
										{
											"begin": 662,
											"end": 732,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 655,
											"end": 732,
											"name": "SWAP4",
											"source": -1
										},
										{
											"begin": 655,
											"end": 732,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 737,
											"end": 789,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 788,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 777,
											"end": 780,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 770,
											"end": 774,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 763,
											"end": 768,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 759,
											"end": 775,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 737,
											"end": 789,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "61"
										},
										{
											"begin": 737,
											"end": 789,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 737,
											"end": 789,
											"name": "tag",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 737,
											"end": 789,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 810,
											"end": 839,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "62"
										},
										{
											"begin": 832,
											"end": 838,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 810,
											"end": 839,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "63"
										},
										{
											"begin": 810,
											"end": 839,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 810,
											"end": 839,
											"name": "tag",
											"source": -1,
											"value": "62"
										},
										{
											"begin": 810,
											"end": 839,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 805,
											"end": 808,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 801,
											"end": 840,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 794,
											"end": 840,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 794,
											"end": 840,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 596,
											"end": 845,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 596,
											"end": 845,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 596,
											"end": 845,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 596,
											"end": 845,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 596,
											"end": 845,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 596,
											"end": 845,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 852,
											"end": 965,
											"name": "tag",
											"source": -1,
											"value": "64"
										},
										{
											"begin": 852,
											"end": 965,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 935,
											"end": 959,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "66"
										},
										{
											"begin": 953,
											"end": 958,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 935,
											"end": 959,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "67"
										},
										{
											"begin": 935,
											"end": 959,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 935,
											"end": 959,
											"name": "tag",
											"source": -1,
											"value": "66"
										},
										{
											"begin": 935,
											"end": 959,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 930,
											"end": 933,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 923,
											"end": 960,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 917,
											"end": 965,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 917,
											"end": 965,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 917,
											"end": 965,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 972,
											"end": 1185,
											"name": "tag",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 972,
											"end": 1185,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 972,
											"end": 1185,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1090,
											"end": 1092,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1079,
											"end": 1088,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1093,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1067,
											"end": 1093,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1067,
											"end": 1093,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1104,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "69"
										},
										{
											"begin": 1172,
											"end": 1173,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1157,
											"end": 1174,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1148,
											"end": 1154,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1104,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "50"
										},
										{
											"begin": 1104,
											"end": 1175,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1104,
											"end": 1175,
											"name": "tag",
											"source": -1,
											"value": "69"
										},
										{
											"begin": 1104,
											"end": 1175,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1061,
											"end": 1185,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1061,
											"end": 1185,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1061,
											"end": 1185,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1061,
											"end": 1185,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1061,
											"end": 1185,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1192,
											"end": 1481,
											"name": "tag",
											"source": -1,
											"value": "16"
										},
										{
											"begin": 1192,
											"end": 1481,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1192,
											"end": 1481,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1326,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1313,
											"end": 1322,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1309,
											"end": 1327,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1374,
											"end": 1383,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1368,
											"end": 1372,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1364,
											"end": 1384,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1360,
											"end": 1361,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1358,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1345,
											"end": 1362,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1338,
											"end": 1385,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1399,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "71"
										},
										{
											"begin": 1466,
											"end": 1470,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1457,
											"end": 1463,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1399,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "54"
										},
										{
											"begin": 1399,
											"end": 1471,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1399,
											"end": 1471,
											"name": "tag",
											"source": -1,
											"value": "71"
										},
										{
											"begin": 1399,
											"end": 1471,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1471,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1471,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1295,
											"end": 1481,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1295,
											"end": 1481,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1295,
											"end": 1481,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1295,
											"end": 1481,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1295,
											"end": 1481,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1488,
											"end": 1701,
											"name": "tag",
											"source": -1,
											"value": "12"
										},
										{
											"begin": 1488,
											"end": 1701,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1488,
											"end": 1701,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1608,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1595,
											"end": 1604,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1591,
											"end": 1609,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1583,
											"end": 1609,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1583,
											"end": 1609,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1620,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "73"
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1686,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1673,
											"end": 1690,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1664,
											"end": 1670,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1620,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "64"
										},
										{
											"begin": 1620,
											"end": 1691,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1620,
											"end": 1691,
											"name": "tag",
											"source": -1,
											"value": "73"
										},
										{
											"begin": 1620,
											"end": 1691,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1577,
											"end": 1701,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1577,
											"end": 1701,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1577,
											"end": 1701,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1577,
											"end": 1701,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1577,
											"end": 1701,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1708,
											"end": 1825,
											"name": "tag",
											"source": -1,
											"value": "57"
										},
										{
											"begin": 1708,
											"end": 1825,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1708,
											"end": 1825,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1802,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1791,
											"end": 1803,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 1781,
											"end": 1803,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1781,
											"end": 1803,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1762,
											"end": 1825,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1762,
											"end": 1825,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1762,
											"end": 1825,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1762,
											"end": 1825,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1833,
											"end": 1995,
											"name": "tag",
											"source": -1,
											"value": "59"
										},
										{
											"begin": 1833,
											"end": 1995,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1833,
											"end": 1995,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1942,
											"end": 1945,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1984,
											"end": 1988,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 1982,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1975,
											"end": 1989,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1960,
											"end": 1989,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1960,
											"end": 1989,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1928,
											"end": 1995,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1928,
											"end": 1995,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1928,
											"end": 1995,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1928,
											"end": 1995,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1928,
											"end": 1995,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2003,
											"end": 2075,
											"name": "tag",
											"source": -1,
											"value": "53"
										},
										{
											"begin": 2003,
											"end": 2075,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2003,
											"end": 2075,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2070,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2054,
											"end": 2070,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2054,
											"end": 2070,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2048,
											"end": 2075,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2048,
											"end": 2075,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2048,
											"end": 2075,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2048,
											"end": 2075,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "tag",
											"source": -1,
											"value": "67"
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2149,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2127,
											"end": 2154,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2127,
											"end": 2154,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2127,
											"end": 2154,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2127,
											"end": 2154,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2430,
											"name": "tag",
											"source": -1,
											"value": "61"
										},
										{
											"begin": 2162,
											"end": 2430,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2227,
											"end": 2228,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2335,
											"name": "tag",
											"source": -1,
											"value": "79"
										},
										{
											"begin": 2234,
											"end": 2335,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2248,
											"end": 2254,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2246,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2242,
											"end": 2255,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 2234,
											"end": 2335,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2234,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "81"
										},
										{
											"begin": 2234,
											"end": 2335,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 2324,
											"end": 2325,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2319,
											"end": 2322,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2315,
											"end": 2326,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2309,
											"end": 2327,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 2305,
											"end": 2306,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2300,
											"end": 2303,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2296,
											"end": 2307,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2289,
											"end": 2328,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2270,
											"end": 2272,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2267,
											"end": 2268,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2263,
											"end": 2273,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2258,
											"end": 2273,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2258,
											"end": 2273,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2234,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "79"
										},
										{
											"begin": 2234,
											"end": 2335,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2234,
											"end": 2335,
											"name": "tag",
											"source": -1,
											"value": "81"
										},
										{
											"begin": 2234,
											"end": 2335,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2350,
											"end": 2356,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2347,
											"end": 2348,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "82"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 2415,
											"end": 2416,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2406,
											"end": 2412,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2401,
											"end": 2404,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 2397,
											"end": 2413,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2390,
											"end": 2417,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "tag",
											"source": -1,
											"value": "82"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2211,
											"end": 2430,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2211,
											"end": 2430,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2211,
											"end": 2430,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2211,
											"end": 2430,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2211,
											"end": 2430,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2438,
											"end": 2535,
											"name": "tag",
											"source": -1,
											"value": "63"
										},
										{
											"begin": 2438,
											"end": 2535,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2438,
											"end": 2535,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2528,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 2522,
											"end": 2529,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2517,
											"end": 2519,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 2510,
											"end": 2515,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2506,
											"end": 2520,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2502,
											"end": 2530,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 2492,
											"end": 2530,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2492,
											"end": 2530,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2486,
											"end": 2535,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2486,
											"end": 2535,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2486,
											"end": 2535,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2486,
											"end": 2535,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2660,
											"name": "tag",
											"source": -1,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2660,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2612,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "85"
										},
										{
											"begin": 2630,
											"end": 2635,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2612,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "67"
										},
										{
											"begin": 2612,
											"end": 2636,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2612,
											"end": 2636,
											"name": "tag",
											"source": -1,
											"value": "85"
										},
										{
											"begin": 2612,
											"end": 2636,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2605,
											"end": 2610,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 2602,
											"end": 2637,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 2592,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "86"
										},
										{
											"begin": 2592,
											"end": 2594,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 2651,
											"end": 2652,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2648,
											"end": 2649,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2641,
											"end": 2653,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2592,
											"end": 2594,
											"name": "tag",
											"source": -1,
											"value": "86"
										},
										{
											"begin": 2592,
											"end": 2594,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2586,
											"end": 2660,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2586,
											"end": 2660,
											"name": "JUMP",
											"source": -1
										}
									]
								},
								"4887836E294A2761413359597244D307BBE3F94827F6160D9E1A399E00E2D1BE": "4e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f",
								"C359735A342ECE061E65AB7390D246D1E53BA5F24EEA70D6201F1D4A7B2F3475": "7364664e417364667364664c4548484a5347445348444a53484a53484a534844534a44484a4f4e47564f"
							}
						},
						"methodIdentifiers": {
							"data1()": "9ffd85c4",
							"data2()": "e3a7fd75",
							"data3()": "fc26b0ab",
							"getData(uint256)": "0178fe3f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"data1\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data2\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data3\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"memPtr\",\"type\":\"uint256\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/demo2.sol\":\"demo2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/demo2.sol\":{\"keccak256\":\"0x9853a5d3ea969bcddc4e6c2583ebd51769d72e29f97dc9ddcbe687feea0893cb\",\"urls\":[\"bzz-raw://189e9d5c99ac7450d03b62d97b27881897a8bcef6914400efdd2198235f97b18\",\"dweb:/ipfs/QmbFytKyAaTvxgh7NN5TWVEtccbYNXyWLchRaQWDT3XYdR\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "contracts/demo2.sol:16:9: Warning: Function state mutability can be restricted to pure\n        function getData(uint memPtr) public view returns(uint) {\n        ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 777,
					"file": "contracts/demo2.sol",
					"start": 665
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/demo2.sol": {
				"ast": {
					"absolutePath": "contracts/demo2.sol",
					"exportedSymbols": {
						"demo2": [
							223
						]
					},
					"id": 224,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">",
								"0.4",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4:30:0"
						},
						{
							"id": 2,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "40:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 223,
							"linearizedBaseContracts": [
								223
							],
							"name": "demo2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9ffd85c4",
									"id": 5,
									"name": "data1",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 223,
									"src": "107:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 3,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "107:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4e414c4548484a534744534447484a534448535548444a5348444a53484a53484a534844534a44484a4f4e47564f",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "128:48:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_4887836e294a2761413359597244d307bbe3f94827f6160d9e1a399e00e2d1be",
											"typeString": "literal_string \"NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO\""
										},
										"value": "NALEHHJSGDSDGHJSDHSUHDJSHDJSHJSHJSHDSJDHJONGVO"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc26b0ab",
									"id": 8,
									"name": "data3",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 223,
									"src": "187:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 6,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "187:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "7364664e417364667364664c4548484a5347445348444a53484a53484a534844534a44484a4f4e47564f",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:44:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_c359735a342ece061e65ab7390d246d1e53ba5f24eea70d6201f1d4a7b2f3475",
											"typeString": "literal_string \"sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO\""
										},
										"value": "sdfNAsdfsdfLEHHJSGDSHDJSHJSHJSHDSJDHJONGVO"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e3a7fd75",
									"id": 11,
									"name": "data2",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 223,
									"src": "263:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 9,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "263:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4c45484f4e47564f776a6e66766a3377656838764b4a",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "286:24:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_456403c9720da4fa7d7375867b84ba5ad32318599c72d3314f61b294b0c7ff33",
											"typeString": "literal_string \"LEHONGVOwjnfvj3weh8vKJ\""
										},
										"value": "LEHONGVOwjnfvj3weh8vKJ"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 14,
									"name": "STRING_OFFSET",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 223,
									"src": "321:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 12,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "321:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783830",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "352:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "0x80"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 17,
									"name": "LIST_OFFSET",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 223,
									"src": "367:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 15,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "367:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786330",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "396:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "0xc0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 20,
									"name": "STRING_SHORT_START",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 223,
									"src": "411:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 18,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "411:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783830",
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "447:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "0x80"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 23,
									"name": "STRING_LONG_START",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 223,
									"src": "462:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 21,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "462:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786238",
										"id": 22,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "498:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_184_by_1",
											"typeString": "int_const 184"
										},
										"value": "0xb8"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 26,
									"name": "LIST_SHORT_START",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 223,
									"src": "513:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 24,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "513:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786330",
										"id": 25,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "549:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "0xc0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 29,
									"name": "LIST_LONG_START",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 223,
									"src": "564:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 27,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "564:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786638",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "600:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_248_by_1",
											"typeString": "int_const 248"
										},
										"value": "0xf8"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 32,
									"name": "WORD_SIZE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 223,
									"src": "615:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 30,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "615:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3332",
										"id": 31,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "642:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "721:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 40,
															"name": "memPtr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "758:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 39,
														"name": "_payloadOffset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "743:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "743:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 38,
												"id": 42,
												"nodeType": "Return",
												"src": "736:29:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "0178fe3f",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"name": "memPtr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "682:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "682:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "681:13:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "715:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "715:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "714:6:0"
									},
									"scope": 223,
									"src": "665:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "857:1552:0",
										"statements": [
											{
												"assignments": [
													52
												],
												"declarations": [
													{
														"constant": false,
														"id": 52,
														"name": "itemLen",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 121,
														"src": "872:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 51,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "872:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 53,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "872:12:0"
											},
											{
												"assignments": [
													55
												],
												"declarations": [
													{
														"constant": false,
														"id": 55,
														"name": "byte0",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 121,
														"src": "899:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 54,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "899:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 56,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "899:10:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "933:65:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "952:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "966:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "975:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "969:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "969:13:0"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nodeType": "YulIdentifier",
																	"src": "961:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:22:0"
															},
															"variableNames": [
																{
																	"name": "byte0",
																	"nodeType": "YulIdentifier",
																	"src": "952:5:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 55,
														"isOffset": false,
														"isSlot": false,
														"src": "952:5:0",
														"valueSize": 1
													},
													{
														"declaration": 46,
														"isOffset": false,
														"isSlot": false,
														"src": "975:6:0",
														"valueSize": 1
													}
												],
												"id": 57,
												"nodeType": "InlineAssembly",
												"src": "924:74:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 58,
														"name": "byte0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "1018:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 59,
														"name": "STRING_SHORT_START",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1026:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1018:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 65,
															"name": "byte0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "1100:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 66,
															"name": "STRING_LONG_START",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1108:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "1100:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 76,
																"name": "byte0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 55,
																"src": "1210:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 77,
																"name": "LIST_SHORT_START",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1218:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "1210:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 91,
																	"name": "byte0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 55,
																	"src": "1805:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 92,
																	"name": "LIST_LONG_START",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "1813:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1805:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 114,
																"nodeType": "Block",
																"src": "1924:443:0",
																"statements": [
																	{
																		"assignments": [
																			104
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 104,
																				"name": "dataLen",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 114,
																				"src": "1943:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 103,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "1943:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 105,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1943:12:0"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "1983:302:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "2006:31:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "byte0",
																								"nodeType": "YulIdentifier",
																								"src": "2025:5:0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2032:4:0",
																								"type": "",
																								"value": "0xf7"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "2021:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2021:16:0"
																					},
																					"variables": [
																						{
																							"name": "byteLen",
																							"nodeType": "YulTypedName",
																							"src": "2010:7:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"nodeType": "YulAssignment",
																					"src": "2059:24:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "memPtr",
																								"nodeType": "YulIdentifier",
																								"src": "2073:6:0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2081:1:0",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2069:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2069:14:0"
																					},
																					"variableNames": [
																						{
																							"name": "memPtr",
																							"nodeType": "YulIdentifier",
																							"src": "2059:6:0"
																						}
																					]
																				},
																				{
																					"nodeType": "YulAssignment",
																					"src": "2107:57:0",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "memPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2128:6:0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2122:5:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2122:13:0"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2141:3:0",
																										"type": "",
																										"value": "256"
																									},
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "2150:2:0",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "byteLen",
																												"nodeType": "YulIdentifier",
																												"src": "2154:7:0"
																											}
																										],
																										"functionName": {
																											"name": "sub",
																											"nodeType": "YulIdentifier",
																											"src": "2146:3:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2146:16:0"
																									}
																								],
																								"functionName": {
																									"name": "exp",
																									"nodeType": "YulIdentifier",
																									"src": "2137:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2137:26:0"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "2118:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2118:46:0"
																					},
																					"variableNames": [
																						{
																							"name": "dataLen",
																							"nodeType": "YulIdentifier",
																							"src": "2107:7:0"
																						}
																					]
																				},
																				{
																					"nodeType": "YulAssignment",
																					"src": "2226:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "dataLen",
																								"nodeType": "YulIdentifier",
																								"src": "2241:7:0"
																							},
																							{
																								"arguments": [
																									{
																										"name": "byteLen",
																										"nodeType": "YulIdentifier",
																										"src": "2254:7:0"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2263:1:0",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2250:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2250:15:0"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2237:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2237:29:0"
																					},
																					"variableNames": [
																						{
																							"name": "itemLen",
																							"nodeType": "YulIdentifier",
																							"src": "2226:7:0"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 55,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "2025:5:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 104,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "2107:7:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 104,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "2241:7:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 52,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "2226:7:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 46,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "2059:6:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 46,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "2073:6:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 46,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "2128:6:0",
																				"valueSize": 1
																			}
																		],
																		"id": 106,
																		"nodeType": "InlineAssembly",
																		"src": "1974:311:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 110,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 108,
																						"name": "itemLen",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 52,
																						"src": "2311:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 109,
																						"name": "dataLen",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 104,
																						"src": "2322:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2311:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "6164646974696f6e206f766572666c6f77",
																					"id": 111,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2331:19:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
																						"typeString": "literal_string \"addition overflow\""
																					},
																					"value": "addition overflow"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
																						"typeString": "literal_string \"addition overflow\""
																					}
																				],
																				"id": 107,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-18,
																					-18
																				],
																				"referencedDeclaration": -18,
																				"src": "2303:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2303:48:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 113,
																		"nodeType": "ExpressionStatement",
																		"src": "2303:48:0"
																	}
																]
															},
															"id": 115,
															"nodeType": "IfStatement",
															"src": "1801:566:0",
															"trueBody": {
																"id": 102,
																"nodeType": "Block",
																"src": "1830:73:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 94,
																				"name": "itemLen",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "1849:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 99,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 97,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 95,
																						"name": "byte0",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 55,
																						"src": "1859:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 96,
																						"name": "LIST_SHORT_START",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 26,
																						"src": "1867:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "1859:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 98,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1886:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "1859:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1849:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 101,
																		"nodeType": "ExpressionStatement",
																		"src": "1849:38:0"
																	}
																]
															}
														},
														"id": 116,
														"nodeType": "IfStatement",
														"src": "1206:1161:0",
														"trueBody": {
															"id": 90,
															"nodeType": "Block",
															"src": "1236:544:0",
															"statements": [
																{
																	"assignments": [
																		80
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 80,
																			"name": "dataLen",
																			"nodeType": "VariableDeclaration",
																			"overrides": null,
																			"scope": 90,
																			"src": "1255:12:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 79,
																				"name": "uint",
																				"nodeType": "ElementaryTypeName",
																				"src": "1255:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"value": null,
																			"visibility": "internal"
																		}
																	],
																	"id": 81,
																	"initialValue": null,
																	"nodeType": "VariableDeclarationStatement",
																	"src": "1255:12:0"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "1295:403:0",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1318:31:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "byte0",
																							"nodeType": "YulIdentifier",
																							"src": "1337:5:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1344:4:0",
																							"type": "",
																							"value": "0xb7"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "1333:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1333:16:0"
																				},
																				"variables": [
																					{
																						"name": "byteLen",
																						"nodeType": "YulTypedName",
																						"src": "1322:7:0",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "1406:24:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "memPtr",
																							"nodeType": "YulIdentifier",
																							"src": "1420:6:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1428:1:0",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1416:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1416:14:0"
																				},
																				"variableNames": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1406:6:0"
																					}
																				]
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "1527:57:0",
																				"value": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1548:6:0"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "1542:5:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1542:13:0"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1561:3:0",
																									"type": "",
																									"value": "256"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1570:2:0",
																											"type": "",
																											"value": "32"
																										},
																										{
																											"name": "byteLen",
																											"nodeType": "YulIdentifier",
																											"src": "1574:7:0"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nodeType": "YulIdentifier",
																										"src": "1566:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1566:16:0"
																								}
																							],
																							"functionName": {
																								"name": "exp",
																								"nodeType": "YulIdentifier",
																								"src": "1557:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1557:26:0"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "1538:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1538:46:0"
																				},
																				"variableNames": [
																					{
																						"name": "dataLen",
																						"nodeType": "YulIdentifier",
																						"src": "1527:7:0"
																					}
																				]
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "1639:40:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "dataLen",
																							"nodeType": "YulIdentifier",
																							"src": "1654:7:0"
																						},
																						{
																							"arguments": [
																								{
																									"name": "byteLen",
																									"nodeType": "YulIdentifier",
																									"src": "1667:7:0"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1676:1:0",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1663:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1663:15:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1650:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1650:29:0"
																				},
																				"variableNames": [
																					{
																						"name": "itemLen",
																						"nodeType": "YulIdentifier",
																						"src": "1639:7:0"
																					}
																				]
																			}
																		]
																	},
																	"evmVersion": "istanbul",
																	"externalReferences": [
																		{
																			"declaration": 55,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1337:5:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 80,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1527:7:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 80,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1654:7:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 52,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1639:7:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 46,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1406:6:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 46,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1420:6:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 46,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1548:6:0",
																			"valueSize": 1
																		}
																	],
																	"id": 82,
																	"nodeType": "InlineAssembly",
																	"src": "1286:412:0"
																},
																{
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 86,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 84,
																					"name": "itemLen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 52,
																					"src": "1724:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 85,
																					"name": "dataLen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 80,
																					"src": "1735:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1724:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"hexValue": "6164646974696f6e206f766572666c6f77",
																				"id": 87,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1744:19:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
																					"typeString": "literal_string \"addition overflow\""
																				},
																				"value": "addition overflow"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_8c0d96e929759368d857f737222dcb6a5217a09dbc29c3e61addc531fdea00f5",
																					"typeString": "literal_string \"addition overflow\""
																				}
																			],
																			"id": 83,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				-18,
																				-18
																			],
																			"referencedDeclaration": -18,
																			"src": "1716:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (bool,string memory) pure"
																			}
																		},
																		"id": 88,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1716:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 89,
																	"nodeType": "ExpressionStatement",
																	"src": "1716:48:0"
																}
															]
														}
													},
													"id": 117,
													"nodeType": "IfStatement",
													"src": "1096:1271:0",
													"trueBody": {
														"expression": {
															"argumentTypes": null,
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"id": 68,
																"name": "itemLen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 52,
																"src": "1144:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 69,
																		"name": "byte0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 55,
																		"src": "1154:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 70,
																		"name": "STRING_SHORT_START",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 20,
																		"src": "1162:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "1154:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1183:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1154:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1144:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 75,
														"nodeType": "ExpressionStatement",
														"src": "1144:40:0"
													}
												},
												"id": 118,
												"nodeType": "IfStatement",
												"src": "1014:1353:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 61,
															"name": "itemLen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "1063:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1073:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1063:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 64,
													"nodeType": "ExpressionStatement",
													"src": "1063:11:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 119,
													"name": "itemLen",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 52,
													"src": "2390:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 50,
												"id": 120,
												"nodeType": "Return",
												"src": "2383:14:0"
											}
										]
									},
									"documentation": null,
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_itemLength",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"name": "memPtr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 122,
												"src": "816:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "816:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "815:13:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 122,
												"src": "851:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "851:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "850:6:0"
									},
									"scope": 223,
									"src": "795:1614:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2538:538:0",
										"statements": [
											{
												"assignments": [
													130
												],
												"declarations": [
													{
														"constant": false,
														"id": 130,
														"name": "byte0",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 176,
														"src": "2553:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 129,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2553:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 131,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2553:10:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2587:65:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2606:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2620:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2629:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2623:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2623:13:0"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nodeType": "YulIdentifier",
																	"src": "2615:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2615:22:0"
															},
															"variableNames": [
																{
																	"name": "byte0",
																	"nodeType": "YulIdentifier",
																	"src": "2606:5:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 130,
														"isOffset": false,
														"isSlot": false,
														"src": "2606:5:0",
														"valueSize": 1
													},
													{
														"declaration": 124,
														"isOffset": false,
														"isSlot": false,
														"src": "2629:6:0",
														"valueSize": 1
													}
												],
												"id": 132,
												"nodeType": "InlineAssembly",
												"src": "2578:74:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 133,
														"name": "byte0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2672:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 134,
														"name": "STRING_SHORT_START",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "2680:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2672:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 138,
																"name": "byte0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "2749:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 139,
																"name": "STRING_LONG_START",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "2757:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "2749:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 141,
																			"name": "byte0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 130,
																			"src": "2779:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 142,
																			"name": "LIST_SHORT_START",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 26,
																			"src": "2788:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "2779:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 144,
																			"name": "byte0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 130,
																			"src": "2808:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 145,
																			"name": "LIST_LONG_START",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 29,
																			"src": "2816:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "2808:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "2779:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 148,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2778:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2749:83:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 152,
																"name": "byte0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "2883:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 153,
																"name": "LIST_SHORT_START",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2891:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "2883:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"expression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 164,
																		"name": "byte0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 130,
																		"src": "3031:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 165,
																					"name": "LIST_LONG_START",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 29,
																					"src": "3040:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 166,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3058:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "3040:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 168,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3039:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "3031:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3063:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3031:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 128,
															"id": 172,
															"nodeType": "Return",
															"src": "3024:40:0"
														},
														"id": 173,
														"nodeType": "IfStatement",
														"src": "2879:185:0",
														"trueBody": {
															"expression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 155,
																		"name": "byte0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 130,
																		"src": "2952:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 158,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 156,
																					"name": "STRING_LONG_START",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 23,
																					"src": "2961:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 157,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2981:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "2961:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 159,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2960:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "2952:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2986:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2952:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 128,
															"id": 163,
															"nodeType": "Return",
															"src": "2945:42:0"
														}
													},
													"id": 174,
													"nodeType": "IfStatement",
													"src": "2745:319:0",
													"trueBody": {
														"expression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2858:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"functionReturnParameters": 128,
														"id": 151,
														"nodeType": "Return",
														"src": "2851:8:0"
													}
												},
												"id": 175,
												"nodeType": "IfStatement",
												"src": "2668:396:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2724:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 128,
													"id": 137,
													"nodeType": "Return",
													"src": "2717:8:0"
												}
											}
										]
									},
									"documentation": null,
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_payloadOffset",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"name": "memPtr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 177,
												"src": "2497:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2497:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2496:13:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 177,
												"src": "2532:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2532:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2531:6:0"
									},
									"scope": 223,
									"src": "2473:603:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "3147:727:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 186,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "3166:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3173:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3166:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 190,
												"nodeType": "IfStatement",
												"src": "3162:21:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 185,
													"id": 189,
													"nodeType": "Return",
													"src": "3176:7:0"
												}
											},
											{
												"body": {
													"id": 207,
													"nodeType": "Block",
													"src": "3294:182:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "3322:66:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dest",
																					"nodeType": "YulIdentifier",
																					"src": "3352:4:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3364:3:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3358:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3358:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3345:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3345:24:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3345:24:0"
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 181,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "3352:4:0",
																	"valueSize": 1
																},
																{
																	"declaration": 179,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "3364:3:0",
																	"valueSize": 1
																}
															],
															"id": 198,
															"nodeType": "InlineAssembly",
															"src": "3313:75:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 199,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "3408:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 200,
																	"name": "WORD_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "3415:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "3408:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 202,
															"nodeType": "ExpressionStatement",
															"src": "3408:16:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 203,
																	"name": "dest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "3443:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 204,
																	"name": "WORD_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "3451:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "3443:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 206,
															"nodeType": "ExpressionStatement",
															"src": "3443:17:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 191,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "3258:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 192,
														"name": "WORD_SIZE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "3265:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3258:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 208,
												"initializationExpression": null,
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 194,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "3276:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"argumentTypes": null,
															"id": 195,
															"name": "WORD_SIZE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "3283:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "3276:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 197,
													"nodeType": "ExpressionStatement",
													"src": "3276:16:0"
												},
												"nodeType": "ForStatement",
												"src": "3251:225:0"
											},
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"name": "mask",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 221,
														"src": "3577:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 209,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3577:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 219,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "323536",
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3589:3:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "256"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 212,
																		"name": "WORD_SIZE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 32,
																		"src": "3597:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 213,
																		"name": "len",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 183,
																		"src": "3609:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3597:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 215,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3596:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3589:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3616:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3589:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3577:40:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3641:222:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3660:41:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3685:3:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3679:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3679:10:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "3695:4:0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3691:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3691:9:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3675:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3675:26:0"
															},
															"variables": [
																{
																	"name": "srcpart",
																	"nodeType": "YulTypedName",
																	"src": "3664:7:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3735:38:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dest",
																				"nodeType": "YulIdentifier",
																				"src": "3761:4:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3755:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3755:11:0"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3768:4:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3751:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3751:22:0"
															},
															"variables": [
																{
																	"name": "destpart",
																	"nodeType": "YulTypedName",
																	"src": "3739:8:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dest",
																		"nodeType": "YulIdentifier",
																		"src": "3820:4:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "destpart",
																				"nodeType": "YulIdentifier",
																				"src": "3829:8:0"
																			},
																			{
																				"name": "srcpart",
																				"nodeType": "YulIdentifier",
																				"src": "3839:7:0"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "3826:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3826:21:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3813:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3813:35:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3813:35:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 181,
														"isOffset": false,
														"isSlot": false,
														"src": "3761:4:0",
														"valueSize": 1
													},
													{
														"declaration": 181,
														"isOffset": false,
														"isSlot": false,
														"src": "3820:4:0",
														"valueSize": 1
													},
													{
														"declaration": 210,
														"isOffset": false,
														"isSlot": false,
														"src": "3695:4:0",
														"valueSize": 1
													},
													{
														"declaration": 210,
														"isOffset": false,
														"isSlot": false,
														"src": "3768:4:0",
														"valueSize": 1
													},
													{
														"declaration": 179,
														"isOffset": false,
														"isSlot": false,
														"src": "3685:3:0",
														"valueSize": 1
													}
												],
												"id": 220,
												"nodeType": "InlineAssembly",
												"src": "3632:231:0"
											}
										]
									},
									"documentation": null,
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "copy",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"name": "src",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 222,
												"src": "3103:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3103:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"name": "dest",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 222,
												"src": "3113:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3113:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"name": "len",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 222,
												"src": "3124:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3124:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3102:31:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3147:0:0"
									},
									"scope": 223,
									"src": "3089:785:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 224,
							"src": "81:3800:0"
						}
					],
					"src": "4:3892:0"
				},
				"id": 0
			}
		}
	}
}