{
	"id": "d4d9ce109e8440da8520a4e17f1ec375",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BEP.sol": {
				"content": "pragma solidity 0.5.16;\r\n\r\ninterface IBEP20 {\r\n  /**\r\n   * @dev Returns the amount of tokens in existence.\r\n   */\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8);\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory);\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view returns (string memory);\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view returns (address);\r\n\r\n  /**\r\n   * @dev Returns the amount of tokens owned by `account`.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Returns the remaining number of tokens that `spender` will be\r\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n   * zero by default.\r\n   *\r\n   * This value changes when {approve} or {transferFrom} are called.\r\n   */\r\n  function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n   * that someone may use both the old and the new allowance by unfortunate\r\n   * transaction ordering. One possible solution to mitigate this race\r\n   * condition is to first reduce the spender's allowance to 0 and set the\r\n   * desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   * Emits an {Approval} event.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n   * allowance mechanism. `amount` is then deducted from the caller's\r\n   * allowance.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n   * another (`to`).\r\n   *\r\n   * Note that `value` may be zero.\r\n   */\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  /**\r\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n   * a call to {approve}. `value` is the new allowance.\r\n   */\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\ncontract Context {\r\n  // Empty internal constructor, to prevent people from mistakenly deploying\r\n  // an instance of this contract, which should be used via inheritance.\r\n  constructor () internal { }\r\n\r\n  function _msgSender() internal view returns (address payable) {\r\n    return msg.sender;\r\n  }\r\n\r\n  function _msgData() internal view returns (bytes memory) {\r\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    return msg.data;\r\n  }\r\n}\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n  /**\r\n   * @dev Returns the addition of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `+` operator.\r\n   *\r\n   * Requirements:\r\n   * - Addition cannot overflow.\r\n   */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return sub(a, b, \"SafeMath: subtraction overflow\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b <= a, errorMessage);\r\n    uint256 c = a - b;\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the multiplication of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `*` operator.\r\n   *\r\n   * Requirements:\r\n   * - Multiplication cannot overflow.\r\n   */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n    // benefit is lost if 'b' is also tested.\r\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    uint256 c = a * b;\r\n    require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return div(a, b, \"SafeMath: division by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    // Solidity only automatically asserts when dividing by 0\r\n    require(b > 0, errorMessage);\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return mod(a, b, \"SafeMath: modulo by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts with custom message when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b != 0, errorMessage);\r\n    return a % b;\r\n  }\r\n}\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\ncontract Ownable is Context {\r\n  address private _owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  /**\r\n   * @dev Initializes the contract setting the deployer as the initial owner.\r\n   */\r\n  constructor () internal {\r\n    address msgSender = _msgSender();\r\n    _owner = msgSender;\r\n    emit OwnershipTransferred(address(0), msgSender);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the address of the current owner.\r\n   */\r\n  function owner() public view returns (address) {\r\n    return _owner;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Leaves the contract without owner. It will not be possible to call\r\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n   *\r\n   * NOTE: Renouncing ownership will leave the contract without an owner,\r\n   * thereby removing any functionality that is only available to the owner.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipTransferred(_owner, address(0));\r\n    _owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   * Can only be called by the current owner.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    _transferOwnership(newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   */\r\n  function _transferOwnership(address newOwner) internal {\r\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n    emit OwnershipTransferred(_owner, newOwner);\r\n    _owner = newOwner;\r\n  }\r\n}\r\n\r\ncontract BEP20Token is Context, IBEP20, Ownable {\r\n  using SafeMath for uint256;\r\n\r\n  mapping (address => uint256) private _balances;\r\n\r\n  mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n  uint256 private _totalSupply;\r\n  uint8 private _decimals;\r\n  string private _symbol;\r\n  string private _name;\r\n\r\n  constructor(string memory name_, string memory symbol_, uint8 decimals_, uint256 totalSupply_) public {\r\n    _name = name_;\r\n    _symbol = symbol_;\r\n    _decimals = decimals_;\r\n    _totalSupply = totalSupply_;\r\n    _balances[msg.sender] = _totalSupply;\r\n\r\n    emit Transfer(address(0), msg.sender, _totalSupply);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view returns (address) {\r\n    return owner();\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8) {\r\n    return _decimals;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory) {\r\n    return _symbol;\r\n  }\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view returns (string memory) {\r\n    return _name;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-totalSupply}.\r\n   */\r\n  function totalSupply() external view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-balanceOf}.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256) {\r\n    return _balances[account];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transfer}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `recipient` cannot be the zero address.\r\n   * - the caller must have a balance of at least `amount`.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool) {\r\n    _transfer(_msgSender(), recipient, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-allowance}.\r\n   */\r\n  function allowance(address owner, address spender) external view returns (uint256) {\r\n    return _allowances[owner][spender];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-approve}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool) {\r\n    _approve(_msgSender(), spender, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transferFrom}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance. This is not\r\n   * required by the EIP. See the note at the beginning of {BEP20};\r\n   *\r\n   * Requirements:\r\n   * - `sender` and `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   * - the caller must have allowance for `sender`'s tokens of at least\r\n   * `amount`.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r\n    _transfer(sender, recipient, amount);\r\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   * - `spender` must have allowance for the caller of at least\r\n   * `subtractedValue`.\r\n   */\r\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\r\n   * the total supply.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `msg.sender` must be the token owner\r\n   */\r\n  function mint(uint256 amount) public onlyOwner returns (bool) {\r\n    _mint(_msgSender(), amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n   *\r\n   * This is internal function is equivalent to {transfer}, and can be used to\r\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `sender` cannot be the zero address.\r\n   * - `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   */\r\n  function _transfer(address sender, address recipient, uint256 amount) internal {\r\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n\r\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\r\n    _balances[recipient] = _balances[recipient].add(amount);\r\n    emit Transfer(sender, recipient, amount);\r\n  }\r\n\r\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n   * the total supply.\r\n   *\r\n   * Emits a {Transfer} event with `from` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `to` cannot be the zero address.\r\n   */\r\n  function _mint(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: mint to the zero address\");\r\n\r\n    _totalSupply = _totalSupply.add(amount);\r\n    _balances[account] = _balances[account].add(amount);\r\n    emit Transfer(address(0), account, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`, reducing the\r\n   * total supply.\r\n   *\r\n   * Emits a {Transfer} event with `to` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `account` cannot be the zero address.\r\n   * - `account` must have at least `amount` tokens.\r\n   */\r\n  function _burn(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: burn from the zero address\");\r\n\r\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\r\n    _totalSupply = _totalSupply.sub(amount);\r\n    emit Transfer(account, address(0), amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\r\n   *\r\n   * This is internal function is equivalent to `approve`, and can be used to\r\n   * e.g. set automatic allowances for certain subsystems, etc.\r\n   *\r\n   * Emits an {Approval} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `owner` cannot be the zero address.\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function _approve(address owner, address spender, uint256 amount) internal {\r\n    require(owner != address(0), \"BEP20: approve from the zero address\");\r\n    require(spender != address(0), \"BEP20: approve to the zero address\");\r\n\r\n    _allowances[owner][spender] = amount;\r\n    emit Approval(owner, spender, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\r\n   * from the caller's allowance.\r\n   *\r\n   * See {_burn} and {_approve}.\r\n   */\r\n  function _burnFrom(address account, uint256 amount) internal {\r\n    _burn(account, amount);\r\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\r\n  }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/BEP.sol": {
				"BEP20Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals_",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply_",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}.    * Requirements:    * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.    * Requirements    * - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}.    * Requirements:    * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}.    * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};    * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/BEP.sol\":11306:19196  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BEP.sol\":11636:11953  constructor(string memory name_, string memory symbol_, uint8 decimals_, uint256 totalSupply_) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/BEP.sol\":11636:11953  constructor(string memory name_, string memory symbol_, uint8 decimals_, uint256 totalSupply_) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:16   */\n  0x80\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:17   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"contracts/BEP.sol\":11636:11953  constructor(string memory name_, string memory symbol_, uint8 decimals_, uint256 totalSupply_) public {\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_3:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_4:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":330:339   */\n  dup7\n    /* \"--CODEGEN--\":325:326   */\n  0x01\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:327   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:328   */\n  add\n    /* \"--CODEGEN--\":282:340   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_5\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_5:\n    /* \"--CODEGEN--\":384:396   */\n  dup1\n    /* \"--CODEGEN--\":379:382   */\n  dup4\n    /* \"--CODEGEN--\":372:397   */\n  mstore\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":415:418   */\n  dup4\n    /* \"--CODEGEN--\":411:425   */\n  add\n    /* \"--CODEGEN--\":404:425   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:432   */\n  pop\n  pop\n    /* \"contracts/BEP.sol\":11636:11953  constructor(string memory name_, string memory symbol_, uint8 decimals_, uint256 totalSupply_) public {\r... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_6:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_8\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_6)\ntag_8:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"contracts/BEP.sol\":11636:11953  constructor(string memory name_, string memory symbol_, uint8 decimals_, uint256 totalSupply_) public {\r... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_10\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_10:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_11\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_11:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":330:339   */\n  dup7\n    /* \"--CODEGEN--\":325:326   */\n  0x01\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:327   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:328   */\n  add\n    /* \"--CODEGEN--\":282:340   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_12\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_12:\n    /* \"--CODEGEN--\":384:396   */\n  dup1\n    /* \"--CODEGEN--\":379:382   */\n  dup4\n    /* \"--CODEGEN--\":372:397   */\n  mstore\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":415:418   */\n  dup4\n    /* \"--CODEGEN--\":411:425   */\n  add\n    /* \"--CODEGEN--\":404:425   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:432   */\n  pop\n  pop\n    /* \"contracts/BEP.sol\":11636:11953  constructor(string memory name_, string memory symbol_, uint8 decimals_, uint256 totalSupply_) public {\r... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_13:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_15\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_13)\ntag_15:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"contracts/BEP.sol\":11636:11953  constructor(string memory name_, string memory symbol_, uint8 decimals_, uint256 totalSupply_) public {\r... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/BEP.sol\":9815:9832  address msgSender */\n  0x00\n    /* \"contracts/BEP.sol\":9835:9847  _msgSender() */\n  tag_22\n    /* \"contracts/BEP.sol\":9835:9845  _msgSender */\n  shl(0x20, tag_23)\n    /* \"contracts/BEP.sol\":9835:9847  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"contracts/BEP.sol\":9815:9847  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"contracts/BEP.sol\":9863:9872  msgSender */\n  dup1\n    /* \"contracts/BEP.sol\":9854:9860  _owner */\n  0x00\n  dup1\n    /* \"contracts/BEP.sol\":9854:9872  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BEP.sol\":9917:9926  msgSender */\n  dup1\n    /* \"contracts/BEP.sol\":9884:9927  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/BEP.sol\":9913:9914  0 */\n  0x00\n    /* \"contracts/BEP.sol\":9884:9927  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/BEP.sol\":9784:9933  constructor () internal {\r... */\n  pop\n    /* \"contracts/BEP.sol\":11753:11758  name_ */\n  dup4\n    /* \"contracts/BEP.sol\":11745:11750  _name */\n  0x06\n    /* \"contracts/BEP.sol\":11745:11758  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_25\n  swap3\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  pop\n    /* \"contracts/BEP.sol\":11775:11782  symbol_ */\n  dup3\n    /* \"contracts/BEP.sol\":11765:11772  _symbol */\n  0x05\n    /* \"contracts/BEP.sol\":11765:11782  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_27\n  swap3\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_27:\n  pop\n    /* \"contracts/BEP.sol\":11801:11810  decimals_ */\n  dup2\n    /* \"contracts/BEP.sol\":11789:11798  _decimals */\n  0x04\n  0x00\n    /* \"contracts/BEP.sol\":11789:11810  _decimals = decimals_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BEP.sol\":11832:11844  totalSupply_ */\n  dup1\n    /* \"contracts/BEP.sol\":11817:11829  _totalSupply */\n  0x03\n    /* \"contracts/BEP.sol\":11817:11844  _totalSupply = totalSupply_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/BEP.sol\":11875:11887  _totalSupply */\n  sload(0x03)\n    /* \"contracts/BEP.sol\":11851:11860  _balances */\n  0x01\n    /* \"contracts/BEP.sol\":11851:11872  _balances[msg.sender] */\n  0x00\n    /* \"contracts/BEP.sol\":11861:11871  msg.sender */\n  caller\n    /* \"contracts/BEP.sol\":11851:11872  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/BEP.sol\":11851:11887  _balances[msg.sender] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/BEP.sol\":11922:11932  msg.sender */\n  caller\n    /* \"contracts/BEP.sol\":11901:11947  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/BEP.sol\":11918:11919  0 */\n  0x00\n    /* \"contracts/BEP.sol\":11901:11947  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/BEP.sol\":11934:11946  _totalSupply */\n  sload(0x03)\n    /* \"contracts/BEP.sol\":11901:11947  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/BEP.sol\":11636:11953  constructor(string memory name_, string memory symbol_, uint8 decimals_, uint256 totalSupply_) public {\r... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/BEP.sol\":11306:19196  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n  jump(tag_28)\n    /* \"contracts/BEP.sol\":3703:3795  function _msgSender() internal view returns (address payable) {\r... */\ntag_23:\n    /* \"contracts/BEP.sol\":3748:3763  address payable */\n  0x00\n    /* \"contracts/BEP.sol\":3779:3789  msg.sender */\n  caller\n    /* \"contracts/BEP.sol\":3772:3789  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/BEP.sol\":3703:3795  function _msgSender() internal view returns (address payable) {\r... */\n  swap1\n  jump\t// out\n    /* \"contracts/BEP.sol\":11306:19196  contract BEP20Token is Context, IBEP20, Ownable {\r... */\ntag_26:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_31\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_30)\ntag_31:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_30\n  jumpi\n  swap2\n  dup3\n  add\ntag_32:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_33\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_32)\ntag_33:\ntag_30:\n  pop\n  swap1\n  pop\n  tag_34\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n  pop\n  swap1\n  jump\t// out\ntag_35:\n  tag_36\n  swap2\n  swap1\ntag_37:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_38\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_37)\ntag_38:\n  pop\n  swap1\n  jump\ntag_36:\n  swap1\n  jump\t// out\ntag_28:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BEP.sol\":11306:19196  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/BEP.sol\":11306:19196  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x893d20e8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BEP.sol\":12423:12502  function name() external view returns (string memory) {\r... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_24:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_24)\n    tag_26:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/BEP.sol\":12423:12502  function name() external view returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_27\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_27:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":13463:13607  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_29:\n        /* \"contracts/BEP.sol\":13463:13607  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_30\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":12558:12645  function totalSupply() external view returns (uint256) {\r... */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":14052:14344  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_6:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n        /* \"contracts/BEP.sol\":14052:14344  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_35\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":12151:12230  function decimals() external view returns (uint8) {\r... */\n    tag_7:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":14726:14926  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"contracts/BEP.sol\":14726:14926  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":12699:12805  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_9:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"contracts/BEP.sol\":12699:12805  function balanceOf(address account) external view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":10608:10738  function renounceOwnership() public onlyOwner {\r... */\n    tag_10:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/BEP.sol\":12013:12092  function getOwner() external view returns (address) {\r... */\n    tag_11:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":10006:10079  function owner() public view returns (address) {\r... */\n    tag_12:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":12287:12370  function symbol() external view returns (string memory) {\r... */\n    tag_13:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_52:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_52)\n    tag_54:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/BEP.sol\":12287:12370  function symbol() external view returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_55\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_55:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":15849:15969  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_14:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n        /* \"contracts/BEP.sol\":15849:15969  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":15398:15649  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_15:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_60:\n        /* \"contracts/BEP.sol\":15398:15649  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":12999:13149  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_16:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_63:\n        /* \"contracts/BEP.sol\":12999:13149  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":13203:13333  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n    tag_17:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n        /* \"contracts/BEP.sol\":13203:13333  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP.sol\":10883:10986  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_18:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_69:\n        /* \"contracts/BEP.sol\":10883:10986  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_70\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/BEP.sol\":12423:12502  function name() external view returns (string memory) {\r... */\n    tag_23:\n        /* \"contracts/BEP.sol\":12462:12475  string memory */\n      0x60\n        /* \"contracts/BEP.sol\":12491:12496  _name */\n      0x06\n        /* \"contracts/BEP.sol\":12484:12496  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_72\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_73\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_72)\n    tag_73:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_74:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_74\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":12423:12502  function name() external view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP.sol\":13463:13607  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n    tag_30:\n        /* \"contracts/BEP.sol\":13531:13535  bool */\n      0x00\n        /* \"contracts/BEP.sol\":13544:13583  _approve(_msgSender(), spender, amount) */\n      tag_76\n        /* \"contracts/BEP.sol\":13553:13565  _msgSender() */\n      tag_77\n        /* \"contracts/BEP.sol\":13553:13563  _msgSender */\n      tag_78\n        /* \"contracts/BEP.sol\":13553:13565  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"contracts/BEP.sol\":13567:13574  spender */\n      dup5\n        /* \"contracts/BEP.sol\":13576:13582  amount */\n      dup5\n        /* \"contracts/BEP.sol\":13544:13552  _approve */\n      tag_79\n        /* \"contracts/BEP.sol\":13544:13583  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_76:\n        /* \"contracts/BEP.sol\":13597:13601  true */\n      0x01\n        /* \"contracts/BEP.sol\":13590:13601  return true */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":13463:13607  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":12558:12645  function totalSupply() external view returns (uint256) {\r... */\n    tag_32:\n        /* \"contracts/BEP.sol\":12604:12611  uint256 */\n      0x00\n        /* \"contracts/BEP.sol\":12627:12639  _totalSupply */\n      sload(0x03)\n        /* \"contracts/BEP.sol\":12620:12639  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":12558:12645  function totalSupply() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP.sol\":14052:14344  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_35:\n        /* \"contracts/BEP.sol\":14143:14147  bool */\n      0x00\n        /* \"contracts/BEP.sol\":14156:14192  _transfer(sender, recipient, amount) */\n      tag_82\n        /* \"contracts/BEP.sol\":14166:14172  sender */\n      dup5\n        /* \"contracts/BEP.sol\":14174:14183  recipient */\n      dup5\n        /* \"contracts/BEP.sol\":14185:14191  amount */\n      dup5\n        /* \"contracts/BEP.sol\":14156:14165  _transfer */\n      tag_83\n        /* \"contracts/BEP.sol\":14156:14192  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_82:\n        /* \"contracts/BEP.sol\":14199:14320  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_84\n        /* \"contracts/BEP.sol\":14208:14214  sender */\n      dup5\n        /* \"contracts/BEP.sol\":14216:14228  _msgSender() */\n      tag_85\n        /* \"contracts/BEP.sol\":14216:14226  _msgSender */\n      tag_78\n        /* \"contracts/BEP.sol\":14216:14228  _msgSender() */\n      jump\t// in\n    tag_85:\n        /* \"contracts/BEP.sol\":14230:14319  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_86\n        /* \"contracts/BEP.sol\":14268:14274  amount */\n      dup6\n        /* \"contracts/BEP.sol\":14230:14319  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"contracts/BEP.sol\":14230:14241  _allowances */\n      0x02\n        /* \"contracts/BEP.sol\":14230:14249  _allowances[sender] */\n      0x00\n        /* \"contracts/BEP.sol\":14242:14248  sender */\n      dup12\n        /* \"contracts/BEP.sol\":14230:14249  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP.sol\":14230:14263  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"contracts/BEP.sol\":14250:14262  _msgSender() */\n      tag_87\n        /* \"contracts/BEP.sol\":14250:14260  _msgSender */\n      tag_78\n        /* \"contracts/BEP.sol\":14250:14262  _msgSender() */\n      jump\t// in\n    tag_87:\n        /* \"contracts/BEP.sol\":14230:14263  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP.sol\":14230:14267  _allowances[sender][_msgSender()].sub */\n      tag_88\n      swap1\n        /* \"contracts/BEP.sol\":14230:14319  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_86:\n        /* \"contracts/BEP.sol\":14199:14207  _approve */\n      tag_79\n        /* \"contracts/BEP.sol\":14199:14320  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_84:\n        /* \"contracts/BEP.sol\":14334:14338  true */\n      0x01\n        /* \"contracts/BEP.sol\":14327:14338  return true */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":14052:14344  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":12151:12230  function decimals() external view returns (uint8) {\r... */\n    tag_37:\n        /* \"contracts/BEP.sol\":12194:12199  uint8 */\n      0x00\n        /* \"contracts/BEP.sol\":12215:12224  _decimals */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BEP.sol\":12208:12224  return _decimals */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":12151:12230  function decimals() external view returns (uint8) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP.sol\":14726:14926  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_40:\n        /* \"contracts/BEP.sol\":14806:14810  bool */\n      0x00\n        /* \"contracts/BEP.sol\":14819:14902  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_91\n        /* \"contracts/BEP.sol\":14828:14840  _msgSender() */\n      tag_92\n        /* \"contracts/BEP.sol\":14828:14838  _msgSender */\n      tag_78\n        /* \"contracts/BEP.sol\":14828:14840  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"contracts/BEP.sol\":14842:14849  spender */\n      dup5\n        /* \"contracts/BEP.sol\":14851:14901  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_93\n        /* \"contracts/BEP.sol\":14890:14900  addedValue */\n      dup6\n        /* \"contracts/BEP.sol\":14851:14862  _allowances */\n      0x02\n        /* \"contracts/BEP.sol\":14851:14876  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/BEP.sol\":14863:14875  _msgSender() */\n      tag_94\n        /* \"contracts/BEP.sol\":14863:14873  _msgSender */\n      tag_78\n        /* \"contracts/BEP.sol\":14863:14875  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"contracts/BEP.sol\":14851:14876  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP.sol\":14851:14885  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/BEP.sol\":14877:14884  spender */\n      dup10\n        /* \"contracts/BEP.sol\":14851:14885  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP.sol\":14851:14889  _allowances[_msgSender()][spender].add */\n      tag_95\n      swap1\n        /* \"contracts/BEP.sol\":14851:14901  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_93:\n        /* \"contracts/BEP.sol\":14819:14827  _approve */\n      tag_79\n        /* \"contracts/BEP.sol\":14819:14902  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_91:\n        /* \"contracts/BEP.sol\":14916:14920  true */\n      0x01\n        /* \"contracts/BEP.sol\":14909:14920  return true */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":14726:14926  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":12699:12805  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_43:\n        /* \"contracts/BEP.sol\":12758:12765  uint256 */\n      0x00\n        /* \"contracts/BEP.sol\":12781:12790  _balances */\n      0x01\n        /* \"contracts/BEP.sol\":12781:12799  _balances[account] */\n      0x00\n        /* \"contracts/BEP.sol\":12791:12798  account */\n      dup4\n        /* \"contracts/BEP.sol\":12781:12799  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP.sol\":12774:12799  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":12699:12805  function balanceOf(address account) external view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":10608:10738  function renounceOwnership() public onlyOwner {\r... */\n    tag_45:\n        /* \"contracts/BEP.sol\":10210:10222  _msgSender() */\n      tag_98\n        /* \"contracts/BEP.sol\":10210:10220  _msgSender */\n      tag_78\n        /* \"contracts/BEP.sol\":10210:10222  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"contracts/BEP.sol\":10200:10222  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":10200:10206  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":10200:10222  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BEP.sol\":10192:10259  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/BEP.sol\":10703:10704  0 */\n      0x00\n        /* \"contracts/BEP.sol\":10666:10706  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":10687:10693  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":10666:10706  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP.sol\":10730:10731  0 */\n      0x00\n        /* \"contracts/BEP.sol\":10713:10719  _owner */\n      dup1\n      0x00\n        /* \"contracts/BEP.sol\":10713:10732  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP.sol\":10608:10738  function renounceOwnership() public onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/BEP.sol\":12013:12092  function getOwner() external view returns (address) {\r... */\n    tag_47:\n        /* \"contracts/BEP.sol\":12056:12063  address */\n      0x00\n        /* \"contracts/BEP.sol\":12079:12086  owner() */\n      tag_102\n        /* \"contracts/BEP.sol\":12079:12084  owner */\n      tag_49\n        /* \"contracts/BEP.sol\":12079:12086  owner() */\n      jump\t// in\n    tag_102:\n        /* \"contracts/BEP.sol\":12072:12086  return owner() */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":12013:12092  function getOwner() external view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP.sol\":10006:10079  function owner() public view returns (address) {\r... */\n    tag_49:\n        /* \"contracts/BEP.sol\":10044:10051  address */\n      0x00\n        /* \"contracts/BEP.sol\":10067:10073  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":10060:10073  return _owner */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":10006:10079  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP.sol\":12287:12370  function symbol() external view returns (string memory) {\r... */\n    tag_51:\n        /* \"contracts/BEP.sol\":12328:12341  string memory */\n      0x60\n        /* \"contracts/BEP.sol\":12357:12364  _symbol */\n      0x05\n        /* \"contracts/BEP.sol\":12350:12364  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_105\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_106\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_105)\n    tag_106:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_107:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_107\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":12287:12370  function symbol() external view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP.sol\":15849:15969  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_58:\n        /* \"contracts/BEP.sol\":15905:15909  bool */\n      0x00\n        /* \"contracts/BEP.sol\":10210:10222  _msgSender() */\n      tag_109\n        /* \"contracts/BEP.sol\":10210:10220  _msgSender */\n      tag_78\n        /* \"contracts/BEP.sol\":10210:10222  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/BEP.sol\":10200:10222  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":10200:10206  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":10200:10222  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BEP.sol\":10192:10259  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"contracts/BEP.sol\":15918:15945  _mint(_msgSender(), amount) */\n      tag_112\n        /* \"contracts/BEP.sol\":15924:15936  _msgSender() */\n      tag_113\n        /* \"contracts/BEP.sol\":15924:15934  _msgSender */\n      tag_78\n        /* \"contracts/BEP.sol\":15924:15936  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"contracts/BEP.sol\":15938:15944  amount */\n      dup4\n        /* \"contracts/BEP.sol\":15918:15923  _mint */\n      tag_114\n        /* \"contracts/BEP.sol\":15918:15945  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_112:\n        /* \"contracts/BEP.sol\":15959:15963  true */\n      0x01\n        /* \"contracts/BEP.sol\":15952:15963  return true */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":15849:15969  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":15398:15649  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_61:\n        /* \"contracts/BEP.sol\":15483:15487  bool */\n      0x00\n        /* \"contracts/BEP.sol\":15496:15625  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_116\n        /* \"contracts/BEP.sol\":15505:15517  _msgSender() */\n      tag_117\n        /* \"contracts/BEP.sol\":15505:15515  _msgSender */\n      tag_78\n        /* \"contracts/BEP.sol\":15505:15517  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"contracts/BEP.sol\":15519:15526  spender */\n      dup5\n        /* \"contracts/BEP.sol\":15528:15624  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_118\n        /* \"contracts/BEP.sol\":15567:15582  subtractedValue */\n      dup6\n        /* \"contracts/BEP.sol\":15528:15624  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/BEP.sol\":15528:15539  _allowances */\n      0x02\n        /* \"contracts/BEP.sol\":15528:15553  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/BEP.sol\":15540:15552  _msgSender() */\n      tag_119\n        /* \"contracts/BEP.sol\":15540:15550  _msgSender */\n      tag_78\n        /* \"contracts/BEP.sol\":15540:15552  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/BEP.sol\":15528:15553  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP.sol\":15528:15562  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/BEP.sol\":15554:15561  spender */\n      dup11\n        /* \"contracts/BEP.sol\":15528:15562  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP.sol\":15528:15566  _allowances[_msgSender()][spender].sub */\n      tag_88\n      swap1\n        /* \"contracts/BEP.sol\":15528:15624  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"contracts/BEP.sol\":15496:15504  _approve */\n      tag_79\n        /* \"contracts/BEP.sol\":15496:15625  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/BEP.sol\":15639:15643  true */\n      0x01\n        /* \"contracts/BEP.sol\":15632:15643  return true */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":15398:15649  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":12999:13149  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_64:\n        /* \"contracts/BEP.sol\":13070:13074  bool */\n      0x00\n        /* \"contracts/BEP.sol\":13083:13125  _transfer(_msgSender(), recipient, amount) */\n      tag_121\n        /* \"contracts/BEP.sol\":13093:13105  _msgSender() */\n      tag_122\n        /* \"contracts/BEP.sol\":13093:13103  _msgSender */\n      tag_78\n        /* \"contracts/BEP.sol\":13093:13105  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"contracts/BEP.sol\":13107:13116  recipient */\n      dup5\n        /* \"contracts/BEP.sol\":13118:13124  amount */\n      dup5\n        /* \"contracts/BEP.sol\":13083:13092  _transfer */\n      tag_83\n        /* \"contracts/BEP.sol\":13083:13125  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/BEP.sol\":13139:13143  true */\n      0x01\n        /* \"contracts/BEP.sol\":13132:13143  return true */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":12999:13149  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":13203:13333  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n    tag_67:\n        /* \"contracts/BEP.sol\":13277:13284  uint256 */\n      0x00\n        /* \"contracts/BEP.sol\":13300:13311  _allowances */\n      0x02\n        /* \"contracts/BEP.sol\":13300:13318  _allowances[owner] */\n      0x00\n        /* \"contracts/BEP.sol\":13312:13317  owner */\n      dup5\n        /* \"contracts/BEP.sol\":13300:13318  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP.sol\":13300:13327  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/BEP.sol\":13319:13326  spender */\n      dup4\n        /* \"contracts/BEP.sol\":13300:13327  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP.sol\":13293:13327  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":13203:13333  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":10883:10986  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_70:\n        /* \"contracts/BEP.sol\":10210:10222  _msgSender() */\n      tag_125\n        /* \"contracts/BEP.sol\":10210:10220  _msgSender */\n      tag_78\n        /* \"contracts/BEP.sol\":10210:10222  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"contracts/BEP.sol\":10200:10222  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":10200:10206  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":10200:10222  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BEP.sol\":10192:10259  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"contracts/BEP.sol\":10952:10980  _transferOwnership(newOwner) */\n      tag_128\n        /* \"contracts/BEP.sol\":10971:10979  newOwner */\n      dup2\n        /* \"contracts/BEP.sol\":10952:10970  _transferOwnership */\n      tag_129\n        /* \"contracts/BEP.sol\":10952:10980  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/BEP.sol\":10883:10986  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":3703:3795  function _msgSender() internal view returns (address payable) {\r... */\n    tag_78:\n        /* \"contracts/BEP.sol\":3748:3763  address payable */\n      0x00\n        /* \"contracts/BEP.sol\":3779:3789  msg.sender */\n      caller\n        /* \"contracts/BEP.sol\":3772:3789  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":3703:3795  function _msgSender() internal view returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP.sol\":18479:18799  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n    tag_79:\n        /* \"contracts/BEP.sol\":18586:18587  0 */\n      0x00\n        /* \"contracts/BEP.sol\":18569:18588  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":18569:18574  owner */\n      dup4\n        /* \"contracts/BEP.sol\":18569:18588  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP.sol\":18561:18629  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"contracts/BEP.sol\":18663:18664  0 */\n      0x00\n        /* \"contracts/BEP.sol\":18644:18665  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":18644:18651  spender */\n      dup3\n        /* \"contracts/BEP.sol\":18644:18665  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP.sol\":18636:18704  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"contracts/BEP.sol\":18743:18749  amount */\n      dup1\n        /* \"contracts/BEP.sol\":18713:18724  _allowances */\n      0x02\n        /* \"contracts/BEP.sol\":18713:18731  _allowances[owner] */\n      0x00\n        /* \"contracts/BEP.sol\":18725:18730  owner */\n      dup6\n        /* \"contracts/BEP.sol\":18713:18731  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP.sol\":18713:18740  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/BEP.sol\":18732:18739  spender */\n      dup5\n        /* \"contracts/BEP.sol\":18713:18740  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP.sol\":18713:18749  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP.sol\":18777:18784  spender */\n      dup2\n        /* \"contracts/BEP.sol\":18761:18793  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":18770:18775  owner */\n      dup4\n        /* \"contracts/BEP.sol\":18761:18793  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/BEP.sol\":18786:18792  amount */\n      dup4\n        /* \"contracts/BEP.sol\":18761:18793  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP.sol\":18479:18799  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":16429:16878  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n    tag_83:\n        /* \"contracts/BEP.sol\":16541:16542  0 */\n      0x00\n        /* \"contracts/BEP.sol\":16523:16543  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":16523:16529  sender */\n      dup4\n        /* \"contracts/BEP.sol\":16523:16543  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP.sol\":16515:16585  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"contracts/BEP.sol\":16621:16622  0 */\n      0x00\n        /* \"contracts/BEP.sol\":16600:16623  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":16600:16609  recipient */\n      dup3\n        /* \"contracts/BEP.sol\":16600:16623  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP.sol\":16592:16663  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"contracts/BEP.sol\":16692:16763  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_137\n        /* \"contracts/BEP.sol\":16714:16720  amount */\n      dup2\n        /* \"contracts/BEP.sol\":16692:16763  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"contracts/BEP.sol\":16692:16701  _balances */\n      0x01\n        /* \"contracts/BEP.sol\":16692:16709  _balances[sender] */\n      0x00\n        /* \"contracts/BEP.sol\":16702:16708  sender */\n      dup8\n        /* \"contracts/BEP.sol\":16692:16709  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP.sol\":16692:16713  _balances[sender].sub */\n      tag_88\n      swap1\n        /* \"contracts/BEP.sol\":16692:16763  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"contracts/BEP.sol\":16672:16681  _balances */\n      0x01\n        /* \"contracts/BEP.sol\":16672:16689  _balances[sender] */\n      0x00\n        /* \"contracts/BEP.sol\":16682:16688  sender */\n      dup6\n        /* \"contracts/BEP.sol\":16672:16689  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP.sol\":16672:16763  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP.sol\":16793:16825  _balances[recipient].add(amount) */\n      tag_138\n        /* \"contracts/BEP.sol\":16818:16824  amount */\n      dup2\n        /* \"contracts/BEP.sol\":16793:16802  _balances */\n      0x01\n        /* \"contracts/BEP.sol\":16793:16813  _balances[recipient] */\n      0x00\n        /* \"contracts/BEP.sol\":16803:16812  recipient */\n      dup6\n        /* \"contracts/BEP.sol\":16793:16813  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP.sol\":16793:16817  _balances[recipient].add */\n      tag_95\n      swap1\n        /* \"contracts/BEP.sol\":16793:16825  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"contracts/BEP.sol\":16770:16779  _balances */\n      0x01\n        /* \"contracts/BEP.sol\":16770:16790  _balances[recipient] */\n      0x00\n        /* \"contracts/BEP.sol\":16780:16789  recipient */\n      dup5\n        /* \"contracts/BEP.sol\":16770:16790  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP.sol\":16770:16825  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP.sol\":16854:16863  recipient */\n      dup2\n        /* \"contracts/BEP.sol\":16837:16872  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":16846:16852  sender */\n      dup4\n        /* \"contracts/BEP.sol\":16837:16872  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/BEP.sol\":16865:16871  amount */\n      dup4\n        /* \"contracts/BEP.sol\":16837:16872  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP.sol\":16429:16878  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":5662:5840  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_88:\n        /* \"contracts/BEP.sol\":5748:5755  uint256 */\n      0x00\n        /* \"contracts/BEP.sol\":5777:5778  a */\n      dup4\n        /* \"contracts/BEP.sol\":5772:5773  b */\n      dup4\n        /* \"contracts/BEP.sol\":5772:5778  b <= a */\n      gt\n      iszero\n        /* \"contracts/BEP.sol\":5780:5792  errorMessage */\n      dup3\n        /* \"contracts/BEP.sol\":5764:5793  require(b <= a, errorMessage) */\n      swap1\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_141:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_143\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_141)\n    tag_143:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/BEP.sol\":5764:5793  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_144\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_144:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n      pop\n        /* \"contracts/BEP.sol\":5800:5809  uint256 c */\n      0x00\n        /* \"contracts/BEP.sol\":5816:5817  b */\n      dup4\n        /* \"contracts/BEP.sol\":5812:5813  a */\n      dup6\n        /* \"contracts/BEP.sol\":5812:5817  a - b */\n      sub\n        /* \"contracts/BEP.sol\":5800:5817  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":5833:5834  c */\n      dup1\n        /* \"contracts/BEP.sol\":5826:5834  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/BEP.sol\":5662:5840  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":4835:5002  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_95:\n        /* \"contracts/BEP.sol\":4893:4900  uint256 */\n      0x00\n        /* \"contracts/BEP.sol\":4909:4918  uint256 c */\n      dup1\n        /* \"contracts/BEP.sol\":4925:4926  b */\n      dup3\n        /* \"contracts/BEP.sol\":4921:4922  a */\n      dup5\n        /* \"contracts/BEP.sol\":4921:4926  a + b */\n      add\n        /* \"contracts/BEP.sol\":4909:4926  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/BEP.sol\":4946:4947  a */\n      dup4\n        /* \"contracts/BEP.sol\":4941:4942  c */\n      dup2\n        /* \"contracts/BEP.sol\":4941:4947  c >= a */\n      lt\n      iszero\n        /* \"contracts/BEP.sol\":4933:4979  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"contracts/BEP.sol\":4995:4996  c */\n      dup1\n        /* \"contracts/BEP.sol\":4988:4996  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/BEP.sol\":4835:5002  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":17139:17429  function _mint(address account, uint256 amount) internal {\r... */\n    tag_114:\n        /* \"contracts/BEP.sol\":17230:17231  0 */\n      0x00\n        /* \"contracts/BEP.sol\":17211:17232  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":17211:17218  account */\n      dup3\n        /* \"contracts/BEP.sol\":17211:17232  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP.sol\":17203:17268  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"contracts/BEP.sol\":17292:17316  _totalSupply.add(amount) */\n      tag_149\n        /* \"contracts/BEP.sol\":17309:17315  amount */\n      dup2\n        /* \"contracts/BEP.sol\":17292:17304  _totalSupply */\n      sload(0x03)\n        /* \"contracts/BEP.sol\":17292:17308  _totalSupply.add */\n      tag_95\n      swap1\n        /* \"contracts/BEP.sol\":17292:17316  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_149:\n        /* \"contracts/BEP.sol\":17277:17289  _totalSupply */\n      0x03\n        /* \"contracts/BEP.sol\":17277:17316  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP.sol\":17344:17374  _balances[account].add(amount) */\n      tag_150\n        /* \"contracts/BEP.sol\":17367:17373  amount */\n      dup2\n        /* \"contracts/BEP.sol\":17344:17353  _balances */\n      0x01\n        /* \"contracts/BEP.sol\":17344:17362  _balances[account] */\n      0x00\n        /* \"contracts/BEP.sol\":17354:17361  account */\n      dup6\n        /* \"contracts/BEP.sol\":17344:17362  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/BEP.sol\":17344:17366  _balances[account].add */\n      tag_95\n      swap1\n        /* \"contracts/BEP.sol\":17344:17374  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"contracts/BEP.sol\":17323:17332  _balances */\n      0x01\n        /* \"contracts/BEP.sol\":17323:17341  _balances[account] */\n      0x00\n        /* \"contracts/BEP.sol\":17333:17340  account */\n      dup5\n        /* \"contracts/BEP.sol\":17323:17341  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BEP.sol\":17323:17374  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP.sol\":17407:17414  account */\n      dup2\n        /* \"contracts/BEP.sol\":17386:17423  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":17403:17404  0 */\n      0x00\n        /* \"contracts/BEP.sol\":17386:17423  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/BEP.sol\":17416:17422  amount */\n      dup4\n        /* \"contracts/BEP.sol\":17386:17423  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP.sol\":17139:17429  function _mint(address account, uint256 amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP.sol\":11084:11299  function _transferOwnership(address newOwner) internal {\r... */\n    tag_129:\n        /* \"contracts/BEP.sol\":11174:11175  0 */\n      0x00\n        /* \"contracts/BEP.sol\":11154:11176  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":11154:11162  newOwner */\n      dup2\n        /* \"contracts/BEP.sol\":11154:11176  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/BEP.sol\":11146:11219  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"contracts/BEP.sol\":11260:11268  newOwner */\n      dup1\n        /* \"contracts/BEP.sol\":11231:11269  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":11252:11258  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BEP.sol\":11231:11269  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BEP.sol\":11285:11293  newOwner */\n      dup1\n        /* \"contracts/BEP.sol\":11276:11282  _owner */\n      0x00\n      dup1\n        /* \"contracts/BEP.sol\":11276:11293  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BEP.sol\":11084:11299  function _transferOwnership(address newOwner) internal {\r... */\n      pop\n      jump\t// out\n    stop\n    data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57 42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4 42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2 42455032303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5 42455032303a20617070726f766520746f20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a723158202f18577aec943a102a2d0c269848cbf81ca23e1d776c0a8c4ef42ea697873cdb64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1D54 CODESIZE SUB DUP1 PUSH3 0x1D54 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 PUSH3 0x1DE PUSH3 0x388 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP4 PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x294 SWAP3 SWAP2 SWAP1 PUSH3 0x390 JUMP JUMPDEST POP DUP3 PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x2AD SWAP3 SWAP2 SWAP1 PUSH3 0x390 JUMP JUMPDEST POP DUP2 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH3 0x43F JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x3D3 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x404 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x404 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x403 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x3E6 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x413 SWAP2 SWAP1 PUSH3 0x417 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x43C SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x438 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x41E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1905 DUP1 PUSH3 0x44F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x541 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x61F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x495 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x374 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x132 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x17A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x72D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH2 0x806 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x81D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37C PUSH2 0x919 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D0 PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41A PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x45A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x43F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x487 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x527 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x609 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x661 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x635 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDD2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x719 PUSH2 0x712 PUSH2 0xEA7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A DUP5 DUP5 DUP5 PUSH2 0x10A6 JUMP JUMPDEST PUSH2 0x7FB DUP5 PUSH2 0x746 PUSH2 0xEA7 JUMP JUMPDEST PUSH2 0x7F6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1819 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x7AC PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C6 PUSH2 0x82A PUSH2 0xEA7 JUMP JUMPDEST DUP5 PUSH2 0x8C1 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x83B PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x921 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAB PUSH2 0xAB0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xB71 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB46 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB71 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB54 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB85 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC57 PUSH2 0xC51 PUSH2 0xEA7 JUMP JUMPDEST DUP4 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD23 PUSH2 0xC6D PUSH2 0xEA7 JUMP JUMPDEST DUP5 PUSH2 0xD1E DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x188A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xC97 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD41 PUSH2 0xD3A PUSH2 0xEA7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDDA PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA4 DUP2 PUSH2 0x1665 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17CF PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18AF PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x112C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17AA PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1867 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x121E DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1841 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12B3 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x140D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13B7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13FF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x149E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x154B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1560 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x15B8 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x16EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17F3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A723158202F18577AEC943A LT 0x2A 0x2D 0xC 0x26 SWAP9 0x48 0xCB 0xF8 SHR LOG2 RETURNDATACOPY SAR PUSH24 0x6C0A8C4EF42EA697873CDB64736F6C634300051000320000 ",
							"sourceMap": "11306:7890:0:-;;;11636:317;8:9:-1;5:2;;;30:1;27;20:12;5:2;11636:317:0;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;11636:317:0;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;11636:317:0;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11636:317:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;11636:317:0;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11636:317:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9815:17;9835:12;:10;;;:12;;:::i;:::-;9815:32;;9863:9;9854:6;;:18;;;;;;;;;;;;;;;;;;9917:9;9884:43;;9913:1;9884:43;;;;;;;;;;;;9784:149;11753:5;11745;:13;;;;;;;;;;;;:::i;:::-;;11775:7;11765;:17;;;;;;;;;;;;:::i;:::-;;11801:9;11789;;:21;;;;;;;;;;;;;;;;;;11832:12;11817;:27;;;;11875:12;;11851:9;:21;11861:10;11851:21;;;;;;;;;;;;;;;:36;;;;11922:10;11901:46;;11918:1;11901:46;;;11934:12;;11901:46;;;;;;;;;;;;;;;;;;11636:317;;;;11306:7890;;3703:92;3748:15;3779:10;3772:17;;3703:92;:::o;11306:7890::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146104db578063a9059cbb14610541578063dd62ed3e146105a7578063f2fde38b1461061f57610100565b8063893d20e81461037e5780638da5cb5b146103c857806395d89b4114610412578063a0712d681461049557610100565b8063313ce567116100d3578063313ce5671461029257806339509351146102b657806370a082311461031c578063715018a61461037457610100565b806306fdde0314610105578063095ea7b31461018857806318160ddd146101ee57806323b872dd1461020c575b600080fd5b61010d610663565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014d578082015181840152602081019050610132565b50505050905090810190601f16801561017a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d46004803603604081101561019e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610705565b604051808215151515815260200191505060405180910390f35b6101f6610723565b6040518082815260200191505060405180910390f35b6102786004803603606081101561022257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061072d565b604051808215151515815260200191505060405180910390f35b61029a610806565b604051808260ff1660ff16815260200191505060405180910390f35b610302600480360360408110156102cc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061081d565b604051808215151515815260200191505060405180910390f35b61035e6004803603602081101561033257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108d0565b6040518082815260200191505060405180910390f35b61037c610919565b005b610386610aa1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103d0610ab0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61041a610ad9565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561045a57808201518184015260208101905061043f565b50505050905090810190601f1680156104875780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104c1600480360360208110156104ab57600080fd5b8101908080359060200190929190505050610b7b565b604051808215151515815260200191505060405180910390f35b610527600480360360408110156104f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c60565b604051808215151515815260200191505060405180910390f35b61058d6004803603604081101561055757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d2d565b604051808215151515815260200191505060405180910390f35b610609600480360360408110156105bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d4b565b6040518082815260200191505060405180910390f35b6106616004803603602081101561063557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dd2565b005b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106fb5780601f106106d0576101008083540402835291602001916106fb565b820191906000526020600020905b8154815290600101906020018083116106de57829003601f168201915b5050505050905090565b6000610719610712610ea7565b8484610eaf565b6001905092915050565b6000600354905090565b600061073a8484846110a6565b6107fb84610746610ea7565b6107f68560405180606001604052806028815260200161181960289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006107ac610ea7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113609092919063ffffffff16565b610eaf565b600190509392505050565b6000600460009054906101000a900460ff16905090565b60006108c661082a610ea7565b846108c1856002600061083b610ea7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142090919063ffffffff16565b610eaf565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610921610ea7565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610aab610ab0565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b715780601f10610b4657610100808354040283529160200191610b71565b820191906000526020600020905b815481529060010190602001808311610b5457829003601f168201915b5050505050905090565b6000610b85610ea7565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c46576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610c57610c51610ea7565b836114a8565b60019050919050565b6000610d23610c6d610ea7565b84610d1e8560405180606001604052806025815260200161188a6025913960026000610c97610ea7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113609092919063ffffffff16565b610eaf565b6001905092915050565b6000610d41610d3a610ea7565b84846110a6565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610dda610ea7565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e9b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610ea481611665565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f35576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806117cf6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fbb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806118af6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561112c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806117aa6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806118676023913960400191505060405180910390fd5b61121e8160405180606001604052806026815260200161184160269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113609092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112b381600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142090919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600083831115829061140d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156113d25780820151818401526020810190506113b7565b50505050905090810190601f1680156113ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008082840190508381101561149e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561154b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6115608160035461142090919063ffffffff16565b6003819055506115b881600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142090919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156116eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806117f36026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a723158202f18577aec943a102a2d0c269848cbf81ca23e1d776c0a8c4ef42ea697873cdb64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x541 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x61F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x495 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x374 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x132 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x17A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x72D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH2 0x806 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x81D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37C PUSH2 0x919 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D0 PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41A PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x45A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x43F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x487 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x527 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x609 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x661 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x635 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDD2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x719 PUSH2 0x712 PUSH2 0xEA7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A DUP5 DUP5 DUP5 PUSH2 0x10A6 JUMP JUMPDEST PUSH2 0x7FB DUP5 PUSH2 0x746 PUSH2 0xEA7 JUMP JUMPDEST PUSH2 0x7F6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1819 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x7AC PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C6 PUSH2 0x82A PUSH2 0xEA7 JUMP JUMPDEST DUP5 PUSH2 0x8C1 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x83B PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x921 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAB PUSH2 0xAB0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xB71 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB46 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB71 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB54 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB85 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC57 PUSH2 0xC51 PUSH2 0xEA7 JUMP JUMPDEST DUP4 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD23 PUSH2 0xC6D PUSH2 0xEA7 JUMP JUMPDEST DUP5 PUSH2 0xD1E DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x188A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xC97 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD41 PUSH2 0xD3A PUSH2 0xEA7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDDA PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA4 DUP2 PUSH2 0x1665 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17CF PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18AF PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x112C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17AA PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1867 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x121E DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1841 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12B3 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x140D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13B7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13FF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x149E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x154B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1560 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x15B8 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x16EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17F3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A723158202F18577AEC943A LT 0x2A 0x2D 0xC 0x26 SWAP9 0x48 0xCB 0xF8 SHR LOG2 RETURNDATACOPY SAR PUSH24 0x6C0A8C4EF42EA697873CDB64736F6C634300051000320000 ",
							"sourceMap": "11306:7890:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11306:7890:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12423:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12423:79:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13463:144;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13463:144:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12558:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14052:292;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14052:292:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12151:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;14726:200;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14726:200:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12699:106;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12699:106:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10608:130;;;:::i;:::-;;12013:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10006:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12287:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12287:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15849:120;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15849:120:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;15398:251;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15398:251:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12999:150;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12999:150:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;13203:130;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13203:130:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10883:103;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10883:103:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;12423:79;12462:13;12491:5;12484:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12423:79;:::o;13463:144::-;13531:4;13544:39;13553:12;:10;:12::i;:::-;13567:7;13576:6;13544:8;:39::i;:::-;13597:4;13590:11;;13463:144;;;;:::o;12558:87::-;12604:7;12627:12;;12620:19;;12558:87;:::o;14052:292::-;14143:4;14156:36;14166:6;14174:9;14185:6;14156:9;:36::i;:::-;14199:121;14208:6;14216:12;:10;:12::i;:::-;14230:89;14268:6;14230:89;;;;;;;;;;;;;;;;;:11;:19;14242:6;14230:19;;;;;;;;;;;;;;;:33;14250:12;:10;:12::i;:::-;14230:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;14199:8;:121::i;:::-;14334:4;14327:11;;14052:292;;;;;:::o;12151:79::-;12194:5;12215:9;;;;;;;;;;;12208:16;;12151:79;:::o;14726:200::-;14806:4;14819:83;14828:12;:10;:12::i;:::-;14842:7;14851:50;14890:10;14851:11;:25;14863:12;:10;:12::i;:::-;14851:25;;;;;;;;;;;;;;;:34;14877:7;14851:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;14819:8;:83::i;:::-;14916:4;14909:11;;14726:200;;;;:::o;12699:106::-;12758:7;12781:9;:18;12791:7;12781:18;;;;;;;;;;;;;;;;12774:25;;12699:106;;;:::o;10608:130::-;10210:12;:10;:12::i;:::-;10200:22;;:6;;;;;;;;;;;:22;;;10192:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10703:1;10666:40;;10687:6;;;;;;;;;;;10666:40;;;;;;;;;;;;10730:1;10713:6;;:19;;;;;;;;;;;;;;;;;;10608:130::o;12013:79::-;12056:7;12079;:5;:7::i;:::-;12072:14;;12013:79;:::o;10006:73::-;10044:7;10067:6;;;;;;;;;;;10060:13;;10006:73;:::o;12287:83::-;12328:13;12357:7;12350:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12287:83;:::o;15849:120::-;15905:4;10210:12;:10;:12::i;:::-;10200:22;;:6;;;;;;;;;;;:22;;;10192:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15918:27;15924:12;:10;:12::i;:::-;15938:6;15918:5;:27::i;:::-;15959:4;15952:11;;15849:120;;;:::o;15398:251::-;15483:4;15496:129;15505:12;:10;:12::i;:::-;15519:7;15528:96;15567:15;15528:96;;;;;;;;;;;;;;;;;:11;:25;15540:12;:10;:12::i;:::-;15528:25;;;;;;;;;;;;;;;:34;15554:7;15528:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;15496:8;:129::i;:::-;15639:4;15632:11;;15398:251;;;;:::o;12999:150::-;13070:4;13083:42;13093:12;:10;:12::i;:::-;13107:9;13118:6;13083:9;:42::i;:::-;13139:4;13132:11;;12999:150;;;;:::o;13203:130::-;13277:7;13300:11;:18;13312:5;13300:18;;;;;;;;;;;;;;;:27;13319:7;13300:27;;;;;;;;;;;;;;;;13293:34;;13203:130;;;;:::o;10883:103::-;10210:12;:10;:12::i;:::-;10200:22;;:6;;;;;;;;;;;:22;;;10192:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10952:28;10971:8;10952:18;:28::i;:::-;10883:103;:::o;3703:92::-;3748:15;3779:10;3772:17;;3703:92;:::o;18479:320::-;18586:1;18569:19;;:5;:19;;;;18561:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18663:1;18644:21;;:7;:21;;;;18636:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18743:6;18713:11;:18;18725:5;18713:18;;;;;;;;;;;;;;;:27;18732:7;18713:27;;;;;;;;;;;;;;;:36;;;;18777:7;18761:32;;18770:5;18761:32;;;18786:6;18761:32;;;;;;;;;;;;;;;;;;18479:320;;;:::o;16429:449::-;16541:1;16523:20;;:6;:20;;;;16515:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16621:1;16600:23;;:9;:23;;;;16592:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16692;16714:6;16692:71;;;;;;;;;;;;;;;;;:9;:17;16702:6;16692:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;16672:9;:17;16682:6;16672:17;;;;;;;;;;;;;;;:91;;;;16793:32;16818:6;16793:9;:20;16803:9;16793:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;16770:9;:20;16780:9;16770:20;;;;;;;;;;;;;;;:55;;;;16854:9;16837:35;;16846:6;16837:35;;;16865:6;16837:35;;;;;;;;;;;;;;;;;;16429:449;;;:::o;5662:178::-;5748:7;5777:1;5772;:6;;5780:12;5764:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5764:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5800:9;5816:1;5812;:5;5800:17;;5833:1;5826:8;;;5662:178;;;;;:::o;4835:167::-;4893:7;4909:9;4925:1;4921;:5;4909:17;;4946:1;4941;:6;;4933:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4995:1;4988:8;;;4835:167;;;;:::o;17139:290::-;17230:1;17211:21;;:7;:21;;;;17203:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17292:24;17309:6;17292:12;;:16;;:24;;;;:::i;:::-;17277:12;:39;;;;17344:30;17367:6;17344:9;:18;17354:7;17344:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;17323:9;:18;17333:7;17323:18;;;;;;;;;;;;;;;:51;;;;17407:7;17386:37;;17403:1;17386:37;;;17416:6;17386:37;;;;;;;;;;;;;;;;;;17139:290;;:::o;11084:215::-;11174:1;11154:22;;:8;:22;;;;11146:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11260:8;11231:38;;11252:6;;;;;;;;;;;11231:38;;;;;;;;;;;;11285:8;11276:6;;:17;;;;;;;;;;;;;;;;;;11084:215;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1281000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1387",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1263",
								"decimals()": "1084",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1119",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1106",
								"renounceOwnership()": "24386",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "MSTORE"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "POP"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "MLOAD"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSHSIZE"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "CODESIZE"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SUB"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSHSIZE"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP4"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "CODECOPY"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP2"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP2"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "ADD"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 16,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 17,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP2"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "ADD"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "MLOAD"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "MLOAD"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP4"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP3"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP2"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP5"
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3"
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI"
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1"
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4"
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP"
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3"
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD"
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6"
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI"
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1"
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST"
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3"
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD"
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP7"
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3"
								},
								{
									"begin": 307,
									"end": 327,
									"name": "MUL"
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4"
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD"
								},
								{
									"begin": 282,
									"end": 340,
									"name": "GT"
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3"
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT"
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI"
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1"
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST"
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP1"
								},
								{
									"begin": 379,
									"end": 382,
									"name": "DUP4"
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE"
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 415,
									"end": 418,
									"name": "DUP4"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "SWAP3"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "MLOAD"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "ADD"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP4"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP4"
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI"
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1"
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD"
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD"
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2"
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD"
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE"
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2"
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "POP"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "POP"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "POP"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "POP"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP2"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "ADD"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "AND"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "ISZERO"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "JUMPI"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP3"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SUB"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "MLOAD"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP4"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SUB"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "EXP"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SUB"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "NOT"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "AND"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP2"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "MSTORE"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "ADD"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP2"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "POP"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "JUMPDEST"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "POP"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "MSTORE"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "ADD"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "MLOAD"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "MLOAD"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP4"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP3"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP2"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP5"
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3"
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI"
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1"
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4"
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP"
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3"
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD"
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6"
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI"
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1"
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST"
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3"
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD"
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP7"
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3"
								},
								{
									"begin": 307,
									"end": 327,
									"name": "MUL"
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4"
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD"
								},
								{
									"begin": 282,
									"end": 340,
									"name": "GT"
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3"
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT"
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI"
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1"
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST"
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP1"
								},
								{
									"begin": 379,
									"end": 382,
									"name": "DUP4"
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE"
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 415,
									"end": 418,
									"name": "DUP4"
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "SWAP3"
								},
								{
									"begin": 404,
									"end": 425,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "MLOAD"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "ADD"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP4"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP4"
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI"
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1"
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD"
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD"
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2"
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD"
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE"
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2"
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "POP"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "POP"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "POP"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "POP"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP2"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "ADD"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "AND"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "ISZERO"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "JUMPI"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP3"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SUB"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "MLOAD"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP4"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SUB"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "EXP"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SUB"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "NOT"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "AND"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP2"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "MSTORE"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "ADD"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP2"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "POP"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "JUMPDEST"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "POP"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "MSTORE"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "ADD"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "MLOAD"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "ADD"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP3"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP2"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "DUP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "MLOAD"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "ADD"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP3"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP2"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "SWAP1"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "POP"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "POP"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "POP"
								},
								{
									"begin": 9815,
									"end": 9832,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9835,
									"end": 9847,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 9835,
									"end": 9845,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 9835,
									"end": 9845,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9835,
									"end": 9845,
									"name": "SHL"
								},
								{
									"begin": 9835,
									"end": 9847,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9835,
									"end": 9847,
									"name": "SHR"
								},
								{
									"begin": 9835,
									"end": 9847,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 9835,
									"end": 9847,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 9835,
									"end": 9847,
									"name": "JUMPDEST"
								},
								{
									"begin": 9815,
									"end": 9847,
									"name": "SWAP1"
								},
								{
									"begin": 9815,
									"end": 9847,
									"name": "POP"
								},
								{
									"begin": 9863,
									"end": 9872,
									"name": "DUP1"
								},
								{
									"begin": 9854,
									"end": 9860,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9854,
									"end": 9860,
									"name": "DUP1"
								},
								{
									"begin": 9854,
									"end": 9872,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 9854,
									"end": 9872,
									"name": "EXP"
								},
								{
									"begin": 9854,
									"end": 9872,
									"name": "DUP2"
								},
								{
									"begin": 9854,
									"end": 9872,
									"name": "SLOAD"
								},
								{
									"begin": 9854,
									"end": 9872,
									"name": "DUP2"
								},
								{
									"begin": 9854,
									"end": 9872,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9854,
									"end": 9872,
									"name": "MUL"
								},
								{
									"begin": 9854,
									"end": 9872,
									"name": "NOT"
								},
								{
									"begin": 9854,
									"end": 9872,
									"name": "AND"
								},
								{
									"begin": 9854,
									"end": 9872,
									"name": "SWAP1"
								},
								{
									"begin": 9854,
									"end": 9872,
									"name": "DUP4"
								},
								{
									"begin": 9854,
									"end": 9872,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9854,
									"end": 9872,
									"name": "AND"
								},
								{
									"begin": 9854,
									"end": 9872,
									"name": "MUL"
								},
								{
									"begin": 9854,
									"end": 9872,
									"name": "OR"
								},
								{
									"begin": 9854,
									"end": 9872,
									"name": "SWAP1"
								},
								{
									"begin": 9854,
									"end": 9872,
									"name": "SSTORE"
								},
								{
									"begin": 9854,
									"end": 9872,
									"name": "POP"
								},
								{
									"begin": 9917,
									"end": 9926,
									"name": "DUP1"
								},
								{
									"begin": 9884,
									"end": 9927,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9884,
									"end": 9927,
									"name": "AND"
								},
								{
									"begin": 9913,
									"end": 9914,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9884,
									"end": 9927,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9884,
									"end": 9927,
									"name": "AND"
								},
								{
									"begin": 9884,
									"end": 9927,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 9884,
									"end": 9927,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9884,
									"end": 9927,
									"name": "MLOAD"
								},
								{
									"begin": 9884,
									"end": 9927,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9884,
									"end": 9927,
									"name": "MLOAD"
								},
								{
									"begin": 9884,
									"end": 9927,
									"name": "DUP1"
								},
								{
									"begin": 9884,
									"end": 9927,
									"name": "SWAP2"
								},
								{
									"begin": 9884,
									"end": 9927,
									"name": "SUB"
								},
								{
									"begin": 9884,
									"end": 9927,
									"name": "SWAP1"
								},
								{
									"begin": 9884,
									"end": 9927,
									"name": "LOG3"
								},
								{
									"begin": 9784,
									"end": 9933,
									"name": "POP"
								},
								{
									"begin": 11753,
									"end": 11758,
									"name": "DUP4"
								},
								{
									"begin": 11745,
									"end": 11750,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 11745,
									"end": 11758,
									"name": "SWAP1"
								},
								{
									"begin": 11745,
									"end": 11758,
									"name": "DUP1"
								},
								{
									"begin": 11745,
									"end": 11758,
									"name": "MLOAD"
								},
								{
									"begin": 11745,
									"end": 11758,
									"name": "SWAP1"
								},
								{
									"begin": 11745,
									"end": 11758,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11745,
									"end": 11758,
									"name": "ADD"
								},
								{
									"begin": 11745,
									"end": 11758,
									"name": "SWAP1"
								},
								{
									"begin": 11745,
									"end": 11758,
									"name": "PUSH [tag]",
									"value": "25"
								},
								{
									"begin": 11745,
									"end": 11758,
									"name": "SWAP3"
								},
								{
									"begin": 11745,
									"end": 11758,
									"name": "SWAP2"
								},
								{
									"begin": 11745,
									"end": 11758,
									"name": "SWAP1"
								},
								{
									"begin": 11745,
									"end": 11758,
									"name": "PUSH [tag]",
									"value": "26"
								},
								{
									"begin": 11745,
									"end": 11758,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11745,
									"end": 11758,
									"name": "tag",
									"value": "25"
								},
								{
									"begin": 11745,
									"end": 11758,
									"name": "JUMPDEST"
								},
								{
									"begin": 11745,
									"end": 11758,
									"name": "POP"
								},
								{
									"begin": 11775,
									"end": 11782,
									"name": "DUP3"
								},
								{
									"begin": 11765,
									"end": 11772,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 11765,
									"end": 11782,
									"name": "SWAP1"
								},
								{
									"begin": 11765,
									"end": 11782,
									"name": "DUP1"
								},
								{
									"begin": 11765,
									"end": 11782,
									"name": "MLOAD"
								},
								{
									"begin": 11765,
									"end": 11782,
									"name": "SWAP1"
								},
								{
									"begin": 11765,
									"end": 11782,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11765,
									"end": 11782,
									"name": "ADD"
								},
								{
									"begin": 11765,
									"end": 11782,
									"name": "SWAP1"
								},
								{
									"begin": 11765,
									"end": 11782,
									"name": "PUSH [tag]",
									"value": "27"
								},
								{
									"begin": 11765,
									"end": 11782,
									"name": "SWAP3"
								},
								{
									"begin": 11765,
									"end": 11782,
									"name": "SWAP2"
								},
								{
									"begin": 11765,
									"end": 11782,
									"name": "SWAP1"
								},
								{
									"begin": 11765,
									"end": 11782,
									"name": "PUSH [tag]",
									"value": "26"
								},
								{
									"begin": 11765,
									"end": 11782,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11765,
									"end": 11782,
									"name": "tag",
									"value": "27"
								},
								{
									"begin": 11765,
									"end": 11782,
									"name": "JUMPDEST"
								},
								{
									"begin": 11765,
									"end": 11782,
									"name": "POP"
								},
								{
									"begin": 11801,
									"end": 11810,
									"name": "DUP2"
								},
								{
									"begin": 11789,
									"end": 11798,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 11789,
									"end": 11798,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11789,
									"end": 11810,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 11789,
									"end": 11810,
									"name": "EXP"
								},
								{
									"begin": 11789,
									"end": 11810,
									"name": "DUP2"
								},
								{
									"begin": 11789,
									"end": 11810,
									"name": "SLOAD"
								},
								{
									"begin": 11789,
									"end": 11810,
									"name": "DUP2"
								},
								{
									"begin": 11789,
									"end": 11810,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11789,
									"end": 11810,
									"name": "MUL"
								},
								{
									"begin": 11789,
									"end": 11810,
									"name": "NOT"
								},
								{
									"begin": 11789,
									"end": 11810,
									"name": "AND"
								},
								{
									"begin": 11789,
									"end": 11810,
									"name": "SWAP1"
								},
								{
									"begin": 11789,
									"end": 11810,
									"name": "DUP4"
								},
								{
									"begin": 11789,
									"end": 11810,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11789,
									"end": 11810,
									"name": "AND"
								},
								{
									"begin": 11789,
									"end": 11810,
									"name": "MUL"
								},
								{
									"begin": 11789,
									"end": 11810,
									"name": "OR"
								},
								{
									"begin": 11789,
									"end": 11810,
									"name": "SWAP1"
								},
								{
									"begin": 11789,
									"end": 11810,
									"name": "SSTORE"
								},
								{
									"begin": 11789,
									"end": 11810,
									"name": "POP"
								},
								{
									"begin": 11832,
									"end": 11844,
									"name": "DUP1"
								},
								{
									"begin": 11817,
									"end": 11829,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11817,
									"end": 11844,
									"name": "DUP2"
								},
								{
									"begin": 11817,
									"end": 11844,
									"name": "SWAP1"
								},
								{
									"begin": 11817,
									"end": 11844,
									"name": "SSTORE"
								},
								{
									"begin": 11817,
									"end": 11844,
									"name": "POP"
								},
								{
									"begin": 11875,
									"end": 11887,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11875,
									"end": 11887,
									"name": "SLOAD"
								},
								{
									"begin": 11851,
									"end": 11860,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11861,
									"end": 11871,
									"name": "CALLER"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "AND"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "AND"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "DUP2"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "MSTORE"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "ADD"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "SWAP1"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "DUP2"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "MSTORE"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "ADD"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11851,
									"end": 11872,
									"name": "KECCAK256"
								},
								{
									"begin": 11851,
									"end": 11887,
									"name": "DUP2"
								},
								{
									"begin": 11851,
									"end": 11887,
									"name": "SWAP1"
								},
								{
									"begin": 11851,
									"end": 11887,
									"name": "SSTORE"
								},
								{
									"begin": 11851,
									"end": 11887,
									"name": "POP"
								},
								{
									"begin": 11922,
									"end": 11932,
									"name": "CALLER"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "AND"
								},
								{
									"begin": 11918,
									"end": 11919,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "AND"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 11934,
									"end": 11946,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11934,
									"end": 11946,
									"name": "SLOAD"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "MLOAD"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "DUP1"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "DUP3"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "DUP2"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "MSTORE"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "ADD"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "SWAP2"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "POP"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "POP"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "MLOAD"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "DUP1"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "SWAP2"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "SUB"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "SWAP1"
								},
								{
									"begin": 11901,
									"end": 11947,
									"name": "LOG3"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "POP"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "POP"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "POP"
								},
								{
									"begin": 11636,
									"end": 11953,
									"name": "POP"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH [tag]",
									"value": "28"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "JUMP"
								},
								{
									"begin": 3703,
									"end": 3795,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 3703,
									"end": 3795,
									"name": "JUMPDEST"
								},
								{
									"begin": 3748,
									"end": 3763,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3779,
									"end": 3789,
									"name": "CALLER"
								},
								{
									"begin": 3772,
									"end": 3789,
									"name": "SWAP1"
								},
								{
									"begin": 3772,
									"end": 3789,
									"name": "POP"
								},
								{
									"begin": 3703,
									"end": 3795,
									"name": "SWAP1"
								},
								{
									"begin": 3703,
									"end": 3795,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "tag",
									"value": "26"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "JUMPDEST"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "DUP3"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "DUP1"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "SLOAD"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "DUP2"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "AND"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "ISZERO"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "MUL"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "SUB"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "AND"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "SWAP1"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "DIV"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "SWAP1"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "MSTORE"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "KECCAK256"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "SWAP1"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "ADD"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "SWAP1"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "DIV"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "DUP2"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "ADD"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "SWAP3"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "DUP3"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "LT"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH [tag]",
									"value": "31"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "JUMPI"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "DUP1"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "MLOAD"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "NOT"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "AND"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "DUP4"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "DUP1"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "ADD"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "OR"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "DUP6"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "SSTORE"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH [tag]",
									"value": "30"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "JUMP"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "tag",
									"value": "31"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "JUMPDEST"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "DUP3"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "DUP1"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "ADD"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "ADD"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "DUP6"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "SSTORE"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "DUP3"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "ISZERO"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH [tag]",
									"value": "30"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "JUMPI"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "SWAP2"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "DUP3"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "ADD"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "tag",
									"value": "32"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "JUMPDEST"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "DUP3"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "DUP2"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "GT"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "ISZERO"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH [tag]",
									"value": "33"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "JUMPI"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "DUP3"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "MLOAD"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "DUP3"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "SSTORE"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "SWAP2"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "ADD"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "SWAP2"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "SWAP1"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "ADD"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "SWAP1"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH [tag]",
									"value": "32"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "JUMP"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "tag",
									"value": "33"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "JUMPDEST"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "tag",
									"value": "30"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "JUMPDEST"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "POP"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "SWAP1"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "POP"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH [tag]",
									"value": "34"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "SWAP2"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "SWAP1"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH [tag]",
									"value": "35"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "tag",
									"value": "34"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "JUMPDEST"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "POP"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "SWAP1"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "tag",
									"value": "35"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "JUMPDEST"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH [tag]",
									"value": "36"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "SWAP2"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "SWAP1"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "tag",
									"value": "37"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "JUMPDEST"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "DUP1"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "DUP3"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "GT"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "ISZERO"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH [tag]",
									"value": "38"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "JUMPI"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "DUP2"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "SWAP1"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "SSTORE"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "POP"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "ADD"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH [tag]",
									"value": "37"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "JUMP"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "tag",
									"value": "38"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "JUMPDEST"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "POP"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "SWAP1"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "JUMP"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "tag",
									"value": "36"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "JUMPDEST"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "SWAP1"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "tag",
									"value": "28"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "JUMPDEST"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "DUP1"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "CODECOPY"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11306,
									"end": 19196,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158202f18577aec943a102a2d0c269848cbf81ca23e1d776c0a8c4ef42ea697873cdb64736f6c63430005100032",
									".code": [
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "MSTORE"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "POP"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "LT"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMPI"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "SHR"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "DUP1"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "GT"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMPI"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "DUP1"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "GT"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMPI"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "DUP1"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "EQ"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMPI"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "DUP1"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "EQ"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMPI"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "DUP1"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "EQ"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMPI"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "DUP1"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "EQ"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMPI"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMP"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMPDEST"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "DUP1"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "EQ"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMPI"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "DUP1"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "EQ"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMPI"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "DUP1"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "EQ"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMPI"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "DUP1"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH",
											"value": "A0712D68"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "EQ"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMPI"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMP"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMPDEST"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "DUP1"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "GT"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMPI"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "DUP1"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "EQ"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMPI"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "DUP1"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "EQ"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMPI"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "DUP1"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "EQ"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMPI"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "DUP1"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "EQ"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMPI"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMP"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMPDEST"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "DUP1"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "EQ"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMPI"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "DUP1"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "EQ"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMPI"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "DUP1"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "EQ"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMPI"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "DUP1"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "EQ"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMPI"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "JUMPDEST"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "DUP1"
										},
										{
											"begin": 11306,
											"end": 19196,
											"name": "REVERT"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "JUMPDEST"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "JUMPDEST"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "MLOAD"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "ADD"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP3"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP2"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SUB"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP3"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "MSTORE"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP4"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP2"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP2"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "MLOAD"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP2"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "MSTORE"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "ADD"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SWAP2"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "POP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "MLOAD"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SWAP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "ADD"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SWAP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP4"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "POP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "POP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "POP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SWAP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "POP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SWAP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP2"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "ADD"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SWAP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "AND"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "ISZERO"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "JUMPI"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP3"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SUB"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "MLOAD"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP4"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SUB"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "EXP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SUB"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "NOT"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "AND"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP2"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "MSTORE"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "ADD"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SWAP2"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "POP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "JUMPDEST"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "POP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SWAP3"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "POP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "POP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "POP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "MLOAD"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "DUP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SWAP2"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SUB"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SWAP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "RETURN"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "JUMPDEST"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "DUP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "DUP2"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "ADD"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "DUP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "DUP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "AND"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "ADD"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP3"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP2"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "DUP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "ADD"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP3"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP2"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "POP"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "POP"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "POP"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "JUMPDEST"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "MLOAD"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "DUP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "DUP3"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "ISZERO"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "ISZERO"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "ISZERO"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "ISZERO"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "DUP2"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "MSTORE"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "ADD"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP2"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "POP"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "POP"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "MLOAD"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "DUP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP2"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SUB"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP1"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "RETURN"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "JUMPDEST"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "JUMPDEST"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "MLOAD"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "DUP1"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "DUP3"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "DUP2"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "MSTORE"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "ADD"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "SWAP2"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "POP"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "POP"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "MLOAD"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "DUP1"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "SWAP2"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "SUB"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "SWAP1"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "RETURN"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "JUMPDEST"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "DUP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "DUP2"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "ADD"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "DUP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "DUP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "AND"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "ADD"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP3"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP2"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "DUP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "AND"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "ADD"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP3"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP2"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "DUP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "ADD"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP3"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP2"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "POP"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "POP"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "POP"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "JUMPDEST"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "MLOAD"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "DUP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "DUP3"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "ISZERO"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "ISZERO"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "ISZERO"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "ISZERO"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "DUP2"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "MSTORE"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "ADD"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP2"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "POP"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "POP"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "MLOAD"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "DUP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP2"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SUB"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP1"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "RETURN"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "JUMPDEST"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "JUMPDEST"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "MLOAD"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "DUP1"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "DUP3"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "AND"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "AND"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "DUP2"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "MSTORE"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "ADD"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "SWAP2"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "POP"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "POP"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "MLOAD"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "DUP1"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "SWAP2"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "SUB"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "SWAP1"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "RETURN"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "JUMPDEST"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "DUP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "DUP2"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "ADD"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "DUP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "DUP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "AND"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "ADD"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP3"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP2"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "DUP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "ADD"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP3"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP2"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "POP"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "POP"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "POP"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "JUMPDEST"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "MLOAD"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "DUP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "DUP3"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "ISZERO"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "ISZERO"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "ISZERO"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "ISZERO"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "DUP2"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "MSTORE"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "ADD"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP2"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "POP"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "POP"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "MLOAD"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "DUP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP2"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SUB"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP1"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "RETURN"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "JUMPDEST"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "DUP1"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "DUP2"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "ADD"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SWAP1"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "DUP1"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "DUP1"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "AND"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SWAP1"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "ADD"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SWAP1"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SWAP3"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SWAP2"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SWAP1"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "POP"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "POP"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "POP"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "JUMPDEST"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "MLOAD"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "DUP1"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "DUP3"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "DUP2"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "MSTORE"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "ADD"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SWAP2"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "POP"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "POP"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "MLOAD"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "DUP1"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SWAP2"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SUB"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SWAP1"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "RETURN"
										},
										{
											"begin": 10608,
											"end": 10738,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 10608,
											"end": 10738,
											"name": "JUMPDEST"
										},
										{
											"begin": 10608,
											"end": 10738,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 10608,
											"end": 10738,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 10608,
											"end": 10738,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10608,
											"end": 10738,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 10608,
											"end": 10738,
											"name": "JUMPDEST"
										},
										{
											"begin": 10608,
											"end": 10738,
											"name": "STOP"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "JUMPDEST"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "JUMPDEST"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "MLOAD"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "DUP1"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "DUP3"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "AND"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "AND"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "DUP2"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "MSTORE"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "ADD"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "SWAP2"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "POP"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "POP"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "MLOAD"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "DUP1"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "SWAP2"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "SUB"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "SWAP1"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "RETURN"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "JUMPDEST"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "JUMPDEST"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "MLOAD"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "DUP1"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "DUP3"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "AND"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "AND"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "DUP2"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "MSTORE"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "ADD"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "SWAP2"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "POP"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "POP"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "MLOAD"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "DUP1"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "SWAP2"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "SUB"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "SWAP1"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "RETURN"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "JUMPDEST"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "JUMPDEST"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "MLOAD"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "ADD"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP3"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP2"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SUB"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP3"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "MSTORE"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP4"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP2"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP2"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "MLOAD"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP2"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "MSTORE"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "ADD"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SWAP2"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "MLOAD"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SWAP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "ADD"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SWAP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP4"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SWAP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SWAP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP2"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "ADD"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SWAP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "AND"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "ISZERO"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "JUMPI"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP3"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SUB"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "MLOAD"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP4"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SUB"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "EXP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SUB"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "NOT"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "AND"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP2"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "MSTORE"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "ADD"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SWAP2"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "JUMPDEST"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SWAP3"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "MLOAD"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "DUP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SWAP2"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SUB"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SWAP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "RETURN"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "JUMPDEST"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "DUP1"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "DUP2"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "ADD"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "SWAP1"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "DUP1"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "DUP1"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "SWAP1"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "ADD"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "SWAP1"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "SWAP3"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "SWAP2"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "SWAP1"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "POP"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "POP"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "POP"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "JUMPDEST"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "MLOAD"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "DUP1"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "DUP3"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "ISZERO"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "ISZERO"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "ISZERO"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "ISZERO"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "DUP2"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "MSTORE"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "ADD"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "SWAP2"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "POP"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "POP"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "MLOAD"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "DUP1"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "SWAP2"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "SUB"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "SWAP1"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "RETURN"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "JUMPDEST"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "DUP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "DUP2"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "ADD"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "DUP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "DUP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "AND"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "ADD"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP3"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP2"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "DUP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "ADD"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP3"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP2"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "POP"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "POP"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "POP"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "JUMPDEST"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "MLOAD"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "DUP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "DUP3"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "ISZERO"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "ISZERO"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "ISZERO"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "ISZERO"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "DUP2"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "MSTORE"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "ADD"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP2"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "POP"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "POP"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "MLOAD"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "DUP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP2"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SUB"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP1"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "RETURN"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "JUMPDEST"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "DUP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "DUP2"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "ADD"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "DUP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "DUP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "AND"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "ADD"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP3"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP2"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "DUP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "ADD"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP3"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP2"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "JUMPDEST"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "MLOAD"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "DUP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "DUP3"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "ISZERO"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "ISZERO"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "ISZERO"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "ISZERO"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "DUP2"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "MSTORE"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "ADD"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP2"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "MLOAD"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "DUP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP2"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SUB"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP1"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "RETURN"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "JUMPDEST"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "DUP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "DUP2"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "ADD"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "DUP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "DUP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "AND"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "ADD"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP3"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP2"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "DUP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "AND"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "ADD"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP3"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP2"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "POP"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "POP"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "POP"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "JUMPDEST"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "MLOAD"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "DUP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "DUP3"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "DUP2"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "MSTORE"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "ADD"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP2"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "POP"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "POP"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "MLOAD"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "DUP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP2"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SUB"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP1"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "RETURN"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "JUMPDEST"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "DUP1"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "DUP2"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "ADD"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "SWAP1"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "DUP1"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "DUP1"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "AND"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "SWAP1"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "ADD"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "SWAP1"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "SWAP3"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "SWAP2"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "SWAP1"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "POP"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "POP"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "POP"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "JUMPDEST"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "STOP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "JUMPDEST"
										},
										{
											"begin": 12462,
											"end": 12475,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 12491,
											"end": 12496,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SLOAD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "AND"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "ISZERO"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "MUL"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SUB"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "AND"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DIV"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "ADD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DIV"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "MUL"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "ADD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "MLOAD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "ADD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "MSTORE"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP3"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "MSTORE"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "ADD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP3"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SLOAD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "AND"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "ISZERO"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "MUL"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SUB"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "AND"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DIV"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "ISZERO"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "JUMPI"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "LT"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "JUMPI"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP4"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SLOAD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DIV"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "MUL"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP4"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "MSTORE"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "ADD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "JUMP"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "JUMPDEST"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP3"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "ADD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "MSTORE"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "KECCAK256"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "JUMPDEST"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SLOAD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "MSTORE"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "ADD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "ADD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP4"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "GT"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "JUMPI"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP3"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SUB"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "AND"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "DUP3"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "ADD"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP2"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "JUMPDEST"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "POP"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "POP"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "POP"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "POP"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "POP"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "SWAP1"
										},
										{
											"begin": 12484,
											"end": 12496,
											"name": "POP"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "SWAP1"
										},
										{
											"begin": 12423,
											"end": 12502,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "JUMPDEST"
										},
										{
											"begin": 13531,
											"end": 13535,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13544,
											"end": 13583,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 13553,
											"end": 13565,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 13553,
											"end": 13563,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 13553,
											"end": 13565,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13553,
											"end": 13565,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 13553,
											"end": 13565,
											"name": "JUMPDEST"
										},
										{
											"begin": 13567,
											"end": 13574,
											"name": "DUP5"
										},
										{
											"begin": 13576,
											"end": 13582,
											"name": "DUP5"
										},
										{
											"begin": 13544,
											"end": 13552,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 13544,
											"end": 13583,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13544,
											"end": 13583,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 13544,
											"end": 13583,
											"name": "JUMPDEST"
										},
										{
											"begin": 13597,
											"end": 13601,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13590,
											"end": 13601,
											"name": "SWAP1"
										},
										{
											"begin": 13590,
											"end": 13601,
											"name": "POP"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP3"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "SWAP2"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "POP"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "POP"
										},
										{
											"begin": 13463,
											"end": 13607,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "JUMPDEST"
										},
										{
											"begin": 12604,
											"end": 12611,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12627,
											"end": 12639,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 12627,
											"end": 12639,
											"name": "SLOAD"
										},
										{
											"begin": 12620,
											"end": 12639,
											"name": "SWAP1"
										},
										{
											"begin": 12620,
											"end": 12639,
											"name": "POP"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "SWAP1"
										},
										{
											"begin": 12558,
											"end": 12645,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "JUMPDEST"
										},
										{
											"begin": 14143,
											"end": 14147,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14156,
											"end": 14192,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 14166,
											"end": 14172,
											"name": "DUP5"
										},
										{
											"begin": 14174,
											"end": 14183,
											"name": "DUP5"
										},
										{
											"begin": 14185,
											"end": 14191,
											"name": "DUP5"
										},
										{
											"begin": 14156,
											"end": 14165,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 14156,
											"end": 14192,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14156,
											"end": 14192,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 14156,
											"end": 14192,
											"name": "JUMPDEST"
										},
										{
											"begin": 14199,
											"end": 14320,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 14208,
											"end": 14214,
											"name": "DUP5"
										},
										{
											"begin": 14216,
											"end": 14228,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 14216,
											"end": 14226,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 14216,
											"end": 14228,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14216,
											"end": 14228,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 14216,
											"end": 14228,
											"name": "JUMPDEST"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 14268,
											"end": 14274,
											"name": "DUP6"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "MLOAD"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "DUP1"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "ADD"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "MSTORE"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "DUP1"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "DUP2"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "MSTORE"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "ADD"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "PUSH data",
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "SWAP2"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "CODECOPY"
										},
										{
											"begin": 14230,
											"end": 14241,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14242,
											"end": 14248,
											"name": "DUP12"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "AND"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "AND"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "DUP2"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "MSTORE"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "ADD"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "SWAP1"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "DUP2"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "MSTORE"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "ADD"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "KECCAK256"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14250,
											"end": 14262,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 14250,
											"end": 14260,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 14250,
											"end": 14262,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14250,
											"end": 14262,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 14250,
											"end": 14262,
											"name": "JUMPDEST"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "AND"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "AND"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "DUP2"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "MSTORE"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "ADD"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "SWAP1"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "DUP2"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "MSTORE"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "ADD"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "KECCAK256"
										},
										{
											"begin": 14230,
											"end": 14263,
											"name": "SLOAD"
										},
										{
											"begin": 14230,
											"end": 14267,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 14230,
											"end": 14267,
											"name": "SWAP1"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "SWAP3"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "SWAP2"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "SWAP1"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "AND"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 14230,
											"end": 14319,
											"name": "JUMPDEST"
										},
										{
											"begin": 14199,
											"end": 14207,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 14199,
											"end": 14320,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14199,
											"end": 14320,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 14199,
											"end": 14320,
											"name": "JUMPDEST"
										},
										{
											"begin": 14334,
											"end": 14338,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14327,
											"end": 14338,
											"name": "SWAP1"
										},
										{
											"begin": 14327,
											"end": 14338,
											"name": "POP"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP4"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "SWAP3"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "POP"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "POP"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "POP"
										},
										{
											"begin": 14052,
											"end": 14344,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "JUMPDEST"
										},
										{
											"begin": 12194,
											"end": 12199,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12215,
											"end": 12224,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12215,
											"end": 12224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12215,
											"end": 12224,
											"name": "SWAP1"
										},
										{
											"begin": 12215,
											"end": 12224,
											"name": "SLOAD"
										},
										{
											"begin": 12215,
											"end": 12224,
											"name": "SWAP1"
										},
										{
											"begin": 12215,
											"end": 12224,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12215,
											"end": 12224,
											"name": "EXP"
										},
										{
											"begin": 12215,
											"end": 12224,
											"name": "SWAP1"
										},
										{
											"begin": 12215,
											"end": 12224,
											"name": "DIV"
										},
										{
											"begin": 12215,
											"end": 12224,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12215,
											"end": 12224,
											"name": "AND"
										},
										{
											"begin": 12208,
											"end": 12224,
											"name": "SWAP1"
										},
										{
											"begin": 12208,
											"end": 12224,
											"name": "POP"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "SWAP1"
										},
										{
											"begin": 12151,
											"end": 12230,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "JUMPDEST"
										},
										{
											"begin": 14806,
											"end": 14810,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14819,
											"end": 14902,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 14828,
											"end": 14840,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 14828,
											"end": 14838,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 14828,
											"end": 14840,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14828,
											"end": 14840,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 14828,
											"end": 14840,
											"name": "JUMPDEST"
										},
										{
											"begin": 14842,
											"end": 14849,
											"name": "DUP5"
										},
										{
											"begin": 14851,
											"end": 14901,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 14890,
											"end": 14900,
											"name": "DUP6"
										},
										{
											"begin": 14851,
											"end": 14862,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14863,
											"end": 14875,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 14863,
											"end": 14873,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 14863,
											"end": 14875,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14863,
											"end": 14875,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 14863,
											"end": 14875,
											"name": "JUMPDEST"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "AND"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "AND"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "DUP2"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "MSTORE"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "ADD"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "SWAP1"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "DUP2"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "MSTORE"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "ADD"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14851,
											"end": 14876,
											"name": "KECCAK256"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14877,
											"end": 14884,
											"name": "DUP10"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "AND"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "AND"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "DUP2"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "MSTORE"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "ADD"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "SWAP1"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "DUP2"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "MSTORE"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "ADD"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "KECCAK256"
										},
										{
											"begin": 14851,
											"end": 14885,
											"name": "SLOAD"
										},
										{
											"begin": 14851,
											"end": 14889,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 14851,
											"end": 14889,
											"name": "SWAP1"
										},
										{
											"begin": 14851,
											"end": 14901,
											"name": "SWAP2"
										},
										{
											"begin": 14851,
											"end": 14901,
											"name": "SWAP1"
										},
										{
											"begin": 14851,
											"end": 14901,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14851,
											"end": 14901,
											"name": "AND"
										},
										{
											"begin": 14851,
											"end": 14901,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14851,
											"end": 14901,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 14851,
											"end": 14901,
											"name": "JUMPDEST"
										},
										{
											"begin": 14819,
											"end": 14827,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 14819,
											"end": 14902,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14819,
											"end": 14902,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 14819,
											"end": 14902,
											"name": "JUMPDEST"
										},
										{
											"begin": 14916,
											"end": 14920,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14909,
											"end": 14920,
											"name": "SWAP1"
										},
										{
											"begin": 14909,
											"end": 14920,
											"name": "POP"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP3"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "SWAP2"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "POP"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "POP"
										},
										{
											"begin": 14726,
											"end": 14926,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "JUMPDEST"
										},
										{
											"begin": 12758,
											"end": 12765,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12781,
											"end": 12790,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12791,
											"end": 12798,
											"name": "DUP4"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "AND"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "AND"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "DUP2"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "MSTORE"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "ADD"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "SWAP1"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "DUP2"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "MSTORE"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "ADD"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "KECCAK256"
										},
										{
											"begin": 12781,
											"end": 12799,
											"name": "SLOAD"
										},
										{
											"begin": 12774,
											"end": 12799,
											"name": "SWAP1"
										},
										{
											"begin": 12774,
											"end": 12799,
											"name": "POP"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SWAP2"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "SWAP1"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "POP"
										},
										{
											"begin": 12699,
											"end": 12805,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10608,
											"end": 10738,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 10608,
											"end": 10738,
											"name": "JUMPDEST"
										},
										{
											"begin": 10210,
											"end": 10222,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 10210,
											"end": 10220,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 10210,
											"end": 10222,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10210,
											"end": 10222,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 10210,
											"end": 10222,
											"name": "JUMPDEST"
										},
										{
											"begin": 10200,
											"end": 10222,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10200,
											"end": 10222,
											"name": "AND"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "DUP1"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "SWAP1"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "SLOAD"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "SWAP1"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "EXP"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "SWAP1"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "DIV"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "AND"
										},
										{
											"begin": 10200,
											"end": 10222,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10200,
											"end": 10222,
											"name": "AND"
										},
										{
											"begin": 10200,
											"end": 10222,
											"name": "EQ"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "JUMPI"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "MLOAD"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP2"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "MSTORE"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "ADD"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP1"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP1"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "ADD"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP3"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP2"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "SUB"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP3"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "MSTORE"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP2"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "MSTORE"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "ADD"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP1"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP2"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "MSTORE"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "POP"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "ADD"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "SWAP2"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "POP"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "POP"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "MLOAD"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP1"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "SWAP2"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "SUB"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "SWAP1"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "REVERT"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "JUMPDEST"
										},
										{
											"begin": 10703,
											"end": 10704,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10666,
											"end": 10706,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10666,
											"end": 10706,
											"name": "AND"
										},
										{
											"begin": 10687,
											"end": 10693,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10687,
											"end": 10693,
											"name": "DUP1"
										},
										{
											"begin": 10687,
											"end": 10693,
											"name": "SWAP1"
										},
										{
											"begin": 10687,
											"end": 10693,
											"name": "SLOAD"
										},
										{
											"begin": 10687,
											"end": 10693,
											"name": "SWAP1"
										},
										{
											"begin": 10687,
											"end": 10693,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10687,
											"end": 10693,
											"name": "EXP"
										},
										{
											"begin": 10687,
											"end": 10693,
											"name": "SWAP1"
										},
										{
											"begin": 10687,
											"end": 10693,
											"name": "DIV"
										},
										{
											"begin": 10687,
											"end": 10693,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10687,
											"end": 10693,
											"name": "AND"
										},
										{
											"begin": 10666,
											"end": 10706,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10666,
											"end": 10706,
											"name": "AND"
										},
										{
											"begin": 10666,
											"end": 10706,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10666,
											"end": 10706,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10666,
											"end": 10706,
											"name": "MLOAD"
										},
										{
											"begin": 10666,
											"end": 10706,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10666,
											"end": 10706,
											"name": "MLOAD"
										},
										{
											"begin": 10666,
											"end": 10706,
											"name": "DUP1"
										},
										{
											"begin": 10666,
											"end": 10706,
											"name": "SWAP2"
										},
										{
											"begin": 10666,
											"end": 10706,
											"name": "SUB"
										},
										{
											"begin": 10666,
											"end": 10706,
											"name": "SWAP1"
										},
										{
											"begin": 10666,
											"end": 10706,
											"name": "LOG3"
										},
										{
											"begin": 10730,
											"end": 10731,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10713,
											"end": 10719,
											"name": "DUP1"
										},
										{
											"begin": 10713,
											"end": 10719,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10713,
											"end": 10732,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10713,
											"end": 10732,
											"name": "EXP"
										},
										{
											"begin": 10713,
											"end": 10732,
											"name": "DUP2"
										},
										{
											"begin": 10713,
											"end": 10732,
											"name": "SLOAD"
										},
										{
											"begin": 10713,
											"end": 10732,
											"name": "DUP2"
										},
										{
											"begin": 10713,
											"end": 10732,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10713,
											"end": 10732,
											"name": "MUL"
										},
										{
											"begin": 10713,
											"end": 10732,
											"name": "NOT"
										},
										{
											"begin": 10713,
											"end": 10732,
											"name": "AND"
										},
										{
											"begin": 10713,
											"end": 10732,
											"name": "SWAP1"
										},
										{
											"begin": 10713,
											"end": 10732,
											"name": "DUP4"
										},
										{
											"begin": 10713,
											"end": 10732,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10713,
											"end": 10732,
											"name": "AND"
										},
										{
											"begin": 10713,
											"end": 10732,
											"name": "MUL"
										},
										{
											"begin": 10713,
											"end": 10732,
											"name": "OR"
										},
										{
											"begin": 10713,
											"end": 10732,
											"name": "SWAP1"
										},
										{
											"begin": 10713,
											"end": 10732,
											"name": "SSTORE"
										},
										{
											"begin": 10713,
											"end": 10732,
											"name": "POP"
										},
										{
											"begin": 10608,
											"end": 10738,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "JUMPDEST"
										},
										{
											"begin": 12056,
											"end": 12063,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12079,
											"end": 12086,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 12079,
											"end": 12084,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 12079,
											"end": 12086,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12079,
											"end": 12086,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 12079,
											"end": 12086,
											"name": "JUMPDEST"
										},
										{
											"begin": 12072,
											"end": 12086,
											"name": "SWAP1"
										},
										{
											"begin": 12072,
											"end": 12086,
											"name": "POP"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "SWAP1"
										},
										{
											"begin": 12013,
											"end": 12092,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "JUMPDEST"
										},
										{
											"begin": 10044,
											"end": 10051,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP1"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "SWAP1"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "SLOAD"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "SWAP1"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "EXP"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "SWAP1"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DIV"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "AND"
										},
										{
											"begin": 10060,
											"end": 10073,
											"name": "SWAP1"
										},
										{
											"begin": 10060,
											"end": 10073,
											"name": "POP"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "SWAP1"
										},
										{
											"begin": 10006,
											"end": 10079,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "JUMPDEST"
										},
										{
											"begin": 12328,
											"end": 12341,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 12357,
											"end": 12364,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SLOAD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "AND"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "ISZERO"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "MUL"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SUB"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "AND"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DIV"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "ADD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DIV"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "MUL"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "ADD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "MLOAD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "ADD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "MSTORE"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP3"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "MSTORE"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "ADD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP3"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SLOAD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "AND"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "ISZERO"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "MUL"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SUB"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "AND"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DIV"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "ISZERO"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "JUMPI"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "LT"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "JUMPI"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP4"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SLOAD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DIV"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "MUL"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP4"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "MSTORE"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "ADD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "JUMP"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "JUMPDEST"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP3"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "ADD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "MSTORE"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "KECCAK256"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "JUMPDEST"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SLOAD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "MSTORE"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "ADD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "ADD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP4"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "GT"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "JUMPI"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP3"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SUB"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "AND"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "DUP3"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "ADD"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP2"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "JUMPDEST"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "POP"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "POP"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "POP"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "POP"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "POP"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "SWAP1"
										},
										{
											"begin": 12350,
											"end": 12364,
											"name": "POP"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "SWAP1"
										},
										{
											"begin": 12287,
											"end": 12370,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "JUMPDEST"
										},
										{
											"begin": 15905,
											"end": 15909,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10210,
											"end": 10222,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 10210,
											"end": 10220,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 10210,
											"end": 10222,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10210,
											"end": 10222,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 10210,
											"end": 10222,
											"name": "JUMPDEST"
										},
										{
											"begin": 10200,
											"end": 10222,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10200,
											"end": 10222,
											"name": "AND"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "DUP1"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "SWAP1"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "SLOAD"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "SWAP1"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "EXP"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "SWAP1"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "DIV"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "AND"
										},
										{
											"begin": 10200,
											"end": 10222,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10200,
											"end": 10222,
											"name": "AND"
										},
										{
											"begin": 10200,
											"end": 10222,
											"name": "EQ"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "JUMPI"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "MLOAD"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP2"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "MSTORE"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "ADD"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP1"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP1"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "ADD"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP3"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP2"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "SUB"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP3"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "MSTORE"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP2"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "MSTORE"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "ADD"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP1"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP2"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "MSTORE"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "POP"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "ADD"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "SWAP2"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "POP"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "POP"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "MLOAD"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP1"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "SWAP2"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "SUB"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "SWAP1"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "REVERT"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "JUMPDEST"
										},
										{
											"begin": 15918,
											"end": 15945,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 15924,
											"end": 15936,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 15924,
											"end": 15934,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 15924,
											"end": 15936,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15924,
											"end": 15936,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 15924,
											"end": 15936,
											"name": "JUMPDEST"
										},
										{
											"begin": 15938,
											"end": 15944,
											"name": "DUP4"
										},
										{
											"begin": 15918,
											"end": 15923,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 15918,
											"end": 15945,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15918,
											"end": 15945,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 15918,
											"end": 15945,
											"name": "JUMPDEST"
										},
										{
											"begin": 15959,
											"end": 15963,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15952,
											"end": 15963,
											"name": "SWAP1"
										},
										{
											"begin": 15952,
											"end": 15963,
											"name": "POP"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "SWAP2"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "SWAP1"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "POP"
										},
										{
											"begin": 15849,
											"end": 15969,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "JUMPDEST"
										},
										{
											"begin": 15483,
											"end": 15487,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15496,
											"end": 15625,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 15505,
											"end": 15517,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 15505,
											"end": 15515,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 15505,
											"end": 15517,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15505,
											"end": 15517,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 15505,
											"end": 15517,
											"name": "JUMPDEST"
										},
										{
											"begin": 15519,
											"end": 15526,
											"name": "DUP5"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 15567,
											"end": 15582,
											"name": "DUP6"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "MLOAD"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "DUP1"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "ADD"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "MSTORE"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "DUP1"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "DUP2"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "MSTORE"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "ADD"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "PUSH data",
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "SWAP2"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "CODECOPY"
										},
										{
											"begin": 15528,
											"end": 15539,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15540,
											"end": 15552,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 15540,
											"end": 15550,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 15540,
											"end": 15552,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15540,
											"end": 15552,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 15540,
											"end": 15552,
											"name": "JUMPDEST"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "AND"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "AND"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "DUP2"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "MSTORE"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "ADD"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "SWAP1"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "DUP2"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "MSTORE"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "ADD"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15528,
											"end": 15553,
											"name": "KECCAK256"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15554,
											"end": 15561,
											"name": "DUP11"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "AND"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "AND"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "DUP2"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "MSTORE"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "ADD"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "SWAP1"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "DUP2"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "MSTORE"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "ADD"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "KECCAK256"
										},
										{
											"begin": 15528,
											"end": 15562,
											"name": "SLOAD"
										},
										{
											"begin": 15528,
											"end": 15566,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 15528,
											"end": 15566,
											"name": "SWAP1"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "SWAP3"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "SWAP2"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "SWAP1"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "AND"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 15528,
											"end": 15624,
											"name": "JUMPDEST"
										},
										{
											"begin": 15496,
											"end": 15504,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 15496,
											"end": 15625,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15496,
											"end": 15625,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 15496,
											"end": 15625,
											"name": "JUMPDEST"
										},
										{
											"begin": 15639,
											"end": 15643,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15632,
											"end": 15643,
											"name": "SWAP1"
										},
										{
											"begin": 15632,
											"end": 15643,
											"name": "POP"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP3"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "SWAP2"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "POP"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "POP"
										},
										{
											"begin": 15398,
											"end": 15649,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "JUMPDEST"
										},
										{
											"begin": 13070,
											"end": 13074,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13083,
											"end": 13125,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 13093,
											"end": 13105,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 13093,
											"end": 13103,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 13093,
											"end": 13105,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13093,
											"end": 13105,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 13093,
											"end": 13105,
											"name": "JUMPDEST"
										},
										{
											"begin": 13107,
											"end": 13116,
											"name": "DUP5"
										},
										{
											"begin": 13118,
											"end": 13124,
											"name": "DUP5"
										},
										{
											"begin": 13083,
											"end": 13092,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 13083,
											"end": 13125,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13083,
											"end": 13125,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 13083,
											"end": 13125,
											"name": "JUMPDEST"
										},
										{
											"begin": 13139,
											"end": 13143,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13132,
											"end": 13143,
											"name": "SWAP1"
										},
										{
											"begin": 13132,
											"end": 13143,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP3"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "SWAP2"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13149,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "JUMPDEST"
										},
										{
											"begin": 13277,
											"end": 13284,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13300,
											"end": 13311,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13312,
											"end": 13317,
											"name": "DUP5"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "AND"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "AND"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "DUP2"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "MSTORE"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "ADD"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "SWAP1"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "DUP2"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "MSTORE"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "ADD"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "KECCAK256"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13319,
											"end": 13326,
											"name": "DUP4"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "AND"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "AND"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "DUP2"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "MSTORE"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "ADD"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "SWAP1"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "DUP2"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "MSTORE"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "ADD"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "KECCAK256"
										},
										{
											"begin": 13300,
											"end": 13327,
											"name": "SLOAD"
										},
										{
											"begin": 13293,
											"end": 13327,
											"name": "SWAP1"
										},
										{
											"begin": 13293,
											"end": 13327,
											"name": "POP"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP3"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "SWAP2"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "POP"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "POP"
										},
										{
											"begin": 13203,
											"end": 13333,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "JUMPDEST"
										},
										{
											"begin": 10210,
											"end": 10222,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 10210,
											"end": 10220,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 10210,
											"end": 10222,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10210,
											"end": 10222,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 10210,
											"end": 10222,
											"name": "JUMPDEST"
										},
										{
											"begin": 10200,
											"end": 10222,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10200,
											"end": 10222,
											"name": "AND"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "DUP1"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "SWAP1"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "SLOAD"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "SWAP1"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "EXP"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "SWAP1"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "DIV"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "AND"
										},
										{
											"begin": 10200,
											"end": 10222,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10200,
											"end": 10222,
											"name": "AND"
										},
										{
											"begin": 10200,
											"end": 10222,
											"name": "EQ"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "JUMPI"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "MLOAD"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP2"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "MSTORE"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "ADD"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP1"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP1"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "ADD"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP3"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP2"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "SUB"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP3"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "MSTORE"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP2"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "MSTORE"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "ADD"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP1"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP2"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "MSTORE"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "POP"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "ADD"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "SWAP2"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "POP"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "POP"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "MLOAD"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "DUP1"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "SWAP2"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "SUB"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "SWAP1"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "REVERT"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 10192,
											"end": 10259,
											"name": "JUMPDEST"
										},
										{
											"begin": 10952,
											"end": 10980,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 10971,
											"end": 10979,
											"name": "DUP2"
										},
										{
											"begin": 10952,
											"end": 10970,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 10952,
											"end": 10980,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10952,
											"end": 10980,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 10952,
											"end": 10980,
											"name": "JUMPDEST"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "POP"
										},
										{
											"begin": 10883,
											"end": 10986,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3703,
											"end": 3795,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 3703,
											"end": 3795,
											"name": "JUMPDEST"
										},
										{
											"begin": 3748,
											"end": 3763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3789,
											"name": "CALLER"
										},
										{
											"begin": 3772,
											"end": 3789,
											"name": "SWAP1"
										},
										{
											"begin": 3772,
											"end": 3789,
											"name": "POP"
										},
										{
											"begin": 3703,
											"end": 3795,
											"name": "SWAP1"
										},
										{
											"begin": 3703,
											"end": 3795,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18479,
											"end": 18799,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 18479,
											"end": 18799,
											"name": "JUMPDEST"
										},
										{
											"begin": 18586,
											"end": 18587,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18569,
											"end": 18588,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18569,
											"end": 18588,
											"name": "AND"
										},
										{
											"begin": 18569,
											"end": 18574,
											"name": "DUP4"
										},
										{
											"begin": 18569,
											"end": 18588,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18569,
											"end": 18588,
											"name": "AND"
										},
										{
											"begin": 18569,
											"end": 18588,
											"name": "EQ"
										},
										{
											"begin": 18569,
											"end": 18588,
											"name": "ISZERO"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "JUMPI"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "MLOAD"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "DUP2"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "MSTORE"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "ADD"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "DUP1"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "DUP1"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "ADD"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "DUP3"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "DUP2"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "SUB"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "DUP3"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "MSTORE"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "DUP2"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "MSTORE"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "ADD"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "DUP1"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "PUSH data",
											"value": "1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "SWAP2"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "CODECOPY"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "ADD"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "SWAP2"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "POP"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "POP"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "MLOAD"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "DUP1"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "SWAP2"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "SUB"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "SWAP1"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "REVERT"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 18561,
											"end": 18629,
											"name": "JUMPDEST"
										},
										{
											"begin": 18663,
											"end": 18664,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18644,
											"end": 18665,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18644,
											"end": 18665,
											"name": "AND"
										},
										{
											"begin": 18644,
											"end": 18651,
											"name": "DUP3"
										},
										{
											"begin": 18644,
											"end": 18665,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18644,
											"end": 18665,
											"name": "AND"
										},
										{
											"begin": 18644,
											"end": 18665,
											"name": "EQ"
										},
										{
											"begin": 18644,
											"end": 18665,
											"name": "ISZERO"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "JUMPI"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "MLOAD"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "DUP2"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "MSTORE"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "ADD"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "DUP1"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "DUP1"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "ADD"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "DUP3"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "DUP2"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "SUB"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "DUP3"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "MSTORE"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "DUP2"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "MSTORE"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "ADD"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "DUP1"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "PUSH data",
											"value": "F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "SWAP2"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "CODECOPY"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "ADD"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "SWAP2"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "POP"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "POP"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "MLOAD"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "DUP1"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "SWAP2"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "SUB"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "SWAP1"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "REVERT"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 18636,
											"end": 18704,
											"name": "JUMPDEST"
										},
										{
											"begin": 18743,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 18713,
											"end": 18724,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 18713,
											"end": 18731,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18725,
											"end": 18730,
											"name": "DUP6"
										},
										{
											"begin": 18713,
											"end": 18731,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18713,
											"end": 18731,
											"name": "AND"
										},
										{
											"begin": 18713,
											"end": 18731,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18713,
											"end": 18731,
											"name": "AND"
										},
										{
											"begin": 18713,
											"end": 18731,
											"name": "DUP2"
										},
										{
											"begin": 18713,
											"end": 18731,
											"name": "MSTORE"
										},
										{
											"begin": 18713,
											"end": 18731,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18713,
											"end": 18731,
											"name": "ADD"
										},
										{
											"begin": 18713,
											"end": 18731,
											"name": "SWAP1"
										},
										{
											"begin": 18713,
											"end": 18731,
											"name": "DUP2"
										},
										{
											"begin": 18713,
											"end": 18731,
											"name": "MSTORE"
										},
										{
											"begin": 18713,
											"end": 18731,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18713,
											"end": 18731,
											"name": "ADD"
										},
										{
											"begin": 18713,
											"end": 18731,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18713,
											"end": 18731,
											"name": "KECCAK256"
										},
										{
											"begin": 18713,
											"end": 18740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18732,
											"end": 18739,
											"name": "DUP5"
										},
										{
											"begin": 18713,
											"end": 18740,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18713,
											"end": 18740,
											"name": "AND"
										},
										{
											"begin": 18713,
											"end": 18740,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18713,
											"end": 18740,
											"name": "AND"
										},
										{
											"begin": 18713,
											"end": 18740,
											"name": "DUP2"
										},
										{
											"begin": 18713,
											"end": 18740,
											"name": "MSTORE"
										},
										{
											"begin": 18713,
											"end": 18740,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18713,
											"end": 18740,
											"name": "ADD"
										},
										{
											"begin": 18713,
											"end": 18740,
											"name": "SWAP1"
										},
										{
											"begin": 18713,
											"end": 18740,
											"name": "DUP2"
										},
										{
											"begin": 18713,
											"end": 18740,
											"name": "MSTORE"
										},
										{
											"begin": 18713,
											"end": 18740,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18713,
											"end": 18740,
											"name": "ADD"
										},
										{
											"begin": 18713,
											"end": 18740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18713,
											"end": 18740,
											"name": "KECCAK256"
										},
										{
											"begin": 18713,
											"end": 18749,
											"name": "DUP2"
										},
										{
											"begin": 18713,
											"end": 18749,
											"name": "SWAP1"
										},
										{
											"begin": 18713,
											"end": 18749,
											"name": "SSTORE"
										},
										{
											"begin": 18713,
											"end": 18749,
											"name": "POP"
										},
										{
											"begin": 18777,
											"end": 18784,
											"name": "DUP2"
										},
										{
											"begin": 18761,
											"end": 18793,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18761,
											"end": 18793,
											"name": "AND"
										},
										{
											"begin": 18770,
											"end": 18775,
											"name": "DUP4"
										},
										{
											"begin": 18761,
											"end": 18793,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18761,
											"end": 18793,
											"name": "AND"
										},
										{
											"begin": 18761,
											"end": 18793,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 18786,
											"end": 18792,
											"name": "DUP4"
										},
										{
											"begin": 18761,
											"end": 18793,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18761,
											"end": 18793,
											"name": "MLOAD"
										},
										{
											"begin": 18761,
											"end": 18793,
											"name": "DUP1"
										},
										{
											"begin": 18761,
											"end": 18793,
											"name": "DUP3"
										},
										{
											"begin": 18761,
											"end": 18793,
											"name": "DUP2"
										},
										{
											"begin": 18761,
											"end": 18793,
											"name": "MSTORE"
										},
										{
											"begin": 18761,
											"end": 18793,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18761,
											"end": 18793,
											"name": "ADD"
										},
										{
											"begin": 18761,
											"end": 18793,
											"name": "SWAP2"
										},
										{
											"begin": 18761,
											"end": 18793,
											"name": "POP"
										},
										{
											"begin": 18761,
											"end": 18793,
											"name": "POP"
										},
										{
											"begin": 18761,
											"end": 18793,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18761,
											"end": 18793,
											"name": "MLOAD"
										},
										{
											"begin": 18761,
											"end": 18793,
											"name": "DUP1"
										},
										{
											"begin": 18761,
											"end": 18793,
											"name": "SWAP2"
										},
										{
											"begin": 18761,
											"end": 18793,
											"name": "SUB"
										},
										{
											"begin": 18761,
											"end": 18793,
											"name": "SWAP1"
										},
										{
											"begin": 18761,
											"end": 18793,
											"name": "LOG3"
										},
										{
											"begin": 18479,
											"end": 18799,
											"name": "POP"
										},
										{
											"begin": 18479,
											"end": 18799,
											"name": "POP"
										},
										{
											"begin": 18479,
											"end": 18799,
											"name": "POP"
										},
										{
											"begin": 18479,
											"end": 18799,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16429,
											"end": 16878,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 16429,
											"end": 16878,
											"name": "JUMPDEST"
										},
										{
											"begin": 16541,
											"end": 16542,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16523,
											"end": 16543,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16523,
											"end": 16543,
											"name": "AND"
										},
										{
											"begin": 16523,
											"end": 16529,
											"name": "DUP4"
										},
										{
											"begin": 16523,
											"end": 16543,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16523,
											"end": 16543,
											"name": "AND"
										},
										{
											"begin": 16523,
											"end": 16543,
											"name": "EQ"
										},
										{
											"begin": 16523,
											"end": 16543,
											"name": "ISZERO"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "JUMPI"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "MLOAD"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "DUP2"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "MSTORE"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "ADD"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "DUP1"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "DUP1"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "ADD"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "DUP3"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "DUP2"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "SUB"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "DUP3"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "MSTORE"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "DUP2"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "MSTORE"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "ADD"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "DUP1"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "PUSH data",
											"value": "D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "SWAP2"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "CODECOPY"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "ADD"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "SWAP2"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "POP"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "POP"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "MLOAD"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "DUP1"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "SWAP2"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "SUB"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "SWAP1"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "REVERT"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 16515,
											"end": 16585,
											"name": "JUMPDEST"
										},
										{
											"begin": 16621,
											"end": 16622,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16600,
											"end": 16623,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16600,
											"end": 16623,
											"name": "AND"
										},
										{
											"begin": 16600,
											"end": 16609,
											"name": "DUP3"
										},
										{
											"begin": 16600,
											"end": 16623,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16600,
											"end": 16623,
											"name": "AND"
										},
										{
											"begin": 16600,
											"end": 16623,
											"name": "EQ"
										},
										{
											"begin": 16600,
											"end": 16623,
											"name": "ISZERO"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "JUMPI"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "MLOAD"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "DUP2"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "MSTORE"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "ADD"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "DUP1"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "DUP1"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "ADD"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "DUP3"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "DUP2"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "SUB"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "DUP3"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "MSTORE"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "DUP2"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "MSTORE"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "ADD"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "DUP1"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "PUSH data",
											"value": "ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "SWAP2"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "CODECOPY"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "ADD"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "SWAP2"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "POP"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "POP"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "MLOAD"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "DUP1"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "SWAP2"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "SUB"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "SWAP1"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "REVERT"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 16592,
											"end": 16663,
											"name": "JUMPDEST"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 16714,
											"end": 16720,
											"name": "DUP2"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "MLOAD"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "DUP1"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "ADD"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "MSTORE"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "DUP1"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "DUP2"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "MSTORE"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "ADD"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "PUSH data",
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "SWAP2"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "CODECOPY"
										},
										{
											"begin": 16692,
											"end": 16701,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16702,
											"end": 16708,
											"name": "DUP8"
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "AND"
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "AND"
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "DUP2"
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "MSTORE"
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "ADD"
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "SWAP1"
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "DUP2"
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "MSTORE"
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "ADD"
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "KECCAK256"
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "SLOAD"
										},
										{
											"begin": 16692,
											"end": 16713,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 16692,
											"end": 16713,
											"name": "SWAP1"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "SWAP3"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "SWAP2"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "SWAP1"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "AND"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 16692,
											"end": 16763,
											"name": "JUMPDEST"
										},
										{
											"begin": 16672,
											"end": 16681,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16672,
											"end": 16689,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16682,
											"end": 16688,
											"name": "DUP6"
										},
										{
											"begin": 16672,
											"end": 16689,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16672,
											"end": 16689,
											"name": "AND"
										},
										{
											"begin": 16672,
											"end": 16689,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16672,
											"end": 16689,
											"name": "AND"
										},
										{
											"begin": 16672,
											"end": 16689,
											"name": "DUP2"
										},
										{
											"begin": 16672,
											"end": 16689,
											"name": "MSTORE"
										},
										{
											"begin": 16672,
											"end": 16689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16672,
											"end": 16689,
											"name": "ADD"
										},
										{
											"begin": 16672,
											"end": 16689,
											"name": "SWAP1"
										},
										{
											"begin": 16672,
											"end": 16689,
											"name": "DUP2"
										},
										{
											"begin": 16672,
											"end": 16689,
											"name": "MSTORE"
										},
										{
											"begin": 16672,
											"end": 16689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16672,
											"end": 16689,
											"name": "ADD"
										},
										{
											"begin": 16672,
											"end": 16689,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16672,
											"end": 16689,
											"name": "KECCAK256"
										},
										{
											"begin": 16672,
											"end": 16763,
											"name": "DUP2"
										},
										{
											"begin": 16672,
											"end": 16763,
											"name": "SWAP1"
										},
										{
											"begin": 16672,
											"end": 16763,
											"name": "SSTORE"
										},
										{
											"begin": 16672,
											"end": 16763,
											"name": "POP"
										},
										{
											"begin": 16793,
											"end": 16825,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 16818,
											"end": 16824,
											"name": "DUP2"
										},
										{
											"begin": 16793,
											"end": 16802,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16793,
											"end": 16813,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16803,
											"end": 16812,
											"name": "DUP6"
										},
										{
											"begin": 16793,
											"end": 16813,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16793,
											"end": 16813,
											"name": "AND"
										},
										{
											"begin": 16793,
											"end": 16813,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16793,
											"end": 16813,
											"name": "AND"
										},
										{
											"begin": 16793,
											"end": 16813,
											"name": "DUP2"
										},
										{
											"begin": 16793,
											"end": 16813,
											"name": "MSTORE"
										},
										{
											"begin": 16793,
											"end": 16813,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16793,
											"end": 16813,
											"name": "ADD"
										},
										{
											"begin": 16793,
											"end": 16813,
											"name": "SWAP1"
										},
										{
											"begin": 16793,
											"end": 16813,
											"name": "DUP2"
										},
										{
											"begin": 16793,
											"end": 16813,
											"name": "MSTORE"
										},
										{
											"begin": 16793,
											"end": 16813,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16793,
											"end": 16813,
											"name": "ADD"
										},
										{
											"begin": 16793,
											"end": 16813,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16793,
											"end": 16813,
											"name": "KECCAK256"
										},
										{
											"begin": 16793,
											"end": 16813,
											"name": "SLOAD"
										},
										{
											"begin": 16793,
											"end": 16817,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 16793,
											"end": 16817,
											"name": "SWAP1"
										},
										{
											"begin": 16793,
											"end": 16825,
											"name": "SWAP2"
										},
										{
											"begin": 16793,
											"end": 16825,
											"name": "SWAP1"
										},
										{
											"begin": 16793,
											"end": 16825,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16793,
											"end": 16825,
											"name": "AND"
										},
										{
											"begin": 16793,
											"end": 16825,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16793,
											"end": 16825,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 16793,
											"end": 16825,
											"name": "JUMPDEST"
										},
										{
											"begin": 16770,
											"end": 16779,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16770,
											"end": 16790,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16780,
											"end": 16789,
											"name": "DUP5"
										},
										{
											"begin": 16770,
											"end": 16790,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16770,
											"end": 16790,
											"name": "AND"
										},
										{
											"begin": 16770,
											"end": 16790,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16770,
											"end": 16790,
											"name": "AND"
										},
										{
											"begin": 16770,
											"end": 16790,
											"name": "DUP2"
										},
										{
											"begin": 16770,
											"end": 16790,
											"name": "MSTORE"
										},
										{
											"begin": 16770,
											"end": 16790,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16770,
											"end": 16790,
											"name": "ADD"
										},
										{
											"begin": 16770,
											"end": 16790,
											"name": "SWAP1"
										},
										{
											"begin": 16770,
											"end": 16790,
											"name": "DUP2"
										},
										{
											"begin": 16770,
											"end": 16790,
											"name": "MSTORE"
										},
										{
											"begin": 16770,
											"end": 16790,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16770,
											"end": 16790,
											"name": "ADD"
										},
										{
											"begin": 16770,
											"end": 16790,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16770,
											"end": 16790,
											"name": "KECCAK256"
										},
										{
											"begin": 16770,
											"end": 16825,
											"name": "DUP2"
										},
										{
											"begin": 16770,
											"end": 16825,
											"name": "SWAP1"
										},
										{
											"begin": 16770,
											"end": 16825,
											"name": "SSTORE"
										},
										{
											"begin": 16770,
											"end": 16825,
											"name": "POP"
										},
										{
											"begin": 16854,
											"end": 16863,
											"name": "DUP2"
										},
										{
											"begin": 16837,
											"end": 16872,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16837,
											"end": 16872,
											"name": "AND"
										},
										{
											"begin": 16846,
											"end": 16852,
											"name": "DUP4"
										},
										{
											"begin": 16837,
											"end": 16872,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16837,
											"end": 16872,
											"name": "AND"
										},
										{
											"begin": 16837,
											"end": 16872,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16865,
											"end": 16871,
											"name": "DUP4"
										},
										{
											"begin": 16837,
											"end": 16872,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16837,
											"end": 16872,
											"name": "MLOAD"
										},
										{
											"begin": 16837,
											"end": 16872,
											"name": "DUP1"
										},
										{
											"begin": 16837,
											"end": 16872,
											"name": "DUP3"
										},
										{
											"begin": 16837,
											"end": 16872,
											"name": "DUP2"
										},
										{
											"begin": 16837,
											"end": 16872,
											"name": "MSTORE"
										},
										{
											"begin": 16837,
											"end": 16872,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16837,
											"end": 16872,
											"name": "ADD"
										},
										{
											"begin": 16837,
											"end": 16872,
											"name": "SWAP2"
										},
										{
											"begin": 16837,
											"end": 16872,
											"name": "POP"
										},
										{
											"begin": 16837,
											"end": 16872,
											"name": "POP"
										},
										{
											"begin": 16837,
											"end": 16872,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16837,
											"end": 16872,
											"name": "MLOAD"
										},
										{
											"begin": 16837,
											"end": 16872,
											"name": "DUP1"
										},
										{
											"begin": 16837,
											"end": 16872,
											"name": "SWAP2"
										},
										{
											"begin": 16837,
											"end": 16872,
											"name": "SUB"
										},
										{
											"begin": 16837,
											"end": 16872,
											"name": "SWAP1"
										},
										{
											"begin": 16837,
											"end": 16872,
											"name": "LOG3"
										},
										{
											"begin": 16429,
											"end": 16878,
											"name": "POP"
										},
										{
											"begin": 16429,
											"end": 16878,
											"name": "POP"
										},
										{
											"begin": 16429,
											"end": 16878,
											"name": "POP"
										},
										{
											"begin": 16429,
											"end": 16878,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5662,
											"end": 5840,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 5662,
											"end": 5840,
											"name": "JUMPDEST"
										},
										{
											"begin": 5748,
											"end": 5755,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5777,
											"end": 5778,
											"name": "DUP4"
										},
										{
											"begin": 5772,
											"end": 5773,
											"name": "DUP4"
										},
										{
											"begin": 5772,
											"end": 5778,
											"name": "GT"
										},
										{
											"begin": 5772,
											"end": 5778,
											"name": "ISZERO"
										},
										{
											"begin": 5780,
											"end": 5792,
											"name": "DUP3"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "SWAP1"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "JUMPI"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "MLOAD"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "DUP2"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "MSTORE"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "ADD"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "DUP1"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "DUP1"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "ADD"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "DUP3"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "DUP2"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "SUB"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "DUP3"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "MSTORE"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "DUP4"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "DUP2"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "DUP2"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "MLOAD"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "DUP2"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "MSTORE"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "ADD"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "SWAP2"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "POP"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "DUP1"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "MLOAD"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "SWAP1"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "ADD"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "SWAP1"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "DUP1"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "DUP4"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "POP"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "POP"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "POP"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "SWAP1"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "POP"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "SWAP1"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "DUP2"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "ADD"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "SWAP1"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "AND"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "DUP1"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "ISZERO"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "JUMPI"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "DUP1"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "DUP3"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "SUB"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "DUP1"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "MLOAD"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "DUP4"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "SUB"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "EXP"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "SUB"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "NOT"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "AND"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "DUP2"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "MSTORE"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "ADD"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "SWAP2"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "POP"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "JUMPDEST"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "POP"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "SWAP3"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "POP"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "POP"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "POP"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "MLOAD"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "DUP1"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "SWAP2"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "SUB"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "SWAP1"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "REVERT"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "JUMPDEST"
										},
										{
											"begin": 5764,
											"end": 5793,
											"name": "POP"
										},
										{
											"begin": 5800,
											"end": 5809,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5817,
											"name": "DUP4"
										},
										{
											"begin": 5812,
											"end": 5813,
											"name": "DUP6"
										},
										{
											"begin": 5812,
											"end": 5817,
											"name": "SUB"
										},
										{
											"begin": 5800,
											"end": 5817,
											"name": "SWAP1"
										},
										{
											"begin": 5800,
											"end": 5817,
											"name": "POP"
										},
										{
											"begin": 5833,
											"end": 5834,
											"name": "DUP1"
										},
										{
											"begin": 5826,
											"end": 5834,
											"name": "SWAP2"
										},
										{
											"begin": 5826,
											"end": 5834,
											"name": "POP"
										},
										{
											"begin": 5826,
											"end": 5834,
											"name": "POP"
										},
										{
											"begin": 5662,
											"end": 5840,
											"name": "SWAP4"
										},
										{
											"begin": 5662,
											"end": 5840,
											"name": "SWAP3"
										},
										{
											"begin": 5662,
											"end": 5840,
											"name": "POP"
										},
										{
											"begin": 5662,
											"end": 5840,
											"name": "POP"
										},
										{
											"begin": 5662,
											"end": 5840,
											"name": "POP"
										},
										{
											"begin": 5662,
											"end": 5840,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4835,
											"end": 5002,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 4835,
											"end": 5002,
											"name": "JUMPDEST"
										},
										{
											"begin": 4893,
											"end": 4900,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4909,
											"end": 4918,
											"name": "DUP1"
										},
										{
											"begin": 4925,
											"end": 4926,
											"name": "DUP3"
										},
										{
											"begin": 4921,
											"end": 4922,
											"name": "DUP5"
										},
										{
											"begin": 4921,
											"end": 4926,
											"name": "ADD"
										},
										{
											"begin": 4909,
											"end": 4926,
											"name": "SWAP1"
										},
										{
											"begin": 4909,
											"end": 4926,
											"name": "POP"
										},
										{
											"begin": 4946,
											"end": 4947,
											"name": "DUP4"
										},
										{
											"begin": 4941,
											"end": 4942,
											"name": "DUP2"
										},
										{
											"begin": 4941,
											"end": 4947,
											"name": "LT"
										},
										{
											"begin": 4941,
											"end": 4947,
											"name": "ISZERO"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "JUMPI"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "MLOAD"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "DUP2"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "MSTORE"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "ADD"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "DUP1"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "DUP1"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "ADD"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "DUP3"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "DUP2"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "SUB"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "DUP3"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "MSTORE"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "DUP2"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "MSTORE"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "ADD"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "DUP1"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "DUP2"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "MSTORE"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "POP"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "ADD"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "SWAP2"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "POP"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "POP"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "MLOAD"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "DUP1"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "SWAP2"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "SUB"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "SWAP1"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "REVERT"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 4933,
											"end": 4979,
											"name": "JUMPDEST"
										},
										{
											"begin": 4995,
											"end": 4996,
											"name": "DUP1"
										},
										{
											"begin": 4988,
											"end": 4996,
											"name": "SWAP2"
										},
										{
											"begin": 4988,
											"end": 4996,
											"name": "POP"
										},
										{
											"begin": 4988,
											"end": 4996,
											"name": "POP"
										},
										{
											"begin": 4835,
											"end": 5002,
											"name": "SWAP3"
										},
										{
											"begin": 4835,
											"end": 5002,
											"name": "SWAP2"
										},
										{
											"begin": 4835,
											"end": 5002,
											"name": "POP"
										},
										{
											"begin": 4835,
											"end": 5002,
											"name": "POP"
										},
										{
											"begin": 4835,
											"end": 5002,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17139,
											"end": 17429,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 17139,
											"end": 17429,
											"name": "JUMPDEST"
										},
										{
											"begin": 17230,
											"end": 17231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17211,
											"end": 17232,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17211,
											"end": 17232,
											"name": "AND"
										},
										{
											"begin": 17211,
											"end": 17218,
											"name": "DUP3"
										},
										{
											"begin": 17211,
											"end": 17232,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17211,
											"end": 17232,
											"name": "AND"
										},
										{
											"begin": 17211,
											"end": 17232,
											"name": "EQ"
										},
										{
											"begin": 17211,
											"end": 17232,
											"name": "ISZERO"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "JUMPI"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "MLOAD"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "DUP2"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "MSTORE"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "ADD"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "DUP1"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "DUP1"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "ADD"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "DUP3"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "DUP2"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "SUB"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "DUP3"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "MSTORE"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "DUP2"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "MSTORE"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "ADD"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "DUP1"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "PUSH",
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "DUP2"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "MSTORE"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "POP"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "ADD"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "SWAP2"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "POP"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "POP"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "MLOAD"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "DUP1"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "SWAP2"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "SUB"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "SWAP1"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "REVERT"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 17203,
											"end": 17268,
											"name": "JUMPDEST"
										},
										{
											"begin": 17292,
											"end": 17316,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 17309,
											"end": 17315,
											"name": "DUP2"
										},
										{
											"begin": 17292,
											"end": 17304,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 17292,
											"end": 17304,
											"name": "SLOAD"
										},
										{
											"begin": 17292,
											"end": 17308,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 17292,
											"end": 17308,
											"name": "SWAP1"
										},
										{
											"begin": 17292,
											"end": 17316,
											"name": "SWAP2"
										},
										{
											"begin": 17292,
											"end": 17316,
											"name": "SWAP1"
										},
										{
											"begin": 17292,
											"end": 17316,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17292,
											"end": 17316,
											"name": "AND"
										},
										{
											"begin": 17292,
											"end": 17316,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17292,
											"end": 17316,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 17292,
											"end": 17316,
											"name": "JUMPDEST"
										},
										{
											"begin": 17277,
											"end": 17289,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 17277,
											"end": 17316,
											"name": "DUP2"
										},
										{
											"begin": 17277,
											"end": 17316,
											"name": "SWAP1"
										},
										{
											"begin": 17277,
											"end": 17316,
											"name": "SSTORE"
										},
										{
											"begin": 17277,
											"end": 17316,
											"name": "POP"
										},
										{
											"begin": 17344,
											"end": 17374,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 17367,
											"end": 17373,
											"name": "DUP2"
										},
										{
											"begin": 17344,
											"end": 17353,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17344,
											"end": 17362,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17354,
											"end": 17361,
											"name": "DUP6"
										},
										{
											"begin": 17344,
											"end": 17362,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17344,
											"end": 17362,
											"name": "AND"
										},
										{
											"begin": 17344,
											"end": 17362,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17344,
											"end": 17362,
											"name": "AND"
										},
										{
											"begin": 17344,
											"end": 17362,
											"name": "DUP2"
										},
										{
											"begin": 17344,
											"end": 17362,
											"name": "MSTORE"
										},
										{
											"begin": 17344,
											"end": 17362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17344,
											"end": 17362,
											"name": "ADD"
										},
										{
											"begin": 17344,
											"end": 17362,
											"name": "SWAP1"
										},
										{
											"begin": 17344,
											"end": 17362,
											"name": "DUP2"
										},
										{
											"begin": 17344,
											"end": 17362,
											"name": "MSTORE"
										},
										{
											"begin": 17344,
											"end": 17362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17344,
											"end": 17362,
											"name": "ADD"
										},
										{
											"begin": 17344,
											"end": 17362,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17344,
											"end": 17362,
											"name": "KECCAK256"
										},
										{
											"begin": 17344,
											"end": 17362,
											"name": "SLOAD"
										},
										{
											"begin": 17344,
											"end": 17366,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 17344,
											"end": 17366,
											"name": "SWAP1"
										},
										{
											"begin": 17344,
											"end": 17374,
											"name": "SWAP2"
										},
										{
											"begin": 17344,
											"end": 17374,
											"name": "SWAP1"
										},
										{
											"begin": 17344,
											"end": 17374,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17344,
											"end": 17374,
											"name": "AND"
										},
										{
											"begin": 17344,
											"end": 17374,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17344,
											"end": 17374,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 17344,
											"end": 17374,
											"name": "JUMPDEST"
										},
										{
											"begin": 17323,
											"end": 17332,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17323,
											"end": 17341,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17333,
											"end": 17340,
											"name": "DUP5"
										},
										{
											"begin": 17323,
											"end": 17341,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17323,
											"end": 17341,
											"name": "AND"
										},
										{
											"begin": 17323,
											"end": 17341,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17323,
											"end": 17341,
											"name": "AND"
										},
										{
											"begin": 17323,
											"end": 17341,
											"name": "DUP2"
										},
										{
											"begin": 17323,
											"end": 17341,
											"name": "MSTORE"
										},
										{
											"begin": 17323,
											"end": 17341,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17323,
											"end": 17341,
											"name": "ADD"
										},
										{
											"begin": 17323,
											"end": 17341,
											"name": "SWAP1"
										},
										{
											"begin": 17323,
											"end": 17341,
											"name": "DUP2"
										},
										{
											"begin": 17323,
											"end": 17341,
											"name": "MSTORE"
										},
										{
											"begin": 17323,
											"end": 17341,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17323,
											"end": 17341,
											"name": "ADD"
										},
										{
											"begin": 17323,
											"end": 17341,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17323,
											"end": 17341,
											"name": "KECCAK256"
										},
										{
											"begin": 17323,
											"end": 17374,
											"name": "DUP2"
										},
										{
											"begin": 17323,
											"end": 17374,
											"name": "SWAP1"
										},
										{
											"begin": 17323,
											"end": 17374,
											"name": "SSTORE"
										},
										{
											"begin": 17323,
											"end": 17374,
											"name": "POP"
										},
										{
											"begin": 17407,
											"end": 17414,
											"name": "DUP2"
										},
										{
											"begin": 17386,
											"end": 17423,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17386,
											"end": 17423,
											"name": "AND"
										},
										{
											"begin": 17403,
											"end": 17404,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17386,
											"end": 17423,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17386,
											"end": 17423,
											"name": "AND"
										},
										{
											"begin": 17386,
											"end": 17423,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17416,
											"end": 17422,
											"name": "DUP4"
										},
										{
											"begin": 17386,
											"end": 17423,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17386,
											"end": 17423,
											"name": "MLOAD"
										},
										{
											"begin": 17386,
											"end": 17423,
											"name": "DUP1"
										},
										{
											"begin": 17386,
											"end": 17423,
											"name": "DUP3"
										},
										{
											"begin": 17386,
											"end": 17423,
											"name": "DUP2"
										},
										{
											"begin": 17386,
											"end": 17423,
											"name": "MSTORE"
										},
										{
											"begin": 17386,
											"end": 17423,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17386,
											"end": 17423,
											"name": "ADD"
										},
										{
											"begin": 17386,
											"end": 17423,
											"name": "SWAP2"
										},
										{
											"begin": 17386,
											"end": 17423,
											"name": "POP"
										},
										{
											"begin": 17386,
											"end": 17423,
											"name": "POP"
										},
										{
											"begin": 17386,
											"end": 17423,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17386,
											"end": 17423,
											"name": "MLOAD"
										},
										{
											"begin": 17386,
											"end": 17423,
											"name": "DUP1"
										},
										{
											"begin": 17386,
											"end": 17423,
											"name": "SWAP2"
										},
										{
											"begin": 17386,
											"end": 17423,
											"name": "SUB"
										},
										{
											"begin": 17386,
											"end": 17423,
											"name": "SWAP1"
										},
										{
											"begin": 17386,
											"end": 17423,
											"name": "LOG3"
										},
										{
											"begin": 17139,
											"end": 17429,
											"name": "POP"
										},
										{
											"begin": 17139,
											"end": 17429,
											"name": "POP"
										},
										{
											"begin": 17139,
											"end": 17429,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11084,
											"end": 11299,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 11084,
											"end": 11299,
											"name": "JUMPDEST"
										},
										{
											"begin": 11174,
											"end": 11175,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11154,
											"end": 11176,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11154,
											"end": 11176,
											"name": "AND"
										},
										{
											"begin": 11154,
											"end": 11162,
											"name": "DUP2"
										},
										{
											"begin": 11154,
											"end": 11176,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11154,
											"end": 11176,
											"name": "AND"
										},
										{
											"begin": 11154,
											"end": 11176,
											"name": "EQ"
										},
										{
											"begin": 11154,
											"end": 11176,
											"name": "ISZERO"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "JUMPI"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "MLOAD"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "DUP2"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "MSTORE"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "ADD"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "DUP1"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "DUP1"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "ADD"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "DUP3"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "DUP2"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "SUB"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "DUP3"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "MSTORE"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "DUP2"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "MSTORE"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "ADD"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "DUP1"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "SWAP2"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "CODECOPY"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "ADD"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "SWAP2"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "POP"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "POP"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "MLOAD"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "DUP1"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "SWAP2"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "SUB"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "SWAP1"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "REVERT"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 11146,
											"end": 11219,
											"name": "JUMPDEST"
										},
										{
											"begin": 11260,
											"end": 11268,
											"name": "DUP1"
										},
										{
											"begin": 11231,
											"end": 11269,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11231,
											"end": 11269,
											"name": "AND"
										},
										{
											"begin": 11252,
											"end": 11258,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11252,
											"end": 11258,
											"name": "DUP1"
										},
										{
											"begin": 11252,
											"end": 11258,
											"name": "SWAP1"
										},
										{
											"begin": 11252,
											"end": 11258,
											"name": "SLOAD"
										},
										{
											"begin": 11252,
											"end": 11258,
											"name": "SWAP1"
										},
										{
											"begin": 11252,
											"end": 11258,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11252,
											"end": 11258,
											"name": "EXP"
										},
										{
											"begin": 11252,
											"end": 11258,
											"name": "SWAP1"
										},
										{
											"begin": 11252,
											"end": 11258,
											"name": "DIV"
										},
										{
											"begin": 11252,
											"end": 11258,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11252,
											"end": 11258,
											"name": "AND"
										},
										{
											"begin": 11231,
											"end": 11269,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11231,
											"end": 11269,
											"name": "AND"
										},
										{
											"begin": 11231,
											"end": 11269,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 11231,
											"end": 11269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11231,
											"end": 11269,
											"name": "MLOAD"
										},
										{
											"begin": 11231,
											"end": 11269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11231,
											"end": 11269,
											"name": "MLOAD"
										},
										{
											"begin": 11231,
											"end": 11269,
											"name": "DUP1"
										},
										{
											"begin": 11231,
											"end": 11269,
											"name": "SWAP2"
										},
										{
											"begin": 11231,
											"end": 11269,
											"name": "SUB"
										},
										{
											"begin": 11231,
											"end": 11269,
											"name": "SWAP1"
										},
										{
											"begin": 11231,
											"end": 11269,
											"name": "LOG3"
										},
										{
											"begin": 11285,
											"end": 11293,
											"name": "DUP1"
										},
										{
											"begin": 11276,
											"end": 11282,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11276,
											"end": 11282,
											"name": "DUP1"
										},
										{
											"begin": 11276,
											"end": 11293,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11276,
											"end": 11293,
											"name": "EXP"
										},
										{
											"begin": 11276,
											"end": 11293,
											"name": "DUP2"
										},
										{
											"begin": 11276,
											"end": 11293,
											"name": "SLOAD"
										},
										{
											"begin": 11276,
											"end": 11293,
											"name": "DUP2"
										},
										{
											"begin": 11276,
											"end": 11293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11276,
											"end": 11293,
											"name": "MUL"
										},
										{
											"begin": 11276,
											"end": 11293,
											"name": "NOT"
										},
										{
											"begin": 11276,
											"end": 11293,
											"name": "AND"
										},
										{
											"begin": 11276,
											"end": 11293,
											"name": "SWAP1"
										},
										{
											"begin": 11276,
											"end": 11293,
											"name": "DUP4"
										},
										{
											"begin": 11276,
											"end": 11293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11276,
											"end": 11293,
											"name": "AND"
										},
										{
											"begin": 11276,
											"end": 11293,
											"name": "MUL"
										},
										{
											"begin": 11276,
											"end": 11293,
											"name": "OR"
										},
										{
											"begin": 11276,
											"end": 11293,
											"name": "SWAP1"
										},
										{
											"begin": 11276,
											"end": 11293,
											"name": "SSTORE"
										},
										{
											"begin": 11276,
											"end": 11293,
											"name": "POP"
										},
										{
											"begin": 11084,
											"end": 11299,
											"name": "POP"
										},
										{
											"begin": 11084,
											"end": 11299,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}.    * Requirements:    * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.    * Requirements    * - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}.    * Requirements:    * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}.    * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};    * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP.sol\":\"BEP20Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP.sol\":{\"keccak256\":\"0x4f561164df38b1883338c7ee15724601d06beaf37bb2906c332e4048483c387e\",\"urls\":[\"bzz-raw://e0030e137f604416bb19e6a0820003d769a87addb080d85c057db68e7a293d65\",\"dweb:/ipfs/QmYmevLKeFVh3d1UCzmPpcZPjVk5MhE5dDf8vzFEFDWzCM\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP.sol\":{\"keccak256\":\"0x4f561164df38b1883338c7ee15724601d06beaf37bb2906c332e4048483c387e\",\"urls\":[\"bzz-raw://e0030e137f604416bb19e6a0820003d769a87addb080d85c057db68e7a293d65\",\"dweb:/ipfs/QmYmevLKeFVh3d1UCzmPpcZPjVk5MhE5dDf8vzFEFDWzCM\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.    * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.    * Returns a boolean value indicating whether the operation succeeded.    * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729    * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.    * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.    * Returns a boolean value indicating whether the operation succeeded.    * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729    * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP.sol\":{\"keccak256\":\"0x4f561164df38b1883338c7ee15724601d06beaf37bb2906c332e4048483c387e\",\"urls\":[\"bzz-raw://e0030e137f604416bb19e6a0820003d769a87addb080d85c057db68e7a293d65\",\"dweb:/ipfs/QmYmevLKeFVh3d1UCzmPpcZPjVk5MhE5dDf8vzFEFDWzCM\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions.  * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}.  * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions.  * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}.  * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP.sol\":{\"keccak256\":\"0x4f561164df38b1883338c7ee15724601d06beaf37bb2906c332e4048483c387e\",\"urls\":[\"bzz-raw://e0030e137f604416bb19e6a0820003d769a87addb080d85c057db68e7a293d65\",\"dweb:/ipfs/QmYmevLKeFVh3d1UCzmPpcZPjVk5MhE5dDf8vzFEFDWzCM\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/BEP.sol\":4600:9028  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BEP.sol\":4600:9028  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820f9e96936c176480fb8dc8fc1ee5ea55623137b554add384715b68391f1c86cc664736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820f9e96936c176480fb8dc8fc1ee5ea55623137b554add384715b68391f1c86cc664736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xF9 0xE9 PUSH10 0x36C176480FB8DC8FC1EE 0x5E 0xA5 JUMP 0x23 SGT PUSH28 0x554ADD384715B68391F1C86CC664736F6C6343000510003200000000 ",
							"sourceMap": "4600:4428:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820f9e96936c176480fb8dc8fc1ee5ea55623137b554add384715b68391f1c86cc664736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xF9 0xE9 PUSH10 0x36C176480FB8DC8FC1EE 0x5E 0xA5 JUMP 0x23 SGT PUSH28 0x554ADD384715B68391F1C86CC664736F6C6343000510003200000000 ",
							"sourceMap": "4600:4428:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4600,
									"end": 9028,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4600,
									"end": 9028,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820f9e96936c176480fb8dc8fc1ee5ea55623137b554add384715b68391f1c86cc664736f6c63430005100032",
									".code": [
										{
											"begin": 4600,
											"end": 9028,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 4600,
											"end": 9028,
											"name": "ADDRESS"
										},
										{
											"begin": 4600,
											"end": 9028,
											"name": "EQ"
										},
										{
											"begin": 4600,
											"end": 9028,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4600,
											"end": 9028,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4600,
											"end": 9028,
											"name": "MSTORE"
										},
										{
											"begin": 4600,
											"end": 9028,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4600,
											"end": 9028,
											"name": "DUP1"
										},
										{
											"begin": 4600,
											"end": 9028,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP.sol\":{\"keccak256\":\"0x4f561164df38b1883338c7ee15724601d06beaf37bb2906c332e4048483c387e\",\"urls\":[\"bzz-raw://e0030e137f604416bb19e6a0820003d769a87addb080d85c057db68e7a293d65\",\"dweb:/ipfs/QmYmevLKeFVh3d1UCzmPpcZPjVk5MhE5dDf8vzFEFDWzCM\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/BEP.sol": {
				"ast": {
					"absolutePath": "contracts/BEP.sol",
					"exportedSymbols": {
						"BEP20Token": [
							907
						],
						"Context": [
							113
						],
						"IBEP20": [
							88
						],
						"Ownable": [
							404
						],
						"SafeMath": [
							298
						]
					},
					"id": 908,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 88,
							"linearizedBaseContracts": [
								88
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "137:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "163:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "163:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "162:9:0"
									},
									"scope": 88,
									"src": "117:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token decimals.",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "248:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "274:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 8,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "274:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "273:7:0"
									},
									"scope": 88,
									"src": "231:50:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token symbol.",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "353:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "379:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 13,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "379:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "378:15:0"
									},
									"scope": 88,
									"src": "338:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token name.",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "460:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "486:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 18,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "486:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "485:15:0"
									},
									"scope": 88,
									"src": "447:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the bep token owner.",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "578:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "604:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "603:9:0"
									},
									"scope": 88,
									"src": "561:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "712:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "711:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "752:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "751:9:0"
									},
									"scope": 88,
									"src": "693:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * Emits a {Transfer} event.",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "992:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "992:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1011:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "991:35:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1045:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1045:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1044:6:0"
									},
									"scope": 88,
									"src": "974:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n\n   * This value changes when {approve} or {transferFrom} are called.",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1338:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1338:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1354:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1354:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1337:33:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1394:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1393:9:0"
									},
									"scope": 88,
									"src": "1319:84:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n\n   * Emits an {Approval} event.",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2059:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2076:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2076:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2058:33:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2110:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 57,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2110:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2109:6:0"
									},
									"scope": 88,
									"src": "2042:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * Emits a {Transfer} event.",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2436:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2436:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2452:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2452:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2471:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2435:51:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2505:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2505:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2504:6:0"
									},
									"scope": 88,
									"src": "2414:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n\n   * Note that `value` may be zero.",
									"id": 79,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2689:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2711:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2731:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2731:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2688:57:0"
									},
									"src": "2674:72:0"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 87,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2916:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2939:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2939:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2964:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2915:63:0"
									},
									"src": "2901:78:0"
								}
							],
							"scope": 908,
							"src": "27:2955:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3694:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 92,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3682:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3694:0:0"
									},
									"scope": 113,
									"src": "3670:27:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "3765:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 97,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "3779:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3779:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 96,
												"id": 99,
												"nodeType": "Return",
												"src": "3772:17:0"
											}
										]
									},
									"documentation": null,
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3722:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3748:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3748:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3747:17:0"
									},
									"scope": 113,
									"src": "3703:92:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "3858:158:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 938,
													"src": "3865:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$113",
														"typeString": "contract Context"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "3865:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 108,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "4002:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4002:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 105,
												"id": 110,
												"nodeType": "Return",
												"src": "3995:15:0"
											}
										]
									},
									"documentation": null,
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3818:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3844:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3844:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3843:14:0"
									},
									"scope": 113,
									"src": "3801:215:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 908,
							"src": "3496:523:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 298,
							"linearizedBaseContracts": [
								298
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "4902:100:0",
										"statements": [
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 137,
														"src": "4909:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4909:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 127,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "4921:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 125,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "4925:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4921:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4909:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 129,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "4941:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 130,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "4946:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4941:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4949:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															925,
															926
														],
														"referencedDeclaration": 926,
														"src": "4933:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4933:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4933:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 135,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 123,
													"src": "4995:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 121,
												"id": 136,
												"nodeType": "Return",
												"src": "4988:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n\n   * Counterpart to Solidity's `+` operator.\n\n   * Requirements:\n- Addition cannot overflow.",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4848:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4859:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4859:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4847:22:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4893:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4892:9:0"
									},
									"scope": 298,
									"src": "4835:167:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "5324:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 148,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5342:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 149,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5345:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5348:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 147,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															154,
															181
														],
														"referencedDeclaration": 181,
														"src": "5338:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5338:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 146,
												"id": 152,
												"nodeType": "Return",
												"src": "5331:50:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n\n   * Counterpart to Solidity's `-` operator.\n\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5270:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5281:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5281:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5269:22:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5315:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5315:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5314:9:0"
									},
									"scope": 298,
									"src": "5257:130:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5757:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 166,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "5772:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 167,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "5777:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5772:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 169,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5780:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															925,
															926
														],
														"referencedDeclaration": 926,
														"src": "5764:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5764:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "5764:29:0"
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5800:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5800:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 174,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "5812:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 175,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "5816:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5812:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5800:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 173,
													"src": "5833:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 179,
												"nodeType": "Return",
												"src": "5826:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n\n   * Counterpart to Solidity's `-` operator.\n\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5675:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5686:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5697:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5697:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5674:50:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5748:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5747:9:0"
									},
									"scope": 298,
									"src": "5662:178:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "6138:364:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6358:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6363:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6358:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 196,
												"nodeType": "IfStatement",
												"src": "6354:37:0",
												"trueBody": {
													"id": 195,
													"nodeType": "Block",
													"src": "6366:25:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6382:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 189,
															"id": 194,
															"nodeType": "Return",
															"src": "6375:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 214,
														"src": "6399:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6399:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6411:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "6415:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6411:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6399:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 204,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "6431:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 205,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "6435:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6431:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 207,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "6440:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6431:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6443:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															925,
															926
														],
														"referencedDeclaration": 926,
														"src": "6423:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6423:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "6423:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 212,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 198,
													"src": "6495:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 189,
												"id": 213,
												"nodeType": "Return",
												"src": "6488:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n\n   * Counterpart to Solidity's `*` operator.\n\n   * Requirements:\n- Multiplication cannot overflow.",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6084:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6084:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6095:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6095:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6083:22:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6129:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6129:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6128:9:0"
									},
									"scope": 298,
									"src": "6071:431:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "7013:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 225,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "7031:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 226,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "7034:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7037:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 224,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															231,
															258
														],
														"referencedDeclaration": 258,
														"src": "7027:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7027:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 223,
												"id": 229,
												"nodeType": "Return",
												"src": "7020:46:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6959:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6959:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6970:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6958:22:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "7004:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7003:9:0"
									},
									"scope": 298,
									"src": "6946:126:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "7631:228:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "7709:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7713:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7709:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 246,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7716:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															925,
															926
														],
														"referencedDeclaration": 926,
														"src": "7701:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7701:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "7701:28:0"
											},
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "7736:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7736:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 251,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "7748:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 252,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "7752:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7748:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7736:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 255,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "7852:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 256,
												"nodeType": "Return",
												"src": "7845:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7549:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7549:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7560:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7571:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7571:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7548:50:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7622:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7621:9:0"
									},
									"scope": 298,
									"src": "7536:323:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "8359:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 268,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "8377:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 269,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "8380:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8383:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 267,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															274,
															297
														],
														"referencedDeclaration": 297,
														"src": "8373:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8373:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 272,
												"nodeType": "Return",
												"src": "8366:44:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8305:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8316:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8316:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8304:22:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8350:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8349:9:0"
									},
									"scope": 298,
									"src": "8292:124:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "8964:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 286,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "8979:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8984:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8979:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 289,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "8987:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															925,
															926
														],
														"referencedDeclaration": 926,
														"src": "8971:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8971:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "8971:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 292,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "9014:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 293,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "9018:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9014:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 284,
												"id": 295,
												"nodeType": "Return",
												"src": "9007:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8882:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8882:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8893:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8904:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8904:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8881:50:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8955:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8954:9:0"
									},
									"scope": 298,
									"src": "8869:156:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 908,
							"src": "4600:4428:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 299,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "9559:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 300,
									"nodeType": "InheritanceSpecifier",
									"src": "9559:7:0"
								}
							],
							"contractDependencies": [
								113
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 404,
							"linearizedBaseContracts": [
								404,
								113
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 302,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 404,
									"src": "9572:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 301,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9572:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 308,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9628:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9628:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9659:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9627:57:0"
									},
									"src": "9601:84:0"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "9808:125:0",
										"statements": [
											{
												"assignments": [
													312
												],
												"declarations": [
													{
														"constant": false,
														"id": 312,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 327,
														"src": "9815:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 311,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9815:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 313,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "9835:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9835:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9815:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 316,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "9854:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 317,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "9863:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9854:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "9854:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9913:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9905:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9905:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 324,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "9917:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 320,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "9884:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9884:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "EmitStatement",
												"src": "9879:48:0"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 328,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9796:2:0"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9808:0:0"
									},
									"scope": 404,
									"src": "9784:149:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "10053:26:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 333,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "10067:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "10060:13:0"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10020:2:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "10044:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10044:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10043:9:0"
									},
									"scope": 404,
									"src": "10006:73:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "10185:88:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 339,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "10200:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 340,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "10210:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10210:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10200:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10224:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															925,
															926
														],
														"referencedDeclaration": 926,
														"src": "10192:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10192:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "10192:67:0"
											},
											{
												"id": 346,
												"nodeType": "PlaceholderStatement",
												"src": "10266:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 348,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10182:2:0"
									},
									"src": "10164:109:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "10654:84:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 354,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10687:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10703:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10695:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 353,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10666:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10666:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "EmitStatement",
												"src": "10661:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 360,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "10713:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10730:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10722:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10722:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "10713:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "10713:19:0"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n\n   * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 351,
											"modifierName": {
												"argumentTypes": null,
												"id": 350,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10644:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10644:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10634:2:0"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10654:0:0"
									},
									"scope": 404,
									"src": "10608:130:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "10945:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 375,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "10971:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 374,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "10952:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10952:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "10952:28:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 372,
											"modifierName": {
												"argumentTypes": null,
												"id": 371,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10935:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10935:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "10910:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10910:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10909:18:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10945:0:0"
									},
									"scope": 404,
									"src": "10883:103:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "11139:160:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 385,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "11154:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11174:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11166:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11166:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "11154:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11178:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															925,
															926
														],
														"referencedDeclaration": 926,
														"src": "11146:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11146:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "11146:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 394,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "11252:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 395,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "11260:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 393,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "11231:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11231:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "EmitStatement",
												"src": "11226:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 398,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "11276:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 399,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "11285:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11276:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "11276:17:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "11112:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11112:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11111:18:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11139:0:0"
									},
									"scope": 404,
									"src": "11084:215:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 908,
							"src": "9539:1763:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 405,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "11329:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 406,
									"nodeType": "InheritanceSpecifier",
									"src": "11329:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 407,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 88,
										"src": "11338:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$88",
											"typeString": "contract IBEP20"
										}
									},
									"id": 408,
									"nodeType": "InheritanceSpecifier",
									"src": "11338:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 409,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 404,
										"src": "11346:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$404",
											"typeString": "contract Ownable"
										}
									},
									"id": 410,
									"nodeType": "InheritanceSpecifier",
									"src": "11346:7:0"
								}
							],
							"contractDependencies": [
								88,
								113,
								404
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 907,
							"linearizedBaseContracts": [
								907,
								404,
								88,
								113
							],
							"name": "BEP20Token",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 413,
									"libraryName": {
										"contractScope": null,
										"id": 411,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 298,
										"src": "11365:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$298",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "11359:27:0",
									"typeName": {
										"id": 412,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11378:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 417,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "11392:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 416,
										"keyType": {
											"id": 414,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11401:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11392:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 415,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11412:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "11445:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 422,
										"keyType": {
											"id": 418,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11454:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11445:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 421,
											"keyType": {
												"id": 419,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11474:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11465:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 420,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11485:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 425,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "11521:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 424,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11521:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "11554:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 426,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "11554:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 429,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "11582:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 428,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11582:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 431,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "11609:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 430,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11609:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "11738:215:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 442,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "11745:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 443,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "11753:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "11745:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "11745:13:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 446,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "11765:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 447,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "11775:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "11765:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "11765:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 450,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "11789:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 451,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "11801:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "11789:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "11789:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 454,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11817:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 455,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "11832:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11817:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "11817:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 458,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "11851:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 461,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 459,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 922,
																"src": "11861:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11861:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11851:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 462,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11875:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11851:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "11851:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11918:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11910:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11910:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 469,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 922,
																"src": "11922:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11922:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 471,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "11934:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "11901:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11901:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 473,
												"nodeType": "EmitStatement",
												"src": "11896:51:0"
											}
										]
									},
									"documentation": null,
									"id": 475,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "11648:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 432,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11648:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "11669:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 434,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11669:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "11692:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 436,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11692:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"name": "totalSupply_",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "11709:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11647:83:0"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11738:0:0"
									},
									"scope": 907,
									"src": "11636:317:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "12065:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 480,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "12079:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12079:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 479,
												"id": 482,
												"nodeType": "Return",
												"src": "12072:14:0"
											}
										]
									},
									"documentation": "@dev Returns the bep token owner.",
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12030:2:0"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "12056:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12056:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12055:9:0"
									},
									"scope": 907,
									"src": "12013:79:0",
									"stateMutability": "view",
									"superFunction": 26,
									"visibility": "external"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "12201:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 489,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "12215:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 488,
												"id": 490,
												"nodeType": "Return",
												"src": "12208:16:0"
											}
										]
									},
									"documentation": "@dev Returns the token decimals.",
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12168:2:0"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "12194:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 486,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "12194:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12193:7:0"
									},
									"scope": 907,
									"src": "12151:79:0",
									"stateMutability": "view",
									"superFunction": 11,
									"visibility": "external"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "12343:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 497,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 429,
													"src": "12357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 496,
												"id": 498,
												"nodeType": "Return",
												"src": "12350:14:0"
											}
										]
									},
									"documentation": "@dev Returns the token symbol.",
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12302:2:0"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "12328:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12328:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12327:15:0"
									},
									"scope": 907,
									"src": "12287:83:0",
									"stateMutability": "view",
									"superFunction": 16,
									"visibility": "external"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "12477:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 505,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 431,
													"src": "12491:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 504,
												"id": 506,
												"nodeType": "Return",
												"src": "12484:12:0"
											}
										]
									},
									"documentation": "@dev Returns the token name.",
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12436:2:0"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "12462:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 502,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12462:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12461:15:0"
									},
									"scope": 907,
									"src": "12423:79:0",
									"stateMutability": "view",
									"superFunction": 21,
									"visibility": "external"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "12613:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 513,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "12627:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 512,
												"id": 514,
												"nodeType": "Return",
												"src": "12620:19:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-totalSupply}.",
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12578:2:0"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "12604:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12604:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12603:9:0"
									},
									"scope": 907,
									"src": "12558:87:0",
									"stateMutability": "view",
									"superFunction": 6,
									"visibility": "external"
								},
								{
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "12767:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 523,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "12781:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 525,
													"indexExpression": {
														"argumentTypes": null,
														"id": 524,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "12791:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12781:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 522,
												"id": 526,
												"nodeType": "Return",
												"src": "12774:25:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-balanceOf}.",
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "12718:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12717:17:0"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "12758:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12757:9:0"
									},
									"scope": 907,
									"src": "12699:106:0",
									"stateMutability": "view",
									"superFunction": 33,
									"visibility": "external"
								},
								{
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "13076:73:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 538,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13093:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13093:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 540,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "13107:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 541,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "13118:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 537,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "13083:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13083:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "13083:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13139:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 536,
												"id": 545,
												"nodeType": "Return",
												"src": "13132:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transfer}.\n\n   * Requirements:\n\n   * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "13017:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13017:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "13036:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13036:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13016:35:0"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "13070:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 534,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13070:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13069:6:0"
									},
									"scope": 907,
									"src": "12999:150:0",
									"stateMutability": "nonpayable",
									"superFunction": 42,
									"visibility": "external"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "13286:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 556,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "13300:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 558,
														"indexExpression": {
															"argumentTypes": null,
															"id": 557,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "13312:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13300:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 560,
													"indexExpression": {
														"argumentTypes": null,
														"id": 559,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "13319:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13300:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 555,
												"id": 561,
												"nodeType": "Return",
												"src": "13293:34:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-allowance}.",
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "13222:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "13237:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13221:32:0"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "13277:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13276:9:0"
									},
									"scope": 907,
									"src": "13203:130:0",
									"stateMutability": "view",
									"superFunction": 51,
									"visibility": "external"
								},
								{
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "13537:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 573,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13553:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13553:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 575,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "13567:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 576,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "13576:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 572,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "13544:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13544:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "13544:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13597:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 571,
												"id": 580,
												"nodeType": "Return",
												"src": "13590:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-approve}.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.",
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "13480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "13497:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13497:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13479:33:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "13531:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13531:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13530:6:0"
									},
									"scope": 907,
									"src": "13463:144:0",
									"stateMutability": "nonpayable",
									"superFunction": 60,
									"visibility": "external"
								},
								{
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "14149:195:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 594,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "14166:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 595,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "14174:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 596,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "14185:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 593,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "14156:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14156:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "14156:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 600,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "14208:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 601,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14216:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14216:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 610,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "14268:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14276:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 603,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "14230:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 605,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 604,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 584,
																			"src": "14242:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14230:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 608,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 606,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "14250:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14250:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14230:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "14230:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14230:89:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "14199:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14199:121:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "14199:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14334:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 592,
												"id": 616,
												"nodeType": "Return",
												"src": "14327:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transferFrom}.\n\n   * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {BEP20};\n\n   * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "14074:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14074:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "14090:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14090:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "14109:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14109:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14073:51:0"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "14143:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 590,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14143:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14142:6:0"
									},
									"scope": 907,
									"src": "14052:292:0",
									"stateMutability": "nonpayable",
									"superFunction": 71,
									"visibility": "external"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "14812:114:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 628,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14828:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14828:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 630,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "14842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 638,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "14890:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 631,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "14851:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 634,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 632,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "14863:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14863:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14851:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 636,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 635,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "14877:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14851:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 138,
																"src": "14851:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14851:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 627,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "14819:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14819:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "14819:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14916:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 626,
												"id": 643,
												"nodeType": "Return",
												"src": "14909:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n\n   * Emits an {Approval} event indicating the updated allowance.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "14753:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "14770:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14770:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14752:37:0"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "14806:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 624,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14806:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14805:6:0"
									},
									"scope": 907,
									"src": "14726:200:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 672,
										"nodeType": "Block",
										"src": "15489:160:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 655,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15505:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15505:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 657,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "15519:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 665,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "15567:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15584:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 658,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "15528:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 661,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 659,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "15540:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15540:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15528:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 663,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 662,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 647,
																		"src": "15554:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15528:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "15528:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15528:96:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 654,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "15496:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15496:129:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "15496:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15639:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 653,
												"id": 671,
												"nodeType": "Return",
												"src": "15632:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n\n   * Emits an {Approval} event indicating the updated allowance.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "15425:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "15442:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15424:42:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "15483:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 651,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15483:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15482:6:0"
									},
									"scope": 907,
									"src": "15398:251:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "15911:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 683,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15924:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15924:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 685,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "15938:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 682,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "15918:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15918:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "15918:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15959:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 681,
												"id": 689,
												"nodeType": "Return",
												"src": "15952:11:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\nthe total supply.\n\n   * Requirements\n\n   * - `msg.sender` must be the token owner",
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 678,
											"modifierName": {
												"argumentTypes": null,
												"id": 677,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "15886:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15886:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "15863:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15862:16:0"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "15905:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15905:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15904:6:0"
									},
									"scope": 907,
									"src": "15849:120:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "16508:370:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 701,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "16523:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16541:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16533:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16533:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16523:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16545:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 700,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															925,
															926
														],
														"referencedDeclaration": 926,
														"src": "16515:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16515:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "16515:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 710,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "16600:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16621:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16613:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16613:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16600:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16625:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 709,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															925,
															926
														],
														"referencedDeclaration": 926,
														"src": "16592:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16592:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 717,
												"nodeType": "ExpressionStatement",
												"src": "16592:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 718,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16672:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 720,
														"indexExpression": {
															"argumentTypes": null,
															"id": 719,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "16682:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16672:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 725,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "16714:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16722:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 721,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16692:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 723,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 722,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 693,
																	"src": "16702:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16692:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "16692:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16692:71:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16672:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "16672:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 730,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16770:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 732,
														"indexExpression": {
															"argumentTypes": null,
															"id": 731,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "16780:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16770:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 737,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "16818:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 733,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16793:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 735,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 734,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 695,
																	"src": "16803:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16793:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16793:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16793:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16770:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "16770:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 742,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "16846:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 743,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "16854:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 744,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "16865:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 741,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "16837:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16837:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 746,
												"nodeType": "EmitStatement",
												"src": "16832:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n\n   * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n\n   * Emits a {Transfer} event.\n\n   * Requirements:\n\n   * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "16448:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16448:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "16464:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "16483:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16483:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16447:51:0"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16508:0:0"
									},
									"scope": 907,
									"src": "16429:449:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "17196:233:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 756,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "17211:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17230:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17222:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17222:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17211:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17234:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 755,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															925,
															926
														],
														"referencedDeclaration": 926,
														"src": "17203:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17203:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "17203:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 764,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "17277:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 767,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 752,
																"src": "17309:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 765,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "17292:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "17292:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17292:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17277:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "17277:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 771,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "17323:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 773,
														"indexExpression": {
															"argumentTypes": null,
															"id": 772,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "17333:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17323:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 778,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 752,
																"src": "17367:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 774,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "17344:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 776,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 775,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "17354:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17344:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "17344:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17344:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17323:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "17323:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17403:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17395:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17395:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 786,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "17407:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 787,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "17416:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 782,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "17386:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17386:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "EmitStatement",
												"src": "17381:42:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n\n   * Emits a {Transfer} event with `from` set to the zero address.\n\n   * Requirements\n\n   * - `to` cannot be the zero address.",
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "17154:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17154:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "17171:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17171:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17153:33:0"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17196:0:0"
									},
									"scope": 907,
									"src": "17139:290:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "17794:273:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 799,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "17809:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17828:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17820:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17820:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17809:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17832:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 798,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															925,
															926
														],
														"referencedDeclaration": 926,
														"src": "17801:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17801:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "17801:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 807,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "17877:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 809,
														"indexExpression": {
															"argumentTypes": null,
															"id": 808,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "17887:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17877:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 814,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "17921:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17929:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 810,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "17898:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 812,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 811,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "17908:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17898:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "17898:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17898:68:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17877:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "17877:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 819,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "17973:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 822,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "18005:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 820,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "17988:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "17988:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 823,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17988:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17973:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "17973:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 827,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "18033:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18050:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18042:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18042:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 831,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "18054:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 826,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "18024:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18024:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 833,
												"nodeType": "EmitStatement",
												"src": "18019:42:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n\n   * Emits a {Transfer} event with `to` set to the zero address.\n\n   * Requirements\n\n   * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "17752:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "17769:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17751:33:0"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17794:0:0"
									},
									"scope": 907,
									"src": "17737:330:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "18554:245:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 845,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 837,
																"src": "18569:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18586:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18578:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18578:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18569:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18590:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 844,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															925,
															926
														],
														"referencedDeclaration": 926,
														"src": "18561:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18561:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "18561:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 854,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "18644:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18663:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18655:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18655:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18644:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18667:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 853,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															925,
															926
														],
														"referencedDeclaration": 926,
														"src": "18636:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18636:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "18636:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 862,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "18713:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 865,
															"indexExpression": {
																"argumentTypes": null,
																"id": 863,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 837,
																"src": "18725:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18713:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 866,
														"indexExpression": {
															"argumentTypes": null,
															"id": 864,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "18732:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18713:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 867,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "18743:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18713:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "18713:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 871,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "18770:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 872,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "18777:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 873,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "18786:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 870,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "18761:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18761:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 875,
												"nodeType": "EmitStatement",
												"src": "18756:37:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n\n   * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n\n   * Emits an {Approval} event.\n\n   * Requirements:\n\n   * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "18497:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18497:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "18512:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18512:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "18529:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18496:48:0"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18554:0:0"
									},
									"scope": 907,
									"src": "18479:320:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "19032:161:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 885,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "19045:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 886,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "19054:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 884,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "19039:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19039:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "19039:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 890,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "19077:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 891,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "19086:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19086:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 900,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "19139:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19147:38:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 893,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "19100:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 895,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 894,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 879,
																			"src": "19112:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "19100:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 898,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 896,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "19121:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19121:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19100:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "19100:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19100:86:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 889,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "19068:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19068:119:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "19068:119:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n\n   * See {_burn} and {_approve}.",
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "18990:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18990:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "19007:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18989:33:0"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19032:0:0"
									},
									"scope": 907,
									"src": "18971:222:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 908,
							"src": "11306:7890:0"
						}
					],
					"src": "0:19196:0"
				},
				"id": 0
			}
		}
	}
}