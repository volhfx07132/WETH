{
	"id": "f7ac36b73e1f0828a3eacb13081173d2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/demo1.sol": {
				"content": "pragma solidity >0.4.0 <0.9.0;\r\n/**\r\n * @title SizeOf\r\n * Copyright (c) 2016-2020 zpouladzade/Seriality\r\n * @dev The SizeOf return the size of the solidity types in byte\r\n * @author pouladzade@gmail.com\r\n */\r\n\r\ncontract Demo {\r\n    \r\n    uint8 constant STRING_SHORT_START = 0x80;\r\n    uint8 constant STRING_LONG_START  = 0xb8;\r\n    uint8 constant LIST_SHORT_START   = 0xc0;\r\n    uint8 constant LIST_LONG_START    = 0xf8;\r\n    uint8 constant WORD_SIZE = 32;\r\n\r\n    struct RLPItem {\r\n        uint len;\r\n        uint memPtr;\r\n    }\r\n\r\n    struct Iterator {\r\n        RLPItem item;   // Item that's being iterated over.\r\n        uint nextPtr;   // Position of the next item in the list.\r\n    }\r\n\r\n    RLPItem public rlpItem;\r\n\r\n    constructor(uint _len, uint _menPtr){\r\n        rlpItem.len = _len;\r\n        rlpItem.memPtr = _menPtr;\r\n    }\r\n\r\n    function getData() public view returns(bool){\r\n       return toBoolean(rlpItem);   \r\n    }\r\n\r\n    function toBoolean(RLPItem memory item) internal pure returns (bool) {\r\n        require(item.len == 1);\r\n        uint result;\r\n        uint memPtr = item.memPtr;\r\n        assembly {\r\n            result := byte(0, mload(memPtr))\r\n        }\r\n\r\n        return result == 0 ? false : true;\r\n    }\r\n\r\n      function encodeBool(bool self) internal pure returns (bytes memory) {\r\n        bytes memory rs = new bytes(1);\r\n        if (self) {\r\n            rs[0] = bytes1(uint8(1));\r\n        }\r\n        return rs;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/demo1.sol": {
				"Demo": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_len",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_menPtr",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "getData",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rlpItem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "len",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "memPtr",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "pouladzade@gmail.com",
						"details": "The SizeOf return the size of the solidity types in byte",
						"kind": "dev",
						"methods": {},
						"title": "SizeOf Copyright (c) 2016-2020 zpouladzade/Seriality",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/demo1.sol\":211:1453  contract Demo {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/demo1.sol\":727:835  constructor(uint _len, uint _menPtr){\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/demo1.sol\":788:792  _len */\n  dup2\n    /* \"contracts/demo1.sol\":774:781  rlpItem */\n  0x00\n    /* \"contracts/demo1.sol\":774:785  rlpItem.len */\n  dup1\n  add\n    /* \"contracts/demo1.sol\":774:792  rlpItem.len = _len */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/demo1.sol\":820:827  _menPtr */\n  dup1\n    /* \"contracts/demo1.sol\":803:810  rlpItem */\n  0x00\n    /* \"contracts/demo1.sol\":803:817  rlpItem.memPtr */\n  0x01\n  add\n    /* \"contracts/demo1.sol\":803:827  rlpItem.memPtr = _menPtr */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/demo1.sol\":727:835  constructor(uint _len, uint _menPtr){\r... */\n  pop\n  pop\n    /* \"contracts/demo1.sol\":211:1453  contract Demo {\r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:663   */\ntag_3:\n    /* \"#utility.yul\":235:241   */\n  0x00\n    /* \"#utility.yul\":243:249   */\n  dup1\n    /* \"#utility.yul\":292:294   */\n  0x40\n    /* \"#utility.yul\":280:289   */\n  dup4\n    /* \"#utility.yul\":271:278   */\n  dup6\n    /* \"#utility.yul\":267:290   */\n  sub\n    /* \"#utility.yul\":263:295   */\n  slt\n    /* \"#utility.yul\":260:379   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":298:377   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":260:379   */\ntag_13:\n    /* \"#utility.yul\":418:419   */\n  0x00\n    /* \"#utility.yul\":443:507   */\n  tag_16\n    /* \"#utility.yul\":499:506   */\n  dup6\n    /* \"#utility.yul\":490:496   */\n  dup3\n    /* \"#utility.yul\":479:488   */\n  dup7\n    /* \"#utility.yul\":475:497   */\n  add\n    /* \"#utility.yul\":443:507   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":433:507   */\n  swap3\n  pop\n    /* \"#utility.yul\":389:517   */\n  pop\n    /* \"#utility.yul\":556:558   */\n  0x20\n    /* \"#utility.yul\":582:646   */\n  tag_17\n    /* \"#utility.yul\":638:645   */\n  dup6\n    /* \"#utility.yul\":629:635   */\n  dup3\n    /* \"#utility.yul\":618:627   */\n  dup7\n    /* \"#utility.yul\":614:636   */\n  add\n    /* \"#utility.yul\":582:646   */\n  tag_8\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":572:646   */\n  swap2\n  pop\n    /* \"#utility.yul\":527:656   */\n  pop\n    /* \"#utility.yul\":156:663   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":750:827   */\ntag_20:\n    /* \"#utility.yul\":787:794   */\n  0x00\n    /* \"#utility.yul\":816:821   */\n  dup2\n    /* \"#utility.yul\":805:821   */\n  swap1\n  pop\n    /* \"#utility.yul\":750:827   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":956:1073   */\ntag_15:\n    /* \"#utility.yul\":1065:1066   */\n  0x00\n    /* \"#utility.yul\":1062:1063   */\n  dup1\n    /* \"#utility.yul\":1055:1067   */\n  revert\n    /* \"#utility.yul\":1079:1201   */\ntag_11:\n    /* \"#utility.yul\":1152:1176   */\n  tag_26\n    /* \"#utility.yul\":1170:1175   */\n  dup2\n    /* \"#utility.yul\":1152:1176   */\n  tag_20\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":1145:1150   */\n  dup2\n    /* \"#utility.yul\":1142:1177   */\n  eq\n    /* \"#utility.yul\":1132:1195   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":1191:1192   */\n  0x00\n    /* \"#utility.yul\":1188:1189   */\n  dup1\n    /* \"#utility.yul\":1181:1193   */\n  revert\n    /* \"#utility.yul\":1132:1195   */\ntag_27:\n    /* \"#utility.yul\":1079:1201   */\n  pop\n  jump\t// out\n    /* \"contracts/demo1.sol\":211:1453  contract Demo {\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/demo1.sol\":211:1453  contract Demo {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3bc5de30\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa699fb03\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/demo1.sol\":843:933  function getData() public view returns(bool){\r... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo1.sol\":696:718  RLPItem public rlpItem */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap3\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/demo1.sol\":843:933  function getData() public view returns(bool){\r... */\n    tag_6:\n        /* \"contracts/demo1.sol\":882:886  bool */\n      0x00\n        /* \"contracts/demo1.sol\":904:922  toBoolean(rlpItem) */\n      tag_14\n        /* \"contracts/demo1.sol\":914:921  rlpItem */\n      0x00\n        /* \"contracts/demo1.sol\":904:922  toBoolean(rlpItem) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/demo1.sol\":904:913  toBoolean */\n      tag_15\n        /* \"contracts/demo1.sol\":904:922  toBoolean(rlpItem) */\n      jump\t// in\n    tag_14:\n        /* \"contracts/demo1.sol\":897:922  return toBoolean(rlpItem) */\n      swap1\n      pop\n        /* \"contracts/demo1.sol\":843:933  function getData() public view returns(bool){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/demo1.sol\":696:718  RLPItem public rlpItem */\n    tag_10:\n      0x00\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/demo1.sol\":941:1232  function toBoolean(RLPItem memory item) internal pure returns (bool) {\r... */\n    tag_15:\n        /* \"contracts/demo1.sol\":1004:1008  bool */\n      0x00\n        /* \"contracts/demo1.sol\":1041:1042  1 */\n      0x01\n        /* \"contracts/demo1.sol\":1029:1033  item */\n      dup3\n        /* \"contracts/demo1.sol\":1029:1037  item.len */\n      0x00\n      add\n      mload\n        /* \"contracts/demo1.sol\":1029:1042  item.len == 1 */\n      eq\n        /* \"contracts/demo1.sol\":1021:1043  require(item.len == 1) */\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n        /* \"contracts/demo1.sol\":1054:1065  uint result */\n      0x00\n        /* \"contracts/demo1.sol\":1076:1087  uint memPtr */\n      dup1\n        /* \"contracts/demo1.sol\":1090:1094  item */\n      dup4\n        /* \"contracts/demo1.sol\":1090:1101  item.memPtr */\n      0x20\n      add\n      mload\n        /* \"contracts/demo1.sol\":1076:1101  uint memPtr = item.memPtr */\n      swap1\n      pop\n        /* \"contracts/demo1.sol\":1160:1166  memPtr */\n      dup1\n        /* \"contracts/demo1.sol\":1154:1167  mload(memPtr) */\n      mload\n        /* \"contracts/demo1.sol\":1151:1152  0 */\n      0x00\n        /* \"contracts/demo1.sol\":1146:1168  byte(0, mload(memPtr)) */\n      byte\n        /* \"contracts/demo1.sol\":1136:1168  result := byte(0, mload(memPtr)) */\n      swap2\n      pop\n        /* \"contracts/demo1.sol\":1208:1209  0 */\n      0x00\n        /* \"contracts/demo1.sol\":1198:1204  result */\n      dup3\n        /* \"contracts/demo1.sol\":1198:1209  result == 0 */\n      eq\n        /* \"contracts/demo1.sol\":1198:1224  result == 0 ? false : true */\n      tag_18\n      jumpi\n        /* \"contracts/demo1.sol\":1220:1224  true */\n      0x01\n        /* \"contracts/demo1.sol\":1198:1224  result == 0 ? false : true */\n      jump(tag_19)\n    tag_18:\n        /* \"contracts/demo1.sol\":1212:1217  false */\n      0x00\n        /* \"contracts/demo1.sol\":1198:1224  result == 0 ? false : true */\n    tag_19:\n        /* \"contracts/demo1.sol\":1191:1224  return result == 0 ? false : true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/demo1.sol\":941:1232  function toBoolean(RLPItem memory item) internal pure returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:116   */\n    tag_21:\n        /* \"#utility.yul\":88:109   */\n      tag_23\n        /* \"#utility.yul\":103:108   */\n      dup2\n        /* \"#utility.yul\":88:109   */\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":83:86   */\n      dup3\n        /* \"#utility.yul\":76:110   */\n      mstore\n        /* \"#utility.yul\":7:116   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":122:240   */\n    tag_25:\n        /* \"#utility.yul\":209:233   */\n      tag_27\n        /* \"#utility.yul\":227:232   */\n      dup2\n        /* \"#utility.yul\":209:233   */\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":204:207   */\n      dup3\n        /* \"#utility.yul\":197:234   */\n      mstore\n        /* \"#utility.yul\":122:240   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":246:456   */\n    tag_8:\n        /* \"#utility.yul\":333:337   */\n      0x00\n        /* \"#utility.yul\":371:373   */\n      0x20\n        /* \"#utility.yul\":360:369   */\n      dup3\n        /* \"#utility.yul\":356:374   */\n      add\n        /* \"#utility.yul\":348:374   */\n      swap1\n      pop\n        /* \"#utility.yul\":384:449   */\n      tag_30\n        /* \"#utility.yul\":446:447   */\n      0x00\n        /* \"#utility.yul\":435:444   */\n      dup4\n        /* \"#utility.yul\":431:448   */\n      add\n        /* \"#utility.yul\":422:428   */\n      dup5\n        /* \"#utility.yul\":384:449   */\n      tag_21\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":246:456   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":462:794   */\n    tag_12:\n        /* \"#utility.yul\":583:587   */\n      0x00\n        /* \"#utility.yul\":621:623   */\n      0x40\n        /* \"#utility.yul\":610:619   */\n      dup3\n        /* \"#utility.yul\":606:624   */\n      add\n        /* \"#utility.yul\":598:624   */\n      swap1\n      pop\n        /* \"#utility.yul\":634:705   */\n      tag_32\n        /* \"#utility.yul\":702:703   */\n      0x00\n        /* \"#utility.yul\":691:700   */\n      dup4\n        /* \"#utility.yul\":687:704   */\n      add\n        /* \"#utility.yul\":678:684   */\n      dup6\n        /* \"#utility.yul\":634:705   */\n      tag_25\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":715:787   */\n      tag_33\n        /* \"#utility.yul\":783:785   */\n      0x20\n        /* \"#utility.yul\":772:781   */\n      dup4\n        /* \"#utility.yul\":768:786   */\n      add\n        /* \"#utility.yul\":759:765   */\n      dup5\n        /* \"#utility.yul\":715:787   */\n      tag_25\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":462:794   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:890   */\n    tag_24:\n        /* \"#utility.yul\":834:841   */\n      0x00\n        /* \"#utility.yul\":877:882   */\n      dup2\n        /* \"#utility.yul\":870:883   */\n      iszero\n        /* \"#utility.yul\":863:884   */\n      iszero\n        /* \"#utility.yul\":852:884   */\n      swap1\n      pop\n        /* \"#utility.yul\":800:890   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":896:973   */\n    tag_28:\n        /* \"#utility.yul\":933:940   */\n      0x00\n        /* \"#utility.yul\":962:967   */\n      dup2\n        /* \"#utility.yul\":951:967   */\n      swap1\n      pop\n        /* \"#utility.yul\":896:973   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220141110f7625b7039ae6ca272198d0980b610190a458cd41d31cedb813e10c7f564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_51": {
									"entryPoint": null,
									"id": 51,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 76,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256_fromMemory": {
									"entryPoint": 97,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 171,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1204:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "250:413:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "296:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "298:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "298:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "298:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "271:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "280:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "267:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "267:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "292:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "263:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "263:32:1"
															},
															"nodeType": "YulIf",
															"src": "260:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "389:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "404:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "418:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "408:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "433:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "479:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "490:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "475:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "475:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "499:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "443:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "443:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "433:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "527:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "542:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "556:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "546:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "572:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "618:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "629:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "614:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "638:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "582:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "572:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "212:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "223:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "235:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "243:6:1",
														"type": ""
													}
												],
												"src": "156:507:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "719:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "729:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "729:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "702:6:1",
														"type": ""
													}
												],
												"src": "669:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "795:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "805:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "816:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "805:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "777:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "787:7:1",
														"type": ""
													}
												],
												"src": "750:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "942:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "932:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "932:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "932:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "833:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1045:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1062:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1065:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1055:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1055:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1055:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "956:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1122:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1179:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1188:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1191:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1181:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1181:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1181:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1145:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1170:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1152:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1152:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1142:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1142:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1135:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1135:43:1"
															},
															"nodeType": "YulIf",
															"src": "1132:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:1",
														"type": ""
													}
												],
												"src": "1079:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161027d38038061027d83398181016040528101906100329190610061565b8160008001819055508060006001018190555050506100c7565b60008151905061005b816100b0565b92915050565b60008060408385031215610078576100776100ab565b5b60006100868582860161004c565b92505060206100978582860161004c565b9150509250929050565b6000819050919050565b600080fd5b6100b9816100a1565b81146100c457600080fd5b50565b6101a7806100d66000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633bc5de301461003b578063a699fb0314610059575b600080fd5b610043610078565b6040516100509190610117565b60405180910390f35b6100616100a8565b60405161006f929190610132565b60405180910390f35b60006100a36000604051806040016040529081600082015481526020016001820154815250506100ba565b905090565b60008060000154908060010154905082565b600060018260000151146100cd57600080fd5b60008083602001519050805160001a9150600082146100ed5760016100f0565b60005b92505050919050565b6101028161015b565b82525050565b61011181610167565b82525050565b600060208201905061012c60008301846100f9565b92915050565b60006040820190506101476000830185610108565b6101546020830184610108565b9392505050565b60008115159050919050565b600081905091905056fea2646970667358221220141110f7625b7039ae6ca272198d0980b610190a458cd41d31cedb813e10c7f564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x27D CODESIZE SUB DUP1 PUSH2 0x27D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x61 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP1 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5B DUP2 PUSH2 0xB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x78 JUMPI PUSH2 0x77 PUSH2 0xAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x86 DUP6 DUP3 DUP7 ADD PUSH2 0x4C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x97 DUP6 DUP3 DUP7 ADD PUSH2 0x4C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB9 DUP2 PUSH2 0xA1 JUMP JUMPDEST DUP2 EQ PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A7 DUP1 PUSH2 0xD6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3BC5DE30 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA699FB03 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x117 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0xA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F SWAP3 SWAP2 SWAP1 PUSH2 0x132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0xA3 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0xBA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0x0 ADD MLOAD EQ PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 MLOAD PUSH1 0x0 BYTE SWAP2 POP PUSH1 0x0 DUP3 EQ PUSH2 0xED JUMPI PUSH1 0x1 PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x102 DUP2 PUSH2 0x15B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x111 DUP2 PUSH2 0x167 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x147 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x108 JUMP JUMPDEST PUSH2 0x154 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x108 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ GT LT 0xF7 PUSH3 0x5B7039 0xAE PUSH13 0xA272198D0980B610190A458CD4 SAR BALANCE 0xCE 0xDB DUP2 RETURNDATACOPY LT 0xC7 CREATE2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "211:1242:0:-:0;;;727:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;788:4;774:7;:11;;:18;;;;820:7;803;:14;;:24;;;;727:108;;211:1242;;7:143:1;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:507::-;235:6;243;292:2;280:9;271:7;267:23;263:32;260:119;;;298:79;;:::i;:::-;260:119;418:1;443:64;499:7;490:6;479:9;475:22;443:64;:::i;:::-;433:74;;389:128;556:2;582:64;638:7;629:6;618:9;614:22;582:64;:::i;:::-;572:74;;527:129;156:507;;;;;:::o;750:77::-;787:7;816:5;805:16;;750:77;;;:::o;956:117::-;1065:1;1062;1055:12;1079:122;1152:24;1170:5;1152:24;:::i;:::-;1145:5;1142:35;1132:63;;1191:1;1188;1181:12;1132:63;1079:122;:::o;211:1242:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getData_61": {
									"entryPoint": 120,
									"id": 61,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rlpItem_31": {
									"entryPoint": 168,
									"id": 31,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@toBoolean_93": {
									"entryPoint": 186,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 306,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:976:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "83:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "103:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "88:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "88:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "76:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "76:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "76:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "54:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "61:3:1",
														"type": ""
													}
												],
												"src": "7:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "187:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "204:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "227:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "209:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "197:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "197:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "197:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "175:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "182:3:1",
														"type": ""
													}
												],
												"src": "122:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "338:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "348:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "360:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "371:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "356:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "348:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "422:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "435:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "446:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "431:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "431:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "384:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "384:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "384:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "310:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "322:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "333:4:1",
														"type": ""
													}
												],
												"src": "246:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "588:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "598:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "610:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "621:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "606:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "606:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "598:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "678:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "691:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "702:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "687:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "687:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "634:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "634:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "634:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "759:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "772:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "783:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "768:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "768:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "715:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "715:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "715:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "552:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "564:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "572:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "583:4:1",
														"type": ""
													}
												],
												"src": "462:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "842:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "852:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "877:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "870:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "870:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "863:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "863:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "852:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "824:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "834:7:1",
														"type": ""
													}
												],
												"src": "800:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "941:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "951:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "962:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "951:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "923:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "933:7:1",
														"type": ""
													}
												],
												"src": "896:77:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80633bc5de301461003b578063a699fb0314610059575b600080fd5b610043610078565b6040516100509190610117565b60405180910390f35b6100616100a8565b60405161006f929190610132565b60405180910390f35b60006100a36000604051806040016040529081600082015481526020016001820154815250506100ba565b905090565b60008060000154908060010154905082565b600060018260000151146100cd57600080fd5b60008083602001519050805160001a9150600082146100ed5760016100f0565b60005b92505050919050565b6101028161015b565b82525050565b61011181610167565b82525050565b600060208201905061012c60008301846100f9565b92915050565b60006040820190506101476000830185610108565b6101546020830184610108565b9392505050565b60008115159050919050565b600081905091905056fea2646970667358221220141110f7625b7039ae6ca272198d0980b610190a458cd41d31cedb813e10c7f564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3BC5DE30 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA699FB03 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x117 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0xA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F SWAP3 SWAP2 SWAP1 PUSH2 0x132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0xA3 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0xBA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0x0 ADD MLOAD EQ PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP1 MLOAD PUSH1 0x0 BYTE SWAP2 POP PUSH1 0x0 DUP3 EQ PUSH2 0xED JUMPI PUSH1 0x1 PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x102 DUP2 PUSH2 0x15B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x111 DUP2 PUSH2 0x167 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x147 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x108 JUMP JUMPDEST PUSH2 0x154 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x108 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ GT LT 0xF7 PUSH3 0x5B7039 0xAE PUSH13 0xA272198D0980B610190A458CD4 SAR BALANCE 0xCE 0xDB DUP2 RETURNDATACOPY LT 0xC7 CREATE2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "211:1242:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;843:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;696:22;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;843:90;882:4;904:18;914:7;904:18;;;;;;;;;;;;;;;;;;;;;;;;;:9;:18::i;:::-;897:25;;843:90;:::o;696:22::-;;;;;;;;;;;;;;:::o;941:291::-;1004:4;1041:1;1029:4;:8;;;:13;1021:22;;;;;;1054:11;1076;1090:4;:11;;;1076:25;;1160:6;1154:13;1151:1;1146:22;1136:32;;1208:1;1198:6;:11;:26;;1220:4;1198:26;;;1212:5;1198:26;1191:33;;;;941:291;;;:::o;7:109:1:-;88:21;103:5;88:21;:::i;:::-;83:3;76:34;7:109;;:::o;122:118::-;209:24;227:5;209:24;:::i;:::-;204:3;197:37;122:118;;:::o;246:210::-;333:4;371:2;360:9;356:18;348:26;;384:65;446:1;435:9;431:17;422:6;384:65;:::i;:::-;246:210;;;;:::o;462:332::-;583:4;621:2;610:9;606:18;598:26;;634:71;702:1;691:9;687:17;678:6;634:71;:::i;:::-;715:72;783:2;772:9;768:18;759:6;715:72;:::i;:::-;462:332;;;;;:::o;800:90::-;834:7;877:5;870:13;863:21;852:32;;800:90;;;:::o;896:77::-;933:7;962:5;951:16;;896:77;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "84600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getData()": "infinite",
								"rlpItem()": "infinite"
							},
							"internal": {
								"encodeBool(bool)": "infinite",
								"toBoolean(struct Demo.RLPItem memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 211,
									"end": 1453,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 211,
									"end": 1453,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 211,
									"end": 1453,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 727,
									"end": 835,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 727,
									"end": 835,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 727,
									"end": 835,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 727,
									"end": 835,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 727,
									"end": 835,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 727,
									"end": 835,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 727,
									"end": 835,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 727,
									"end": 835,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 727,
									"end": 835,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 788,
									"end": 792,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 774,
									"end": 781,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 774,
									"end": 785,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 774,
									"end": 785,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 774,
									"end": 792,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 774,
									"end": 792,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 774,
									"end": 792,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 774,
									"end": 792,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 820,
									"end": 827,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 803,
									"end": 810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 803,
									"end": 817,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 803,
									"end": 817,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 803,
									"end": 827,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 803,
									"end": 827,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 803,
									"end": 827,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 803,
									"end": 827,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 727,
									"end": 835,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 211,
									"end": 1453,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 211,
									"end": 1453,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 235,
									"end": 241,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 249,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 292,
									"end": 294,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 289,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 271,
									"end": 278,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 267,
									"end": 290,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 263,
									"end": 295,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 260,
									"end": 379,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 260,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 260,
									"end": 379,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 418,
									"end": 419,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 499,
									"end": 506,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 490,
									"end": 496,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 479,
									"end": 488,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 475,
									"end": 497,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 433,
									"end": 507,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 433,
									"end": 507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 389,
									"end": 517,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 556,
									"end": 558,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 638,
									"end": 645,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 629,
									"end": 635,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 618,
									"end": 627,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 614,
									"end": 636,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 572,
									"end": 646,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 572,
									"end": 646,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 527,
									"end": 656,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 750,
									"end": 827,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 750,
									"end": 827,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 787,
									"end": 794,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 816,
									"end": 821,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 805,
									"end": 821,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 805,
									"end": 821,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 750,
									"end": 827,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 750,
									"end": 827,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 750,
									"end": 827,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 750,
									"end": 827,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 956,
									"end": 1073,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 956,
									"end": 1073,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1065,
									"end": 1066,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1062,
									"end": 1063,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1055,
									"end": 1067,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1079,
									"end": 1201,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1079,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1152,
									"end": 1176,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1170,
									"end": 1175,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1152,
									"end": 1176,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1152,
									"end": 1176,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1152,
									"end": 1176,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1152,
									"end": 1176,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1145,
									"end": 1150,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1142,
									"end": 1177,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1132,
									"end": 1195,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1132,
									"end": 1195,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1191,
									"end": 1192,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1188,
									"end": 1189,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1132,
									"end": 1195,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1132,
									"end": 1195,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1079,
									"end": 1201,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1079,
									"end": 1201,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 211,
									"end": 1453,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 211,
									"end": 1453,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 211,
									"end": 1453,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 1453,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 211,
									"end": 1453,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 1453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 1453,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 211,
									"end": 1453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 1453,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220141110f7625b7039ae6ca272198d0980b610190a458cd41d31cedb813e10c7f564736f6c63430008070033",
									".code": [
										{
											"begin": 211,
											"end": 1453,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "PUSH",
											"source": 0,
											"value": "3BC5DE30"
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "PUSH",
											"source": 0,
											"value": "A699FB03"
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 211,
											"end": 1453,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 843,
											"end": 933,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 843,
											"end": 933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 843,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 843,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 843,
											"end": 933,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 843,
											"end": 933,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 843,
											"end": 933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 843,
											"end": 933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 843,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 843,
											"end": 933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 843,
											"end": 933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 843,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 843,
											"end": 933,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 843,
											"end": 933,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 843,
											"end": 933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 843,
											"end": 933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 843,
											"end": 933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 843,
											"end": 933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 843,
											"end": 933,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 843,
											"end": 933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 843,
											"end": 933,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 696,
											"end": 718,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 696,
											"end": 718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 696,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 696,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 696,
											"end": 718,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 696,
											"end": 718,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 696,
											"end": 718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 696,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 696,
											"end": 718,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 696,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 696,
											"end": 718,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 696,
											"end": 718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 696,
											"end": 718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 696,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 696,
											"end": 718,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 696,
											"end": 718,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 696,
											"end": 718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 696,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 696,
											"end": 718,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 696,
											"end": 718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 696,
											"end": 718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 696,
											"end": 718,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 696,
											"end": 718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 696,
											"end": 718,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 843,
											"end": 933,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 843,
											"end": 933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 882,
											"end": 886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 904,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 914,
											"end": 921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 904,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 904,
											"end": 922,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 904,
											"end": 922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 904,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 904,
											"end": 922,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 904,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 904,
											"end": 922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 904,
											"end": 922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 904,
											"end": 922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 904,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 904,
											"end": 922,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 904,
											"end": 922,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 904,
											"end": 922,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 904,
											"end": 922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 904,
											"end": 922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 904,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 922,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 904,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 904,
											"end": 922,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 904,
											"end": 922,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 904,
											"end": 922,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 904,
											"end": 922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 904,
											"end": 922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 904,
											"end": 922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 904,
											"end": 922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 904,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 904,
											"end": 922,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 904,
											"end": 922,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 904,
											"end": 922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 897,
											"end": 922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 897,
											"end": 922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 843,
											"end": 933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 843,
											"end": 933,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 696,
											"end": 718,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 696,
											"end": 718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 696,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 696,
											"end": 718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 696,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 696,
											"end": 718,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 696,
											"end": 718,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 696,
											"end": 718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 696,
											"end": 718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 696,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 696,
											"end": 718,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 696,
											"end": 718,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 696,
											"end": 718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 696,
											"end": 718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 696,
											"end": 718,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 696,
											"end": 718,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 941,
											"end": 1232,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 941,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1041,
											"end": 1042,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1029,
											"end": 1033,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1042,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1021,
											"end": 1043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1043,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1043,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1021,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1054,
											"end": 1065,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1076,
											"end": 1087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1094,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1151,
											"end": 1152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1168,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1204,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1209,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1198,
											"end": 1224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1220,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1198,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1198,
											"end": 1224,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1198,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1198,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1224,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 941,
											"end": 1232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 941,
											"end": 1232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 1232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 941,
											"end": 1232,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 103,
											"end": 108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 83,
											"end": 86,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 76,
											"end": 110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 122,
											"end": 240,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 122,
											"end": 240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 227,
											"end": 232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 209,
											"end": 233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 209,
											"end": 233,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 209,
											"end": 233,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 209,
											"end": 233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 204,
											"end": 207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 197,
											"end": 234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 122,
											"end": 240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 240,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 246,
											"end": 456,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 246,
											"end": 456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 333,
											"end": 337,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 373,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 360,
											"end": 369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 356,
											"end": 374,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 348,
											"end": 374,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 348,
											"end": 374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 384,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 446,
											"end": 447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 444,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 431,
											"end": 448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 422,
											"end": 428,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 384,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 384,
											"end": 449,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 384,
											"end": 449,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 384,
											"end": 449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 246,
											"end": 456,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 246,
											"end": 456,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 246,
											"end": 456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 246,
											"end": 456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 246,
											"end": 456,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 462,
											"end": 794,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 462,
											"end": 794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 583,
											"end": 587,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 623,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 610,
											"end": 619,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 606,
											"end": 624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 598,
											"end": 624,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 598,
											"end": 624,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 634,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 702,
											"end": 703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 700,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 687,
											"end": 704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 678,
											"end": 684,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 634,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 634,
											"end": 705,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 634,
											"end": 705,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 634,
											"end": 705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 715,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 783,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 772,
											"end": 781,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 768,
											"end": 786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 759,
											"end": 765,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 715,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 715,
											"end": 787,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 715,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 715,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 462,
											"end": 794,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 462,
											"end": 794,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 462,
											"end": 794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 462,
											"end": 794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 462,
											"end": 794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 462,
											"end": 794,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 800,
											"end": 890,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 800,
											"end": 890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 834,
											"end": 841,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 870,
											"end": 883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 863,
											"end": 884,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 852,
											"end": 884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 852,
											"end": 884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 890,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 800,
											"end": 890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 800,
											"end": 890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 890,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 896,
											"end": 973,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 896,
											"end": 973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 933,
											"end": 940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 951,
											"end": 967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 951,
											"end": 967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 896,
											"end": 973,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 896,
											"end": 973,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 896,
											"end": 973,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 896,
											"end": 973,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getData()": "3bc5de30",
							"rlpItem()": "a699fb03"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_len\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_menPtr\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rlpItem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"memPtr\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"pouladzade@gmail.com\",\"details\":\"The SizeOf return the size of the solidity types in byte\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SizeOf Copyright (c) 2016-2020 zpouladzade/Seriality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/demo1.sol\":\"Demo\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/demo1.sol\":{\"keccak256\":\"0xe6a18c1ca87b73fcc5bff98f4b9d9cb5ea5448e819f3e1bf4c07f673fa9a14bd\",\"urls\":[\"bzz-raw://c3031a22f4746c6bd5822e258e723de7fbd72f56d81f75416f7199c019be1792\",\"dweb:/ipfs/QmYLnCU5F4NvgGx1Lj3GM6eP2QmznGPfxGsh9hbi4JFoJZ\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/demo1.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/demo1.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/demo1.sol": {
				"ast": {
					"absolutePath": "contracts/demo1.sol",
					"exportedSymbols": {
						"Demo": [
							126
						]
					},
					"id": 127,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">",
								"0.4",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:30:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "32:175:0",
								"text": " @title SizeOf\n Copyright (c) 2016-2020 zpouladzade/Seriality\n @dev The SizeOf return the size of the solidity types in byte\n @author pouladzade@gmail.com"
							},
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "Demo",
							"nameLocation": "220:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "STRING_SHORT_START",
									"nameLocation": "253:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 126,
									"src": "238:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 3,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "238:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "30783830",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "274:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "0x80"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "STRING_LONG_START",
									"nameLocation": "300:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 126,
									"src": "285:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 6,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "285:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "30786238",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "321:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_184_by_1",
											"typeString": "int_const 184"
										},
										"value": "0xb8"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 11,
									"mutability": "constant",
									"name": "LIST_SHORT_START",
									"nameLocation": "347:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 126,
									"src": "332:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 9,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "332:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "30786330",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "368:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "0xc0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 14,
									"mutability": "constant",
									"name": "LIST_LONG_START",
									"nameLocation": "394:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 126,
									"src": "379:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 12,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "379:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "30786638",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "415:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_248_by_1",
											"typeString": "int_const 248"
										},
										"value": "0xf8"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "WORD_SIZE",
									"nameLocation": "441:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 126,
									"src": "426:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 15,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "426:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3332",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "453:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "Demo.RLPItem",
									"id": 22,
									"members": [
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "len",
											"nameLocation": "495:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "490:8:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 18,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "490:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "memPtr",
											"nameLocation": "514:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "509:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 20,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "509:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RLPItem",
									"nameLocation": "471:7:0",
									"nodeType": "StructDefinition",
									"scope": 126,
									"src": "464:64:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Demo.Iterator",
									"id": 28,
									"members": [
										{
											"constant": false,
											"id": 25,
											"mutability": "mutable",
											"name": "item",
											"nameLocation": "571:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "563:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RLPItem_$22_storage_ptr",
												"typeString": "struct Demo.RLPItem"
											},
											"typeName": {
												"id": 24,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 23,
													"name": "RLPItem",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 22,
													"src": "563:7:0"
												},
												"referencedDeclaration": 22,
												"src": "563:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$22_storage_ptr",
													"typeString": "struct Demo.RLPItem"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 27,
											"mutability": "mutable",
											"name": "nextPtr",
											"nameLocation": "629:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "624:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 26,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "624:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Iterator",
									"nameLocation": "543:8:0",
									"nodeType": "StructDefinition",
									"scope": 126,
									"src": "536:152:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a699fb03",
									"id": 31,
									"mutability": "mutable",
									"name": "rlpItem",
									"nameLocation": "711:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 126,
									"src": "696:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_RLPItem_$22_storage",
										"typeString": "struct Demo.RLPItem"
									},
									"typeName": {
										"id": 30,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 29,
											"name": "RLPItem",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 22,
											"src": "696:7:0"
										},
										"referencedDeclaration": 22,
										"src": "696:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_RLPItem_$22_storage_ptr",
											"typeString": "struct Demo.RLPItem"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "763:72:0",
										"statements": [
											{
												"expression": {
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 38,
															"name": "rlpItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "774:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$22_storage",
																"typeString": "struct Demo.RLPItem storage ref"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "774:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 41,
														"name": "_len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "788:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "774:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "774:18:0"
											},
											{
												"expression": {
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 44,
															"name": "rlpItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "803:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$22_storage",
																"typeString": "struct Demo.RLPItem storage ref"
															}
														},
														"id": 46,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "memPtr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "803:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 47,
														"name": "_menPtr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "820:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "803:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "803:24:0"
											}
										]
									},
									"id": 51,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "_len",
												"nameLocation": "744:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "739:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "739:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "_menPtr",
												"nameLocation": "755:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "750:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "750:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:25:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:0"
									},
									"scope": 126,
									"src": "727:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "887:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 57,
															"name": "rlpItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "914:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RLPItem_$22_storage",
																"typeString": "struct Demo.RLPItem storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_RLPItem_$22_storage",
																"typeString": "struct Demo.RLPItem storage ref"
															}
														],
														"id": 56,
														"name": "toBoolean",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "904:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_RLPItem_$22_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (struct Demo.RLPItem memory) pure returns (bool)"
														}
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "904:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 55,
												"id": 59,
												"nodeType": "Return",
												"src": "897:25:0"
											}
										]
									},
									"functionSelector": "3bc5de30",
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getData",
									"nameLocation": "852:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "859:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "882:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 53,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "882:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "881:6:0"
									},
									"scope": 126,
									"src": "843:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "1010:222:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 70,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "1029:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RLPItem_$22_memory_ptr",
																		"typeString": "struct Demo.RLPItem memory"
																	}
																},
																"id": 71,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 19,
																"src": "1029:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1041:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1029:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 69,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1021:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1021:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "1021:22:0"
											},
											{
												"assignments": [
													77
												],
												"declarations": [
													{
														"constant": false,
														"id": 77,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "1059:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 92,
														"src": "1054:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 76,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1054:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 78,
												"nodeType": "VariableDeclarationStatement",
												"src": "1054:11:0"
											},
											{
												"assignments": [
													80
												],
												"declarations": [
													{
														"constant": false,
														"id": 80,
														"mutability": "mutable",
														"name": "memPtr",
														"nameLocation": "1081:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 92,
														"src": "1076:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 79,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1076:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 83,
												"initialValue": {
													"expression": {
														"id": 81,
														"name": "item",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "1090:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RLPItem_$22_memory_ptr",
															"typeString": "struct Demo.RLPItem memory"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "memPtr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 21,
													"src": "1090:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1076:25:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1121:58:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1136:32:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1160:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1154:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1154:13:0"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nodeType": "YulIdentifier",
																	"src": "1146:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1146:22:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1136:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 80,
														"isOffset": false,
														"isSlot": false,
														"src": "1160:6:0",
														"valueSize": 1
													},
													{
														"declaration": 77,
														"isOffset": false,
														"isSlot": false,
														"src": "1136:6:0",
														"valueSize": 1
													}
												],
												"id": 84,
												"nodeType": "InlineAssembly",
												"src": "1112:67:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 85,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "1198:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1208:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1198:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "74727565",
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1220:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1198:26:0",
													"trueExpression": {
														"hexValue": "66616c7365",
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1212:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 68,
												"id": 91,
												"nodeType": "Return",
												"src": "1191:33:0"
											}
										]
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toBoolean",
									"nameLocation": "950:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "item",
												"nameLocation": "975:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "960:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RLPItem_$22_memory_ptr",
													"typeString": "struct Demo.RLPItem"
												},
												"typeName": {
													"id": 63,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 62,
														"name": "RLPItem",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 22,
														"src": "960:7:0"
													},
													"referencedDeclaration": 22,
													"src": "960:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RLPItem_$22_storage_ptr",
														"typeString": "struct Demo.RLPItem"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "959:21:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1004:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1004:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:6:0"
									},
									"scope": 126,
									"src": "941:291:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "1310:140:0",
										"statements": [
											{
												"assignments": [
													101
												],
												"declarations": [
													{
														"constant": false,
														"id": 101,
														"mutability": "mutable",
														"name": "rs",
														"nameLocation": "1334:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 124,
														"src": "1321:15:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 100,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1321:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 106,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1349:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1339:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 102,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1343:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1339:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1321:30:0"
											},
											{
												"condition": {
													"id": 107,
													"name": "self",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 95,
													"src": "1366:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 121,
												"nodeType": "IfStatement",
												"src": "1362:61:0",
												"trueBody": {
													"id": 120,
													"nodeType": "Block",
													"src": "1372:51:0",
													"statements": [
														{
															"expression": {
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 108,
																		"name": "rs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 101,
																		"src": "1387:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 110,
																	"indexExpression": {
																		"hexValue": "30",
																		"id": 109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1390:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1387:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "31",
																					"id": 115,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1408:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					}
																				],
																				"id": 114,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1402:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 113,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "1402:5:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1402:8:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1395:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 111,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "1395:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1395:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1387:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 119,
															"nodeType": "ExpressionStatement",
															"src": "1387:24:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 122,
													"name": "rs",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 101,
													"src": "1440:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 99,
												"id": 123,
												"nodeType": "Return",
												"src": "1433:9:0"
											}
										]
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encodeBool",
									"nameLocation": "1251:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "1267:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "1262:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 94,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1262:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1261:11:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "1296:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 97,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1296:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1295:14:0"
									},
									"scope": 126,
									"src": "1242:208:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 127,
							"src": "211:1242:0",
							"usedErrors": []
						}
					],
					"src": "0:1455:0"
				},
				"id": 0
			}
		}
	}
}