{
	"id": "f1baf837a71e46a28648f6e51e29752e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.4",
	"solcLongVersion": "0.6.4+commit.1dca32f3",
	"input": {
		"language": "Solidity",
		"sources": {
			"BEP/Demo.sol": {
				"content": "pragma solidity 0.6.4;\r\n\r\ncontract Demo1{\r\n    uint256 constant public CROSS_CHAIN_KEY_PREFIX = 0x01006000; // last 6 bytes\r\n\r\n    function getDataGanerateKey(uint64 _sequence, uint8 _channelID) public view returns(bytes memory){\r\n        return generateKey(_sequence, _channelID);\r\n    }\r\n\r\n    function generateKey(uint64 _sequence, uint8 _channelID) internal pure returns(bytes memory) {\r\n        uint256 fullCROSS_CHAIN_KEY_PREFIX = CROSS_CHAIN_KEY_PREFIX | _channelID;\r\n        bytes memory key = new bytes(14);\r\n\r\n        uint256 ptr;\r\n        assembly {\r\n        ptr := add(key, 14)\r\n        }\r\n        assembly {\r\n        mstore(ptr, _sequence)\r\n        }\r\n        ptr -= 8;\r\n        assembly {\r\n        mstore(ptr, fullCROSS_CHAIN_KEY_PREFIX)\r\n        }\r\n        ptr -= 6;\r\n        assembly {\r\n        mstore(ptr, 14)\r\n        }\r\n        return key;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"BEP/Demo.sol": {
				"Demo1": {
					"abi": [
						{
							"inputs": [],
							"name": "CROSS_CHAIN_KEY_PREFIX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "_sequence",
									"type": "uint64"
								},
								{
									"internalType": "uint8",
									"name": "_channelID",
									"type": "uint8"
								}
							],
							"name": "getDataGanerateKey",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"BEP/Demo.sol\":26:868  contract Demo1{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"BEP/Demo.sol\":26:868  contract Demo1{\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BEP/Demo.sol\":26:868  contract Demo1{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"BEP/Demo.sol\":26:868  contract Demo1{\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x219f5127\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x863fe4ab\n      eq\n      tag_4\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"BEP/Demo.sol\":131:288  function getDataGanerateKey(uint64 _sequence, uint8 _channelID) public view returns(bytes memory){\r... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_6:\n        /* \"BEP/Demo.sol\":131:288  function getDataGanerateKey(uint64 _sequence, uint8 _channelID) public view returns(bytes memory){\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_7\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_8:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_8)\n    tag_10:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"BEP/Demo.sol\":131:288  function getDataGanerateKey(uint64 _sequence, uint8 _channelID) public view returns(bytes memory){\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_11\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_11:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP/Demo.sol\":47:106  uint256 constant public CROSS_CHAIN_KEY_PREFIX = 0x01006000 */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP/Demo.sol\":131:288  function getDataGanerateKey(uint64 _sequence, uint8 _channelID) public view returns(bytes memory){\r... */\n    tag_7:\n        /* \"BEP/Demo.sol\":215:227  bytes memory */\n      0x60\n        /* \"BEP/Demo.sol\":246:280  generateKey(_sequence, _channelID) */\n      tag_15\n        /* \"BEP/Demo.sol\":258:267  _sequence */\n      dup4\n        /* \"BEP/Demo.sol\":269:279  _channelID */\n      dup4\n        /* \"BEP/Demo.sol\":246:257  generateKey */\n      tag_16\n        /* \"BEP/Demo.sol\":246:280  generateKey(_sequence, _channelID) */\n      jump\t// in\n    tag_15:\n        /* \"BEP/Demo.sol\":239:280  return generateKey(_sequence, _channelID) */\n      swap1\n      pop\n        /* \"BEP/Demo.sol\":131:288  function getDataGanerateKey(uint64 _sequence, uint8 _channelID) public view returns(bytes memory){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BEP/Demo.sol\":47:106  uint256 constant public CROSS_CHAIN_KEY_PREFIX = 0x01006000 */\n    tag_13:\n        /* \"BEP/Demo.sol\":96:106  0x01006000 */\n      0x01006000\n        /* \"BEP/Demo.sol\":47:106  uint256 constant public CROSS_CHAIN_KEY_PREFIX = 0x01006000 */\n      dup2\n      jump\t// out\n        /* \"BEP/Demo.sol\":296:865  function generateKey(uint64 _sequence, uint8 _channelID) internal pure returns(bytes memory) {\r... */\n    tag_16:\n        /* \"BEP/Demo.sol\":375:387  bytes memory */\n      0x60\n        /* \"BEP/Demo.sol\":400:434  uint256 fullCROSS_CHAIN_KEY_PREFIX */\n      0x00\n        /* \"BEP/Demo.sol\":462:472  _channelID */\n      dup3\n        /* \"BEP/Demo.sol\":437:472  CROSS_CHAIN_KEY_PREFIX | _channelID */\n      0xff\n      and\n        /* \"BEP/Demo.sol\":96:106  0x01006000 */\n      0x01006000\n        /* \"BEP/Demo.sol\":437:472  CROSS_CHAIN_KEY_PREFIX | _channelID */\n      or\n        /* \"BEP/Demo.sol\":400:472  uint256 fullCROSS_CHAIN_KEY_PREFIX = CROSS_CHAIN_KEY_PREFIX | _channelID */\n      swap1\n      pop\n        /* \"BEP/Demo.sol\":483:499  bytes memory key */\n      0x60\n        /* \"BEP/Demo.sol\":512:514  14 */\n      0x0e\n        /* \"BEP/Demo.sol\":502:515  new bytes(14) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_18\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:30   */\n      0x01\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:31   */\n      mul\n        /* \"--CODEGEN--\":124:128   */\n      dup1\n        /* \"--CODEGEN--\":108:122   */\n      calldatasize\n        /* \"--CODEGEN--\":100:106   */\n      dup4\n        /* \"--CODEGEN--\":87:129   */\n      calldatacopy\n        /* \"--CODEGEN--\":155:159   */\n      dup1\n        /* \"--CODEGEN--\":147:153   */\n      dup3\n        /* \"--CODEGEN--\":143:160   */\n      add\n        /* \"--CODEGEN--\":133:160   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:164   */\n      pop\n        /* \"BEP/Demo.sol\":502:515  new bytes(14) */\n      swap1\n      pop\n    tag_18:\n      pop\n        /* \"BEP/Demo.sol\":483:515  bytes memory key = new bytes(14) */\n      swap1\n      pop\n        /* \"BEP/Demo.sol\":528:539  uint256 ptr */\n      0x00\n        /* \"BEP/Demo.sol\":586:588  14 */\n      0x0e\n        /* \"BEP/Demo.sol\":581:584  key */\n      dup3\n        /* \"BEP/Demo.sol\":577:589  add(key, 14) */\n      add\n        /* \"BEP/Demo.sol\":570:589  ptr := add(key, 14) */\n      swap1\n      pop\n        /* \"BEP/Demo.sol\":642:651  _sequence */\n      dup6\n        /* \"BEP/Demo.sol\":637:640  ptr */\n      dup2\n        /* \"BEP/Demo.sol\":630:652  mstore(ptr, _sequence) */\n      mstore\n        /* \"BEP/Demo.sol\":680:681  8 */\n      0x08\n        /* \"BEP/Demo.sol\":673:681  ptr -= 8 */\n      dup2\n      sub\n      swap1\n      pop\n        /* \"BEP/Demo.sol\":724:750  fullCROSS_CHAIN_KEY_PREFIX */\n      dup3\n        /* \"BEP/Demo.sol\":719:722  ptr */\n      dup2\n        /* \"BEP/Demo.sol\":712:751  mstore(ptr, fullCROSS_CHAIN_KEY_PREFIX) */\n      mstore\n        /* \"BEP/Demo.sol\":779:780  6 */\n      0x06\n        /* \"BEP/Demo.sol\":772:780  ptr -= 6 */\n      dup2\n      sub\n      swap1\n      pop\n        /* \"BEP/Demo.sol\":823:825  14 */\n      0x0e\n        /* \"BEP/Demo.sol\":818:821  ptr */\n      dup2\n        /* \"BEP/Demo.sol\":811:826  mstore(ptr, 14) */\n      mstore\n        /* \"BEP/Demo.sol\":854:857  key */\n      dup2\n        /* \"BEP/Demo.sol\":847:857  return key */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"BEP/Demo.sol\":296:865  function generateKey(uint64 _sequence, uint8 _channelID) internal pure returns(bytes memory) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220db42611706d9721528bfce9e3a637647456fdd1790c81b4a7040a6b19bf336d664736f6c63430006040033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101dc806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063219f51271461003b578063863fe4ab146100f9575b600080fd5b61007e6004803603604081101561005157600080fd5b81019080803567ffffffffffffffff169060200190929190803560ff169060200190929190505050610117565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100be5780820151818401526020810190506100a3565b50505050905090810190601f1680156100eb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61010161012b565b6040518082815260200191505060405180910390f35b60606101238383610133565b905092915050565b630100600081565b606060008260ff1663010060001790506060600e6040519080825280601f01601f1916602001820160405280156101795781602001600182028036833780820191505090505b5090506000600e82019050858152600881039050828152600681039050600e81528193505050509291505056fea2646970667358221220db42611706d9721528bfce9e3a637647456fdd1790c81b4a7040a6b19bf336d664736f6c63430006040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x219F5127 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x863FE4AB EQ PUSH2 0xF9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x117 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEB JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x12B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH2 0x123 DUP4 DUP4 PUSH2 0x133 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x1006000 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH1 0xFF AND PUSH4 0x1006000 OR SWAP1 POP PUSH1 0x60 PUSH1 0xE PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x179 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0xE DUP3 ADD SWAP1 POP DUP6 DUP2 MSTORE PUSH1 0x8 DUP2 SUB SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x6 DUP2 SUB SWAP1 POP PUSH1 0xE DUP2 MSTORE DUP2 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB TIMESTAMP PUSH2 0x1706 0xD9 PUSH19 0x1528BFCE9E3A637647456FDD1790C81B4A7040 0xA6 0xB1 SWAP12 RETURN CALLDATASIZE 0xD6 PUSH5 0x736F6C6343 STOP MOD DIV STOP CALLER ",
							"sourceMap": "26:842:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;26:842:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063219f51271461003b578063863fe4ab146100f9575b600080fd5b61007e6004803603604081101561005157600080fd5b81019080803567ffffffffffffffff169060200190929190803560ff169060200190929190505050610117565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100be5780820151818401526020810190506100a3565b50505050905090810190601f1680156100eb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61010161012b565b6040518082815260200191505060405180910390f35b60606101238383610133565b905092915050565b630100600081565b606060008260ff1663010060001790506060600e6040519080825280601f01601f1916602001820160405280156101795781602001600182028036833780820191505090505b5090506000600e82019050858152600881039050828152600681039050600e81528193505050509291505056fea2646970667358221220db42611706d9721528bfce9e3a637647456fdd1790c81b4a7040a6b19bf336d664736f6c63430006040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x219F5127 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x863FE4AB EQ PUSH2 0xF9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x117 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEB JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x101 PUSH2 0x12B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH2 0x123 DUP4 DUP4 PUSH2 0x133 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x1006000 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH1 0xFF AND PUSH4 0x1006000 OR SWAP1 POP PUSH1 0x60 PUSH1 0xE PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x179 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0xE DUP3 ADD SWAP1 POP DUP6 DUP2 MSTORE PUSH1 0x8 DUP2 SUB SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x6 DUP2 SUB SWAP1 POP PUSH1 0xE DUP2 MSTORE DUP2 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB TIMESTAMP PUSH2 0x1706 0xD9 PUSH19 0x1528BFCE9E3A637647456FDD1790C81B4A7040 0xA6 0xB1 SWAP12 RETURN CALLDATASIZE 0xD6 PUSH5 0x736F6C6343 STOP MOD DIV STOP CALLER ",
							"sourceMap": "26:842:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;26:842:0;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;131:157:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;131:157:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;131:157:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;131:157;215:12;246:34;258:9;269:10;246:11;:34::i;:::-;239:41;;131:157;;;;:::o;47:59::-;96:10;47:59;:::o;296:569::-;375:12;400:34;462:10;437:35;;96:10;437:35;400:72;;483:16;512:2;502:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;124:4;108:14;100:6;87:42;155:4;147:6;143:17;133:27;;0:164;502:13:0;;;;483:32;;528:11;586:2;581:3;577:12;570:19;;642:9;637:3;630:22;680:1;673:8;;;;724:26;719:3;712:39;779:1;772:8;;;;823:2;818:3;811:15;854:3;847:10;;;;;296:569;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "95200",
								"executionCost": "141",
								"totalCost": "95341"
							},
							"external": {
								"CROSS_CHAIN_KEY_PREFIX()": "205",
								"getDataGanerateKey(uint64,uint8)": "infinite"
							},
							"internal": {
								"generateKey(uint64,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 868,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 868,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 868,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 868,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 26,
									"end": 868,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 868,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 868,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 868,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 868,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 868,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 868,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 868,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220db42611706d9721528bfce9e3a637647456fdd1790c81b4a7040a6b19bf336d664736f6c63430006040033",
									".code": [
										{
											"begin": 26,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 868,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 26,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26,
											"end": 868,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 868,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26,
											"end": 868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 868,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 26,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26,
											"end": 868,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 26,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "219F5127"
										},
										{
											"begin": 26,
											"end": 868,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26,
											"end": 868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "863FE4AB"
										},
										{
											"begin": 26,
											"end": 868,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26,
											"end": 868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 868,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26,
											"end": 868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 131,
											"end": 288,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "6"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "6"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "8"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "10"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "8"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "10"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 131,
											"end": 288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 47,
											"end": 106,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47,
											"end": 106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47,
											"end": 106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 47,
											"end": 106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 47,
											"end": 106,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47,
											"end": 106,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 47,
											"end": 106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47,
											"end": 106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47,
											"end": 106,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47,
											"end": 106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47,
											"end": 106,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47,
											"end": 106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47,
											"end": 106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47,
											"end": 106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47,
											"end": 106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47,
											"end": 106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47,
											"end": 106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47,
											"end": 106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47,
											"end": 106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47,
											"end": 106,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47,
											"end": 106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47,
											"end": 106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47,
											"end": 106,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47,
											"end": 106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47,
											"end": 106,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 215,
											"end": 227,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 246,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 258,
											"end": 267,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 269,
											"end": 279,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 246,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 246,
											"end": 280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 246,
											"end": 280,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 246,
											"end": 280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 239,
											"end": 280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 239,
											"end": 280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 288,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 47,
											"end": 106,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 47,
											"end": 106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 96,
											"end": 106,
											"name": "PUSH",
											"source": 0,
											"value": "1006000"
										},
										{
											"begin": 47,
											"end": 106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47,
											"end": 106,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 296,
											"end": 865,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 296,
											"end": 865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 375,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 400,
											"end": 434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 437,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 437,
											"end": 472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 96,
											"end": 106,
											"name": "PUSH",
											"source": 0,
											"value": "1006000"
										},
										{
											"begin": 437,
											"end": 472,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 400,
											"end": 472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 400,
											"end": 472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 483,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 502,
											"end": 515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 515,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 502,
											"end": 515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 502,
											"end": 515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 502,
											"end": 515,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 502,
											"end": 515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 502,
											"end": 515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 502,
											"end": 515,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 502,
											"end": 515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 502,
											"end": 515,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 502,
											"end": 515,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 502,
											"end": 515,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 502,
											"end": 515,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 502,
											"end": 515,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 502,
											"end": 515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 502,
											"end": 515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 502,
											"end": 515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 502,
											"end": 515,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 502,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 502,
											"end": 515,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 502,
											"end": 515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 502,
											"end": 515,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17,
											"end": 31,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 128,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 108,
											"end": 122,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": 100,
											"end": 106,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 87,
											"end": 129,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 155,
											"end": 159,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 143,
											"end": 160,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 133,
											"end": 160,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 133,
											"end": 160,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 164,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 502,
											"end": 515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 502,
											"end": 515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 502,
											"end": 515,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 502,
											"end": 515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 502,
											"end": 515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 483,
											"end": 515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 528,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 588,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 581,
											"end": 584,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 577,
											"end": 589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 570,
											"end": 589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 642,
											"end": 651,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 637,
											"end": 640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 630,
											"end": 652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 673,
											"end": 681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 673,
											"end": 681,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 673,
											"end": 681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 673,
											"end": 681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 724,
											"end": 750,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 719,
											"end": 722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 712,
											"end": 751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 772,
											"end": 780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 772,
											"end": 780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 772,
											"end": 780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 772,
											"end": 780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 823,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 818,
											"end": 821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 811,
											"end": 826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 854,
											"end": 857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 847,
											"end": 857,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 847,
											"end": 857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 847,
											"end": 857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 847,
											"end": 857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 847,
											"end": 857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 296,
											"end": 865,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 296,
											"end": 865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 296,
											"end": 865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 296,
											"end": 865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 296,
											"end": 865,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"CROSS_CHAIN_KEY_PREFIX()": "863fe4ab",
							"getDataGanerateKey(uint64,uint8)": "219f5127"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CROSS_CHAIN_KEY_PREFIX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_sequence\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"_channelID\",\"type\":\"uint8\"}],\"name\":\"getDataGanerateKey\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"BEP/Demo.sol\":\"Demo1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEP/Demo.sol\":{\"keccak256\":\"0xb93374e21cd0a109abfdf18d18895a08b430576969483a28fcec2b53721548d0\",\"urls\":[\"bzz-raw://d957d26a4d581db63b2dc506a7e1f54ce2c193997dd9478d395c8fef9585ed65\",\"dweb:/ipfs/QmW7VVr9M35XfrnabkNs9BK7kWGhEc8o1QFTZSqT6cVpHE\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "BEP/Demo.sol:6:5: Warning: Function state mutability can be restricted to pure\n    function getDataGanerateKey(uint64 _sequence, uint8 _channelID) public view returns(bytes memory){\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 288,
					"file": "BEP/Demo.sol",
					"start": 131
				},
				"type": "Warning"
			}
		],
		"sources": {
			"BEP/Demo.sol": {
				"ast": {
					"absolutePath": "BEP/Demo.sol",
					"exportedSymbols": {
						"Demo1": [
							60
						]
					},
					"id": 61,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 60,
							"linearizedBaseContracts": [
								60
							],
							"name": "Demo1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "863fe4ab",
									"id": 4,
									"name": "CROSS_CHAIN_KEY_PREFIX",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 60,
									"src": "47:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "47:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783031303036303030",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "96:10:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_16801792_by_1",
											"typeString": "int_const 16801792"
										},
										"value": "0x01006000"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "228:60:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 14,
															"name": "_sequence",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "258:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"argumentTypes": null,
															"id": 15,
															"name": "_channelID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "269:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 13,
														"name": "generateKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "246:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint64_$_t_uint8_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint64,uint8) pure returns (bytes memory)"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "246:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 12,
												"id": 17,
												"nodeType": "Return",
												"src": "239:41:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "219f5127",
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDataGanerateKey",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"name": "_sequence",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 19,
												"src": "159:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 5,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "159:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"name": "_channelID",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 19,
												"src": "177:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 7,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "177:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "158:36:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 19,
												"src": "215:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 10,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "215:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "214:14:0"
									},
									"scope": 60,
									"src": "131:157:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "389:476:0",
										"statements": [
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"name": "fullCROSS_CHAIN_KEY_PREFIX",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 58,
														"src": "400:34:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 28,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "400:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 33,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 30,
														"name": "CROSS_CHAIN_KEY_PREFIX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "437:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "|",
													"rightExpression": {
														"argumentTypes": null,
														"id": 31,
														"name": "_channelID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "462:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "437:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "400:72:0"
											},
											{
												"assignments": [
													35
												],
												"declarations": [
													{
														"constant": false,
														"id": 35,
														"name": "key",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 58,
														"src": "483:16:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 34,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "483:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 40,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3134",
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "512:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_14_by_1",
																"typeString": "int_const 14"
															},
															"value": "14"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_14_by_1",
																"typeString": "int_const 14"
															}
														],
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "502:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 36,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "506:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "502:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "483:32:0"
											},
											{
												"assignments": [
													42
												],
												"declarations": [
													{
														"constant": false,
														"id": 42,
														"name": "ptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 58,
														"src": "528:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 41,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "528:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 43,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "528:11:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "559:41:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "570:19:0",
															"value": {
																"arguments": [
																	{
																		"name": "key",
																		"nodeType": "YulIdentifier",
																		"src": "581:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "586:2:0",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "577:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "577:12:0"
															},
															"variableNames": [
																{
																	"name": "ptr",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 35,
														"isOffset": false,
														"isSlot": false,
														"src": "581:3:0",
														"valueSize": 1
													},
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": false,
														"src": "570:3:0",
														"valueSize": 1
													}
												],
												"id": 44,
												"nodeType": "InlineAssembly",
												"src": "550:50:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "619:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "637:3:0"
																	},
																	{
																		"name": "_sequence",
																		"nodeType": "YulIdentifier",
																		"src": "642:9:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "630:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "630:22:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "630:22:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": false,
														"src": "642:9:0",
														"valueSize": 1
													},
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": false,
														"src": "637:3:0",
														"valueSize": 1
													}
												],
												"id": 45,
												"nodeType": "InlineAssembly",
												"src": "610:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 46,
														"name": "ptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "673:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "38",
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "680:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "673:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "673:8:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "701:61:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "719:3:0"
																	},
																	{
																		"name": "fullCROSS_CHAIN_KEY_PREFIX",
																		"nodeType": "YulIdentifier",
																		"src": "724:26:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "712:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "712:39:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "712:39:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 29,
														"isOffset": false,
														"isSlot": false,
														"src": "724:26:0",
														"valueSize": 1
													},
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": false,
														"src": "719:3:0",
														"valueSize": 1
													}
												],
												"id": 50,
												"nodeType": "InlineAssembly",
												"src": "692:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 51,
														"name": "ptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "772:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "36",
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "779:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "772:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "772:8:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "800:37:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "818:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:2:0",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "811:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "811:15:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "811:15:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": false,
														"src": "818:3:0",
														"valueSize": 1
													}
												],
												"id": 55,
												"nodeType": "InlineAssembly",
												"src": "791:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 56,
													"name": "key",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 35,
													"src": "854:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 27,
												"id": 57,
												"nodeType": "Return",
												"src": "847:10:0"
											}
										]
									},
									"documentation": null,
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "generateKey",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"name": "_sequence",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 59,
												"src": "317:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 20,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "317:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"name": "_channelID",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 59,
												"src": "335:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 22,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "316:36:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 59,
												"src": "375:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 25,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "375:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "374:14:0"
									},
									"scope": 60,
									"src": "296:569:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 61,
							"src": "26:842:0"
						}
					],
					"src": "0:868:0"
				},
				"id": 0
			}
		}
	}
}