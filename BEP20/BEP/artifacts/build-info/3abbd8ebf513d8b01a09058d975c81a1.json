{
	"id": "3abbd8ebf513d8b01a09058d975c81a1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.4",
	"solcLongVersion": "0.6.4+commit.1dca32f3",
	"input": {
		"language": "Solidity",
		"sources": {
			"BEP/ABCToken.sol": {
				"content": "pragma solidity 0.6.4;\r\n\r\nimport \"./IBEP20.sol\";\r\nimport \"./Context.sol\";\r\nimport \"./SafeMath.sol\";\r\nimport \"./Ownable.sol\";\r\n\r\ncontract ABCToken is Context, IBEP20, Ownable {\r\n  using SafeMath for uint256;\r\n\r\n  mapping (address => uint256) private _balances;\r\n\r\n  mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n  uint256 private _totalSupply;\r\n  uint8 public _decimals;\r\n  string public _symbol;\r\n  string public _name;\r\n\r\n  constructor() public {\r\n    _name = \"ABC token\";\r\n    _symbol = \"ABC\";\r\n    _decimals = 18;\r\n    _totalSupply = 100000000000000000000000000;\r\n    _balances[msg.sender] = _totalSupply;\r\n    emit Transfer(address(0), msg.sender, _totalSupply);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external override view returns (address) {\r\n    return owner();\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external override view returns (uint8) {\r\n    return _decimals;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external override view returns (string memory) {\r\n    return _symbol;\r\n  }\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external override view returns (string memory) {\r\n    return _name;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-totalSupply}.\r\n   */\r\n  function totalSupply() external override view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-balanceOf}.\r\n   */\r\n  function balanceOf(address account) external override view returns (uint256) {\r\n    return _balances[account];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transfer}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `recipient` cannot be the zero address.\r\n   * - the caller must have a balance of at least `amount`.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external override returns (bool) {\r\n    _transfer(_msgSender(), recipient, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-allowance}.\r\n   */\r\n  function allowance(address owner, address spender) external override view returns (uint256) {\r\n    return _allowances[owner][spender];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-approve}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function approve(address spender, uint256 amount) external override returns (bool) {\r\n    _approve(_msgSender(), spender, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transferFrom}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance. This is not\r\n   * required by the EIP. See the note at the beginning of {BEP20};\r\n   *\r\n   * Requirements:\r\n   * - `sender` and `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   * - the caller must have allowance for `sender`'s tokens of at least\r\n   * `amount`.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r\n    _transfer(sender, recipient, amount);\r\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   * - `spender` must have allowance for the caller of at least\r\n   * `subtractedValue`.\r\n   */\r\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n   *\r\n   * This is internal function is equivalent to {transfer}, and can be used to\r\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `sender` cannot be the zero address.\r\n   * - `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   */\r\n  function _transfer(address sender, address recipient, uint256 amount) internal {\r\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n\r\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\r\n    _balances[recipient] = _balances[recipient].add(amount);\r\n    emit Transfer(sender, recipient, amount);\r\n  }\r\n\r\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n   * the total supply.\r\n   *\r\n   * Emits a {Transfer} event with `from` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `to` cannot be the zero address.\r\n   */\r\n  function _mint(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: mint to the zero address\");\r\n\r\n    _totalSupply = _totalSupply.add(amount);\r\n    _balances[account] = _balances[account].add(amount);\r\n    emit Transfer(address(0), account, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`, reducing the\r\n   * total supply.\r\n   *\r\n   * Emits a {Transfer} event with `to` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `account` cannot be the zero address.\r\n   * - `account` must have at least `amount` tokens.\r\n   */\r\n  function _burn(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: burn from the zero address\");\r\n\r\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\r\n    _totalSupply = _totalSupply.sub(amount);\r\n    emit Transfer(account, address(0), amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\r\n   *\r\n   * This is internal function is equivalent to `approve`, and can be used to\r\n   * e.g. set automatic allowances for certain subsystems, etc.\r\n   *\r\n   * Emits an {Approval} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `owner` cannot be the zero address.\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function _approve(address owner, address spender, uint256 amount) internal {\r\n    require(owner != address(0), \"BEP20: approve from the zero address\");\r\n    require(spender != address(0), \"BEP20: approve to the zero address\");\r\n\r\n    _allowances[owner][spender] = amount;\r\n    emit Approval(owner, spender, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\r\n   * from the caller's allowance.\r\n   *\r\n   * See {_burn} and {_approve}.\r\n   */\r\n  function _burnFrom(address account, uint256 amount) internal {\r\n    _burn(account, amount);\r\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\r\n  }\r\n}"
			},
			"BEP/Ownable.sol": {
				"content": "pragma solidity 0.6.4;\r\n\r\nimport \"./Context.sol\";\r\n\r\ncontract Ownable is Context {\r\n  address private _owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  /**\r\n   * @dev Initializes the contract setting the deployer as the initial owner.\r\n   */\r\n  constructor () internal {\r\n    address msgSender = _msgSender();\r\n    _owner = msgSender;\r\n    emit OwnershipTransferred(address(0), msgSender);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the address of the current owner.\r\n   */\r\n  function owner() public view returns (address) {\r\n    return _owner;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Leaves the contract without owner. It will not be possible to call\r\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n   *\r\n   * NOTE: Renouncing ownership will leave the contract without an owner,\r\n   * thereby removing any functionality that is only available to the owner.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipTransferred(_owner, address(0));\r\n    _owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   * Can only be called by the current owner.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    _transferOwnership(newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   */\r\n  function _transferOwnership(address newOwner) internal {\r\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n    emit OwnershipTransferred(_owner, newOwner);\r\n    _owner = newOwner;\r\n  }\r\n}"
			},
			"BEP/SafeMath.sol": {
				"content": "pragma solidity 0.6.4;\r\n\r\nlibrary SafeMath {\r\n  /**\r\n   * @dev Returns the addition of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `+` operator.\r\n   *\r\n   * Requirements:\r\n   * - Addition cannot overflow.\r\n   */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return sub(a, b, \"SafeMath: subtraction overflow\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b <= a, errorMessage);\r\n    uint256 c = a - b;\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the multiplication of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `*` operator.\r\n   *\r\n   * Requirements:\r\n   * - Multiplication cannot overflow.\r\n   */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n    // benefit is lost if 'b' is also tested.\r\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    uint256 c = a * b;\r\n    require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return div(a, b, \"SafeMath: division by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    // Solidity only automatically asserts when dividing by 0\r\n    require(b > 0, errorMessage);\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return mod(a, b, \"SafeMath: modulo by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts with custom message when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b != 0, errorMessage);\r\n    return a % b;\r\n  }\r\n}\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */"
			},
			"BEP/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\npragma solidity 0.6.4;\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\ncontract Context {\r\n  // Empty internal constructor, to prevent people from mistakenly deploying\r\n  // an instance of this contract, which should be used via inheritance.\r\n  constructor () internal { }\r\n\r\n  function _msgSender() internal view returns (address payable) {\r\n    return msg.sender;\r\n  }\r\n\r\n  function _msgData() internal view returns (bytes memory) {\r\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    return msg.data;\r\n  }\r\n}"
			},
			"BEP/IBEP20.sol": {
				"content": "pragma solidity 0.6.4;\r\n\r\ninterface IBEP20 {\r\n  /**\r\n   * @dev Returns the amount of tokens in existence.\r\n   */\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8);\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory);\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view returns (string memory);\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view returns (address);\r\n\r\n  /**\r\n   * @dev Returns the amount of tokens owned by `account`.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Returns the remaining number of tokens that `spender` will be\r\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n   * zero by default.\r\n   *\r\n   * This value changes when {approve} or {transferFrom} are called.\r\n   */\r\n  function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n   * that someone may use both the old and the new allowance by unfortunate\r\n   * transaction ordering. One possible solution to mitigate this race\r\n   * condition is to first reduce the spender's allowance to 0 and set the\r\n   * desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   * Emits an {Approval} event.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n   * allowance mechanism. `amount` is then deducted from the caller's\r\n   * allowance.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n   * another (`to`).\r\n   *\r\n   * Note that `value` may be zero.\r\n   */\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  /**\r\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n   * a call to {approve}. `value` is the new allowance.\r\n   */\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"BEP/ABCToken.sol": {
				"ABCToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}.    * Requirements:    * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}.    * Requirements:    * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}.    * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};    * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"BEP/ABCToken.sol\":128:7712  contract ABCToken is Context, IBEP20, Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"BEP/ABCToken.sol\":453:699  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"BEP/ABCToken.sol\":453:699  constructor() public {\r... */\n  pop\n    /* \"BEP/Ownable.sol\":329:346  address msgSender */\n  0x00\n    /* \"BEP/Ownable.sol\":349:361  _msgSender() */\n  tag_7\n    /* \"BEP/Ownable.sol\":349:359  _msgSender */\n  shl(0x20, tag_8)\n    /* \"BEP/Ownable.sol\":349:361  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"BEP/Ownable.sol\":329:361  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"BEP/Ownable.sol\":377:386  msgSender */\n  dup1\n    /* \"BEP/Ownable.sol\":368:374  _owner */\n  0x00\n  dup1\n    /* \"BEP/Ownable.sol\":368:386  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BEP/Ownable.sol\":431:440  msgSender */\n  dup1\n    /* \"BEP/Ownable.sol\":398:441  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"BEP/Ownable.sol\":427:428  0 */\n  0x00\n    /* \"BEP/Ownable.sol\":398:441  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"BEP/Ownable.sol\":298:447  constructor () internal {\r... */\n  pop\n    /* \"BEP/ABCToken.sol\":481:500  _name = \"ABC token\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  0x41424320746f6b656e0000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"BEP/ABCToken.sol\":481:486  _name */\n  0x06\n    /* \"BEP/ABCToken.sol\":481:500  _name = \"ABC token\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"BEP/ABCToken.sol\":507:522  _symbol = \"ABC\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4142430000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"BEP/ABCToken.sol\":507:514  _symbol */\n  0x05\n    /* \"BEP/ABCToken.sol\":507:522  _symbol = \"ABC\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_12\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"BEP/ABCToken.sol\":541:543  18 */\n  0x12\n    /* \"BEP/ABCToken.sol\":529:538  _decimals */\n  0x04\n  0x00\n    /* \"BEP/ABCToken.sol\":529:543  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BEP/ABCToken.sol\":565:592  100000000000000000000000000 */\n  0x52b7d2dcc80cd2e4000000\n    /* \"BEP/ABCToken.sol\":550:562  _totalSupply */\n  0x03\n    /* \"BEP/ABCToken.sol\":550:592  _totalSupply = 100000000000000000000000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"BEP/ABCToken.sol\":623:635  _totalSupply */\n  sload(0x03)\n    /* \"BEP/ABCToken.sol\":599:608  _balances */\n  0x01\n    /* \"BEP/ABCToken.sol\":599:620  _balances[msg.sender] */\n  0x00\n    /* \"BEP/ABCToken.sol\":609:619  msg.sender */\n  caller\n    /* \"BEP/ABCToken.sol\":599:620  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"BEP/ABCToken.sol\":599:635  _balances[msg.sender] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"BEP/ABCToken.sol\":668:678  msg.sender */\n  caller\n    /* \"BEP/ABCToken.sol\":647:693  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"BEP/ABCToken.sol\":664:665  0 */\n  0x00\n    /* \"BEP/ABCToken.sol\":647:693  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"BEP/ABCToken.sol\":680:692  _totalSupply */\n  sload(0x03)\n    /* \"BEP/ABCToken.sol\":647:693  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"BEP/ABCToken.sol\":128:7712  contract ABCToken is Context, IBEP20, Ownable {\r... */\n  jump(tag_13)\n    /* \"BEP/Context.sol\":825:917  function _msgSender() internal view returns (address payable) {\r... */\ntag_8:\n    /* \"BEP/Context.sol\":870:885  address payable */\n  0x00\n    /* \"BEP/Context.sol\":901:911  msg.sender */\n  caller\n    /* \"BEP/Context.sol\":894:911  return msg.sender */\n  swap1\n  pop\n    /* \"BEP/Context.sol\":825:917  function _msgSender() internal view returns (address payable) {\r... */\n  swap1\n  jump\t// out\n    /* \"BEP/ABCToken.sol\":128:7712  contract ABCToken is Context, IBEP20, Ownable {\r... */\ntag_11:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_15)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_15\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\ntag_15:\n  pop\n  swap1\n  pop\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\n  tag_21\n  swap2\n  swap1\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_22)\ntag_23:\n  pop\n  swap1\n  jump\ntag_21:\n  swap1\n  jump\t// out\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BEP/ABCToken.sol\":128:7712  contract ABCToken is Context, IBEP20, Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"BEP/ABCToken.sol\":128:7712  contract ABCToken is Context, IBEP20, Ownable {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb09f1266\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd28d8852\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x893d20e8\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x313ce567\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x32424aa3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"BEP/ABCToken.sol\":1196:1284  function name() external override view returns (string memory) {\r... */\n    tag_3:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_26:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_26)\n    tag_28:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"BEP/ABCToken.sol\":1196:1284  function name() external override view returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_29\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_29:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP/ABCToken.sol\":2281:2434  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n    tag_4:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_31:\n        /* \"BEP/ABCToken.sol\":2281:2434  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_32\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP/ABCToken.sol\":1340:1436  function totalSupply() external override view returns (uint256) {\r... */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP/ABCToken.sol\":2879:3180  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_6:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x60\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_36:\n        /* \"BEP/ABCToken.sol\":2879:3180  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_37\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP/ABCToken.sol\":906:994  function decimals() external override view returns (uint8) {\r... */\n    tag_7:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP/ABCToken.sol\":374:396  uint8 public _decimals */\n    tag_8:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP/ABCToken.sol\":3562:3762  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_43:\n        /* \"BEP/ABCToken.sol\":3562:3762  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP/ABCToken.sol\":1490:1605  function balanceOf(address account) external override view returns (uint256) {\r... */\n    tag_10:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_46:\n        /* \"BEP/ABCToken.sol\":1490:1605  function balanceOf(address account) external override view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP/Ownable.sol\":1122:1252  function renounceOwnership() public onlyOwner {\r... */\n    tag_11:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      stop\n        /* \"BEP/ABCToken.sol\":759:847  function getOwner() external override view returns (address) {\r... */\n    tag_12:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP/Ownable.sol\":520:593  function owner() public view returns (address) {\r... */\n    tag_13:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP/ABCToken.sol\":1051:1143  function symbol() external override view returns (string memory) {\r... */\n    tag_14:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_56:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_58\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_56)\n    tag_58:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"BEP/ABCToken.sol\":1051:1143  function symbol() external override view returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_59\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_59:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP/ABCToken.sol\":4234:4485  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_15:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_61\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_61:\n        /* \"BEP/ABCToken.sol\":4234:4485  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP/ABCToken.sol\":1799:1958  function transfer(address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_16:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_64\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_64:\n        /* \"BEP/ABCToken.sol\":1799:1958  function transfer(address recipient, uint256 amount) external override returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP/ABCToken.sol\":401:422  string public _symbol */\n    tag_17:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_68:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_70\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_68)\n    tag_70:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"BEP/ABCToken.sol\":401:422  string public _symbol */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_71\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_71:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP/ABCToken.sol\":427:446  string public _name */\n    tag_18:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_74:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_76\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_74)\n    tag_76:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"BEP/ABCToken.sol\":427:446  string public _name */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_77\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_77:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP/ABCToken.sol\":2012:2151  function allowance(address owner, address spender) external override view returns (uint256) {\r... */\n    tag_19:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_79\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_79:\n        /* \"BEP/ABCToken.sol\":2012:2151  function allowance(address owner, address spender) external override view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP/Ownable.sol\":1397:1500  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_20:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_82\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_82:\n        /* \"BEP/Ownable.sol\":1397:1500  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"BEP/ABCToken.sol\":1196:1284  function name() external override view returns (string memory) {\r... */\n    tag_25:\n        /* \"BEP/ABCToken.sol\":1244:1257  string memory */\n      0x60\n        /* \"BEP/ABCToken.sol\":1273:1278  _name */\n      0x06\n        /* \"BEP/ABCToken.sol\":1266:1278  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_85\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_86\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_85)\n    tag_86:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_87:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_87\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_85:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"BEP/ABCToken.sol\":1196:1284  function name() external override view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"BEP/ABCToken.sol\":2281:2434  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n    tag_32:\n        /* \"BEP/ABCToken.sol\":2358:2362  bool */\n      0x00\n        /* \"BEP/ABCToken.sol\":2371:2410  _approve(_msgSender(), spender, amount) */\n      tag_89\n        /* \"BEP/ABCToken.sol\":2380:2392  _msgSender() */\n      tag_90\n        /* \"BEP/ABCToken.sol\":2380:2390  _msgSender */\n      tag_91\n        /* \"BEP/ABCToken.sol\":2380:2392  _msgSender() */\n      jump\t// in\n    tag_90:\n        /* \"BEP/ABCToken.sol\":2394:2401  spender */\n      dup5\n        /* \"BEP/ABCToken.sol\":2403:2409  amount */\n      dup5\n        /* \"BEP/ABCToken.sol\":2371:2379  _approve */\n      tag_92\n        /* \"BEP/ABCToken.sol\":2371:2410  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_89:\n        /* \"BEP/ABCToken.sol\":2424:2428  true */\n      0x01\n        /* \"BEP/ABCToken.sol\":2417:2428  return true */\n      swap1\n      pop\n        /* \"BEP/ABCToken.sol\":2281:2434  function approve(address spender, uint256 amount) external override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BEP/ABCToken.sol\":1340:1436  function totalSupply() external override view returns (uint256) {\r... */\n    tag_34:\n        /* \"BEP/ABCToken.sol\":1395:1402  uint256 */\n      0x00\n        /* \"BEP/ABCToken.sol\":1418:1430  _totalSupply */\n      sload(0x03)\n        /* \"BEP/ABCToken.sol\":1411:1430  return _totalSupply */\n      swap1\n      pop\n        /* \"BEP/ABCToken.sol\":1340:1436  function totalSupply() external override view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"BEP/ABCToken.sol\":2879:3180  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_37:\n        /* \"BEP/ABCToken.sol\":2979:2983  bool */\n      0x00\n        /* \"BEP/ABCToken.sol\":2992:3028  _transfer(sender, recipient, amount) */\n      tag_95\n        /* \"BEP/ABCToken.sol\":3002:3008  sender */\n      dup5\n        /* \"BEP/ABCToken.sol\":3010:3019  recipient */\n      dup5\n        /* \"BEP/ABCToken.sol\":3021:3027  amount */\n      dup5\n        /* \"BEP/ABCToken.sol\":2992:3001  _transfer */\n      tag_96\n        /* \"BEP/ABCToken.sol\":2992:3028  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_95:\n        /* \"BEP/ABCToken.sol\":3035:3156  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_97\n        /* \"BEP/ABCToken.sol\":3044:3050  sender */\n      dup5\n        /* \"BEP/ABCToken.sol\":3052:3064  _msgSender() */\n      tag_98\n        /* \"BEP/ABCToken.sol\":3052:3062  _msgSender */\n      tag_91\n        /* \"BEP/ABCToken.sol\":3052:3064  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"BEP/ABCToken.sol\":3066:3155  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_99\n        /* \"BEP/ABCToken.sol\":3104:3110  amount */\n      dup6\n        /* \"BEP/ABCToken.sol\":3066:3155  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"BEP/ABCToken.sol\":3066:3077  _allowances */\n      0x02\n        /* \"BEP/ABCToken.sol\":3066:3085  _allowances[sender] */\n      0x00\n        /* \"BEP/ABCToken.sol\":3078:3084  sender */\n      dup12\n        /* \"BEP/ABCToken.sol\":3066:3085  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP/ABCToken.sol\":3066:3099  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"BEP/ABCToken.sol\":3086:3098  _msgSender() */\n      tag_100\n        /* \"BEP/ABCToken.sol\":3086:3096  _msgSender */\n      tag_91\n        /* \"BEP/ABCToken.sol\":3086:3098  _msgSender() */\n      jump\t// in\n    tag_100:\n        /* \"BEP/ABCToken.sol\":3066:3099  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP/ABCToken.sol\":3066:3103  _allowances[sender][_msgSender()].sub */\n      tag_101\n      swap1\n        /* \"BEP/ABCToken.sol\":3066:3155  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_99:\n        /* \"BEP/ABCToken.sol\":3035:3043  _approve */\n      tag_92\n        /* \"BEP/ABCToken.sol\":3035:3156  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_97:\n        /* \"BEP/ABCToken.sol\":3170:3174  true */\n      0x01\n        /* \"BEP/ABCToken.sol\":3163:3174  return true */\n      swap1\n      pop\n        /* \"BEP/ABCToken.sol\":2879:3180  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BEP/ABCToken.sol\":906:994  function decimals() external override view returns (uint8) {\r... */\n    tag_39:\n        /* \"BEP/ABCToken.sol\":958:963  uint8 */\n      0x00\n        /* \"BEP/ABCToken.sol\":979:988  _decimals */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BEP/ABCToken.sol\":972:988  return _decimals */\n      swap1\n      pop\n        /* \"BEP/ABCToken.sol\":906:994  function decimals() external override view returns (uint8) {\r... */\n      swap1\n      jump\t// out\n        /* \"BEP/ABCToken.sol\":374:396  uint8 public _decimals */\n    tag_41:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"BEP/ABCToken.sol\":3562:3762  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_44:\n        /* \"BEP/ABCToken.sol\":3642:3646  bool */\n      0x00\n        /* \"BEP/ABCToken.sol\":3655:3738  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_104\n        /* \"BEP/ABCToken.sol\":3664:3676  _msgSender() */\n      tag_105\n        /* \"BEP/ABCToken.sol\":3664:3674  _msgSender */\n      tag_91\n        /* \"BEP/ABCToken.sol\":3664:3676  _msgSender() */\n      jump\t// in\n    tag_105:\n        /* \"BEP/ABCToken.sol\":3678:3685  spender */\n      dup5\n        /* \"BEP/ABCToken.sol\":3687:3737  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_106\n        /* \"BEP/ABCToken.sol\":3726:3736  addedValue */\n      dup6\n        /* \"BEP/ABCToken.sol\":3687:3698  _allowances */\n      0x02\n        /* \"BEP/ABCToken.sol\":3687:3712  _allowances[_msgSender()] */\n      0x00\n        /* \"BEP/ABCToken.sol\":3699:3711  _msgSender() */\n      tag_107\n        /* \"BEP/ABCToken.sol\":3699:3709  _msgSender */\n      tag_91\n        /* \"BEP/ABCToken.sol\":3699:3711  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"BEP/ABCToken.sol\":3687:3712  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP/ABCToken.sol\":3687:3721  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"BEP/ABCToken.sol\":3713:3720  spender */\n      dup10\n        /* \"BEP/ABCToken.sol\":3687:3721  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP/ABCToken.sol\":3687:3725  _allowances[_msgSender()][spender].add */\n      tag_108\n      swap1\n        /* \"BEP/ABCToken.sol\":3687:3737  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_106:\n        /* \"BEP/ABCToken.sol\":3655:3663  _approve */\n      tag_92\n        /* \"BEP/ABCToken.sol\":3655:3738  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_104:\n        /* \"BEP/ABCToken.sol\":3752:3756  true */\n      0x01\n        /* \"BEP/ABCToken.sol\":3745:3756  return true */\n      swap1\n      pop\n        /* \"BEP/ABCToken.sol\":3562:3762  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BEP/ABCToken.sol\":1490:1605  function balanceOf(address account) external override view returns (uint256) {\r... */\n    tag_47:\n        /* \"BEP/ABCToken.sol\":1558:1565  uint256 */\n      0x00\n        /* \"BEP/ABCToken.sol\":1581:1590  _balances */\n      0x01\n        /* \"BEP/ABCToken.sol\":1581:1599  _balances[account] */\n      0x00\n        /* \"BEP/ABCToken.sol\":1591:1598  account */\n      dup4\n        /* \"BEP/ABCToken.sol\":1581:1599  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP/ABCToken.sol\":1574:1599  return _balances[account] */\n      swap1\n      pop\n        /* \"BEP/ABCToken.sol\":1490:1605  function balanceOf(address account) external override view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"BEP/Ownable.sol\":1122:1252  function renounceOwnership() public onlyOwner {\r... */\n    tag_49:\n        /* \"BEP/Ownable.sol\":724:736  _msgSender() */\n      tag_111\n        /* \"BEP/Ownable.sol\":724:734  _msgSender */\n      tag_91\n        /* \"BEP/Ownable.sol\":724:736  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"BEP/Ownable.sol\":714:736  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP/Ownable.sol\":714:720  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP/Ownable.sol\":714:736  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BEP/Ownable.sol\":706:773  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"BEP/Ownable.sol\":1217:1218  0 */\n      0x00\n        /* \"BEP/Ownable.sol\":1180:1220  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP/Ownable.sol\":1201:1207  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP/Ownable.sol\":1180:1220  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEP/Ownable.sol\":1244:1245  0 */\n      0x00\n        /* \"BEP/Ownable.sol\":1227:1233  _owner */\n      dup1\n      0x00\n        /* \"BEP/Ownable.sol\":1227:1246  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BEP/Ownable.sol\":1122:1252  function renounceOwnership() public onlyOwner {\r... */\n      jump\t// out\n        /* \"BEP/ABCToken.sol\":759:847  function getOwner() external override view returns (address) {\r... */\n    tag_51:\n        /* \"BEP/ABCToken.sol\":811:818  address */\n      0x00\n        /* \"BEP/ABCToken.sol\":834:841  owner() */\n      tag_115\n        /* \"BEP/ABCToken.sol\":834:839  owner */\n      tag_53\n        /* \"BEP/ABCToken.sol\":834:841  owner() */\n      jump\t// in\n    tag_115:\n        /* \"BEP/ABCToken.sol\":827:841  return owner() */\n      swap1\n      pop\n        /* \"BEP/ABCToken.sol\":759:847  function getOwner() external override view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"BEP/Ownable.sol\":520:593  function owner() public view returns (address) {\r... */\n    tag_53:\n        /* \"BEP/Ownable.sol\":558:565  address */\n      0x00\n        /* \"BEP/Ownable.sol\":581:587  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP/Ownable.sol\":574:587  return _owner */\n      swap1\n      pop\n        /* \"BEP/Ownable.sol\":520:593  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"BEP/ABCToken.sol\":1051:1143  function symbol() external override view returns (string memory) {\r... */\n    tag_55:\n        /* \"BEP/ABCToken.sol\":1101:1114  string memory */\n      0x60\n        /* \"BEP/ABCToken.sol\":1130:1137  _symbol */\n      0x05\n        /* \"BEP/ABCToken.sol\":1123:1137  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_118\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_119\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_118)\n    tag_119:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_120:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_120\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"BEP/ABCToken.sol\":1051:1143  function symbol() external override view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"BEP/ABCToken.sol\":4234:4485  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_62:\n        /* \"BEP/ABCToken.sol\":4319:4323  bool */\n      0x00\n        /* \"BEP/ABCToken.sol\":4332:4461  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_122\n        /* \"BEP/ABCToken.sol\":4341:4353  _msgSender() */\n      tag_123\n        /* \"BEP/ABCToken.sol\":4341:4351  _msgSender */\n      tag_91\n        /* \"BEP/ABCToken.sol\":4341:4353  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"BEP/ABCToken.sol\":4355:4362  spender */\n      dup5\n        /* \"BEP/ABCToken.sol\":4364:4460  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_124\n        /* \"BEP/ABCToken.sol\":4403:4418  subtractedValue */\n      dup6\n        /* \"BEP/ABCToken.sol\":4364:4460  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"BEP/ABCToken.sol\":4364:4375  _allowances */\n      0x02\n        /* \"BEP/ABCToken.sol\":4364:4389  _allowances[_msgSender()] */\n      0x00\n        /* \"BEP/ABCToken.sol\":4376:4388  _msgSender() */\n      tag_125\n        /* \"BEP/ABCToken.sol\":4376:4386  _msgSender */\n      tag_91\n        /* \"BEP/ABCToken.sol\":4376:4388  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"BEP/ABCToken.sol\":4364:4389  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP/ABCToken.sol\":4364:4398  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"BEP/ABCToken.sol\":4390:4397  spender */\n      dup11\n        /* \"BEP/ABCToken.sol\":4364:4398  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP/ABCToken.sol\":4364:4402  _allowances[_msgSender()][spender].sub */\n      tag_101\n      swap1\n        /* \"BEP/ABCToken.sol\":4364:4460  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_124:\n        /* \"BEP/ABCToken.sol\":4332:4340  _approve */\n      tag_92\n        /* \"BEP/ABCToken.sol\":4332:4461  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_122:\n        /* \"BEP/ABCToken.sol\":4475:4479  true */\n      0x01\n        /* \"BEP/ABCToken.sol\":4468:4479  return true */\n      swap1\n      pop\n        /* \"BEP/ABCToken.sol\":4234:4485  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BEP/ABCToken.sol\":1799:1958  function transfer(address recipient, uint256 amount) external override returns (bool) {\r... */\n    tag_65:\n        /* \"BEP/ABCToken.sol\":1879:1883  bool */\n      0x00\n        /* \"BEP/ABCToken.sol\":1892:1934  _transfer(_msgSender(), recipient, amount) */\n      tag_127\n        /* \"BEP/ABCToken.sol\":1902:1914  _msgSender() */\n      tag_128\n        /* \"BEP/ABCToken.sol\":1902:1912  _msgSender */\n      tag_91\n        /* \"BEP/ABCToken.sol\":1902:1914  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"BEP/ABCToken.sol\":1916:1925  recipient */\n      dup5\n        /* \"BEP/ABCToken.sol\":1927:1933  amount */\n      dup5\n        /* \"BEP/ABCToken.sol\":1892:1901  _transfer */\n      tag_96\n        /* \"BEP/ABCToken.sol\":1892:1934  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_127:\n        /* \"BEP/ABCToken.sol\":1948:1952  true */\n      0x01\n        /* \"BEP/ABCToken.sol\":1941:1952  return true */\n      swap1\n      pop\n        /* \"BEP/ABCToken.sol\":1799:1958  function transfer(address recipient, uint256 amount) external override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BEP/ABCToken.sol\":401:422  string public _symbol */\n    tag_67:\n      0x05\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_129\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_130\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_129)\n    tag_130:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_131:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_131\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"BEP/ABCToken.sol\":427:446  string public _name */\n    tag_73:\n      0x06\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_132\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_133\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_132)\n    tag_133:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_134:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_134\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"BEP/ABCToken.sol\":2012:2151  function allowance(address owner, address spender) external override view returns (uint256) {\r... */\n    tag_80:\n        /* \"BEP/ABCToken.sol\":2095:2102  uint256 */\n      0x00\n        /* \"BEP/ABCToken.sol\":2118:2129  _allowances */\n      0x02\n        /* \"BEP/ABCToken.sol\":2118:2136  _allowances[owner] */\n      0x00\n        /* \"BEP/ABCToken.sol\":2130:2135  owner */\n      dup5\n        /* \"BEP/ABCToken.sol\":2118:2136  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP/ABCToken.sol\":2118:2145  _allowances[owner][spender] */\n      0x00\n        /* \"BEP/ABCToken.sol\":2137:2144  spender */\n      dup4\n        /* \"BEP/ABCToken.sol\":2118:2145  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP/ABCToken.sol\":2111:2145  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"BEP/ABCToken.sol\":2012:2151  function allowance(address owner, address spender) external override view returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BEP/Ownable.sol\":1397:1500  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_83:\n        /* \"BEP/Ownable.sol\":724:736  _msgSender() */\n      tag_137\n        /* \"BEP/Ownable.sol\":724:734  _msgSender */\n      tag_91\n        /* \"BEP/Ownable.sol\":724:736  _msgSender() */\n      jump\t// in\n    tag_137:\n        /* \"BEP/Ownable.sol\":714:736  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP/Ownable.sol\":714:720  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP/Ownable.sol\":714:736  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BEP/Ownable.sol\":706:773  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"BEP/Ownable.sol\":1466:1494  _transferOwnership(newOwner) */\n      tag_140\n        /* \"BEP/Ownable.sol\":1485:1493  newOwner */\n      dup2\n        /* \"BEP/Ownable.sol\":1466:1484  _transferOwnership */\n      tag_141\n        /* \"BEP/Ownable.sol\":1466:1494  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_140:\n        /* \"BEP/Ownable.sol\":1397:1500  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"BEP/Context.sol\":825:917  function _msgSender() internal view returns (address payable) {\r... */\n    tag_91:\n        /* \"BEP/Context.sol\":870:885  address payable */\n      0x00\n        /* \"BEP/Context.sol\":901:911  msg.sender */\n      caller\n        /* \"BEP/Context.sol\":894:911  return msg.sender */\n      swap1\n      pop\n        /* \"BEP/Context.sol\":825:917  function _msgSender() internal view returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"BEP/ABCToken.sol\":6995:7315  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n    tag_92:\n        /* \"BEP/ABCToken.sol\":7102:7103  0 */\n      0x00\n        /* \"BEP/ABCToken.sol\":7085:7104  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP/ABCToken.sol\":7085:7090  owner */\n      dup4\n        /* \"BEP/ABCToken.sol\":7085:7104  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEP/ABCToken.sol\":7077:7145  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_144:\n        /* \"BEP/ABCToken.sol\":7179:7180  0 */\n      0x00\n        /* \"BEP/ABCToken.sol\":7160:7181  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP/ABCToken.sol\":7160:7167  spender */\n      dup3\n        /* \"BEP/ABCToken.sol\":7160:7181  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEP/ABCToken.sol\":7152:7220  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"BEP/ABCToken.sol\":7259:7265  amount */\n      dup1\n        /* \"BEP/ABCToken.sol\":7229:7240  _allowances */\n      0x02\n        /* \"BEP/ABCToken.sol\":7229:7247  _allowances[owner] */\n      0x00\n        /* \"BEP/ABCToken.sol\":7241:7246  owner */\n      dup6\n        /* \"BEP/ABCToken.sol\":7229:7247  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP/ABCToken.sol\":7229:7256  _allowances[owner][spender] */\n      0x00\n        /* \"BEP/ABCToken.sol\":7248:7255  spender */\n      dup5\n        /* \"BEP/ABCToken.sol\":7229:7256  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP/ABCToken.sol\":7229:7265  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BEP/ABCToken.sol\":7293:7300  spender */\n      dup2\n        /* \"BEP/ABCToken.sol\":7277:7309  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP/ABCToken.sol\":7286:7291  owner */\n      dup4\n        /* \"BEP/ABCToken.sol\":7277:7309  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"BEP/ABCToken.sol\":7302:7308  amount */\n      dup4\n        /* \"BEP/ABCToken.sol\":7277:7309  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEP/ABCToken.sol\":6995:7315  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BEP/ABCToken.sol\":4945:5394  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n    tag_96:\n        /* \"BEP/ABCToken.sol\":5057:5058  0 */\n      0x00\n        /* \"BEP/ABCToken.sol\":5039:5059  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP/ABCToken.sol\":5039:5045  sender */\n      dup4\n        /* \"BEP/ABCToken.sol\":5039:5059  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEP/ABCToken.sol\":5031:5101  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"BEP/ABCToken.sol\":5137:5138  0 */\n      0x00\n        /* \"BEP/ABCToken.sol\":5116:5139  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP/ABCToken.sol\":5116:5125  recipient */\n      dup3\n        /* \"BEP/ABCToken.sol\":5116:5139  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEP/ABCToken.sol\":5108:5179  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"BEP/ABCToken.sol\":5208:5279  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_149\n        /* \"BEP/ABCToken.sol\":5230:5236  amount */\n      dup2\n        /* \"BEP/ABCToken.sol\":5208:5279  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"BEP/ABCToken.sol\":5208:5217  _balances */\n      0x01\n        /* \"BEP/ABCToken.sol\":5208:5225  _balances[sender] */\n      0x00\n        /* \"BEP/ABCToken.sol\":5218:5224  sender */\n      dup8\n        /* \"BEP/ABCToken.sol\":5208:5225  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP/ABCToken.sol\":5208:5229  _balances[sender].sub */\n      tag_101\n      swap1\n        /* \"BEP/ABCToken.sol\":5208:5279  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_149:\n        /* \"BEP/ABCToken.sol\":5188:5197  _balances */\n      0x01\n        /* \"BEP/ABCToken.sol\":5188:5205  _balances[sender] */\n      0x00\n        /* \"BEP/ABCToken.sol\":5198:5204  sender */\n      dup6\n        /* \"BEP/ABCToken.sol\":5188:5205  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP/ABCToken.sol\":5188:5279  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BEP/ABCToken.sol\":5309:5341  _balances[recipient].add(amount) */\n      tag_150\n        /* \"BEP/ABCToken.sol\":5334:5340  amount */\n      dup2\n        /* \"BEP/ABCToken.sol\":5309:5318  _balances */\n      0x01\n        /* \"BEP/ABCToken.sol\":5309:5329  _balances[recipient] */\n      0x00\n        /* \"BEP/ABCToken.sol\":5319:5328  recipient */\n      dup6\n        /* \"BEP/ABCToken.sol\":5309:5329  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP/ABCToken.sol\":5309:5333  _balances[recipient].add */\n      tag_108\n      swap1\n        /* \"BEP/ABCToken.sol\":5309:5341  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"BEP/ABCToken.sol\":5286:5295  _balances */\n      0x01\n        /* \"BEP/ABCToken.sol\":5286:5306  _balances[recipient] */\n      0x00\n        /* \"BEP/ABCToken.sol\":5296:5305  recipient */\n      dup5\n        /* \"BEP/ABCToken.sol\":5286:5306  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP/ABCToken.sol\":5286:5341  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BEP/ABCToken.sol\":5370:5379  recipient */\n      dup2\n        /* \"BEP/ABCToken.sol\":5353:5388  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP/ABCToken.sol\":5362:5368  sender */\n      dup4\n        /* \"BEP/ABCToken.sol\":5353:5388  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"BEP/ABCToken.sol\":5381:5387  amount */\n      dup4\n        /* \"BEP/ABCToken.sol\":5353:5388  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEP/ABCToken.sol\":4945:5394  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BEP/SafeMath.sol\":1088:1266  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_101:\n        /* \"BEP/SafeMath.sol\":1174:1181  uint256 */\n      0x00\n        /* \"BEP/SafeMath.sol\":1203:1204  a */\n      dup4\n        /* \"BEP/SafeMath.sol\":1198:1199  b */\n      dup4\n        /* \"BEP/SafeMath.sol\":1198:1204  b <= a */\n      gt\n      iszero\n        /* \"BEP/SafeMath.sol\":1206:1218  errorMessage */\n      dup3\n        /* \"BEP/SafeMath.sol\":1190:1219  require(b <= a, errorMessage) */\n      swap1\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_153:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_155\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_153)\n    tag_155:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"BEP/SafeMath.sol\":1190:1219  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_156\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_156:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n      pop\n        /* \"BEP/SafeMath.sol\":1226:1235  uint256 c */\n      0x00\n        /* \"BEP/SafeMath.sol\":1242:1243  b */\n      dup4\n        /* \"BEP/SafeMath.sol\":1238:1239  a */\n      dup6\n        /* \"BEP/SafeMath.sol\":1238:1243  a - b */\n      sub\n        /* \"BEP/SafeMath.sol\":1226:1243  uint256 c = a - b */\n      swap1\n      pop\n        /* \"BEP/SafeMath.sol\":1259:1260  c */\n      dup1\n        /* \"BEP/SafeMath.sol\":1252:1260  return c */\n      swap2\n      pop\n      pop\n        /* \"BEP/SafeMath.sol\":1088:1266  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BEP/SafeMath.sol\":261:428  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_108:\n        /* \"BEP/SafeMath.sol\":319:326  uint256 */\n      0x00\n        /* \"BEP/SafeMath.sol\":335:344  uint256 c */\n      dup1\n        /* \"BEP/SafeMath.sol\":351:352  b */\n      dup3\n        /* \"BEP/SafeMath.sol\":347:348  a */\n      dup5\n        /* \"BEP/SafeMath.sol\":347:352  a + b */\n      add\n        /* \"BEP/SafeMath.sol\":335:352  uint256 c = a + b */\n      swap1\n      pop\n        /* \"BEP/SafeMath.sol\":372:373  a */\n      dup4\n        /* \"BEP/SafeMath.sol\":367:368  c */\n      dup2\n        /* \"BEP/SafeMath.sol\":367:373  c >= a */\n      lt\n      iszero\n        /* \"BEP/SafeMath.sol\":359:405  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"BEP/SafeMath.sol\":421:422  c */\n      dup1\n        /* \"BEP/SafeMath.sol\":414:422  return c */\n      swap2\n      pop\n      pop\n        /* \"BEP/SafeMath.sol\":261:428  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BEP/Ownable.sol\":1598:1813  function _transferOwnership(address newOwner) internal {\r... */\n    tag_141:\n        /* \"BEP/Ownable.sol\":1688:1689  0 */\n      0x00\n        /* \"BEP/Ownable.sol\":1668:1690  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP/Ownable.sol\":1668:1676  newOwner */\n      dup2\n        /* \"BEP/Ownable.sol\":1668:1690  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEP/Ownable.sol\":1660:1733  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"BEP/Ownable.sol\":1774:1782  newOwner */\n      dup1\n        /* \"BEP/Ownable.sol\":1745:1783  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP/Ownable.sol\":1766:1772  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP/Ownable.sol\":1745:1783  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEP/Ownable.sol\":1799:1807  newOwner */\n      dup1\n        /* \"BEP/Ownable.sol\":1790:1796  _owner */\n      0x00\n      dup1\n        /* \"BEP/Ownable.sol\":1790:1807  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BEP/Ownable.sol\":1598:1813  function _transferOwnership(address newOwner) internal {\r... */\n      pop\n      jump\t// out\n    stop\n    data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57 42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4 42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2 42455032303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5 42455032303a20617070726f766520746f20746865207a65726f2061646472657373\n\n    auxdata: 0xa26469706673582212208acf3203880836486d58e824773bf945360d0b32e833c9435f5a3ca17974035964736f6c63430006040033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506000620000246200024060201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506040518060400160405280600981526020017f41424320746f6b656e0000000000000000000000000000000000000000000000815250600690805190602001906200010f92919062000248565b506040518060400160405280600381526020017f4142430000000000000000000000000000000000000000000000000000000000815250600590805190602001906200015d92919062000248565b506012600460006101000a81548160ff021916908360ff1602179055506a52b7d2dcc80cd2e4000000600381905550600354600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6003546040518082815260200191505060405180910390a3620002f7565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200028b57805160ff1916838001178555620002bc565b82800160010185558215620002bc579182015b82811115620002bb5782518255916020019190600101906200029e565b5b509050620002cb9190620002cf565b5090565b620002f491905b80821115620002f0576000816000905550600101620002d6565b5090565b90565b6118ad80620003076000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063893d20e8116100a2578063a9059cbb11610071578063a9059cbb14610535578063b09f12661461059b578063d28d88521461061e578063dd62ed3e146106a1578063f2fde38b1461071957610116565b8063893d20e8146103b85780638da5cb5b1461040257806395d89b411461044c578063a457c2d7146104cf57610116565b8063313ce567116100e9578063313ce567146102a857806332424aa3146102cc57806339509351146102f057806370a0823114610356578063715018a6146103ae57610116565b806306fdde031461011b578063095ea7b31461019e57806318160ddd1461020457806323b872dd14610222575b600080fd5b61012361075d565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610163578082015181840152602081019050610148565b50505050905090810190601f1680156101905780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ea600480360360408110156101b457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107ff565b604051808215151515815260200191505060405180910390f35b61020c61081d565b6040518082815260200191505060405180910390f35b61028e6004803603606081101561023857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610827565b604051808215151515815260200191505060405180910390f35b6102b0610900565b604051808260ff1660ff16815260200191505060405180910390f35b6102d4610917565b604051808260ff1660ff16815260200191505060405180910390f35b61033c6004803603604081101561030657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061092a565b604051808215151515815260200191505060405180910390f35b6103986004803603602081101561036c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109dd565b6040518082815260200191505060405180910390f35b6103b6610a26565b005b6103c0610bae565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61040a610bbd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610454610be6565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610494578082015181840152602081019050610479565b50505050905090810190601f1680156104c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61051b600480360360408110156104e557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c88565b604051808215151515815260200191505060405180910390f35b6105816004803603604081101561054b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d55565b604051808215151515815260200191505060405180910390f35b6105a3610d73565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105e35780820151818401526020810190506105c8565b50505050905090810190601f1680156106105780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610626610e11565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561066657808201518184015260208101905061064b565b50505050905090810190601f1680156106935780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610703600480360360408110156106b757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610eaf565b6040518082815260200191505060405180910390f35b61075b6004803603602081101561072f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f36565b005b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107f55780601f106107ca576101008083540402835291602001916107f5565b820191906000526020600020905b8154815290600101906020018083116107d857829003601f168201915b5050505050905090565b600061081361080c61100b565b8484611013565b6001905092915050565b6000600354905090565b600061083484848461120a565b6108f58461084061100b565b6108f0856040518060600160405280602881526020016117c060289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006108a661100b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114c49092919063ffffffff16565b611013565b600190509392505050565b6000600460009054906101000a900460ff16905090565b600460009054906101000a900460ff1681565b60006109d361093761100b565b846109ce856002600061094861100b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461158490919063ffffffff16565b611013565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610a2e61100b565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610aef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610bb8610bbd565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c7e5780601f10610c5357610100808354040283529160200191610c7e565b820191906000526020600020905b815481529060010190602001808311610c6157829003601f168201915b5050505050905090565b6000610d4b610c9561100b565b84610d46856040518060600160405280602581526020016118316025913960026000610cbf61100b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114c49092919063ffffffff16565b611013565b6001905092915050565b6000610d69610d6261100b565b848461120a565b6001905092915050565b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e095780601f10610dde57610100808354040283529160200191610e09565b820191906000526020600020905b815481529060010190602001808311610dec57829003601f168201915b505050505081565b60068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ea75780601f10610e7c57610100808354040283529160200191610ea7565b820191906000526020600020905b815481529060010190602001808311610e8a57829003601f168201915b505050505081565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610f3e61100b565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610fff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6110088161160c565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611099576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806117766024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561111f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806118566022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611290576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806117516025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061180e6023913960400191505060405180910390fd5b611382816040518060600160405280602681526020016117e860269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114c49092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061141781600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461158490919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611571576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561153657808201518184015260208101905061151b565b50505050905090810190601f1680156115635780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015611602576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611692576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061179a6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a26469706673582212208acf3203880836486d58e824773bf945360d0b32e833c9435f5a3ca17974035964736f6c63430006040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x24 PUSH3 0x240 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x41424320746F6B656E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x10F SWAP3 SWAP2 SWAP1 PUSH3 0x248 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4142430000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x15D SWAP3 SWAP2 SWAP1 PUSH3 0x248 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH11 0x52B7D2DCC80CD2E4000000 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x2F7 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x28B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2BC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2BC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2BB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x29E JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2CB SWAP2 SWAP1 PUSH3 0x2CF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x2F4 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2F0 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2D6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18AD DUP1 PUSH3 0x307 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x535 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x61E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6A1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x719 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4CF JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3AE JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x222 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x75D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x163 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x148 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x190 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH2 0x81D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D4 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x92A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B6 PUSH2 0xA26 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C0 PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40A PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x454 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x494 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x479 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4C1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x581 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A3 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5E3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5C8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x610 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x626 PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x666 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x64B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x693 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x703 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF36 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x7F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x813 PUSH2 0x80C PUSH2 0x100B JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x834 DUP5 DUP5 DUP5 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x8F5 DUP5 PUSH2 0x840 PUSH2 0x100B JUMP JUMPDEST PUSH2 0x8F0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17C0 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x8A6 PUSH2 0x100B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x14C4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D3 PUSH2 0x937 PUSH2 0x100B JUMP JUMPDEST DUP5 PUSH2 0x9CE DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x948 PUSH2 0x100B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1584 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA2E PUSH2 0x100B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB8 PUSH2 0xBBD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xC7E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC53 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC7E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC61 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD4B PUSH2 0xC95 PUSH2 0x100B JUMP JUMPDEST DUP5 PUSH2 0xD46 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1831 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xCBF PUSH2 0x100B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x14C4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD69 PUSH2 0xD62 PUSH2 0x100B JUMP JUMPDEST DUP5 DUP5 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xE09 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDDE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE09 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDEC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xEA7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE7C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEA7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE8A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF3E PUSH2 0x100B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1008 DUP2 PUSH2 0x160C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1099 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1776 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x111F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1856 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1290 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1751 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1316 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x180E PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1382 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17E8 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x14C4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1417 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1584 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1571 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1536 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x151B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1563 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1602 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1692 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x179A PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A26469706673582212208ACF32038808 CALLDATASIZE 0x48 PUSH14 0x58E824773BF945360D0B32E833C9 NUMBER 0x5F GAS EXTCODECOPY LOG1 PUSH26 0x74035964736F6C63430006040033000000000000000000000000 ",
							"sourceMap": "128:7584:0:-:0;;;453:246;5:9:-1;2:2;;;27:1;24;17:12;2:2;453:246:0;329:17:3;349:12;:10;;;:12;;:::i;:::-;329:32;;377:9;368:6;;:18;;;;;;;;;;;;;;;;;;431:9;398:43;;427:1;398:43;;;;;;;;;;;;298:149;481:19:0;;;;;;;;;;;;;;;;;:5;:19;;;;;;;;;;;;:::i;:::-;;507:15;;;;;;;;;;;;;;;;;:7;:15;;;;;;;;;;;;:::i;:::-;;541:2;529:9;;:14;;;;;;;;;;;;;;;;;;565:27;550:12;:42;;;;623:12;;599:9;:21;609:10;599:21;;;;;;;;;;;;;;;:36;;;;668:10;647:46;;664:1;647:46;;;680:12;;647:46;;;;;;;;;;;;;;;;;;128:7584;;825:92:1;870:15;901:10;894:17;;825:92;:::o;128:7584:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101165760003560e01c8063893d20e8116100a2578063a9059cbb11610071578063a9059cbb14610535578063b09f12661461059b578063d28d88521461061e578063dd62ed3e146106a1578063f2fde38b1461071957610116565b8063893d20e8146103b85780638da5cb5b1461040257806395d89b411461044c578063a457c2d7146104cf57610116565b8063313ce567116100e9578063313ce567146102a857806332424aa3146102cc57806339509351146102f057806370a0823114610356578063715018a6146103ae57610116565b806306fdde031461011b578063095ea7b31461019e57806318160ddd1461020457806323b872dd14610222575b600080fd5b61012361075d565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610163578082015181840152602081019050610148565b50505050905090810190601f1680156101905780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ea600480360360408110156101b457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107ff565b604051808215151515815260200191505060405180910390f35b61020c61081d565b6040518082815260200191505060405180910390f35b61028e6004803603606081101561023857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610827565b604051808215151515815260200191505060405180910390f35b6102b0610900565b604051808260ff1660ff16815260200191505060405180910390f35b6102d4610917565b604051808260ff1660ff16815260200191505060405180910390f35b61033c6004803603604081101561030657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061092a565b604051808215151515815260200191505060405180910390f35b6103986004803603602081101561036c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109dd565b6040518082815260200191505060405180910390f35b6103b6610a26565b005b6103c0610bae565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61040a610bbd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610454610be6565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610494578082015181840152602081019050610479565b50505050905090810190601f1680156104c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61051b600480360360408110156104e557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c88565b604051808215151515815260200191505060405180910390f35b6105816004803603604081101561054b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d55565b604051808215151515815260200191505060405180910390f35b6105a3610d73565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105e35780820151818401526020810190506105c8565b50505050905090810190601f1680156106105780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610626610e11565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561066657808201518184015260208101905061064b565b50505050905090810190601f1680156106935780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610703600480360360408110156106b757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610eaf565b6040518082815260200191505060405180910390f35b61075b6004803603602081101561072f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f36565b005b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107f55780601f106107ca576101008083540402835291602001916107f5565b820191906000526020600020905b8154815290600101906020018083116107d857829003601f168201915b5050505050905090565b600061081361080c61100b565b8484611013565b6001905092915050565b6000600354905090565b600061083484848461120a565b6108f58461084061100b565b6108f0856040518060600160405280602881526020016117c060289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006108a661100b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114c49092919063ffffffff16565b611013565b600190509392505050565b6000600460009054906101000a900460ff16905090565b600460009054906101000a900460ff1681565b60006109d361093761100b565b846109ce856002600061094861100b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461158490919063ffffffff16565b611013565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610a2e61100b565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610aef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610bb8610bbd565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c7e5780601f10610c5357610100808354040283529160200191610c7e565b820191906000526020600020905b815481529060010190602001808311610c6157829003601f168201915b5050505050905090565b6000610d4b610c9561100b565b84610d46856040518060600160405280602581526020016118316025913960026000610cbf61100b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114c49092919063ffffffff16565b611013565b6001905092915050565b6000610d69610d6261100b565b848461120a565b6001905092915050565b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e095780601f10610dde57610100808354040283529160200191610e09565b820191906000526020600020905b815481529060010190602001808311610dec57829003601f168201915b505050505081565b60068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ea75780601f10610e7c57610100808354040283529160200191610ea7565b820191906000526020600020905b815481529060010190602001808311610e8a57829003601f168201915b505050505081565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610f3e61100b565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610fff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6110088161160c565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611099576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806117766024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561111f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806118566022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611290576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806117516025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061180e6023913960400191505060405180910390fd5b611382816040518060600160405280602681526020016117e860269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114c49092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061141781600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461158490919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611571576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561153657808201518184015260208101905061151b565b50505050905090810190601f1680156115635780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015611602576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611692576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061179a6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a26469706673582212208acf3203880836486d58e824773bf945360d0b32e833c9435f5a3ca17974035964736f6c63430006040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x535 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x61E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6A1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x719 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4CF JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3AE JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x222 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x75D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x163 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x148 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x190 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH2 0x81D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D4 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x92A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B6 PUSH2 0xA26 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C0 PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40A PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x454 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x494 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x479 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4C1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x581 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A3 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5E3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5C8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x610 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x626 PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x666 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x64B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x693 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x703 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF36 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x7F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x813 PUSH2 0x80C PUSH2 0x100B JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x834 DUP5 DUP5 DUP5 PUSH2 0x120A JUMP JUMPDEST PUSH2 0x8F5 DUP5 PUSH2 0x840 PUSH2 0x100B JUMP JUMPDEST PUSH2 0x8F0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17C0 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x8A6 PUSH2 0x100B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x14C4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D3 PUSH2 0x937 PUSH2 0x100B JUMP JUMPDEST DUP5 PUSH2 0x9CE DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x948 PUSH2 0x100B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1584 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA2E PUSH2 0x100B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB8 PUSH2 0xBBD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xC7E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC53 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC7E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC61 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD4B PUSH2 0xC95 PUSH2 0x100B JUMP JUMPDEST DUP5 PUSH2 0xD46 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1831 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xCBF PUSH2 0x100B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x14C4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD69 PUSH2 0xD62 PUSH2 0x100B JUMP JUMPDEST DUP5 DUP5 PUSH2 0x120A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xE09 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDDE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE09 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDEC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xEA7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE7C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEA7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE8A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF3E PUSH2 0x100B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1008 DUP2 PUSH2 0x160C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1099 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1776 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x111F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1856 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1290 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1751 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1316 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x180E PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1382 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17E8 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x14C4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1417 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1584 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1571 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1536 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x151B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1563 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1602 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1692 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x179A PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A26469706673582212208ACF32038808 CALLDATASIZE 0x48 PUSH14 0x58E824773BF945360D0B32E833C9 NUMBER 0x5F GAS EXTCODECOPY LOG1 PUSH26 0x74035964736F6C63430006040033000000000000000000000000 ",
							"sourceMap": "128:7584:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;128:7584:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;1196:88:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1196:88:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2281:153;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2281:153:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1340:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2879:301;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2879:301:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;906:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;374:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3562:200;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3562:200:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1490:115;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1490:115:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1122:130:3;;;:::i;:::-;;759:88:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;520:73:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1051:92:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1051:92:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4234:251;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4234:251:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1799:159;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1799:159:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;401:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;401:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;427:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;427:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2012:139;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2012:139:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1397:103:3;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1397:103:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;1196:88:0;1244:13;1273:5;1266:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1196:88;:::o;2281:153::-;2358:4;2371:39;2380:12;:10;:12::i;:::-;2394:7;2403:6;2371:8;:39::i;:::-;2424:4;2417:11;;2281:153;;;;:::o;1340:96::-;1395:7;1418:12;;1411:19;;1340:96;:::o;2879:301::-;2979:4;2992:36;3002:6;3010:9;3021:6;2992:9;:36::i;:::-;3035:121;3044:6;3052:12;:10;:12::i;:::-;3066:89;3104:6;3066:89;;;;;;;;;;;;;;;;;:11;:19;3078:6;3066:19;;;;;;;;;;;;;;;:33;3086:12;:10;:12::i;:::-;3066:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;3035:8;:121::i;:::-;3170:4;3163:11;;2879:301;;;;;:::o;906:88::-;958:5;979:9;;;;;;;;;;;972:16;;906:88;:::o;374:22::-;;;;;;;;;;;;;:::o;3562:200::-;3642:4;3655:83;3664:12;:10;:12::i;:::-;3678:7;3687:50;3726:10;3687:11;:25;3699:12;:10;:12::i;:::-;3687:25;;;;;;;;;;;;;;;:34;3713:7;3687:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;3655:8;:83::i;:::-;3752:4;3745:11;;3562:200;;;;:::o;1490:115::-;1558:7;1581:9;:18;1591:7;1581:18;;;;;;;;;;;;;;;;1574:25;;1490:115;;;:::o;1122:130:3:-;724:12;:10;:12::i;:::-;714:22;;:6;;;;;;;;;;;:22;;;706:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1217:1:::1;1180:40;;1201:6;::::0;::::1;;;;;;;;;1180:40;;;;;;;;;;;;1244:1;1227:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1122:130::o:0;759:88:0:-;811:7;834;:5;:7::i;:::-;827:14;;759:88;:::o;520:73:3:-;558:7;581:6;;;;;;;;;;;574:13;;520:73;:::o;1051:92:0:-;1101:13;1130:7;1123:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1051:92;:::o;4234:251::-;4319:4;4332:129;4341:12;:10;:12::i;:::-;4355:7;4364:96;4403:15;4364:96;;;;;;;;;;;;;;;;;:11;:25;4376:12;:10;:12::i;:::-;4364:25;;;;;;;;;;;;;;;:34;4390:7;4364:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;4332:8;:129::i;:::-;4475:4;4468:11;;4234:251;;;;:::o;1799:159::-;1879:4;1892:42;1902:12;:10;:12::i;:::-;1916:9;1927:6;1892:9;:42::i;:::-;1948:4;1941:11;;1799:159;;;;:::o;401:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;427:19::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2012:139::-;2095:7;2118:11;:18;2130:5;2118:18;;;;;;;;;;;;;;;:27;2137:7;2118:27;;;;;;;;;;;;;;;;2111:34;;2012:139;;;;:::o;1397:103:3:-;724:12;:10;:12::i;:::-;714:22;;:6;;;;;;;;;;;:22;;;706:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1466:28:::1;1485:8;1466:18;:28::i;:::-;1397:103:::0;:::o;825:92:1:-;870:15;901:10;894:17;;825:92;:::o;6995:320:0:-;7102:1;7085:19;;:5;:19;;;;7077:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7179:1;7160:21;;:7;:21;;;;7152:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7259:6;7229:11;:18;7241:5;7229:18;;;;;;;;;;;;;;;:27;7248:7;7229:27;;;;;;;;;;;;;;;:36;;;;7293:7;7277:32;;7286:5;7277:32;;;7302:6;7277:32;;;;;;;;;;;;;;;;;;6995:320;;;:::o;4945:449::-;5057:1;5039:20;;:6;:20;;;;5031:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5137:1;5116:23;;:9;:23;;;;5108:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5208;5230:6;5208:71;;;;;;;;;;;;;;;;;:9;:17;5218:6;5208:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;5188:9;:17;5198:6;5188:17;;;;;;;;;;;;;;;:91;;;;5309:32;5334:6;5309:9;:20;5319:9;5309:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5286:9;:20;5296:9;5286:20;;;;;;;;;;;;;;;:55;;;;5370:9;5353:35;;5362:6;5353:35;;;5381:6;5353:35;;;;;;;;;;;;;;;;;;4945:449;;;:::o;1088:178:4:-;1174:7;1203:1;1198;:6;;1206:12;1190:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1190:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1226:9;1242:1;1238;:5;1226:17;;1259:1;1252:8;;;1088:178;;;;;:::o;261:167::-;319:7;335:9;351:1;347;:5;335:17;;372:1;367;:6;;359:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;421:1;414:8;;;261:167;;;;:::o;1598:215:3:-;1688:1;1668:22;;:8;:22;;;;1660:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1774:8;1745:38;;1766:6;;;;;;;;;;;1745:38;;;;;;;;;;;;1799:8;1790:6;;:17;;;;;;;;;;;;;;;;;;1598:215;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1263400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_decimals()": "1098",
								"_name()": "infinite",
								"_symbol()": "infinite",
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1285",
								"decimals()": "1084",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1119",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1106",
								"renounceOwnership()": "24408",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 453,
									"end": 699,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 453,
									"end": 699,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 329,
									"end": 346,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 361,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 349,
									"end": 359,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 349,
									"end": 359,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 349,
									"end": 359,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 349,
									"end": 361,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 349,
									"end": 361,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 349,
									"end": 361,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 349,
									"end": 361,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 349,
									"end": 361,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 329,
									"end": 361,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 329,
									"end": 361,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 377,
									"end": 386,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 368,
									"end": 374,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 368,
									"end": 374,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 368,
									"end": 386,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 368,
									"end": 386,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 368,
									"end": 386,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 368,
									"end": 386,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 368,
									"end": 386,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 368,
									"end": 386,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 368,
									"end": 386,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 368,
									"end": 386,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 368,
									"end": 386,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 368,
									"end": 386,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 368,
									"end": 386,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 368,
									"end": 386,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 368,
									"end": 386,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 368,
									"end": 386,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 368,
									"end": 386,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 368,
									"end": 386,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 368,
									"end": 386,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 368,
									"end": 386,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 431,
									"end": 440,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 398,
									"end": 441,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 398,
									"end": 441,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 427,
									"end": 428,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 441,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 398,
									"end": 441,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 398,
									"end": 441,
									"name": "PUSH",
									"source": 3,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 398,
									"end": 441,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 398,
									"end": 441,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 398,
									"end": 441,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 398,
									"end": 441,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 398,
									"end": 441,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 398,
									"end": 441,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 398,
									"end": 441,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 398,
									"end": 441,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 398,
									"end": 441,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 298,
									"end": 447,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 481,
									"end": 500,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 481,
									"end": 500,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 481,
									"end": 500,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 481,
									"end": 500,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 481,
									"end": 500,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 481,
									"end": 500,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 481,
									"end": 500,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 481,
									"end": 500,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 481,
									"end": 500,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 481,
									"end": 500,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 481,
									"end": 500,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 481,
									"end": 500,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 481,
									"end": 500,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 481,
									"end": 500,
									"name": "PUSH",
									"source": 0,
									"value": "41424320746F6B656E0000000000000000000000000000000000000000000000"
								},
								{
									"begin": 481,
									"end": 500,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 481,
									"end": 500,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 481,
									"end": 500,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 481,
									"end": 486,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 481,
									"end": 500,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 481,
									"end": 500,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 481,
									"end": 500,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 481,
									"end": 500,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 481,
									"end": 500,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 481,
									"end": 500,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 481,
									"end": 500,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 481,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 481,
									"end": 500,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 481,
									"end": 500,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 481,
									"end": 500,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 481,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 481,
									"end": 500,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 481,
									"end": 500,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 481,
									"end": 500,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 481,
									"end": 500,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 507,
									"end": 522,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 507,
									"end": 522,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 507,
									"end": 522,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 507,
									"end": 522,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 507,
									"end": 522,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 507,
									"end": 522,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 507,
									"end": 522,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 507,
									"end": 522,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 507,
									"end": 522,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 507,
									"end": 522,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 507,
									"end": 522,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 507,
									"end": 522,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 507,
									"end": 522,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 507,
									"end": 522,
									"name": "PUSH",
									"source": 0,
									"value": "4142430000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 507,
									"end": 522,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 507,
									"end": 522,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 507,
									"end": 522,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 507,
									"end": 514,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 507,
									"end": 522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 507,
									"end": 522,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 507,
									"end": 522,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 507,
									"end": 522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 507,
									"end": 522,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 507,
									"end": 522,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 507,
									"end": 522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 507,
									"end": 522,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 507,
									"end": 522,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 507,
									"end": 522,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 507,
									"end": 522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 507,
									"end": 522,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 507,
									"end": 522,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 507,
									"end": 522,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 507,
									"end": 522,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 507,
									"end": 522,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 541,
									"end": 543,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 529,
									"end": 538,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 529,
									"end": 538,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 529,
									"end": 543,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 529,
									"end": 543,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 529,
									"end": 543,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 529,
									"end": 543,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 529,
									"end": 543,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 529,
									"end": 543,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 529,
									"end": 543,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 529,
									"end": 543,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 529,
									"end": 543,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 529,
									"end": 543,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 529,
									"end": 543,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 529,
									"end": 543,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 529,
									"end": 543,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 529,
									"end": 543,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 529,
									"end": 543,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 529,
									"end": 543,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 529,
									"end": 543,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 529,
									"end": 543,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 565,
									"end": 592,
									"name": "PUSH",
									"source": 0,
									"value": "52B7D2DCC80CD2E4000000"
								},
								{
									"begin": 550,
									"end": 562,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 550,
									"end": 592,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 550,
									"end": 592,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 550,
									"end": 592,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 550,
									"end": 592,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 623,
									"end": 635,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 623,
									"end": 635,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 599,
									"end": 608,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 599,
									"end": 620,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 609,
									"end": 619,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 599,
									"end": 620,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 599,
									"end": 620,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 599,
									"end": 620,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 599,
									"end": 620,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 599,
									"end": 620,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 599,
									"end": 620,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 599,
									"end": 620,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 599,
									"end": 620,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 599,
									"end": 620,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 599,
									"end": 620,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 599,
									"end": 620,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 599,
									"end": 620,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 599,
									"end": 620,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 599,
									"end": 620,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 599,
									"end": 620,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 599,
									"end": 635,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 599,
									"end": 635,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 599,
									"end": 635,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 599,
									"end": 635,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 668,
									"end": 678,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 647,
									"end": 693,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 647,
									"end": 693,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 664,
									"end": 665,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 647,
									"end": 693,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 647,
									"end": 693,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 647,
									"end": 693,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 680,
									"end": 692,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 680,
									"end": 692,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 647,
									"end": 693,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 647,
									"end": 693,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 647,
									"end": 693,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 647,
									"end": 693,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 647,
									"end": 693,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 647,
									"end": 693,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 647,
									"end": 693,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 647,
									"end": 693,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 647,
									"end": 693,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 647,
									"end": 693,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 647,
									"end": 693,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 647,
									"end": 693,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 647,
									"end": 693,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 647,
									"end": 693,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 647,
									"end": 693,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 647,
									"end": 693,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 647,
									"end": 693,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 647,
									"end": 693,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 825,
									"end": 917,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 825,
									"end": 917,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 870,
									"end": 885,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 901,
									"end": 911,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 894,
									"end": 911,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 894,
									"end": 911,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 825,
									"end": 917,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 825,
									"end": 917,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 7712,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208acf3203880836486d58e824773bf945360d0b32e833c9435f5a3ca17974035964736f6c63430006040033",
									".code": [
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "B09F1266"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "D28D8852"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "32424AA3"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "28"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "28"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "31"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "31"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "36"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "36"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 906,
											"end": 994,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 906,
											"end": 994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 906,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 906,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 906,
											"end": 994,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 906,
											"end": 994,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 906,
											"end": 994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 906,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 906,
											"end": 994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 906,
											"end": 994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 906,
											"end": 994,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 906,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 906,
											"end": 994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 906,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 906,
											"end": 994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 906,
											"end": 994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 906,
											"end": 994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 906,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 906,
											"end": 994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 906,
											"end": 994,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 906,
											"end": 994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 906,
											"end": 994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 906,
											"end": 994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 906,
											"end": 994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 906,
											"end": 994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 906,
											"end": 994,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 906,
											"end": 994,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 906,
											"end": 994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 906,
											"end": 994,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 374,
											"end": 396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 374,
											"end": 396,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 374,
											"end": 396,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 396,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 374,
											"end": 396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 374,
											"end": 396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 396,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "43"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "43"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "46"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "46"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1122,
											"end": 1252,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1122,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1122,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1122,
											"end": 1252,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 1252,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1122,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 1252,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 847,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 759,
											"end": 847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 759,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 759,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 759,
											"end": 847,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 759,
											"end": 847,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 759,
											"end": 847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 759,
											"end": 847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 759,
											"end": 847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 847,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 759,
											"end": 847,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 847,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 759,
											"end": 847,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 847,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 759,
											"end": 847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 759,
											"end": 847,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 759,
											"end": 847,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 759,
											"end": 847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 759,
											"end": 847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 759,
											"end": 847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 759,
											"end": 847,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 759,
											"end": 847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 847,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 520,
											"end": 593,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 520,
											"end": 593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 520,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 520,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 520,
											"end": 593,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 520,
											"end": 593,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 520,
											"end": 593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 520,
											"end": 593,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 520,
											"end": 593,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 520,
											"end": 593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 520,
											"end": 593,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 520,
											"end": 593,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 520,
											"end": 593,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 520,
											"end": 593,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 520,
											"end": 593,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 520,
											"end": 593,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 520,
											"end": 593,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 520,
											"end": 593,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 520,
											"end": 593,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 520,
											"end": 593,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 520,
											"end": 593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 520,
											"end": 593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 520,
											"end": 593,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 520,
											"end": 593,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 520,
											"end": 593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 520,
											"end": 593,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 520,
											"end": 593,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 520,
											"end": 593,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 520,
											"end": 593,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "56"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "58"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "56"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "58"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "61"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "61"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "64"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "64"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "68"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "70"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "68"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "70"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 401,
											"end": 422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "74"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "76"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "74"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "76"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 427,
											"end": 446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "79"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "79"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "82"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "82"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1257,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1273,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1284,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2380,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2380,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2380,
											"end": 2392,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2380,
											"end": 2392,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2380,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2401,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2403,
											"end": 2409,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2371,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2371,
											"end": 2410,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2371,
											"end": 2410,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2371,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2424,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2417,
											"end": 2428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2417,
											"end": 2428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2434,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1395,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1418,
											"end": 1430,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1411,
											"end": 1430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1411,
											"end": 1430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1436,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2992,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3002,
											"end": 3008,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3019,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3027,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2992,
											"end": 3028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2992,
											"end": 3028,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2992,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3035,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3044,
											"end": 3050,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3052,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3052,
											"end": 3064,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3052,
											"end": 3064,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3052,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3104,
											"end": 3110,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "PUSH data",
											"source": 0,
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3077,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3078,
											"end": 3084,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3099,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3086,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3086,
											"end": 3098,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3086,
											"end": 3098,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3086,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3099,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3066,
											"end": 3099,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3099,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3066,
											"end": 3099,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3099,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3099,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3066,
											"end": 3099,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3099,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3099,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3066,
											"end": 3099,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3099,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3099,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3099,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3066,
											"end": 3103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3066,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3035,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3035,
											"end": 3156,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3035,
											"end": 3156,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3035,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 3174,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3163,
											"end": 3174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3163,
											"end": 3174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3180,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 906,
											"end": 994,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 906,
											"end": 994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 958,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 979,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 979,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 979,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 979,
											"end": 988,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 979,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 979,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 979,
											"end": 988,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 979,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 979,
											"end": 988,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 979,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 979,
											"end": 988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 972,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 972,
											"end": 988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 906,
											"end": 994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 906,
											"end": 994,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 374,
											"end": 396,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 374,
											"end": 396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 374,
											"end": 396,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 374,
											"end": 396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 374,
											"end": 396,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3642,
											"end": 3646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3655,
											"end": 3738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3664,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3664,
											"end": 3674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3664,
											"end": 3676,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3664,
											"end": 3676,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3664,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3678,
											"end": 3685,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3726,
											"end": 3736,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3698,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3687,
											"end": 3712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3699,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3699,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3699,
											"end": 3711,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3699,
											"end": 3711,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3699,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3712,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3687,
											"end": 3712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3712,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3687,
											"end": 3712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3712,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3687,
											"end": 3712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3712,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3687,
											"end": 3712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3687,
											"end": 3712,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3713,
											"end": 3720,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3721,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3687,
											"end": 3721,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3721,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3687,
											"end": 3721,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3721,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3687,
											"end": 3721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3721,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3687,
											"end": 3721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3687,
											"end": 3721,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3721,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3687,
											"end": 3725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3737,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3687,
											"end": 3737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3737,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3687,
											"end": 3737,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3687,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3655,
											"end": 3738,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3655,
											"end": 3738,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3655,
											"end": 3738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3752,
											"end": 3756,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3745,
											"end": 3756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3762,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1590,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1581,
											"end": 1599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1591,
											"end": 1598,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 1599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1581,
											"end": 1599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 1599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1581,
											"end": 1599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 1599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 1599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 1599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1581,
											"end": 1599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 1599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 1599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 1599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 1599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1581,
											"end": 1599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 1599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1599,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 1599,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1574,
											"end": 1599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1574,
											"end": 1599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1605,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1122,
											"end": 1252,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1122,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 724,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 724,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 724,
											"end": 736,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 724,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 714,
											"end": 736,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 714,
											"end": 736,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 714,
											"end": 720,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 714,
											"end": 720,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 714,
											"end": 720,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 714,
											"end": 720,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 714,
											"end": 720,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 714,
											"end": 720,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 714,
											"end": 720,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 714,
											"end": 720,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 714,
											"end": 720,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 714,
											"end": 720,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 714,
											"end": 720,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 714,
											"end": 736,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 714,
											"end": 736,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 714,
											"end": 736,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 706,
											"end": 773,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 706,
											"end": 773,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 706,
											"end": 773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 706,
											"end": 773,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 773,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 773,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 706,
											"end": 773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 773,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 706,
											"end": 773,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 706,
											"end": 773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1217,
											"end": 1218,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1201,
											"end": 1207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1220,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1244,
											"end": 1245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1227,
											"end": 1233,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1233,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1227,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1227,
											"end": 1246,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1246,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1246,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1246,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1227,
											"end": 1246,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1246,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1246,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1246,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1246,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1227,
											"end": 1246,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1246,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1246,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1246,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1246,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1227,
											"end": 1246,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 1252,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 759,
											"end": 847,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 759,
											"end": 847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 811,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 834,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 834,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 834,
											"end": 841,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 834,
											"end": 841,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 834,
											"end": 841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 827,
											"end": 841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 759,
											"end": 847,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 520,
											"end": 593,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 520,
											"end": 593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 558,
											"end": 565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 581,
											"end": 587,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 581,
											"end": 587,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 581,
											"end": 587,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 581,
											"end": 587,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 581,
											"end": 587,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 581,
											"end": 587,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 581,
											"end": 587,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 581,
											"end": 587,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 581,
											"end": 587,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 581,
											"end": 587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 581,
											"end": 587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 574,
											"end": 587,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 574,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 520,
											"end": 593,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 520,
											"end": 593,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1130,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1137,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1051,
											"end": 1143,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4319,
											"end": 4323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4332,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4341,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4341,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4341,
											"end": 4353,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4341,
											"end": 4353,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4341,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 4403,
											"end": 4418,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "PUSH data",
											"source": 0,
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4375,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4364,
											"end": 4389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4376,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 4376,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4376,
											"end": 4388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4376,
											"end": 4388,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 4376,
											"end": 4388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4389,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4364,
											"end": 4389,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4389,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4364,
											"end": 4389,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4364,
											"end": 4389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4389,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4364,
											"end": 4389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4364,
											"end": 4389,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4390,
											"end": 4397,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4398,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4364,
											"end": 4398,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4398,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4364,
											"end": 4398,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4398,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4398,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4364,
											"end": 4398,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4398,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4398,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4364,
											"end": 4398,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4364,
											"end": 4398,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4398,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4364,
											"end": 4402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 4364,
											"end": 4460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4332,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4332,
											"end": 4461,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4332,
											"end": 4461,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4332,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4475,
											"end": 4479,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4468,
											"end": 4479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4468,
											"end": 4479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4485,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 1883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1902,
											"end": 1914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1902,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1902,
											"end": 1914,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1902,
											"end": 1914,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1902,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1892,
											"end": 1934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1892,
											"end": 1934,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1892,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1948,
											"end": 1952,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1941,
											"end": 1952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 1952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1958,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 401,
											"end": 422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 427,
											"end": 446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 446,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2129,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2118,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2130,
											"end": 2135,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2118,
											"end": 2136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2118,
											"end": 2136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2136,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2136,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2136,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2144,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2145,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2118,
											"end": 2145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2145,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2118,
											"end": 2145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2145,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2145,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2118,
											"end": 2145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2145,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2145,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2111,
											"end": 2145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2111,
											"end": 2145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2012,
											"end": 2151,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 724,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 724,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 724,
											"end": 736,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 724,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 714,
											"end": 736,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 714,
											"end": 736,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 714,
											"end": 720,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 714,
											"end": 720,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 714,
											"end": 720,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 714,
											"end": 720,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 714,
											"end": 720,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 714,
											"end": 720,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 714,
											"end": 720,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 714,
											"end": 720,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 714,
											"end": 720,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 714,
											"end": 720,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 714,
											"end": 720,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 714,
											"end": 736,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 714,
											"end": 736,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 714,
											"end": 736,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 706,
											"end": 773,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 706,
											"end": 773,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 706,
											"end": 773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 706,
											"end": 773,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 773,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 773,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 706,
											"end": 773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 773,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 706,
											"end": 773,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 706,
											"end": 773,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 706,
											"end": 773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1466,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1485,
											"end": 1493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1466,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1466,
											"end": 1494,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1466,
											"end": 1494,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1466,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1500,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 825,
											"end": 917,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 825,
											"end": 917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 870,
											"end": 885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 901,
											"end": 911,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 894,
											"end": 911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 894,
											"end": 911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 825,
											"end": 917,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 825,
											"end": 917,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6995,
											"end": 7315,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 6995,
											"end": 7315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7102,
											"end": 7103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7085,
											"end": 7104,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7090,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7085,
											"end": 7104,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7085,
											"end": 7104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "PUSH data",
											"source": 0,
											"value": "1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4"
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 7077,
											"end": 7145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7179,
											"end": 7180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7160,
											"end": 7181,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7160,
											"end": 7181,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7167,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7181,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7160,
											"end": 7181,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7181,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7181,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "PUSH data",
											"source": 0,
											"value": "F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5"
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 7152,
											"end": 7220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7259,
											"end": 7265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7240,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7229,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7246,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7229,
											"end": 7247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7229,
											"end": 7247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7229,
											"end": 7247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7229,
											"end": 7247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7229,
											"end": 7247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7255,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7256,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7229,
											"end": 7256,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7256,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7229,
											"end": 7256,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7256,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7229,
											"end": 7256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7256,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7229,
											"end": 7256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7229,
											"end": 7256,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7265,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7229,
											"end": 7265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7293,
											"end": 7300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7309,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7277,
											"end": 7309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7291,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7309,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7277,
											"end": 7309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7309,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7302,
											"end": 7308,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7309,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7277,
											"end": 7309,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7309,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7309,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7277,
											"end": 7309,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7309,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7277,
											"end": 7309,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7309,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7309,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7315,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4945,
											"end": 5394,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4945,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5057,
											"end": 5058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5059,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5039,
											"end": 5059,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5039,
											"end": 5045,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5039,
											"end": 5059,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5039,
											"end": 5059,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5039,
											"end": 5059,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5039,
											"end": 5059,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "PUSH data",
											"source": 0,
											"value": "D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57"
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5031,
											"end": 5101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5116,
											"end": 5139,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5116,
											"end": 5139,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5116,
											"end": 5125,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5116,
											"end": 5139,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5116,
											"end": 5139,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5116,
											"end": 5139,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5116,
											"end": 5139,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "PUSH data",
											"source": 0,
											"value": "ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2"
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 5108,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5230,
											"end": 5236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "PUSH data",
											"source": 0,
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5208,
											"end": 5225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5218,
											"end": 5224,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5208,
											"end": 5225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5208,
											"end": 5225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5208,
											"end": 5225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5208,
											"end": 5225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5208,
											"end": 5225,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 5208,
											"end": 5229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5208,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5188,
											"end": 5197,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5188,
											"end": 5205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5198,
											"end": 5204,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5188,
											"end": 5205,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5188,
											"end": 5205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5188,
											"end": 5205,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5188,
											"end": 5205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5188,
											"end": 5205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5188,
											"end": 5205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5188,
											"end": 5205,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5188,
											"end": 5205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5188,
											"end": 5205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5188,
											"end": 5205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5188,
											"end": 5205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5188,
											"end": 5205,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5188,
											"end": 5205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5188,
											"end": 5205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5188,
											"end": 5205,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5188,
											"end": 5279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5188,
											"end": 5279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5188,
											"end": 5279,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5188,
											"end": 5279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5334,
											"end": 5340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5318,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5319,
											"end": 5328,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5309,
											"end": 5333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5341,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5341,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5309,
											"end": 5341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5309,
											"end": 5341,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5309,
											"end": 5341,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5309,
											"end": 5341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5295,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5305,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5341,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5388,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5353,
											"end": 5388,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5362,
											"end": 5368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5388,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5353,
											"end": 5388,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5388,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5381,
											"end": 5387,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5353,
											"end": 5388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5388,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5353,
											"end": 5388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5353,
											"end": 5388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5388,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5388,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 4945,
											"end": 5394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4945,
											"end": 5394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4945,
											"end": 5394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4945,
											"end": 5394,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1088,
											"end": 1266,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1088,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 1181,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1204,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1199,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1204,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1204,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1206,
											"end": 1218,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "153"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "155"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "153"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "155"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1243,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1239,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1243,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1226,
											"end": 1243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1226,
											"end": 1243,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1260,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1252,
											"end": 1260,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1252,
											"end": 1260,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1252,
											"end": 1260,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1088,
											"end": 1266,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1088,
											"end": 1266,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1088,
											"end": 1266,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1088,
											"end": 1266,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1088,
											"end": 1266,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1088,
											"end": 1266,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 261,
											"end": 428,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 261,
											"end": 428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 319,
											"end": 326,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 344,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 351,
											"end": 352,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 347,
											"end": 348,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 347,
											"end": 352,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 335,
											"end": 352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 335,
											"end": 352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 372,
											"end": 373,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 367,
											"end": 368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 367,
											"end": 373,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 367,
											"end": 373,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 359,
											"end": 405,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 359,
											"end": 405,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 359,
											"end": 405,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 359,
											"end": 405,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 359,
											"end": 405,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "PUSH",
											"source": 4,
											"value": "1B"
										},
										{
											"begin": 359,
											"end": 405,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 359,
											"end": 405,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "PUSH",
											"source": 4,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 359,
											"end": 405,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 359,
											"end": 405,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 359,
											"end": 405,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 359,
											"end": 405,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 359,
											"end": 405,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 421,
											"end": 422,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 414,
											"end": 422,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 414,
											"end": 422,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 414,
											"end": 422,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 261,
											"end": 428,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 261,
											"end": 428,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 261,
											"end": 428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 261,
											"end": 428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 261,
											"end": 428,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1690,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1668,
											"end": 1690,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1668,
											"end": 1676,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1668,
											"end": 1690,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1668,
											"end": 1690,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1668,
											"end": 1690,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1668,
											"end": 1690,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "PUSH data",
											"source": 3,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1660,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1782,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1783,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1783,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1783,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1783,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1783,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1745,
											"end": 1783,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1783,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1783,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1783,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1783,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1783,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1783,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1783,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1783,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1807,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1790,
											"end": 1807,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1807,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1807,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1807,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1807,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1790,
											"end": 1807,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1807,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1807,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1807,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1807,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1807,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1790,
											"end": 1807,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1807,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1807,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1807,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1807,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1807,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1813,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									],
									".data": {
										"1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"_decimals()": "32424aa3",
							"_name()": "d28d8852",
							"_symbol()": "b09f1266",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}.    * Requirements:    * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}.    * Requirements:    * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}.    * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};    * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"BEP/ABCToken.sol\":\"ABCToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEP/ABCToken.sol\":{\"keccak256\":\"0x468c978c4a9036cea541dc99877e3cf2ca02d78e7803d319bb4b2f347520ef25\",\"urls\":[\"bzz-raw://cd71a30dd3e126872f67370a68da8dd266eaed2259533749cddfdc06518071ca\",\"dweb:/ipfs/QmNq7HrTVCSDfHKUJVMJ3NTVCXP6tSZiotD8sYLo7vh4EE\"]},\"BEP/Context.sol\":{\"keccak256\":\"0xf02382296a3e9d5ed1f3900de36426b3939797211953defe8c36c574b63268d3\",\"urls\":[\"bzz-raw://d5a750b0db055f8793a69de83da65e2a15ab39070a0c6e7a13636cd3896e8148\",\"dweb:/ipfs/QmWmGqR4v3UNGBQs64DbnQk7mHdafQY81KhNsfdE1ygJif\"]},\"BEP/IBEP20.sol\":{\"keccak256\":\"0xbb78f7f9928fe846eba0c4f2b3d4d06ff9afcbf02193e048a60b214f7e063db5\",\"urls\":[\"bzz-raw://0351111f4df1c2ce1783d295a8e765432b6a113c5844477b7bda5cb86dd35da4\",\"dweb:/ipfs/Qme57yEF8md6zoabdEsJWwRBwthoB12GZF9djxxXLtHRPS\"]},\"BEP/Ownable.sol\":{\"keccak256\":\"0x5a38dfe57cc3a913361cfeacc51c58d5b8fc1db0de43d649a6786bb6b3b5f87c\",\"urls\":[\"bzz-raw://c28d73da8ef92b32018c4ae72819e7c49f6fa8376cd8e4bfdea144b4b65af4ac\",\"dweb:/ipfs/QmeKCa2vJDi9CAhUTvrWgkydtExwgbH3Y5GBo5ZMKvcqJq\"]},\"BEP/SafeMath.sol\":{\"keccak256\":\"0x1497bb78debd04669199f00327da11b6f1631834d3c5c85ffde69cecd03e28fa\",\"urls\":[\"bzz-raw://9fd74c0f33728d45dfd324ffffa6c5ce017ae0f122cab40c97ccfe1e5b781acb\",\"dweb:/ipfs/QmYscDDdRrELVbxwWQVTuXnVFes8G4tq9YWCsf3aL46dXB\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"BEP/Context.sol": {
				"Context": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned).  * This contract is only required for intermediate, library-like contracts.",
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned).  * This contract is only required for intermediate, library-like contracts.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"BEP/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEP/Context.sol\":{\"keccak256\":\"0xf02382296a3e9d5ed1f3900de36426b3939797211953defe8c36c574b63268d3\",\"urls\":[\"bzz-raw://d5a750b0db055f8793a69de83da65e2a15ab39070a0c6e7a13636cd3896e8148\",\"dweb:/ipfs/QmWmGqR4v3UNGBQs64DbnQk7mHdafQY81KhNsfdE1ygJif\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"BEP/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.    * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.    * Returns a boolean value indicating whether the operation succeeded.    * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729    * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.    * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.    * Returns a boolean value indicating whether the operation succeeded.    * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729    * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"BEP/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEP/IBEP20.sol\":{\"keccak256\":\"0xbb78f7f9928fe846eba0c4f2b3d4d06ff9afcbf02193e048a60b214f7e063db5\",\"urls\":[\"bzz-raw://0351111f4df1c2ce1783d295a8e765432b6a113c5844477b7bda5cb86dd35da4\",\"dweb:/ipfs/Qme57yEF8md6zoabdEsJWwRBwthoB12GZF9djxxXLtHRPS\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"BEP/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"BEP/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEP/Context.sol\":{\"keccak256\":\"0xf02382296a3e9d5ed1f3900de36426b3939797211953defe8c36c574b63268d3\",\"urls\":[\"bzz-raw://d5a750b0db055f8793a69de83da65e2a15ab39070a0c6e7a13636cd3896e8148\",\"dweb:/ipfs/QmWmGqR4v3UNGBQs64DbnQk7mHdafQY81KhNsfdE1ygJif\"]},\"BEP/Ownable.sol\":{\"keccak256\":\"0x5a38dfe57cc3a913361cfeacc51c58d5b8fc1db0de43d649a6786bb6b3b5f87c\",\"urls\":[\"bzz-raw://c28d73da8ef92b32018c4ae72819e7c49f6fa8376cd8e4bfdea144b4b65af4ac\",\"dweb:/ipfs/QmeKCa2vJDi9CAhUTvrWgkydtExwgbH3Y5GBo5ZMKvcqJq\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"BEP/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"BEP/SafeMath.sol\":26:4454  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"BEP/SafeMath.sol\":26:4454  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n\n    auxdata: 0xa2646970667358221220875979a760d0930c73602df05e3f3c23a03764768c9c5dfc7d186b57992dec5f64736f6c63430006040033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220875979a760d0930c73602df05e3f3c23a03764768c9c5dfc7d186b57992dec5f64736f6c63430006040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 MSIZE PUSH26 0xA760D0930C73602DF05E3F3C23A03764768C9C5DFC7D186B5799 0x2D 0xEC 0x5F PUSH5 0x736F6C6343 STOP MOD DIV STOP CALLER ",
							"sourceMap": "26:4428:4:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220875979a760d0930c73602df05e3f3c23a03764768c9c5dfc7d186b57992dec5f64736f6c63430006040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 MSIZE PUSH26 0xA760D0930C73602DF05E3F3C23A03764768C9C5DFC7D186B5799 0x2D 0xEC 0x5F PUSH5 0x736F6C6343 STOP MOD DIV STOP CALLER ",
							"sourceMap": "26:4428:4:-:0;;;;;;12:1:-1;9;2:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 4454,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 4454,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"source": -1,
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE",
									"source": -1
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS",
									"source": -1
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8",
									"source": -1
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN",
									"source": -1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220875979a760d0930c73602df05e3f3c23a03764768c9c5dfc7d186b57992dec5f64736f6c63430006040033",
									".code": [
										{
											"begin": 26,
											"end": 4454,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 26,
											"end": 4454,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 26,
											"end": 4454,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 26,
											"end": 4454,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 4454,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 4454,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"BEP/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEP/SafeMath.sol\":{\"keccak256\":\"0x1497bb78debd04669199f00327da11b6f1631834d3c5c85ffde69cecd03e28fa\",\"urls\":[\"bzz-raw://9fd74c0f33728d45dfd324ffffa6c5ce017ae0f122cab40c97ccfe1e5b781acb\",\"dweb:/ipfs/QmYscDDdRrELVbxwWQVTuXnVFes8G4tq9YWCsf3aL46dXB\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"BEP/ABCToken.sol": {
				"ast": {
					"absolutePath": "BEP/ABCToken.sol",
					"exportedSymbols": {
						"ABCToken": [
							518
						]
					},
					"id": 519,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"absolutePath": "BEP/IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 519,
							"sourceUnit": 648,
							"src": "26:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BEP/Context.sol",
							"file": "./Context.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 519,
							"sourceUnit": 547,
							"src": "50:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BEP/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 519,
							"sourceUnit": 962,
							"src": "75:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BEP/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 5,
							"nodeType": "ImportDirective",
							"scope": 519,
							"sourceUnit": 767,
							"src": "101:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 6,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 546,
										"src": "149:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$546",
											"typeString": "contract Context"
										}
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "149:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 8,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 647,
										"src": "158:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$647",
											"typeString": "contract IBEP20"
										}
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "158:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 10,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 766,
										"src": "166:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$766",
											"typeString": "contract Ownable"
										}
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "166:7:0"
								}
							],
							"contractDependencies": [
								546,
								647,
								766
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 518,
							"linearizedBaseContracts": [
								518,
								766,
								647,
								546
							],
							"name": "ABCToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 14,
									"libraryName": {
										"contractScope": null,
										"id": 12,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 961,
										"src": "185:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$961",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "179:27:0",
									"typeName": {
										"id": 13,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "198:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 18,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 518,
									"src": "212:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 17,
										"keyType": {
											"id": 15,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "221:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "212:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 16,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "232:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 24,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 518,
									"src": "265:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 23,
										"keyType": {
											"id": 19,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "274:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "265:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 22,
											"keyType": {
												"id": 20,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "294:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "285:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 21,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "305:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 26,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 518,
									"src": "341:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 25,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "341:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "32424aa3",
									"id": 28,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 518,
									"src": "374:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 27,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "374:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b09f1266",
									"id": 30,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 518,
									"src": "401:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 29,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "401:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d28d8852",
									"id": 32,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 518,
									"src": "427:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 31,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "427:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "474:225:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 35,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "481:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "41424320746f6b656e",
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "489:11:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_ad5e1b9d96bb33dbec49dfe36f9a468c86ee086c9947067d211450a48bdc22db",
															"typeString": "literal_string \"ABC token\""
														},
														"value": "ABC token"
													},
													"src": "481:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "481:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 39,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "507:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "414243",
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "517:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_e1629b9dda060bb30c7908346f6af189c16773fa148d3366701fbaa35d54f3c8",
															"typeString": "literal_string \"ABC\""
														},
														"value": "ABC"
													},
													"src": "507:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "507:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 43,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "529:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "541:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "529:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "529:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 47,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "550:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "313030303030303030303030303030303030303030303030303030",
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "565:27:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
															"typeString": "int_const 100000000000000000000000000"
														},
														"value": "100000000000000000000000000"
													},
													"src": "550:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "550:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 51,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "599:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 54,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 52,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "609:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "609:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "599:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 55,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "623:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "599:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "599:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "664:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "656:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 59,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "656:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "656:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 63,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "668:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "668:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 65,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "680:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 58,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "647:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "647:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "EmitStatement",
												"src": "642:51:0"
											}
										]
									},
									"documentation": null,
									"id": 69,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "464:2:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "474:0:0"
									},
									"scope": 518,
									"src": "453:246:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										578
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "820:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 76,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "834:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "834:7:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 75,
												"id": 78,
												"nodeType": "Return",
												"src": "827:14:0"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "705:50:0",
										"text": "@dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 72,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "788:8:0"
									},
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "776:2:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 80,
												"src": "811:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "810:9:0"
									},
									"scope": 518,
									"src": "759:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										560
									],
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "965:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 87,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "979:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 86,
												"id": 88,
												"nodeType": "Return",
												"src": "972:16:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "853:49:0",
										"text": "@dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 83,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "935:8:0"
									},
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "958:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 84,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "958:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "957:7:0"
									},
									"scope": 518,
									"src": "906:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										566
									],
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "1116:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 97,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "1130:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 96,
												"id": 98,
												"nodeType": "Return",
												"src": "1123:14:0"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "1000:47:0",
										"text": "@dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 93,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1078:8:0"
									},
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1066:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "1101:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 94,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1101:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1100:15:0"
									},
									"scope": 518,
									"src": "1051:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										572
									],
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "1259:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 107,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 32,
													"src": "1273:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 106,
												"id": 108,
												"nodeType": "Return",
												"src": "1266:12:0"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "1149:43:0",
										"text": "@dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 103,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1221:8:0"
									},
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1209:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 110,
												"src": "1244:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 104,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1244:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1243:15:0"
									},
									"scope": 518,
									"src": "1196:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										554
									],
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "1404:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 117,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 26,
													"src": "1418:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 116,
												"id": 118,
												"nodeType": "Return",
												"src": "1411:19:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "1290:46:0",
										"text": "@dev See {BEP20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 113,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1372:8:0"
									},
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 120,
												"src": "1395:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1394:9:0"
									},
									"scope": 518,
									"src": "1340:96:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										586
									],
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "1567:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 129,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1581:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 131,
													"indexExpression": {
														"argumentTypes": null,
														"id": 130,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1591:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1581:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 128,
												"id": 132,
												"nodeType": "Return",
												"src": "1574:25:0"
											}
										]
									},
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "1442:44:0",
										"text": "@dev See {BEP20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 125,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1535:8:0"
									},
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 134,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1508:17:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 134,
												"src": "1558:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1557:9:0"
									},
									"scope": 518,
									"src": "1490:115:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										596
									],
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1885:73:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 146,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "1902:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1902:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 148,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "1916:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 149,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "1927:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 145,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1892:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1892:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "1892:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1948:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 144,
												"id": 153,
												"nodeType": "Return",
												"src": "1941:11:0"
											}
										]
									},
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "1611:184:0",
										"text": "@dev See {BEP20-transfer}.\n\n   * Requirements:\n\n   * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 141,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1861:8:0"
									},
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 155,
												"src": "1817:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1817:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 155,
												"src": "1836:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1836:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1816:35:0"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 155,
												"src": "1879:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1879:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1878:6:0"
									},
									"scope": 518,
									"src": "1799:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										606
									],
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "2104:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 166,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "2118:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 168,
														"indexExpression": {
															"argumentTypes": null,
															"id": 167,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "2130:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2118:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 170,
													"indexExpression": {
														"argumentTypes": null,
														"id": 169,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "2137:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2118:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 165,
												"id": 171,
												"nodeType": "Return",
												"src": "2111:34:0"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "1964:44:0",
										"text": "@dev See {BEP20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 162,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2072:8:0"
									},
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 173,
												"src": "2031:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 173,
												"src": "2046:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2030:32:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 173,
												"src": "2095:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2095:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2094:9:0"
									},
									"scope": 518,
									"src": "2012:139:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										616
									],
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "2364:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 185,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "2380:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2380:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 187,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "2394:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 188,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "2403:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 184,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "2371:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2371:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2371:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2424:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 183,
												"id": 192,
												"nodeType": "Return",
												"src": "2417:11:0"
											}
										]
									},
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "2157:120:0",
										"text": "@dev See {BEP20-approve}.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 180,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2340:8:0"
									},
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 194,
												"src": "2298:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 194,
												"src": "2315:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2315:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2297:33:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 194,
												"src": "2358:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 181,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2358:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2357:6:0"
									},
									"scope": 518,
									"src": "2281:153:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										628
									],
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "2985:195:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 208,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "3002:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 209,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "3010:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 210,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "3021:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 207,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "2992:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2992:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "2992:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 214,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "3044:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 215,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "3052:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3052:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 224,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "3104:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3112:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 217,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "3066:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 219,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 218,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 197,
																			"src": "3078:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3066:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 222,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 220,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 534,
																			"src": "3086:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3086:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3066:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 839,
																"src": "3066:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3066:89:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 213,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "3035:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3035:121:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "3035:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3170:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 206,
												"id": 230,
												"nodeType": "Return",
												"src": "3163:11:0"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "2440:435:0",
										"text": "@dev See {BEP20-transferFrom}.\n\n   * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {BEP20};\n\n   * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`."
									},
									"functionSelector": "23b872dd",
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 203,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2961:8:0"
									},
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 232,
												"src": "2901:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 232,
												"src": "2917:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2917:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 232,
												"src": "2936:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2936:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2900:51:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 232,
												"src": "2979:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2979:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2978:6:0"
									},
									"scope": 518,
									"src": "2879:301:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "3648:114:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 243,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "3664:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3664:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 245,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "3678:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 253,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "3726:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 246,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "3687:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 249,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 247,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "3699:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3699:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3687:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 251,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 250,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "3713:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3687:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 794,
																"src": "3687:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3687:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 242,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "3655:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3655:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "3655:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3752:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 241,
												"id": 258,
												"nodeType": "Return",
												"src": "3745:11:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "3186:372:0",
										"text": "@dev Atomically increases the allowance granted to `spender` by the caller.\n\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n\n   * Emits an {Approval} event indicating the updated allowance.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 260,
												"src": "3589:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3589:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 260,
												"src": "3606:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3588:37:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 260,
												"src": "3642:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 239,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3642:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3641:6:0"
									},
									"scope": 518,
									"src": "3562:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "4325:160:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 271,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "4341:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4341:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 273,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "4355:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 281,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "4403:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4420:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 274,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "4364:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 277,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 275,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "4376:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4376:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4364:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 279,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 278,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 263,
																		"src": "4390:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4364:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 839,
																"src": "4364:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4364:96:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 270,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "4332:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4332:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "4332:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4475:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 269,
												"id": 287,
												"nodeType": "Return",
												"src": "4468:11:0"
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "3768:462:0",
										"text": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n\n   * Emits an {Approval} event indicating the updated allowance.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 289,
												"src": "4261:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 289,
												"src": "4278:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4278:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4260:42:0"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 289,
												"src": "4319:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 267,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4319:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4318:6:0"
									},
									"scope": 518,
									"src": "4234:251:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "5024:370:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 300,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 292,
																"src": "5039:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5057:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5049:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 301,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5049:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5049:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5039:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5061:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5031:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5031:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "5031:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 310,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "5116:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5137:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5129:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 311,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5129:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5129:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5116:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5141:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5108:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5108:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "5108:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 319,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "5188:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 321,
														"indexExpression": {
															"argumentTypes": null,
															"id": 320,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "5198:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5188:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 326,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "5230:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5238:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 322,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "5208:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 324,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 323,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "5218:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5208:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 839,
															"src": "5208:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5208:71:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5188:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5188:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 331,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "5286:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 333,
														"indexExpression": {
															"argumentTypes": null,
															"id": 332,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "5296:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5286:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 338,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "5334:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 334,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "5309:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 336,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 335,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "5319:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5309:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 794,
															"src": "5309:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5309:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5286:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "5286:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 343,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "5362:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 344,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "5370:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 345,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "5381:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 342,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "5353:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5353:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "5348:40:0"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "4491:450:0",
										"text": "@dev Moves tokens `amount` from `sender` to `recipient`.\n\n   * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n\n   * Emits a {Transfer} event.\n\n   * Requirements:\n\n   * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`."
									},
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 349,
												"src": "4964:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4964:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 349,
												"src": "4980:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4980:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 349,
												"src": "4999:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4963:51:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5024:0:0"
									},
									"scope": 518,
									"src": "4945:449:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "5712:233:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 358,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "5727:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5746:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5738:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 359,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5738:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5738:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5727:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5750:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 357,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5719:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5719:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "5719:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 367,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "5793:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 370,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "5825:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 368,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5808:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 794,
															"src": "5808:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5808:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5793:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "5793:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 374,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "5839:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 376,
														"indexExpression": {
															"argumentTypes": null,
															"id": 375,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "5849:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5839:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 381,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "5883:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 377,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "5860:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 379,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 378,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "5870:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5860:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 794,
															"src": "5860:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5860:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5839:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "5839:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5919:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5911:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 386,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5911:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5911:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 390,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "5923:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 391,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "5932:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 385,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "5902:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5902:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 393,
												"nodeType": "EmitStatement",
												"src": "5897:42:0"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "5400:251:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n\n   * Emits a {Transfer} event with `from` set to the zero address.\n\n   * Requirements\n\n   * - `to` cannot be the zero address."
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 395,
												"src": "5670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5670:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 395,
												"src": "5687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5669:33:0"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5712:0:0"
									},
									"scope": 518,
									"src": "5655:290:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "6310:273:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 404,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "6325:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6344:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6336:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 405,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6336:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6325:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6348:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 403,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6317:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "6317:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 413,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "6393:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 415,
														"indexExpression": {
															"argumentTypes": null,
															"id": 414,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "6403:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6393:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 420,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "6437:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6445:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 416,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "6414:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 418,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 417,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "6424:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6414:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 839,
															"src": "6414:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6414:68:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6393:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "6393:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 425,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "6489:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 428,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "6521:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 426,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "6504:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 811,
															"src": "6504:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6504:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6489:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "6489:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 433,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "6549:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6566:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6558:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 434,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6558:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6558:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 438,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "6570:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 432,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "6540:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6540:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 440,
												"nodeType": "EmitStatement",
												"src": "6535:42:0"
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "5951:298:0",
										"text": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n\n   * Emits a {Transfer} event with `to` set to the zero address.\n\n   * Requirements\n\n   * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 442,
												"src": "6268:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6268:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 442,
												"src": "6285:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6285:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6267:33:0"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6310:0:0"
									},
									"scope": 518,
									"src": "6253:330:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "7070:245:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 453,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "7085:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7102:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7094:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 454,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7094:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7094:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7085:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7106:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 452,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7077:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7077:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 461,
												"nodeType": "ExpressionStatement",
												"src": "7077:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 463,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "7160:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7179:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7171:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 464,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7171:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7171:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7160:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7183:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 462,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7152:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7152:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "7152:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 472,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "7229:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 475,
															"indexExpression": {
																"argumentTypes": null,
																"id": 473,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "7241:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7229:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 476,
														"indexExpression": {
															"argumentTypes": null,
															"id": 474,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "7248:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7229:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 477,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "7259:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7229:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "7229:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 481,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "7286:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 482,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "7293:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 483,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "7302:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 480,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "7277:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7277:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "EmitStatement",
												"src": "7272:37:0"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "6589:402:0",
										"text": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n\n   * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n\n   * Emits an {Approval} event.\n\n   * Requirements:\n\n   * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address."
									},
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 487,
												"src": "7013:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7013:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 487,
												"src": "7028:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7028:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 487,
												"src": "7045:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7045:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7012:48:0"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7070:0:0"
									},
									"scope": 518,
									"src": "6995:320:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "7548:161:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 496,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "7561:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 497,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "7570:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 495,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "7555:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7555:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "7555:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 501,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "7593:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 502,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "7602:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7602:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 511,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "7655:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7663:38:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 504,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "7616:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 506,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 505,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 490,
																			"src": "7628:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7616:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 509,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 507,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 534,
																			"src": "7637:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7637:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7616:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 839,
																"src": "7616:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7616:86:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 500,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "7584:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7584:119:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "7584:119:0"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "7321:162:0",
										"text": "@dev Destroys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n\n   * See {_burn} and {_approve}."
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 517,
												"src": "7506:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7506:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 517,
												"src": "7523:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7505:33:0"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7548:0:0"
									},
									"scope": 518,
									"src": "7487:222:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 519,
							"src": "128:7584:0"
						}
					],
					"src": "0:7712:0"
				},
				"id": 0
			},
			"BEP/Context.sol": {
				"ast": {
					"absolutePath": "BEP/Context.sol",
					"exportedSymbols": {
						"Context": [
							546
						]
					},
					"id": 547,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 520,
							"literals": [
								"solidity",
								"0.6",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "87:22:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 521,
								"nodeType": "StructuredDocumentation",
								"src": "111:505:1",
								"text": "@dev Provides information about the current execution context, including the\nsender of the transaction and its data. While these are generally available\nvia msg.sender and msg.data, they should not be accessed in such a direct\nmanner, since when dealing with meta-transactions the account sending and\npaying for execution may not be the actual sender (as far as an application\nis concerned).\n\n * This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 546,
							"linearizedBaseContracts": [
								546
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "816:3:1",
										"statements": []
									},
									"documentation": null,
									"id": 525,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "804:2:1"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "816:0:1"
									},
									"scope": 546,
									"src": "792:27:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "887:30:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 530,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "901:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "901:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 529,
												"id": 532,
												"nodeType": "Return",
												"src": "894:17:1"
											}
										]
									},
									"documentation": null,
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "844:2:1"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 534,
												"src": "870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "870:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "869:17:1"
									},
									"scope": 546,
									"src": "825:92:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "980:158:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 539,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "987:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$546",
														"typeString": "contract Context"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "987:4:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 541,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "1124:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1124:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 538,
												"id": 543,
												"nodeType": "Return",
												"src": "1117:15:1"
											}
										]
									},
									"documentation": null,
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "940:2:1"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 545,
												"src": "966:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 536,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "966:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "965:14:1"
									},
									"scope": 546,
									"src": "923:215:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 547,
							"src": "618:523:1"
						}
					],
					"src": "87:1054:1"
				},
				"id": 1
			},
			"BEP/IBEP20.sol": {
				"ast": {
					"absolutePath": "BEP/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							647
						]
					},
					"id": 648,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 548,
							"literals": [
								"solidity",
								"0.6",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 647,
							"linearizedBaseContracts": [
								647
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "48:64:2",
										"text": "@dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 554,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "136:2:2"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 554,
												"src": "162:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "162:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "161:9:2"
									},
									"scope": 647,
									"src": "116:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "177:49:2",
										"text": "@dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "247:2:2"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 560,
												"src": "273:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 557,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "273:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "272:7:2"
									},
									"scope": 647,
									"src": "230:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "286:47:2",
										"text": "@dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 566,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "352:2:2"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 566,
												"src": "378:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 563,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "378:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "377:15:2"
									},
									"scope": 647,
									"src": "337:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "399:43:2",
										"text": "@dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 572,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "459:2:2"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 572,
												"src": "485:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 569,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "485:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "484:15:2"
									},
									"scope": 647,
									"src": "446:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "506:50:2",
										"text": "@dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 578,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "577:2:2"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 578,
												"src": "603:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "602:9:2"
									},
									"scope": 647,
									"src": "560:52:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "618:70:2",
										"text": "@dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 586,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 586,
												"src": "711:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "710:17:2"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 586,
												"src": "751:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "750:9:2"
									},
									"scope": 647,
									"src": "692:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 587,
										"nodeType": "StructuredDocumentation",
										"src": "766:203:2",
										"text": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 596,
												"src": "991:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 596,
												"src": "1010:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "990:35:2"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 596,
												"src": "1044:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 593,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1044:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1043:6:2"
									},
									"scope": 647,
									"src": "973:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "1056:258:2",
										"text": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n\n   * This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 606,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 606,
												"src": "1337:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1337:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 606,
												"src": "1353:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1353:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1336:33:2"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 606,
												"src": "1393:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1393:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1392:9:2"
									},
									"scope": 647,
									"src": "1318:84:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "1408:629:2",
										"text": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n\n   * Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 616,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 616,
												"src": "2058:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2058:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 616,
												"src": "2075:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2075:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2057:33:2"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 616,
												"src": "2109:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 613,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2109:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2108:6:2"
									},
									"scope": 647,
									"src": "2041:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "2121:288:2",
										"text": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 628,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 628,
												"src": "2435:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2435:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 628,
												"src": "2451:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 628,
												"src": "2470:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2434:51:2"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 628,
												"src": "2504:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 625,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2504:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2503:6:2"
									},
									"scope": 647,
									"src": "2413:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "2516:153:2",
										"text": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n\n   * Note that `value` may be zero."
									},
									"id": 637,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 637,
												"src": "2688:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 637,
												"src": "2710:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 637,
												"src": "2730:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2687:57:2"
									},
									"src": "2673:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "2751:145:2",
										"text": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance."
									},
									"id": 646,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 646,
												"src": "2915:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2915:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 646,
												"src": "2938:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2938:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 646,
												"src": "2963:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2963:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2914:63:2"
									},
									"src": "2900:78:2"
								}
							],
							"scope": 648,
							"src": "26:2955:2"
						}
					],
					"src": "0:2983:2"
				},
				"id": 2
			},
			"BEP/Ownable.sol": {
				"ast": {
					"absolutePath": "BEP/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							766
						]
					},
					"id": 767,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 649,
							"literals": [
								"solidity",
								"0.6",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:3"
						},
						{
							"absolutePath": "BEP/Context.sol",
							"file": "./Context.sol",
							"id": 650,
							"nodeType": "ImportDirective",
							"scope": 767,
							"sourceUnit": 547,
							"src": "26:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 651,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 546,
										"src": "73:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$546",
											"typeString": "contract Context"
										}
									},
									"id": 652,
									"nodeType": "InheritanceSpecifier",
									"src": "73:7:3"
								}
							],
							"contractDependencies": [
								546
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 766,
							"linearizedBaseContracts": [
								766,
								546
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 654,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 766,
									"src": "86:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 653,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "86:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 660,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 660,
												"src": "142:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "142:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 660,
												"src": "173:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "173:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "141:57:3"
									},
									"src": "115:84:3"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "322:125:3",
										"statements": [
											{
												"assignments": [
													665
												],
												"declarations": [
													{
														"constant": false,
														"id": 665,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 681,
														"src": "329:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 664,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "329:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 668,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 666,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "349:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "349:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "329:32:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 669,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "368:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 670,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "377:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "368:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "368:18:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "427:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "419:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 674,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "419:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "419:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 678,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "431:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 673,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "398:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "398:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 680,
												"nodeType": "EmitStatement",
												"src": "393:48:3"
											}
										]
									},
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "205:89:3",
										"text": "@dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 682,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "310:2:3"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "322:0:3"
									},
									"scope": 766,
									"src": "298:149:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "567:26:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 688,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 654,
													"src": "581:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 687,
												"id": 689,
												"nodeType": "Return",
												"src": "574:13:3"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "453:63:3",
										"text": "@dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "534:2:3"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 691,
												"src": "558:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "558:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "557:9:3"
									},
									"scope": 766,
									"src": "520:73:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "699:88:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 695,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 654,
																"src": "714:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 696,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "724:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "724:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "714:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "738:34:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 694,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "706:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "706:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "706:67:3"
											},
											{
												"id": 702,
												"nodeType": "PlaceholderStatement",
												"src": "780:1:3"
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "599:75:3",
										"text": "@dev Throws if called by any account other than the owner."
									},
									"id": 704,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "696:2:3"
									},
									"src": "678:109:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "1168:84:3",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 711,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "1201:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1217:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1209:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 712,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1209:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1209:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 710,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "1180:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1180:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 717,
												"nodeType": "EmitStatement",
												"src": "1175:45:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 718,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "1227:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1244:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1236:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 719,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1236:7:3",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1236:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1227:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "1227:19:3"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "793:325:3",
										"text": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n\n   * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 708,
											"modifierName": {
												"argumentTypes": null,
												"id": 707,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 704,
												"src": "1158:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1158:9:3"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1148:2:3"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1168:0:3"
									},
									"scope": 766,
									"src": "1122:130:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "1459:41:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 735,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "1485:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 734,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "1466:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1466:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "1466:28:3"
											}
										]
									},
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "1258:135:3",
										"text": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 732,
											"modifierName": {
												"argumentTypes": null,
												"id": 731,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 704,
												"src": "1449:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1449:9:3"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 739,
												"src": "1424:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:18:3"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1459:0:3"
									},
									"scope": 766,
									"src": "1397:103:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "1653:160:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 746,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "1668:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1688:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1680:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 747,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1680:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 750,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1680:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1668:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1692:40:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 745,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1660:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1660:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "1660:73:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 756,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "1766:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 757,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "1774:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 755,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "1745:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1745:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 759,
												"nodeType": "EmitStatement",
												"src": "1740:43:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 760,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "1790:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 761,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "1799:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1790:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "1790:17:3"
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "1506:88:3",
										"text": "@dev Transfers ownership of the contract to a new account (`newOwner`)."
									},
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 765,
												"src": "1626:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1626:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1625:18:3"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1653:0:3"
									},
									"scope": 766,
									"src": "1598:215:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 767,
							"src": "53:1763:3"
						}
					],
					"src": "0:1816:3"
				},
				"id": 3
			},
			"BEP/SafeMath.sol": {
				"ast": {
					"absolutePath": "BEP/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							961
						]
					},
					"id": 962,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 768,
							"literals": [
								"solidity",
								"0.6",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 961,
							"linearizedBaseContracts": [
								961
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "328:100:4",
										"statements": [
											{
												"assignments": [
													779
												],
												"declarations": [
													{
														"constant": false,
														"id": 779,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 793,
														"src": "335:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 778,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "335:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 783,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 780,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "347:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 781,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "351:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "347:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "335:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 785,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "367:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 786,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 771,
																"src": "372:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "367:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "375:29:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 784,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "359:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "359:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "359:46:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 791,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 779,
													"src": "421:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 777,
												"id": 792,
												"nodeType": "Return",
												"src": "414:8:4"
											}
										]
									},
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "48:209:4",
										"text": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n\n   * Counterpart to Solidity's `+` operator.\n\n   * Requirements:\n- Addition cannot overflow."
									},
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 794,
												"src": "274:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "274:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 794,
												"src": "285:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "285:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "273:22:4"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 794,
												"src": "319:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "318:9:4"
									},
									"scope": 961,
									"src": "261:167:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "750:63:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 805,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "768:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 806,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "771:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "774:32:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 804,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															811,
															839
														],
														"referencedDeclaration": 839,
														"src": "764:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "764:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 803,
												"id": 809,
												"nodeType": "Return",
												"src": "757:50:4"
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "434:245:4",
										"text": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n\n   * Counterpart to Solidity's `-` operator.\n\n   * Requirements:\n- Subtraction cannot overflow."
									},
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 811,
												"src": "696:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 811,
												"src": "707:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "695:22:4"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 811,
												"src": "741:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "741:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "740:9:4"
									},
									"scope": 961,
									"src": "683:130:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 838,
										"nodeType": "Block",
										"src": "1183:83:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 824,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "1198:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 825,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "1203:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1198:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 827,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "1206:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 823,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1190:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1190:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "1190:29:4"
											},
											{
												"assignments": [
													831
												],
												"declarations": [
													{
														"constant": false,
														"id": 831,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 838,
														"src": "1226:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 830,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1226:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 835,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 832,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "1238:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 833,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "1242:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1238:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1226:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 836,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 831,
													"src": "1259:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 822,
												"id": 837,
												"nodeType": "Return",
												"src": "1252:8:4"
											}
										]
									},
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "819:265:4",
										"text": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n\n   * Counterpart to Solidity's `-` operator.\n\n   * Requirements:\n- Subtraction cannot overflow."
									},
									"id": 839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 839,
												"src": "1101:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1101:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 839,
												"src": "1112:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 839,
												"src": "1123:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 817,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1123:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1100:50:4"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 839,
												"src": "1174:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1173:9:4"
									},
									"scope": 961,
									"src": "1088:178:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 873,
										"nodeType": "Block",
										"src": "1564:364:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 849,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "1784:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1789:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1784:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 855,
												"nodeType": "IfStatement",
												"src": "1780:37:4",
												"trueBody": {
													"id": 854,
													"nodeType": "Block",
													"src": "1792:25:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 848,
															"id": 853,
															"nodeType": "Return",
															"src": "1801:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													857
												],
												"declarations": [
													{
														"constant": false,
														"id": 857,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 873,
														"src": "1825:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 856,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1825:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 861,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 858,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "1837:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 859,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "1841:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1837:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1825:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 863,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "1857:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 864,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "1861:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1857:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 866,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 844,
																"src": "1866:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1857:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1869:35:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 862,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1849:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1849:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "1849:56:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 871,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 857,
													"src": "1921:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 848,
												"id": 872,
												"nodeType": "Return",
												"src": "1914:8:4"
											}
										]
									},
									"documentation": {
										"id": 840,
										"nodeType": "StructuredDocumentation",
										"src": "1272:221:4",
										"text": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n\n   * Counterpart to Solidity's `*` operator.\n\n   * Requirements:\n- Multiplication cannot overflow."
									},
									"id": 874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 874,
												"src": "1510:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1510:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 874,
												"src": "1521:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1521:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1509:22:4"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 874,
												"src": "1555:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1555:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1554:9:4"
									},
									"scope": 961,
									"src": "1497:431:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 890,
										"nodeType": "Block",
										"src": "2439:59:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 885,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "2457:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 886,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "2460:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2463:28:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 884,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															891,
															919
														],
														"referencedDeclaration": 919,
														"src": "2453:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2453:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 883,
												"id": 889,
												"nodeType": "Return",
												"src": "2446:46:4"
											}
										]
									},
									"documentation": {
										"id": 875,
										"nodeType": "StructuredDocumentation",
										"src": "1934:434:4",
										"text": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero."
									},
									"id": 891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 891,
												"src": "2385:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2385:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 891,
												"src": "2396:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2396:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2384:22:4"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 891,
												"src": "2430:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2430:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2429:9:4"
									},
									"scope": 961,
									"src": "2372:126:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "3057:228:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 904,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "3135:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3139:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3135:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 907,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "3142:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 903,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3127:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3127:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "3127:28:4"
											},
											{
												"assignments": [
													911
												],
												"declarations": [
													{
														"constant": false,
														"id": 911,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 918,
														"src": "3162:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 910,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3162:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 915,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 912,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "3174:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 913,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "3178:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3174:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3162:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 916,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 911,
													"src": "3278:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 902,
												"id": 917,
												"nodeType": "Return",
												"src": "3271:8:4"
											}
										]
									},
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "2504:454:4",
										"text": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero."
									},
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 919,
												"src": "2975:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2975:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 919,
												"src": "2986:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2986:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 919,
												"src": "2997:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 897,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2997:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2974:50:4"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 919,
												"src": "3048:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3048:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3047:9:4"
									},
									"scope": 961,
									"src": "2962:323:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "3785:57:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 930,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "3803:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 931,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "3806:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3809:26:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 929,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															936,
															960
														],
														"referencedDeclaration": 960,
														"src": "3799:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3799:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 928,
												"id": 934,
												"nodeType": "Return",
												"src": "3792:44:4"
											}
										]
									},
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "3291:423:4",
										"text": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero."
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 936,
												"src": "3731:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 936,
												"src": "3742:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3742:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3730:22:4"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 936,
												"src": "3776:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3775:9:4"
									},
									"scope": 961,
									"src": "3718:124:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "4390:61:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 949,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "4405:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4410:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4405:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 952,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "4413:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 948,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4397:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4397:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "4397:29:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 955,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "4440:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 956,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "4444:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4440:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 947,
												"id": 958,
												"nodeType": "Return",
												"src": "4433:12:4"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "3848:443:4",
										"text": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero."
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 960,
												"src": "4308:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4308:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 960,
												"src": "4319:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4319:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 960,
												"src": "4330:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 942,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4330:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4307:50:4"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 960,
												"src": "4381:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4381:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4380:9:4"
									},
									"scope": 961,
									"src": "4295:156:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 962,
							"src": "26:4428:4"
						}
					],
					"src": "0:4963:4"
				},
				"id": 4
			}
		}
	}
}