{
	"id": "12065dec046068439bb9e65d56f6cc82",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.4",
	"solcLongVersion": "0.6.4+commit.1dca32f3",
	"input": {
		"language": "Solidity",
		"sources": {
			"BEP/Demo.sol": {
				"content": "pragma solidity 0.6.4;\r\n\r\ncontract Demo1{\r\n    uint internal constant WORD_SIZE = 32;\r\n    // Size of the header of a 'bytes' array.\r\n    uint internal constant BYTES_HEADER_SIZE = 32;\r\n    // Address of the free memory pointer.\r\n    uint internal constant FREE_MEM_PTR = 0x40;\r\n\r\n    function getData(bytes memory bts) public view returns(uint addr, uint len){\r\n        return fromBytes(bts);\r\n    }\r\n\r\n    function fromBytes(bytes memory bts) internal pure returns (uint addr, uint len) {\r\n        len = bts.length;\r\n        assembly {\r\n            addr := add(bts, /*BYTES_HEADER_SIZE*/32)\r\n        }\r\n    }\r\n\r\n    function copy(uint src, uint dest, uint len) internal pure {\r\n        // Copy word-length chunks while possible\r\n        for (; len >= WORD_SIZE; len -= WORD_SIZE) {\r\n            assembly {\r\n                mstore(dest, mload(src))\r\n            }\r\n            dest += WORD_SIZE;\r\n            src += WORD_SIZE;\r\n        }\r\n\r\n        // Copy remaining bytes\r\n        uint mask = 256 ** (WORD_SIZE - len) - 1;\r\n        assembly {\r\n            let srcpart := and(mload(src), not(mask))\r\n            let destpart := and(mload(dest), mask)\r\n            mstore(dest, or(destpart, srcpart))\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"BEP/Demo.sol": {
				"Demo1": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "bts",
									"type": "bytes"
								}
							],
							"name": "getData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "addr",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "len",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"BEP/Demo.sol\":26:1221  contract Demo1{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"BEP/Demo.sol\":26:1221  contract Demo1{\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BEP/Demo.sol\":26:1221  contract Demo1{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"BEP/Demo.sol\":26:1221  contract Demo1{\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1431b23a\n      eq\n      tag_3\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"BEP/Demo.sol\":285:400  function getData(bytes memory bts) public view returns(uint addr, uint len){\r... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_5:\n        /* \"BEP/Demo.sol\":285:400  function getData(bytes memory bts) public view returns(uint addr, uint len){\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":27:38   */\n      0x0100000000\n        /* \"--CODEGEN--\":14:25   */\n      dup2\n        /* \"--CODEGEN--\":11:39   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":52:53   */\n      0x00\n        /* \"--CODEGEN--\":49:50   */\n      dup1\n        /* \"--CODEGEN--\":42:54   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_6:\n        /* \"BEP/Demo.sol\":285:400  function getData(bytes memory bts) public view returns(uint addr, uint len){\r... */\n      dup3\n      add\n        /* \"--CODEGEN--\":41:50   */\n      dup4\n        /* \"--CODEGEN--\":34:38   */\n      0x20\n        /* \"--CODEGEN--\":18:32   */\n      dup3\n        /* \"--CODEGEN--\":14:39   */\n      add\n        /* \"--CODEGEN--\":11:51   */\n      gt\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":64:65   */\n      0x00\n        /* \"--CODEGEN--\":61:62   */\n      dup1\n        /* \"--CODEGEN--\":54:66   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_7:\n        /* \"BEP/Demo.sol\":285:400  function getData(bytes memory bts) public view returns(uint addr, uint len){\r... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_8:\n        /* \"BEP/Demo.sol\":285:400  function getData(bytes memory bts) public view returns(uint addr, uint len){\r... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"BEP/Demo.sol\":285:400  function getData(bytes memory bts) public view returns(uint addr, uint len){\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_9\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_9:\n        /* \"BEP/Demo.sol\":340:349  uint addr */\n      0x00\n        /* \"BEP/Demo.sol\":351:359  uint len */\n      dup1\n        /* \"BEP/Demo.sol\":378:392  fromBytes(bts) */\n      tag_11\n        /* \"BEP/Demo.sol\":388:391  bts */\n      dup4\n        /* \"BEP/Demo.sol\":378:387  fromBytes */\n      tag_12\n        /* \"BEP/Demo.sol\":378:392  fromBytes(bts) */\n      jump\t// in\n    tag_11:\n        /* \"BEP/Demo.sol\":371:392  return fromBytes(bts) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"BEP/Demo.sol\":285:400  function getData(bytes memory bts) public view returns(uint addr, uint len){\r... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"BEP/Demo.sol\":408:610  function fromBytes(bytes memory bts) internal pure returns (uint addr, uint len) {\r... */\n    tag_12:\n        /* \"BEP/Demo.sol\":468:477  uint addr */\n      0x00\n        /* \"BEP/Demo.sol\":479:487  uint len */\n      dup1\n        /* \"BEP/Demo.sol\":506:509  bts */\n      dup3\n        /* \"BEP/Demo.sol\":506:516  bts.length */\n      mload\n        /* \"BEP/Demo.sol\":500:516  len = bts.length */\n      swap1\n      pop\n        /* \"BEP/Demo.sol\":589:591  32 */\n      0x20\n        /* \"BEP/Demo.sol\":563:566  bts */\n      dup4\n        /* \"BEP/Demo.sol\":559:592  add(bts, /*BYTES_HEADER_SIZE*/32) */\n      add\n        /* \"BEP/Demo.sol\":551:592  addr := add(bts, /*BYTES_HEADER_SIZE*/32) */\n      swap2\n      pop\n        /* \"BEP/Demo.sol\":536:603  {\r... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220782062bc8ec2b92ddacccee7623c476265875cbae79e9362a6c878a9e76ef33364736f6c63430006040033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610163806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631431b23a14610030575b600080fd5b6100e96004803603602081101561004657600080fd5b810190808035906020019064010000000081111561006357600080fd5b82018360208201111561007557600080fd5b8035906020019184600183028401116401000000008311171561009757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610106565b604051808381526020018281526020019250505060405180910390f35b6000806101128361011b565b91509150915091565b6000808251905060208301915091509156fea2646970667358221220782062bc8ec2b92ddacccee7623c476265875cbae79e9362a6c878a9e76ef33364736f6c63430006040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x163 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1431B23A EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x112 DUP4 PUSH2 0x11B JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD SWAP1 POP PUSH1 0x20 DUP4 ADD SWAP2 POP SWAP2 POP SWAP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x2062BC8EC2B92DDACCCEE7623C476265875CBAE79E9362A6C8 PUSH25 0xA9E76EF33364736F6C63430006040033000000000000000000 ",
							"sourceMap": "26:1195:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;26:1195:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80631431b23a14610030575b600080fd5b6100e96004803603602081101561004657600080fd5b810190808035906020019064010000000081111561006357600080fd5b82018360208201111561007557600080fd5b8035906020019184600183028401116401000000008311171561009757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610106565b604051808381526020018281526020019250505060405180910390f35b6000806101128361011b565b91509150915091565b6000808251905060208301915091509156fea2646970667358221220782062bc8ec2b92ddacccee7623c476265875cbae79e9362a6c878a9e76ef33364736f6c63430006040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1431B23A EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x112 DUP4 PUSH2 0x11B JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD SWAP1 POP PUSH1 0x20 DUP4 ADD SWAP2 POP SWAP2 POP SWAP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x2062BC8EC2B92DDACCCEE7623C476265875CBAE79E9362A6C8 PUSH25 0xA9E76EF33364736F6C63430006040033000000000000000000 ",
							"sourceMap": "26:1195:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;26:1195:0;;;;;;;;;;;;;;;;12:1:-1;9;2:12;285:115:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;285:115:0;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;285:115:0;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;285:115:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;285:115:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;285:115:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;340:9;351:8;378:14;388:3;378:9;:14::i;:::-;371:21;;;;285:115;;;:::o;408:202::-;468:9;479:8;506:3;:10;500:16;;589:2;563:3;559:33;551:41;;536:67;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "71000",
								"executionCost": "123",
								"totalCost": "71123"
							},
							"external": {
								"getData(bytes)": "infinite"
							},
							"internal": {
								"copy(uint256,uint256,uint256)": "infinite",
								"fromBytes(bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 1221,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 1221,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 1221,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 1221,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 26,
									"end": 1221,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 1221,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 1221,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 1221,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 1221,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 1221,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 1221,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 1221,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220782062bc8ec2b92ddacccee7623c476265875cbae79e9362a6c878a9e76ef33364736f6c63430006040033",
									".code": [
										{
											"begin": 26,
											"end": 1221,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 1221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 1221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 1221,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 26,
											"end": 1221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26,
											"end": 1221,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26,
											"end": 1221,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 1221,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26,
											"end": 1221,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 1221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 1221,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 26,
											"end": 1221,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26,
											"end": 1221,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 26,
											"end": 1221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 1221,
											"name": "PUSH",
											"source": 0,
											"value": "1431B23A"
										},
										{
											"begin": 26,
											"end": 1221,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26,
											"end": 1221,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26,
											"end": 1221,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 285,
											"end": 400,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 285,
											"end": 400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 285,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 285,
											"end": 400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "5"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "5"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 285,
											"end": 400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 285,
											"end": 400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 14,
											"end": 25,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 11,
											"end": 39,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "6"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 42,
											"end": 54,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "6"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 285,
											"end": 400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41,
											"end": 50,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 34,
											"end": 38,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 18,
											"end": 32,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 39,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 11,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "7"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 64,
											"end": 65,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 62,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 54,
											"end": 66,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "7"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 285,
											"end": 400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 285,
											"end": 400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"source": -1,
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "8"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"source": -1,
											"value": "8"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 285,
											"end": 400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 285,
											"end": 400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 285,
											"end": 400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 285,
											"end": 400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 285,
											"end": 400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 285,
											"end": 400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 285,
											"end": 400,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 285,
											"end": 400,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 285,
											"end": 400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 285,
											"end": 400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 285,
											"end": 400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 285,
											"end": 400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 340,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 378,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 388,
											"end": 391,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 378,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 378,
											"end": 392,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 378,
											"end": 392,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 378,
											"end": 392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 371,
											"end": 392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 371,
											"end": 392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 371,
											"end": 392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 371,
											"end": 392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 285,
											"end": 400,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 408,
											"end": 610,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 408,
											"end": 610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 468,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 506,
											"end": 509,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 506,
											"end": 516,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 500,
											"end": 516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 500,
											"end": 516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 589,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 563,
											"end": 566,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 559,
											"end": 592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 551,
											"end": 592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 551,
											"end": 592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 536,
											"end": 603,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 536,
											"end": 603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 536,
											"end": 603,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 536,
											"end": 603,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getData(bytes)": "1431b23a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bts\",\"type\":\"bytes\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"addr\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"BEP/Demo.sol\":\"Demo1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEP/Demo.sol\":{\"keccak256\":\"0x0232cd066c60d8da6816731b7b29b1d11567b09cd0720d55ef955d7b09fe24f4\",\"urls\":[\"bzz-raw://1d2d676940cf7a8e267e6987531ace6e2c7f6689ecdaedfeaec7ed9c74f35764\",\"dweb:/ipfs/QmbJaTpgcpRjqFwXWpazSF9f96c4NzR7eKpgtKberpdmKD\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "BEP/Demo.sol:10:5: Warning: Function state mutability can be restricted to pure\n    function getData(bytes memory bts) public view returns(uint addr, uint len){\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 400,
					"file": "BEP/Demo.sol",
					"start": 285
				},
				"type": "Warning"
			}
		],
		"sources": {
			"BEP/Demo.sol": {
				"ast": {
					"absolutePath": "BEP/Demo.sol",
					"exportedSymbols": {
						"Demo1": [
							81
						]
					},
					"id": 82,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 81,
							"linearizedBaseContracts": [
								81
							],
							"name": "Demo1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 4,
									"name": "WORD_SIZE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 81,
									"src": "47:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "47:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3332",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "82:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 7,
									"name": "BYTES_HEADER_SIZE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 81,
									"src": "138:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "138:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3332",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "181:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32_by_1",
											"typeString": "int_const 32"
										},
										"value": "32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 10,
									"name": "FREE_MEM_PTR",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 81,
									"src": "234:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "234:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783430",
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "272:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "0x40"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "360:40:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 20,
															"name": "bts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "388:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 19,
														"name": "fromBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "378:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (bytes memory) pure returns (uint256,uint256)"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "378:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 18,
												"id": 22,
												"nodeType": "Return",
												"src": "371:21:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "1431b23a",
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"name": "bts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 24,
												"src": "302:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 11,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "302:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "301:18:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 24,
												"src": "340:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "340:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"name": "len",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 24,
												"src": "351:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "351:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "339:21:0"
									},
									"scope": 81,
									"src": "285:115:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "489:121:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 33,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "500:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 34,
															"name": "bts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "506:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "506:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "500:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "500:16:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "536:67:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "551:41:0",
															"value": {
																"arguments": [
																	{
																		"name": "bts",
																		"nodeType": "YulIdentifier",
																		"src": "563:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "589:2:0",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "559:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "559:33:0"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "551:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 29,
														"isOffset": false,
														"isSlot": false,
														"src": "551:4:0",
														"valueSize": 1
													},
													{
														"declaration": 26,
														"isOffset": false,
														"isSlot": false,
														"src": "563:3:0",
														"valueSize": 1
													}
												],
												"id": 38,
												"nodeType": "InlineAssembly",
												"src": "527:76:0"
											}
										]
									},
									"documentation": null,
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fromBytes",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"name": "bts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 40,
												"src": "427:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 25,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "427:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "426:18:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 40,
												"src": "468:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "468:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"name": "len",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 40,
												"src": "479:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "479:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "467:21:0"
									},
									"scope": 81,
									"src": "408:202:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "677:541:0",
										"statements": [
											{
												"body": {
													"id": 65,
													"nodeType": "Block",
													"src": "782:156:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "806:58:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dest",
																					"nodeType": "YulIdentifier",
																					"src": "832:4:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "844:3:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "838:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "838:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "825:24:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "825:24:0"
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 44,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "832:4:0",
																	"valueSize": 1
																},
																{
																	"declaration": 42,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "844:3:0",
																	"valueSize": 1
																}
															],
															"id": 56,
															"nodeType": "InlineAssembly",
															"src": "797:67:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 57,
																	"name": "dest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "878:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 58,
																	"name": "WORD_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4,
																	"src": "886:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "878:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 60,
															"nodeType": "ExpressionStatement",
															"src": "878:17:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 63,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 61,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "910:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 62,
																	"name": "WORD_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4,
																	"src": "917:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "910:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 64,
															"nodeType": "ExpressionStatement",
															"src": "910:16:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 49,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "746:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 50,
														"name": "WORD_SIZE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "753:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "746:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 66,
												"initializationExpression": null,
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 52,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "764:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"argumentTypes": null,
															"id": 53,
															"name": "WORD_SIZE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "771:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "764:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 55,
													"nodeType": "ExpressionStatement",
													"src": "764:16:0"
												},
												"nodeType": "ForStatement",
												"src": "739:199:0"
											},
											{
												"assignments": [
													68
												],
												"declarations": [
													{
														"constant": false,
														"id": 68,
														"name": "mask",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 79,
														"src": "983:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 67,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "983:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 77,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "323536",
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "995:3:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "256"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 70,
																		"name": "WORD_SIZE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4,
																		"src": "1003:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 71,
																		"name": "len",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 46,
																		"src": "1015:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1003:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 73,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1002:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "995:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1022:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "995:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "983:40:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1043:168:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1058:41:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1083:3:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1077:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1077:10:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1093:4:0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1089:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1089:9:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1073:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1073:26:0"
															},
															"variables": [
																{
																	"name": "srcpart",
																	"nodeType": "YulTypedName",
																	"src": "1062:7:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1113:38:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dest",
																				"nodeType": "YulIdentifier",
																				"src": "1139:4:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1133:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1133:11:0"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "1146:4:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1129:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1129:22:0"
															},
															"variables": [
																{
																	"name": "destpart",
																	"nodeType": "YulTypedName",
																	"src": "1117:8:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dest",
																		"nodeType": "YulIdentifier",
																		"src": "1172:4:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "destpart",
																				"nodeType": "YulIdentifier",
																				"src": "1181:8:0"
																			},
																			{
																				"name": "srcpart",
																				"nodeType": "YulIdentifier",
																				"src": "1191:7:0"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "1178:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1178:21:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1165:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1165:35:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1165:35:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 44,
														"isOffset": false,
														"isSlot": false,
														"src": "1139:4:0",
														"valueSize": 1
													},
													{
														"declaration": 44,
														"isOffset": false,
														"isSlot": false,
														"src": "1172:4:0",
														"valueSize": 1
													},
													{
														"declaration": 68,
														"isOffset": false,
														"isSlot": false,
														"src": "1093:4:0",
														"valueSize": 1
													},
													{
														"declaration": 68,
														"isOffset": false,
														"isSlot": false,
														"src": "1146:4:0",
														"valueSize": 1
													},
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": false,
														"src": "1083:3:0",
														"valueSize": 1
													}
												],
												"id": 78,
												"nodeType": "InlineAssembly",
												"src": "1034:177:0"
											}
										]
									},
									"documentation": null,
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "copy",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"name": "src",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 80,
												"src": "632:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "632:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"name": "dest",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 80,
												"src": "642:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "642:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "len",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 80,
												"src": "653:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "653:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "631:31:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "677:0:0"
									},
									"scope": 81,
									"src": "618:600:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 82,
							"src": "26:1195:0"
						}
					],
					"src": "0:1221:0"
				},
				"id": 0
			}
		}
	}
}